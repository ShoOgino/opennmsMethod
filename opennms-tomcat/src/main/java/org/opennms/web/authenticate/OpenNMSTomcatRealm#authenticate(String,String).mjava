    /**
     * Return the Principal associated with the specified username and
     * credentials, if there is one; otherwise return <code>null</code>.
     *
     * @param username    Username of the Principal to look up
     * @param credentials Password or other credentials to use in
     *                    authenticating this username
     */
    public synchronized Principal authenticate(String username, String credentials) {
        if (username == null || credentials == null) {
            //throw new IllegalArgumentException( "Cannot take null parameters." );
            return null;
        }

        //check everytime to see if the users.xml file has changed
        if (isParseNecessary()) {
            parse();
        }

        OpenNMSPrincipal principal = (OpenNMSPrincipal) m_principals.get(username);

        if (principal != null && !principal.comparePasswords(credentials)) {
            principal = null;

            containerLog.info("Wrong password for " + username);
        }

        if (principal == null) {
            containerLog.info("Could not authenticate " + username);
        } else {
            containerLog.info("Authenticated " + username);
        }

        return (principal);
    }

