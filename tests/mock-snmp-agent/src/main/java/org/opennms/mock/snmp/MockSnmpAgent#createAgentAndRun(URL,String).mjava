    /**
     * <p>createAgentAndRun</p>
     *
     * @param moFile a {@link org.springframework.core.io.Resource} object.
     * @param bindAddress a {@link java.lang.String} object.
     * @return a {@link org.opennms.mock.snmp.MockSnmpAgent} object.
     * @throws java.lang.InterruptedException if any.
     */
    public static MockSnmpAgent createAgentAndRun(URL moFile, String bindAddress) throws InterruptedException {
    	setupLogging();
        try {
        	InputStream in = moFile.openStream();
            if (in == null) {
                throw new IllegalArgumentException("could not get InputStream mock object resource; does it exist?  Resource: " + moFile);
            }
            in.close();
            
        } catch (IOException e) {
            throw new RuntimeException("Got IOException while checking for existence of mock object file: " + e, e);
        }
        
        final MockSnmpAgent agent = new MockSnmpAgent(new File("/dev/null"), moFile, bindAddress);
        Thread thread = new Thread(agent, agent.getClass().getSimpleName());
        thread.start();

        try {
            while (!agent.isRunning() && thread.isAlive()) {
                Thread.sleep(10);
            } 
        } catch (final InterruptedException e) {
            agent.shutDownAndWait();
            throw e;
        }

        if (!thread.isAlive()) {
            agent.m_running = false;
            agent.m_stopped = true;
            throw new IllegalStateException("agent failed to start", agent.m_failure);
        }
        
        if (System.getProperty(PROPERTY_SLEEP_ON_CREATE) != null) {
            long sleep = Long.parseLong(System.getProperty(PROPERTY_SLEEP_ON_CREATE));
            Thread.sleep(sleep);
        }

        return agent;
    }

