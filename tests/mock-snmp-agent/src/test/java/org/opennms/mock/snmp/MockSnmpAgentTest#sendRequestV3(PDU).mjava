    private PDU sendRequestV3(PDU pdu) {
        PDU response = null;

        OctetString userId = new OctetString("opennmsUser");
        OctetString pw = new OctetString("0p3nNMSv3");

        UserTarget target = new UserTarget();
        target.setSecurityLevel(SecurityLevel.AUTH_PRIV);
        target.setSecurityName(userId);
        target.setAddress(new UdpAddress(InetAddressUtils.addr("127.0.0.1"), 1691));
        target.setVersion(SnmpConstants.version3);
        target.setTimeout(DEFAULT_TIMEOUT);

        TransportMapping<UdpAddress> transport = null;
        Snmp snmp = null;
        try {
            USM usm = new USM(SecurityProtocols.getInstance(), new OctetString(MPv3.createLocalEngineID()), 0);
            SecurityModels.getInstance().addSecurityModel(usm);
            transport = new DefaultUdpTransportMapping();
            snmp = new Snmp(transport);

            UsmUser user = new UsmUser(userId, AuthMD5.ID, pw, PrivDES.ID, pw);
            snmp.getUSM().addUser(userId, user);

            transport.listen();

            ResponseEvent e = snmp.send(pdu, target);
            response = e.getResponse();
        } catch (final IOException e) {
            e.printStackTrace();
        } finally { 
            if (snmp != null) {
                try {
                    snmp.close();
                } catch (final IOException e) {
                    e.printStackTrace();
                }
            }
            if (transport != null) {
                try {
                    transport.close();
                } catch (final IOException e) {
                    e.printStackTrace();
                }
            }
        }
        return response;
    }

