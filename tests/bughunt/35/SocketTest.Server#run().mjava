		public void run()
		{
			// open the server socket
			//
			ServerSocket serverSocket = null;
			try
			{
				serverSocket  = new ServerSocket(DAEMON_TCP_PORT);
			}
			catch(IOException ex)
			{
				throw new UndeclaredThrowableException(ex);
			}

			long lastClientStarted = 0;
			boolean firstTime = true;
		
			// Begin accepting connections from clients
			// For each new client create new Client Handler
			// thread to handle the client's requests.
			//
    			try 
    			{
				serverSocket.setSoTimeout(1000); // Wake up every second 
				
				int client_id = 1;
			
    	  			for(;;)
				{
					// Start a new client every x milliseconds up to the max number of clients
					if ( !firstTime && 
						((System.currentTimeMillis() - lastClientStarted) >= m_newClientInterval) &&
						m_clients.size() < m_maxClients)
					{
						// Create another client
						Client clnt = new Client(client_id);
						clnt.start();
						lastClientStarted = System.currentTimeMillis();
						// add to client list
						m_clients.add(clnt);
					}
				
				
					Socket sock;
					try
					{	
						sock = serverSocket.accept();
					}
					catch (InterruptedIOException iE)
					{
						if (firstTime)
						{
							// create first client
							//System.out.println("SocketTest: creating initial client...");
							Client clnt = new Client(client_id);
							clnt.start();
							firstTime = false;
							lastClientStarted = System.currentTimeMillis();
							// add to client list
							m_clients.add(clnt);
						}
						continue;
					}
	
					// Add the client's new socket connection to the client handler list
					//
					ClientHandler handler = new ClientHandler(client_id, sock);
					handler.start();
				
					System.out.println("SocketTest:  finished starting client & handler pair number " + client_id);
				
					// Increment client id
					client_id++;
      				}
    			}
    			catch (IOException ioE) 
			{
				System.out.println("I/O exception occured processing incomming request " + ioE);
    			}
			catch(Throwable t)
			{
				System.out.println("An undeclared throwable was caught " + t);
			}
			finally
			{
				System.exit(0);
			}
		}

