	public static void main(String[] args)
	{
		long now   = System.currentTimeMillis();
		long start = 0;

		LinkedList srlist = new LinkedList();
		LinkedList cntlist = new LinkedList();


		for(;;)
		{
			now = System.currentTimeMillis();
			if((now - start) > 60000 && srlist.size() < 128) // five minutes have passed
			{
				start = System.currentTimeMillis();
				System.out.println("Starting new echo thread");
				try
				{
					Socket s = new Socket("127.0.0.1", 7);
					s.setTcpNoDelay(true);
					BufferXchange xchange = new BufferXchange();
					Receiver recv = new Receiver(xchange, s.getInputStream());
					Sender snd = new Sender(xchange, s.getOutputStream());

					srlist.add(new Pair(snd, recv));
					cntlist.add(new Pair(new Integer(0), new Integer(0)));

					recv.start();
					snd.start();
				}
				catch(Exception e)
				{
					e.printStackTrace();
				}
			}

			try
			{
				Thread.sleep(10000);
			}
			catch(InterruptedException ie)
			{
				ie.printStackTrace();
			}

			//
			// check the senders and receivers
			//
			for(int x = 0; x < srlist.size(); x++)
			{
				Pair a = (Pair) srlist.get(x);
				Pair b = (Pair) cntlist.get(x);

				int old = ((Integer)b.getFirst()).intValue();
				int y = ((Sender)a.getFirst()).getMonitor();

				if(y == old)
				{
					System.out.println("Count has not changed for " + a.getFirst());
					continue;
				}

				old = ((Integer)b.getSecond()).intValue();
				int z   = ((Receiver)a.getSecond()).getMonitor();

				if(z == old)
				{
					System.out.println("Count has not changed for " + a.getSecond());
					continue;
				}

				cntlist.set(x, new Pair(new Integer(y), new Integer(z)));
			}

		} // end infinite loop
	}

