    /**
     * <p>eventsMatchDeep</p>
     *
     * @param e1 a {@link org.opennms.netmgt.xml.event.Event} object.
     * @param e2 a {@link org.opennms.netmgt.xml.event.Event} object.
     * @return a boolean.
     */
    public static boolean eventsMatchDeep(Event e1, Event e2, long toleratedTimestampOffset) {
        if (e1.getTime() != null || e2.getTime() != null) {
            if (e1.getTime() == null || e2.getTime() == null) {
                return false;
            }
            
            if (toleratedTimestampOffset > 0) {
                try {
                    final long d1 = e1.getDate().getTime();
                    final long d2 = e2.getDate().getTime();
                    if ((d2 - toleratedTimestampOffset) < d1 && d1 < (d2 + toleratedTimestampOffset)) {
                        // d1 is within [toleratedTimestampOffset] of d2
                    } else if ((d1 - toleratedTimestampOffset) < d2 && d2 < (d1 + toleratedTimestampOffset)) {
                        // d2 is within [toleratedTimestampOffset] of d1
                    } else {
                        return false;
                    }
                } catch (final ParseException e) {
                }
            } else if (!e1.getTime().equals(e2.getTime())) {
                return false;
            }
        }
        
        if (!EventUtils.eventsMatch(e1, e2)) {
            return false;
        }
        
        if (e1.getParmCollection() != null || e2.getParmCollection() != null) {
            if (e1.getParmCollection() == null || e2.getParmCollection() == null) {
                return false;
            }
            
            List<Parm> p1 = e1.getParmCollection();
            List<Parm> p2 = e2.getParmCollection();
            
            if (p1.size() != p2.size()) {
                return false;
            }
            
            Map<String, String> m1 = convertParmsToMap(p1);
            Map<String, String> m2 = convertParmsToMap(p2);

            if (!m1.equals(m2)) {
                return false;
            }
        }
        
        return true;
    }

