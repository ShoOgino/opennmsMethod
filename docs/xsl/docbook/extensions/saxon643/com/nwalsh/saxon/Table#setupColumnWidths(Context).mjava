  /**
   * <p>Setup the parameters associated with column width calculations</p>
   *
   * <p>This method queries the stylesheet for the variables
   * associated with table column widths. It is called automatically before
   * column widths are adjusted. The context is used to retrieve the values,
   * this allows templates to redefine these variables.</p>
   *
   * <p>The following variables are queried. If the variables do not
   * exist, builtin defaults will be used (but you may also get a bunch
   * of messages from the Java interpreter).</p>
   *
   * <dl>
   * <dt><code>nominal.table.width</code></dt>
   * <dd>The "normal" width for tables. This must be an absolute length.</dd>
   * <dt><code>table.width</code></dt>
   * <dd>The width for tables. This may be either an absolute
   * length or a percentage.</dd>
   * </dl>
   *
   * @param context The current stylesheet context
   *
   */
  private static void setupColumnWidths(Context context) {
    // Hardcoded defaults
    nominalWidth = 6 * pixelsPerInch;
    tableWidth = "100%";

    String varString = null;

    try {
      // Get the stylesheet type
      varString = getVariable(context, "stylesheet.result.type");
      foStylesheet = varString.equals("fo");

      // Get the nominal table width
      varString = getVariable(context, "nominal.table.width");
      nominalWidth = convertLength(varString);

      // Get the table width
      varString = getVariable(context, "table.width");
      tableWidth = varString;
    } catch (TransformerException e) {
      //nop, can't happen
    }
  }

