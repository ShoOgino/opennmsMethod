	public static EventMatcher and(final EventMatcher... matchers) {
		return new EventMatcher() {

			@Override
			public MatchResult matches(Event matchingEvent) {
				MatchResult match = MatchResult.TRUE;
				for(EventMatcher matcher : matchers) {
					match = match.and(matcher.matches(matchingEvent));
					if (!match.matched()) {
						return match;
					}
				}
				return match;
			}

			@Override
			public String toString() {
				final StringBuilder buf = new StringBuilder();
				boolean first = true;
				for(EventMatcher matcher : matchers) {
					if (first) {
						first = false;
					} else {
						buf.append("&&");
					}
					buf.append("(").append(matcher).append(")");
				}

				return buf.toString();
			}
		};
	}

