    public static <K,T> T assertOnlyContains(final T value, final Collection<K> in, final String name) {
        if (value == null) return value;
        if (value instanceof String) {
            if (!in.contains(value)) {
                throw new IllegalStateException("'" + name + "': found '" + value.toString() + "' but expected one of: " + in.toString());
            }
        } else if (Collection.class.isAssignableFrom(value.getClass())) {
            @SuppressWarnings("unchecked")
            final Collection<K> col = (Collection<K>)value;
            for (final K entry : col) {
                if (!in.contains(entry)) {
                    throw new IllegalStateException("'" + name + "': found '" + entry.toString() + "' but expected one of: " + in.toString());
                }
            }
        } else {
            LOG.warn("Unsure how to deal with value type {}", value.getClass());
        }
        return value;
    }

