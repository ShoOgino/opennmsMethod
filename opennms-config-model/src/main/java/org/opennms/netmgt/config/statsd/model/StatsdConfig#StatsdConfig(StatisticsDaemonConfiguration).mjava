    /**
     * <p>Constructor for StatsdConfig.</p>
     *
     * @param config a {@link org.opennms.netmgt.config.statsd.StatisticsDaemonConfiguration} object.
     */
    public StatsdConfig(StatisticsDaemonConfiguration config) {
        m_config = config;

        for (org.opennms.netmgt.config.statsd.Report report : getXmlReports()) {
            Report r = new Report();
            r.setName(report.getName());
            r.setClassName(report.getClassName());
            for (Parameter parameter : getParametersForReport(report)) {
                r.addParameter(parameter.getKey(), parameter.getValue());
            }
            m_reports.add(r);
        }
        
        for (org.opennms.netmgt.config.statsd.Package pkg : getXmlPackages()) {
            StatsdPackage p = new StatsdPackage();
            p.setName(pkg.getName());
            if (pkg.getFilter().isPresent() && pkg.getFilter().get().getContent().isPresent()) {
                p.setFilter(pkg.getFilter().get().getContent().get());
            }
            for (org.opennms.netmgt.config.statsd.PackageReport packageReport : getPackageReportForPackage(pkg)) {
                PackageReport r = new PackageReport();
                r.setPackage(p);
                try {
                    r.setReport(loadReport(packageReport.getName()));
                } catch (DataAccessException e) {
                    throw new ObjectRetrievalFailureException("Could not get report named '" + packageReport.getName() + "' for package '" + pkg.getName() + "'", pkg.getName(), null, e);
                }
                r.setDescription(packageReport.getDescription());
                r.setRetainInterval(Long.parseLong(packageReport.getRetainInterval()));
                r.setSchedule(packageReport.getSchedule());
                r.setEnabled(packageReport.getStatus().equals(PackageReportStatus.on));
                for (Parameter parameter : getParametersForPackageReport(packageReport)) {
                    r.addParameter(parameter.getKey(), parameter.getValue());
                }
                p.addReport(r);
            }
            m_packages.add(p);
        }
    }

