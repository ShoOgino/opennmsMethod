	private void schedulePolls() throws Exception {
		
		PolledService[] polledServices = m_polledServicesModel.getPolledServices();

		if (polledServices == null || polledServices.length == 0) {
			log().warn("No polling scheduled.");
			return;
		}

		long startTime = System.currentTimeMillis();
		long scheduleSpacing = m_initialSpreadTime / polledServices.length;
		
		for (int i = 0; i < polledServices.length; i++) {
			PolledService polledService = polledServices[i];
			
			Date initialPollTime = new Date(startTime);
			
			m_polledServicesModel.setInitialPollTime(polledService.getId(), initialPollTime);
			
			Trigger pollTrigger = new PolledServiceTrigger(polledService.getId(), polledService);
			pollTrigger.setStartTime(initialPollTime);
			
			PollJobDetail jobDetail = new PollJobDetail(polledService.getId(), PollJob.class);
			jobDetail.setPolledService(polledService);
			jobDetail.setPolledServicesModel(m_polledServicesModel);
			jobDetail.setPollService(m_pollService);
			
			m_scheduler.scheduleJob(jobDetail, pollTrigger);
			
			startTime += scheduleSpacing;
		}
		
		
	}

