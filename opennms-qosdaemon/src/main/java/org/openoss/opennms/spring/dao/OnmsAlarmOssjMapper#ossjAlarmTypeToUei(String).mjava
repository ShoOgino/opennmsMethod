	/**
	 * Maps OSS/J alarm types to OpenNMS uei types
	 * @param alarmType String representing OSS/J alarm Type
	 * @return string representing equivilent OpenNMS uei
	 */
	public static String ossjAlarmTypeToUei(String alarmType){

		if (alarmType==null) {
			return "uei.openoss.org.alarm/unknown";
		}
		else if (alarmType.equals(AlarmType.COMMUNICATIONS_ALARM)){
			return "uei.openoss.org.alarm/CommunicationsAlarm";
		}
		else if (alarmType.equals(AlarmType.ENVIRONMENTAL_ALARM)){
			return "uei.openoss.org.alarm/EnvironmentalAlarm";
		}
		else if (alarmType.equals(AlarmType.EQUIPMENT_ALARM)){
			return "uei.openoss.org.alarm/EquipmentAlarm";
		}
		else if (alarmType.equals(AlarmType.INTEGRITY_VIOLATION)){
			return "uei.openoss.org.alarm/IntegrityViolation";
		}
		else if (alarmType.equals(AlarmType.OPERATIONAL_VIOLATION)){
			return "uei.openoss.org.alarm/OperationalViolation";
		}
		else if (alarmType.equals(AlarmType.PHYSICAL_VIOLATION)){
			return "uei.openoss.org.alarm/PhysicalViolation";
		}
		else if (alarmType.equals(AlarmType.PROCESSING_ERROR_ALARM)){
			return "uei.openoss.org.alarm/ProcessingErrorAlarm";
		}
		else if (alarmType.equals(AlarmType.QUALITY_OF_SERVICE_ALARM)){
			return "uei.openoss.org.alarm/QualityOfServiceAlarm";
		}
		else if (alarmType.equals(AlarmType.SECURITY_VIOLATION)){
			return "uei.openoss.org.alarm/SecurityViolation";
		}
		else if (alarmType.equals(AlarmType.TIME_DOMAIN_VIOLATION)){
			return "uei.openoss.org.alarm/TimeDomainViolation";
		}
		else return "uei.openoss.org.alarm/unknown";
	}

