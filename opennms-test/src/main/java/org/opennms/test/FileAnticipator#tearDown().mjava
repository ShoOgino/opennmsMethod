    public void tearDown() {
        if (!isInitialized()) {
            return;
        }
        
        try {
            deleteExpected(true);
            
            for (ListIterator<File> i = m_deleteMe.listIterator(m_deleteMe.size()); i.hasPrevious(); ) {
                File f = i.previous();
                if (!f.delete()) {
                    StringBuffer b = new StringBuffer();
                    b.append("Could not delete " + f.getAbsolutePath() + ": is it a non-empty directory?");
                    b.append("\nDirectory listing:");
                    for (File file : f.listFiles()) {
                        b.append("\n\t");
                        b.append(file.getName());
                    }
                    fail(b.toString());
                }
            }
            if (m_tempDir != null) {
                assertFalse(m_tempDir + " exists", m_tempDir.exists());
            }
        } catch (Throwable t) {
            if (m_tempDir != null && m_tempDir.exists()) {
                ProcessExec ex = new ProcessExec(System.out, System.err);
                String[] cmd = new String[3];
                cmd[0] = "rm";
                cmd[1] = "-r";
                cmd[2] = m_tempDir.getAbsolutePath();
                
                try {
                    ex.exec(cmd);
                } catch (Throwable innerThrowable) {
                    StringBuffer command = new StringBuffer();
                    command.append(cmd[0]);
                    for (int i = 1; i < cmd.length; i++) {
                        command.append(" ");
                        command.append(cmd[i]);
                    }
                    System.err.println("Got throwable while forcibly removing temporary directory " + m_tempDir + " with '" + command + "': " + innerThrowable);
                    innerThrowable.printStackTrace();
                }
            }
            if (t instanceof RuntimeException) {
                throw (RuntimeException) t;
            } else {
                throw new RuntimeException(t);
            }
        }
    }

