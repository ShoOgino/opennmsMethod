    /**
     * Process a received throwable.  See #setFailFast(boolean) for the effects
     * of the failFast setting on when errors are signaled.
     * 
     * @param t The received throwable.
     * @throws AssertionFailedError if failFast is set to true and an
     *         unanticipated java.lang.Throwable is received.
     */
    public void throwableReceived(Throwable t) {
        if (t == null) {
            throw new IllegalArgumentException("Throwable must not be null");
        }
        
        boolean foundMatch = false;

        for (Throwable our : m_anticipated) {
            if (t.getClass().isAssignableFrom(our.getClass())) {
                if (IGNORE_MESSAGE.equals(our.getMessage())
                        || (t.getMessage() == null && our.getMessage() == null)
                        || (t.getMessage() != null
                                && t.getMessage().equals(our.getMessage()))) {
                    m_anticipated.remove(our);
                    foundMatch = true;
                    break;
                }
            }
        }
        
        if (!foundMatch) {
            throwableFailedMatch(t);
        }
    }

