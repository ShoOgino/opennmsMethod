    /**
     * Rotates a give buffer area marked by begin, pivot, and end. The pivot
     * marks the point where the bytes between [pivot..end) are moved to the
     * position marked by begin. The bytes between [begin..pivot) are shifted
     * such that begin is at [begin+(end-pivot)].
     * 
     * @param buf
     *            The buffer containing the data to rotate
     * @param begin
     *            The start of the rotation
     * @param pivot
     *            The pivot point for the rotation
     * @param end
     *            The end of the rotational buffer
     * 
     * @exception ArrayIndexOutOfBoundsException
     *                Thrown if an access exception occurs
     * 
     */
    protected static void rotate(byte[] buf, int begin, int pivot, int end) throws ArrayIndexOutOfBoundsException {
        int dist = end - pivot;
        byte[] hold = new byte[dist];

        copy(buf, // source
             pivot, // source offset
             hold, // destination
             0, // destination offset
             dist); // length

        //
        // shift from end of buffer to front. This
        // way we do not have to worry about data
        // corruption
        //
        for (int x = (pivot - begin) - 1; x >= 0; x--) {
            buf[begin + dist + x] = buf[begin + x]; // SHIFT!
        }

        copy(hold, // source
             0, // source offset
             buf, // destination
             begin, // destination offset
             dist); // length
    }

