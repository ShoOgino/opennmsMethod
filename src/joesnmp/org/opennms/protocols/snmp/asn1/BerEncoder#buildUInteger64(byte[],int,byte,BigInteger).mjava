	/**
	 *
	 * The buildUInteger64() method is used to encode an ASN.1 64-bit unsigned
	 * integer into the specified byte buffer.
	 *
	 * @param buf		The output buffer of encoded bytes.
	 * @param startOffset	The offset from the start of the buffer where the 
	 *			method should start writing the encoded data.
	 * @param asnType	The ASN.1 type to place in the buffer
	 * @param asnUInt64	The 64-bit unsigned integer to encode.
	 *
	 * @return	Returns the new offset for the next encoding routine.
	 *		If startOffset is subtracted from the return value
	 *		then the length of the encoded data can be determined.
	 *
	 * @exception	AsnEncodingException	Thrown if an error occurs encoding
	 *			the datatype.
	 * 
	 */
	public int buildUInteger64(byte[]	buf,
				   int		startOffset,
				   byte		asnType,
				   BigInteger	asnUInt64) throws AsnEncodingException
	{
		//
		// compute the number of bits required and the 
		// integer size required to represent it minimally
		//
		byte[]	bytes = asnUInt64.toByteArray(); // returns 2 complement minimum representation + sign bit!
		
		//
		// build the header
		//
		startOffset = buildHeader(buf, startOffset, asnType, bytes.length);

		//
		// verify the buffer length
		//
		if((buf.length - startOffset) < bytes.length)
			throw new AsnEncodingException("Buffer overflow error");

		for(int i = 0; i < bytes.length; ++i)
			buf[startOffset++] = bytes[i];
			
		//
		// return the result
		//
		return startOffset;
	}	

