    /**
     * Rotates a give buffer area marked by begin, pivot, and end. The pivot
     * marks the point where the array between [pivot..end) are moved to the
     * position marked by begin. The bytes between [begin..pivot) are shifted
     * such that begin is at [begin+(end-pivot)].
     * 
     * @param arrayBuf
     *            The buffer containing the data to rotate
     * @param begin
     *            The start of the rotation
     * @param pivot
     *            The pivot point for the rotation
     * @param end
     *            The end of the rotational buffer
     * 
     */
    static void rotate(byte[] arrayBuf, int begin, int pivot, int end) {
        // The amount of data to move between the pivot point
        // and the end of the buffer
        //
        int pedist = end - pivot;
        int bpdist = pivot - begin;

        // Allocate an array to hold half of the moving buffer
        //
        byte[] hold = new byte[pedist];

        // Copy to the back half of the rotating buffer to the
        // hold area
        //
        System.arraycopy(arrayBuf, // source
                         pivot, // source offset
                         hold, // destination
                         0, // destination offset
                         pedist); // length

        // Move the front half to the back half
        //
        System.arraycopy(arrayBuf, // source
                         begin, // source offset
                         arrayBuf, // destination
                         begin + pedist,// destination offset
                         bpdist); // length

        System.arraycopy(hold, // source
                         0, // source offset
                         arrayBuf, // destination
                         begin, // destination offset
                         pedist); // length
    }

