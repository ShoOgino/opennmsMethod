        /**
         * Removes the next element from the queue and returns it to the caller.
         * If there is no objects available then the caller is blocked until an
         * item is available.
         * 
         * @return The next element in the queue.
         * 
         * @throws java.lang.InterruptedException
         *             Thrown if the thread is interrupted.
         * @throws org.opennms.core.queue.FifoQueueException
         *             Thrown if an error occurs removing an item from the
         *             queue.
         */
        public synchronized Object remove() throws InterruptedException, FifoQueueException {
            Object rval = null;
            if (m_hold != null) {
                rval = m_hold;
                m_hold = null;
            } else {
                rval = super.remove();
            }

            return rval;
        }

