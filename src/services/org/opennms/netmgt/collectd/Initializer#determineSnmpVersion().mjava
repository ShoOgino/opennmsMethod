	private void determineSnmpVersion() {
		/*
		 * Prepare & execute the SQL statement for retrieving the SNMP
		 * version of node
		 */
		{
			
			PreparedStatement stmt = null;

		try {
			stmt = m_dsConn.prepareStatement(SnmpCollector.SQL_CHECK_SNMPV2);
			stmt.setInt(1, m_nodeID);
			ResultSet rs = stmt.executeQuery();
			if (rs.next()) {
				rs.getInt(1);
				m_snmpv2Supported = true;
			} else {
				m_snmpv2Supported = false;
			}
			rs.close();
		} catch (SQLException e) {
			m_collector.log().debug("initialize: SQL exception!!", e);
			throw new RuntimeException("SQL exception while attempting "
					+ "to retrieve snmp version information", e);
		} finally {
			try {
				stmt.close();
			} catch (Exception e) {
				m_collector.log().info(
						"initialize: an error occured while closing "
								+ "an SQL statement", e);
			}
		}
		}

		if (m_collector.log().isDebugEnabled()) {
			m_collector.log().debug(
					"initialize: address = " + m_ipAddr.getHostAddress()
							+ ", nodeid = " + m_nodeID
							+ ", primaryIfIndex = " + m_primaryIfIndex
							+ ", isSnmpPrimary = " + m_isSnmpPrimary
							+ ", SNMPversion = "
							+ (m_snmpv2Supported ? "SNMPv2" : "SNMPv1"));
		}
	}

