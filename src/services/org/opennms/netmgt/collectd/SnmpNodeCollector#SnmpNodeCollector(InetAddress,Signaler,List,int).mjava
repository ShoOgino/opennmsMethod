    /**
     * The class constructor is used to initialize the collector and send out
     * the initial SNMP packet requesting data. The data is then received and
     * store by the object. When all the data has been collected the passed
     * signaler object is <EM>notified</EM> using the notifyAll() method.
     * @param address TODO
     * @param signaler
     *            The object signaled when data collection is done.
     * @param objList
     *            The list of object id's to be collected.
     * @param maxVarsPerPdu
     *            Max number of vars permitted in a single PDU
     */
    public SnmpNodeCollector(InetAddress address, Signaler signaler, List objList, int maxVarsPerPdu) {
        super(MibObject.getCollectionTrackers(objList));
        
        m_primaryIf = address.getHostAddress();

        m_collectorEntry = new SNMPCollectorEntry(objList);

        // Process parameters
        //
        if (log().isDebugEnabled())
            log().debug("SnmpNodeCollector: totalOids=" + objList.size() + " maxVarsPerPdu=" + maxVarsPerPdu);

        m_walker = new SnmpWalker(address, signaler, "SnmpNodeCollector for "+address.getHostAddress(), maxVarsPerPdu, this);
        m_walker.start();

    }

