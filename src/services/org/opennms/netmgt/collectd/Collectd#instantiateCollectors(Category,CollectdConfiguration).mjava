    private void instantiateCollectors(final Category log, CollectdConfiguration config) {
        // Load up an instance of each collector from the config
        // so that the event processor will have them for
        // new incomming events to create collectable service objects.
        //
        Enumeration eiter = config.enumerateCollector();
        while (eiter.hasMoreElements()) {
            Collector collector = (Collector) eiter.nextElement();
            try {
                if (log.isDebugEnabled()) {
                    log.debug("init: Loading collector " + collector.getService() + ", classname " + collector.getClassName());
                }
                Class cc = Class.forName(collector.getClassName());
                ServiceCollector sc = (ServiceCollector) cc.newInstance();

                // Attempt to initialize the service collector
                //
                Map properties = null; // properties not currently used
                sc.initialize(properties);

                m_svcCollectors.put(collector.getService(), sc);
            } catch (Throwable t) {
                if (log.isEnabledFor(Priority.WARN)) {
                    log.warn("init: Failed to load collector " + collector.getClassName() + " for service " + collector.getService(), t);
                }
            }
        }
    }

