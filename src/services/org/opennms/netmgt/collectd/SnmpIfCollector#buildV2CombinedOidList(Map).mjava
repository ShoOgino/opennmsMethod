    /**
     * This method is responsible for building a new object list consisting of
     * all unique oids to be collected for all interfaces represented within the
     * interface map. The new list can then be used for SNMPv2 collection.
     * 
     * @param ifMap
     *            Map of IfInfo objects indexed by ifIndex
     * 
     * @return unified MibObject list
     */
    private static List buildV2CombinedOidList(Map ifMap) {
        List allOids = new ArrayList();

        // Iterate over all the interface's in the interface map
        //
        if (ifMap != null) {
            Iterator i = ifMap.values().iterator();
            while (i.hasNext()) {
                IfInfo ifInfo = (IfInfo) i.next();
                List ifOidList = ifInfo.getOidList();

                // Add unique interface oid's to the list
                //
                Iterator j = ifOidList.iterator();
                while (j.hasNext()) {
                    MibObject oid = (MibObject) j.next();
                    if (!allOids.contains(oid))
                        allOids.add(oid);
                }
            }
	    allOids.add(ifAliasMibObject());
        }

        return allOids;
    }

