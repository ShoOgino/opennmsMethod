    private void storeNodeData() {
        if (getNodeCollector() != null) {
        	log().debug("updateRRDs: processing node-level collection...");
        
            /*
        	 * Build path to node RRD repository. createRRD() will make the
        	 * appropriate directories if they do not already exist.
        	 */
        	String nodeRepository = getRrdPath() + File.separator + String.valueOf(m_agent.getNodeId());
        
        	SNMPCollectorEntry nodeEntry = getNodeCollector().getEntry();
        
        	/*
        	 * Iterate over the node datasource list and issue RRD update
        	 * commands to update each datasource which has a corresponding
        	 * value in the collected SNMP data.
        	 */
        	Iterator it = m_agent.getNodeAttributeList().iterator();
        	while (it.hasNext()) {
                CollectionAttribute attr = (CollectionAttribute)it.next();
        		DataSource ds = attr.getDs();
        
        		try {
        			String dsVal = ds.getRRDValue(nodeEntry);
        			if (dsVal == null) {
        				// Do nothing, no update is necessary
        				logNoDataForValue(ds);
        			} else {
        				if (ds.performUpdate(m_agent.getCollection(), m_agent.getInetAddress().getHostAddress(), nodeRepository, ds.getName(), dsVal)) {
        					logUpdateFailed(ds);
        				}
        			}
        		} catch (IllegalArgumentException e) {
        			logExceptionOnUpdate(ds, e);
        		}
        
        	} // end while(more datasources)
        } // end if(nodeCollector != null)
    }

