    /**
     * This method is responsible for handling configureSNMP events.
     *
     * @param event The event to process.
     */
    private void configureSNMPHandler(Event event) {
        Category log = ThreadCategory.getInstance(getClass());

        if (log.isDebugEnabled())
            log.debug("configureSNMPHandler: processing configure SNMP event...");

        // Extract the IP adddress range and SNMP community string from the
        // event parms.
        //
        String firstIPAddress = null;
        String lastIPAddress = null;
        String communityString = null;
        Parms parms = event.getParms();
        if (parms != null) {
            String parmName = null;
            Value parmValue = null;
            String parmContent = null;

            Enumeration parmEnum = parms.enumerateParm();
            while (parmEnum.hasMoreElements()) {
                Parm parm = (Parm) parmEnum.nextElement();
                parmName = parm.getParmName();
                parmValue = parm.getValue();
                if (parmValue == null)
                    continue;
                else
                    parmContent = parmValue.getContent();

                // First IP Address
                if (parmName.equals(EventConstants.PARM_FIRST_IP_ADDRESS)) {
                    firstIPAddress = parmContent;
                }

                // Last IP Address (optional parameter)
                else if (parmName.equals(EventConstants.PARM_LAST_IP_ADDRESS)) {
                    lastIPAddress = parmContent;
                }

                // SNMP community string
                else if (parmName.equals(EventConstants.PARM_COMMUNITY_STRING)) {
                    communityString = parmContent;
                }
            }
        }

        if (firstIPAddress != null && !firstIPAddress.equals("")) {
            int begin = new IPv4Address(firstIPAddress).getAddress();
            int end = begin;
            if (lastIPAddress != null && !lastIPAddress.equals("")) {
                end = new IPv4Address(lastIPAddress).getAddress();
                if (end < begin)
                    end = begin;
            }

            SnmpPeerFactory factory = SnmpPeerFactory.getInstance();

            for (int address = begin; address <= end; address++) {
                try {
                    InetAddress ip =
                        InetAddress.getByAddress(new IPv4Address(address).getAddressBytes());

                    factory.define(ip, communityString);
                }
                catch (Exception e) {
                    log.warn("configureSNMPHandler: Failed to process IP address "
                             + IPv4Address.addressToString(address)
                             + ": " + e.getMessage(), e);
                }
            }

            try {
                SnmpPeerFactory.saveCurrent();
            }
            catch (Exception e) {
                log.warn("configureSNMPHandler: Failed to store SNMP configuration"
                         + ": " + e.getMessage(), e);
            }
        }

        if (log.isDebugEnabled())
            log.debug("configureSNMPHandler: processing configure SNMP event for IP "
                      + firstIPAddress + "-" + lastIPAddress + " completed.");
    }

