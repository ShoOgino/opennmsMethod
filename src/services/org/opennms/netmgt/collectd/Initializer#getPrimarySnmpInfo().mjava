	private void getPrimarySnmpInfo() {
		/*
		 * Prepare & execute the SQL statement to get the 'nodeid' from the
		 * ipInterface table 'nodeid' will be used to retrieve the node's
		 * system object id from the node table. In addition to nodeid, the
		 * interface's ifIndex and isSnmpPrimary fields are also retrieved.
		 */
		PreparedStatement stmt = null;
		try {
			stmt = m_dsConn.prepareStatement(SnmpCollector.SQL_GET_NODEID);
			stmt.setString(1, m_ipAddr.getHostAddress()); // interface
			// address
			ResultSet rs = stmt.executeQuery();
			if (rs.next()) {
				m_nodeID = rs.getInt(1);
				if (rs.wasNull()) {
					m_nodeID = -1;
				}

				m_primaryIfIndex = rs.getInt(2);
				if (rs.wasNull()) {
					m_primaryIfIndex = -1;
				}

				String str = rs.getString(3);
				if (str != null) {
					m_isSnmpPrimary = str.charAt(0);
				}
			} else {
				m_nodeID = -1;
				m_primaryIfIndex = -1;
				m_isSnmpPrimary = DbIpInterfaceEntry.SNMP_NOT_ELIGIBLE;
			}

			rs.close();
		} catch (SQLException e) {
			m_collector.log().debug("initialize: SQL exception", e);
			throw new RuntimeException("SQL exception while attempting "
					+ "to retrieve node id for interface "
					+ m_ipAddr.getHostAddress());
		} finally {
			try {
				stmt.close();
			} catch (Exception e) {
				// Ignore
			}
		}

		if (m_collector.log().isDebugEnabled()) {
			m_collector.log().debug(
					"initialize: db retrieval info: nodeid = " + m_nodeID
					+ ", address = " + m_ipAddr.getHostAddress()
					+ ", primaryIfIndex = " + m_primaryIfIndex
					+ ", isSnmpPrimary = " + m_isSnmpPrimary);
		}

		/*
		 * RuntimeException is thrown if any of the following are true: -
		 * node id is invalid - primaryIfIndex is invalid - Interface is not
		 * the primary SNMP interface for the node
		 */
		if (m_nodeID == -1) {
			throw new RuntimeException("Unable to retrieve node id "
					+ "for interface " + m_ipAddr.getHostAddress());
		}

		if (m_primaryIfIndex == -1) {
			// allow this for nodes without ipAddrTables
			// throw new RuntimeException("Unable to retrieve ifIndex for
			// interface " + ipAddr.getHostAddress());
			if (m_collector.log().isDebugEnabled()) {
				m_collector.log().debug(
						"initialize: db retrieval info: node " + m_nodeID
						+ " does not have a legitimate "
						+ "primaryIfIndex.  Assume node does not "
						+ "supply ipAddrTable and continue...");
			}
		}

		if (m_isSnmpPrimary != DbIpInterfaceEntry.SNMP_PRIMARY) {
			throw new RuntimeException("Interface "
					+ m_ipAddr.getHostAddress()
					+ " is not the primary SNMP interface for nodeid "
					+ m_nodeID);
		}
	}

