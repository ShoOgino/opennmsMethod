    /*
     * This simulates send a packet and waiting for a response. 
     * 
     * This is a template method based on te getBulk algorithm. We use the getBulk
     * algorithm for get and nexts as well.  nonRepeaters for gets and nexts is always
     * equals to pdu size so there are no repeaters. maxRepitions is also always zero
     * for gets and nexts.
     * 
     * The method getRespObjIdFromReqObjId which by default goes 'next' is overridden
     * and does 'get' in the GetPdu.
     */
    public ResponsePdu send(TestAgent agent) {
        ResponsePdu resp = TestPdu.getResponse();
        
        // first do non repeaters
        int nonRepeaters = Math.min(size(), getNonRepeaters());
        for(int i = 0; i < nonRepeaters; i++) {
            TestVarBind varBind = (TestVarBind) getVarBindAt(i);
            SnmpObjId lastOid = varBind.getObjId();
            SnmpObjId objId = getRespObjIdFromReqObjId(agent, lastOid);
            resp.addVarBind(objId, agent.getValueFor(objId));
        }
        
        // make a list to track the repititions
        int repeaters = size() - nonRepeaters;
        List repeaterList = new ArrayList(repeaters);
        for(int i = nonRepeaters; i < size(); i++) {
            repeaterList.add(getVarBindAt(i).getObjId());
        }
        
        // now generate varbinds for the repeaters
        for(int count = 0; count < getMaxRepititions(); count++) {
            for(int i = 0; i < repeaterList.size(); i++) {
                SnmpObjId lastOid = (SnmpObjId)repeaterList.get(i);
                SnmpObjId objId = getRespObjIdFromReqObjId(agent, lastOid);
                resp.addVarBind(objId, agent.getValueFor(objId));
                repeaterList.set(i, objId);
            }
        }
        return resp;
    }

