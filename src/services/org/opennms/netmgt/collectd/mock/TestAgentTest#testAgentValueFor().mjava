    public void testAgentValueFor() {
        SnmpObjId z1 = SnmpObjId.get(zeroInst1Base, "0");
        SnmpObjId z2 = SnmpObjId.get(zeroInst2Base, "0");
        
        assertEquals(getValueFor(z1), m_agent.getValueFor(z1));
        assertEquals(getValueFor(z2), m_agent.getValueFor(z2));
        // make sure they are not the same
        assertFalse(getValueFor(z2).equals(m_agent.getValueFor(z1)));
        
        // try a column
        for(int i = 1; i <= columnLength; i++) {
            SnmpObjId colOid = SnmpObjId.get(col2Base, ""+i);
            assertEquals(getValueFor(colOid), m_agent.getValueFor(colOid));
        }
        
        // what should it do if you ask for an invalid one - return null
        try {
            m_agent.getValueFor(SnmpObjId.get(".1.1.1.1.1"));
            fail("expected an exception");
        } catch (AgentNoSuchObjectException e) {
            
        }
        
        SnmpObjId objId = SnmpObjId.get(zeroInst1Base, "1");
        try {
            m_agent.getValueFor(objId);
            fail("Expected no such instance exception");
        } catch (AgentNoSuchInstanceException e) {
            
        }
        
        RuntimeException exception = new RuntimeException();
        try {
            m_agent.setAgentValue(objId, exception);
            m_agent.getValueFor(objId);
        } catch (RuntimeException e) {
            assertSame(exception, e);
        }
        
    }

