    public ResponseProcessor buildNextPdu(PduBuilder pduBuilder) {
        final List expectantCols = new ArrayList(m_colList.size());
        for (Iterator it = m_colList.iterator(); it.hasNext();) {
            SnmpColumn col = (SnmpColumn)it.next();
            if (col.hasOidForNext()) {
                pduBuilder.addOid(col.getOidForNext());
                expectantCols.add(col);
            }
        }
        pduBuilder.setNonRepeaters(expectantCols.size());
        pduBuilder.setMaxRepititions(1);
        return new ResponseProcessor() {
            
            int currIndex = 0;

            public void processResponse(SnmpObjId snmpObjId, Object val) {
                
                SnmpColumn col = (SnmpColumn)expectantCols.get(currIndex);
                SnmpInstId inst = col.addResult(snmpObjId, val);
                Map instMap = (Map)m_instanceMaps.get(inst);
                if (instMap == null) {
                    instMap = new HashMap();
                    m_instanceMaps.put(inst, instMap);
                }
                instMap.put(col.getBase(), val);
                
                currIndex++;
            }
            
        };
    }

