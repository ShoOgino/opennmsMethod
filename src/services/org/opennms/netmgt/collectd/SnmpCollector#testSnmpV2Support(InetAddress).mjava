    /**
     * Responsible for testing the specified interface for SNMPv2 support.
     * 
     * @param addr
     *            Interface to test.
     * 
     * @return true if remote SNMP agent supports SNMPv2, false otherwise.
     */
    private boolean testSnmpV2Support(InetAddress addr) {
        boolean supportsV2 = false;

        // Get SnmpPeer object for this interface
        //
        SnmpPeer peer = SnmpPeerFactory.getInstance().getPeer(addr);

        // Force version to SNMPv2
        peer.getParameters().setVersion(SnmpSMI.SNMPV2);

        // Establish SNMP session with interface
        //
        SnmpSession session = null;
        try {
            session = new SnmpSession(peer);
            SnmpSyntax[] results = session.getBulk(1, 0, new SnmpObjectId(DEFAULT_OBJECT_IDENTIFIER));
            return (results != null);

        } catch (SocketException e) {
            log().error("testSnmpV2Support: Error creating the SnmpSession to collect from " + addr.getHostAddress(), e);
            return false; // just assume SNMPv1

        } finally {
            try {
                if (session != null) session.close();
            } catch (Exception e) {
                log().warn("testSnmpV2Support: An error occured closing the SNMP session for " + addr.getHostAddress(), e);
            }
        }
    }

