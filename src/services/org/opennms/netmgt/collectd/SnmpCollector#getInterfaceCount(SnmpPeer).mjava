    /**
     * Retrieves ifNumber object from the MIB-II interfaces table which is the
     * number of interfaces on the remote node and then returns this value.
     * 
     * @param peer
     *            SnmpPeer object used to communicate with the remote SNMP
     *            agent.
     * 
     * @return number of interfaces on the remote node.
     */
    private int getInterfaceCount(SnmpPeer peer) {
        
        SnmpSession session = null;
        try {
            session = new SnmpSession(peer);
            return getIfNumber(session);
            
        } catch (SocketException e) {
            log().error("getInterfaceCount: Error creating the SnmpSession to collect from " + peer.getPeer().getHostAddress(), e);
            return -1;

        } finally {
            try {
                if (session != null) session.close();
            } catch (Exception e) {
                log().warn("collect: An error occured closing the SNMP session for " + peer.getPeer().getHostAddress(), e);
            }
        }

    }

