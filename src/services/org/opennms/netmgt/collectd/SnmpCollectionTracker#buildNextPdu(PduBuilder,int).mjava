    public ResponseProcessor buildNextPdu(PduBuilder pduBuilder, int maxVarsPerPdu) {
        final List expectantCols = new ArrayList(Math.min(maxVarsPerPdu, m_colList.size()));
        int count = 0;
        for(int i = 0; i < m_colList.size() && count < maxVarsPerPdu; i++) {
            int index = i;
            SnmpColumn col = (SnmpColumn)m_colList.get(index);
            if (col.hasOidForNext()) {
                count++;
                pduBuilder.addOid(col.getOidForNext());
                expectantCols.add(col);
            }
        }
       
        pduBuilder.setNonRepeaters(expectantCols.size());
        pduBuilder.setMaxRepititions(1);
        return new ResponseProcessor() {
            
            int currIndex = 0;

            public void processResponse(SnmpObjId snmpObjId, Object val) {
                
                SnmpColumn col = (SnmpColumn)expectantCols.get(currIndex);
                SnmpInstId inst = col.addResult(snmpObjId, val);
                if (inst != null) {
                    Map instMap = (Map)m_instanceMaps.get(inst);
                    if (instMap == null) {
                        instMap = new HashMap();
                        m_instanceMaps.put(inst, instMap);
                    }
                    instMap.put(col.getBase(), val);
                }
                currIndex++;
            }
            
        };
    }

