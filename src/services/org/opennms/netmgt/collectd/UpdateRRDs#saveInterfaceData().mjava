    private void saveInterfaceData() {
        if (getIfCollector() != null) {
            
    		logIfAliasConfig();
    
    		/*
    		 * Retrieve list of SNMP collector entries generated for the remote
    		 * node's interfaces.
    		 */
            if (!getIfCollector().hasData()) {
    			log().warn("updateRRDs: No data retrieved for the agent at " + m_agent.getHostAddress());
    		}
            
            
    		// Iterate over the SNMP collector entries
    		Iterator iter = getIfCollector().getEntries().iterator();
    		while (iter.hasNext()) {
    			SNMPCollectorEntry ifEntry = (SNMPCollectorEntry) iter.next();

                int ifIndex = ifEntry.getIfIndex().intValue();
                /*
                 * Use ifIndex to lookup the IfInfo object from the interface
                 * map.
                 */
                IfInfo ifInfo = m_agent.getIfInfo(ifIndex);
                if (ifInfo == null) {
                    m_forceRescanState.rescanIndicated();
                    continue;
                }
    
                // TODO: This will send rescans for entries that have no IfInfo... so moving below IfInfo may fail to catch all the cases
                // However... since we send an event if ifNumber changed maybe we don't need these?
                if (currentAliasIsOutOfDate(ifEntry)) {
                    m_forceRescanState.rescanIndicated();
                    logForceRescan(ifEntry);
                }
    
                validateAttrList(ifInfo);

                if (notScheduledForCollection(ifEntry, ifInfo) && !forceStoreByAlias(getAliasDirName(ifEntry))) {
                    logSkip(ifEntry, ifInfo);
                    continue;
                }

    			if (notScheduledForCollection(ifEntry, ifInfo) && forceStoreByAlias(getAliasDirName(ifEntry))) {
                	logStore(ifEntry, ifInfo);
                }
                
    			/*
    			 * Iterate over the interface datasource list and issue RRD
    			 * update commands to update each datasource which has a
    			 * corresponding value in the collected SNMP data.
    			 */
    			Iterator i = ifInfo.getAttributeList().iterator();
    			while (i.hasNext()) {
                    CollectionAttribute attr = (CollectionAttribute)i.next();
    				DataSource ds = attr.getDs();
    
    				try {
    					String dsVal = ds.getRRDValue(ifEntry);
    
    					// Build RRD update command
    					if (dsVal == null) {
    						logNoDataRetrieved(ifEntry, ds);
    					} else {
    						if (shouldStoreByNode(ifEntry, ifInfo)) {
                                storeByNode(ifEntry, ifInfo, ds, dsVal);
    						}
    						if (shouldStoreByAlias()) {
    							storeByAlias(ifEntry, getAliasDirName(ifEntry), ds, dsVal);
    						}
    
    					}
    				} catch (IllegalArgumentException e) {
    					logUpdateFailed(ifEntry, ds, e);
    				}
    
    			} // end while(more datasources)
    		} // end while(more SNMP collector entries)
    	} // end if(ifCollector != null)
    }

