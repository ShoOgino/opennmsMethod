    private void saveInterfaceData() {
        if (m_agent.getIfCollector() != null) {
            
    		logIfAliasConfig();
    
    		/*
    		 * Retrieve list of SNMP collector entries generated for the remote
    		 * node's interfaces.
    		 */
            if (!m_agent.getIfCollector().hasData()) {
    			log().warn("updateRRDs: No data retrieved for the agent at " + m_agent.getHostAddress());
    		}
            
            putEntriesInIfInfos();
            
            for (Iterator iter = m_agent.getIfInfos().iterator(); iter.hasNext();) {
                IfInfo ifInfo = (IfInfo) iter.next();
                
    			SNMPCollectorEntry ifEntry = ifInfo.getEntry();

                ifInfo.checkForChangedIfAlias(m_forceRescanState);
    
                if ((!ifInfo.isScheduledForCollection()) && !forceStoreByAlias(ifInfo.getAliasDir(getIfAliasComment()))) {
                    logSkip(ifEntry, ifInfo);
                    continue;
                }

    			if ((!ifInfo.isScheduledForCollection()) && forceStoreByAlias(ifInfo.getAliasDir(getIfAliasComment()))) {
                	logStore(ifEntry, ifInfo);
                }
                
    			/*
    			 * Iterate over the interface datasource list and issue RRD
    			 * update commands to update each datasource which has a
    			 * corresponding value in the collected SNMP data.
    			 */
    			Iterator i = ifInfo.getAttributeList().iterator();
    			while (i.hasNext()) {
                    CollectionAttribute attr = (CollectionAttribute)i.next();
    				try {
                    	// Build RRD update command
                    	if (attr.getDs().getRRDValue(ifEntry) == null) {
                    		logNoDataRetrieved(ifEntry, attr.getDs());
                    	} else {
                    		if (shouldStoreByNode(ifEntry, ifInfo)) {
                                storeByNode(ifEntry, ifInfo, attr.getDs(), attr.getDs().getRRDValue(ifEntry));
                    		}
                    		if (shouldStoreByAlias(ifEntry, ifInfo)) {
                    			storeByAlias(ifEntry, ifInfo.getAliasDir(getIfAliasComment()), attr.getDs(), attr.getDs().getRRDValue(ifEntry));
                    		}
                    
                    	}
                    } catch (IllegalArgumentException e) {
                    	logUpdateFailed(ifEntry, attr.getDs(), e);
                    }
    
    			} // end while(more datasources)
    		} // end while(more SNMP collector entries)
    	} // end if(ifCollector != null)
    }

