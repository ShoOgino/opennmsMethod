    protected void validate() {
        //
        // verify the type
        //
        if (getPdu().typeId() != (byte) (SnmpPduPacket.V2TRAP)) {
            // if not V2 trap, do nothing
            throw new IllegalArgumentException("Received not SNMPv2 Trap from host " + getTrapInterface() + "PDU Type = " + getPdu().getCommand());
        }
        if (log().isDebugEnabled()) {
            log().debug("V2 trap numVars or pdu length: " + getPduLength());
        }
        if (getPduLength() < 2) // check number of varbinds
        {
            throw new IllegalArgumentException("V2 trap from " + getTrapInterface() + " IGNORED due to not having the required varbinds.  Have " + getPduLength() + ", needed 2");
        }
        // The first varbind has the sysUpTime
        // Modify the sysUpTime varbind to add the trailing 0 if it is
        // missing
        // The second varbind has the snmpTrapOID
        // Confirm that these two are present
        //
        String varBindName0 = getPdu().getVarBindAt(0).getName().toString();
        String varBindName1 = getPdu().getVarBindAt(1).getName().toString();
        if (varBindName0.equals(TrapQueueProcessor.EXTREME_SNMP_SYSUPTIME_OID)) {
            log().info("V2 trap from " + getTrapInterface() + " has been corrected due to the sysUptime.0 varbind not having been sent with a trailing 0.\n\tVarbinds received are : " + varBindName0 + " and " + varBindName1);
            varBindName0 = TrapQueueProcessor.SNMP_SYSUPTIME_OID;
        }
        if ((!(varBindName0.equals(TrapQueueProcessor.SNMP_SYSUPTIME_OID))) || (!(varBindName1.equals(TrapQueueProcessor.SNMP_TRAP_OID)))) {
            throw new IllegalArgumentException("V2 trap from " + getTrapInterface() + " IGNORED due to not having the required varbinds.\n\tThe first varbind must be sysUpTime.0 and the second snmpTrapOID.0\n\tVarbinds received are : " + varBindName0 + " and " + varBindName1);
        }
    }

