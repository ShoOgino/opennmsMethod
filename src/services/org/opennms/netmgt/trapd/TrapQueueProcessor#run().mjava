	/**
	 * Reads off of the input queue and depending on the type (V1 or V2 trap)
	 * of object read, process the traps to convert them to events and
	 * send them out
	 */
	public void run()
	{
		Category log = ThreadCategory.getInstance(getClass());

		synchronized(this)
		{
			m_status = RUNNING;
		}

		while(statusOK())
		{
			Object o = null;
			try
			{
				o = m_backlogQ.remove(1000);
			}
			catch(InterruptedException iE)
			{
				log.debug("Trapd.QueueProcessor: caught interrupted exception");
				log.debug(iE.getLocalizedMessage(), iE);

				o = null;

				m_status = STOP_PENDING;
			}
			catch(FifoQueueException qE)
			{
				log.debug("Trapd.QueueProcessor: caught fifo queue exception");
				log.debug(qE.getLocalizedMessage(), qE);

				o = null;

				m_status = STOP_PENDING;
			}

			if(o != null && statusOK())
			{
				if(o instanceof Trapd.V1TrapInformation)
				{
					try
					{
						process((Trapd.V1TrapInformation)o);
					}
					catch(Throwable t)
					{
						log.error("Unexpected error processing V1 trap", t);
					}
				}
				else
				{
					try
					{
						process((Trapd.V2TrapInformation)o);
					}
					catch(Throwable t)
					{
						log.error("Unexpected error processing V2 trap", t);
					}
				}
			}
		}
	} 

