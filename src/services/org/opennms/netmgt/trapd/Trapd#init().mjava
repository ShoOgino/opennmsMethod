	public synchronized void init()
	{
		ThreadCategory.setPrefix(LOG4J_CATEGORY);

		Category log = ThreadCategory.getInstance();

		try
		{
			if(log.isDebugEnabled())
				log.debug("start: Initializing the trapd config factory");

			TrapdConfigFactory.reload();
			TrapdConfigFactory tFactory = TrapdConfigFactory.getInstance();

			if(log.isDebugEnabled())
				log.debug("start: Getting the already known IPs");

			// clear out the known nodes
			m_knownIps = getKnownIpList();

			if(log.isDebugEnabled())
				log.debug("start: Creating the trap queue processor");

			// set up the trap processor
			m_backlogQ  = new FifoQueueImpl();
			m_processor = new TrapQueueProcessor(m_backlogQ, m_knownIps);

			if(log.isDebugEnabled())
				log.debug("start: Creating the trap session");

			// Initialize the trapd session
			int port = tFactory.getSnmpTrapPort();
			m_trapSession = new SnmpTrapSession(this, port);
		}
		catch( SocketException e ) 
		{
			log.error("Failed to setup SNMP trap port", e);
			throw new UndeclaredThrowableException(e);
		}
		catch( MarshalException e )
		{
			log.error("Failed to load configuration", e);
			throw new UndeclaredThrowableException(e);
		}
		catch( ValidationException e )
		{
			log.error("Failed to load configuration", e);
			throw new UndeclaredThrowableException(e);
		}
		catch( IOException e )
		{
			log.error("Failed to load configuration", e);
			throw new UndeclaredThrowableException(e);
		}
		catch( SQLException e ) 
		{
			log.error("Failed to load known IP address list", e);
			throw new UndeclaredThrowableException(e);
		}

	}

