    /**
     * Converts the value of the instance to a string representation in the
     * correct encoding system.
     * 
     */
    public static String toString(String encoding, Object value) {
        if (encoding == null || value == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        String result = "";

        if (XML_ENCODING_TEXT.equals(encoding)) {
            if (value instanceof String)
                result = (String) value;
            else if (value instanceof Number)
                result = value.toString();
            else if (value instanceof SnmpInt32)
                result = Integer.toString(((SnmpInt32) value).getValue());
            else if (value instanceof SnmpUInt32)
                result = Long.toString(((SnmpUInt32) value).getValue());
            else if (value instanceof SnmpCounter64)
                result = ((SnmpCounter64) value).getValue().toString();
            else if (value instanceof SnmpIPAddress)
                result = value.toString();
            else if (value instanceof SnmpOctetString)
                result = new String(((SnmpOctetString) value).getString());
            else if (value instanceof SnmpObjectId)
                result = value.toString();
        } else if (XML_ENCODING_BASE64.equals(encoding)) {
            if (value instanceof String)
                result = new String(Base64.encodeBase64(((String) value).getBytes()));
            else if (value instanceof Number) {
                byte[] ibuf = null;
                if (value instanceof Short) {
                    ibuf = new byte[2];
                    ibuf[0] = (byte) ((((Number) value).shortValue() >> 8) & 0xff);
                    ibuf[1] = (byte) (((Number) value).shortValue() & 0xff);
                } else if (value instanceof Integer) {
                    ibuf = new byte[4];
                    ibuf[0] = (byte) ((((Number) value).intValue() >> 24) & 0xff);
                    ibuf[1] = (byte) ((((Number) value).intValue() >> 16) & 0xff);
                    ibuf[2] = (byte) ((((Number) value).intValue() >> 8) & 0xff);
                    ibuf[3] = (byte) (((Number) value).intValue() & 0xff);
                } else if (value instanceof Long) {
                    ibuf = new byte[8];
                    ibuf[0] = (byte) ((((Number) value).longValue() >> 56) & 0xffL);
                    ibuf[1] = (byte) ((((Number) value).longValue() >> 48) & 0xffL);
                    ibuf[2] = (byte) ((((Number) value).longValue() >> 40) & 0xffL);
                    ibuf[3] = (byte) ((((Number) value).longValue() >> 32) & 0xffL);
                    ibuf[4] = (byte) ((((Number) value).longValue() >> 24) & 0xffL);
                    ibuf[5] = (byte) ((((Number) value).longValue() >> 16) & 0xffL);
                    ibuf[6] = (byte) ((((Number) value).longValue() >> 8) & 0xffL);
                    ibuf[7] = (byte) (((Number) value).longValue() & 0xffL);
                } else if (value instanceof BigInteger) {
                    ibuf = ((BigInteger) value).toByteArray();
                }
                result = new String(Base64.encodeBase64(ibuf));
            } else if (value instanceof SnmpInt32) {
                byte[] ibuf = new byte[4];
                ibuf[0] = (byte) ((((SnmpInt32) value).getValue() >> 24) & 0xff);
                ibuf[1] = (byte) ((((SnmpInt32) value).getValue() >> 16) & 0xff);
                ibuf[2] = (byte) ((((SnmpInt32) value).getValue() >> 8) & 0xff);
                ibuf[3] = (byte) (((SnmpInt32) value).getValue() & 0xff);

                result = new String(Base64.encodeBase64(ibuf));
            } else if (value instanceof SnmpUInt32) {
                byte[] ibuf = new byte[4];
                ibuf[0] = (byte) ((((SnmpUInt32) value).getValue() >> 24) & 0xffL);
                ibuf[1] = (byte) ((((SnmpUInt32) value).getValue() >> 16) & 0xffL);
                ibuf[2] = (byte) ((((SnmpUInt32) value).getValue() >> 8) & 0xffL);
                ibuf[3] = (byte) (((SnmpUInt32) value).getValue() & 0xffL);

                result = new String(Base64.encodeBase64(ibuf));
            } else if (value instanceof SnmpCounter64) {
                byte[] ibuf = ((SnmpCounter64) value).getValue().toByteArray();
                result = new String(Base64.encodeBase64(ibuf));
            } else if (value instanceof SnmpOctetString) {
                result = new String(Base64.encodeBase64(((SnmpOctetString) value).getString()));
            } else if (value instanceof SnmpObjectId) {
                result = new String(Base64.encodeBase64(value.toString().getBytes()));
            }
        }

        return result;
    }

