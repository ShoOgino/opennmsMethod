        /**
         * Update the categories for a node.
         * This method will update the categories for all interfaces on a node.
         *
         * @param  nodeid       the nodeid on which SNMP service was added
         *
         * @throws SQLException if the database read fails due to an SQL error
         * @throws FilterParseException if filtering the data against the category rule fails due to the rule being incorrect
         * @throws RTCException if the database read or filtering the data against the category rule fails for some reason
         */
        public synchronized void rtcNodeRescan(long nodeid)
                        throws SQLException, FilterParseException, RTCException
        {
            Category log = ThreadCategory.getInstance(DataManager.class);
           
            // Get a new database connection
            java.sql.Connection dbConn = null;
            ResultSet ipRS = null;
            try 
	    {
                try
                {
                    dbConn = DatabaseConnectionFactory.getInstance().getConnection();
                }     
                catch(SQLException ex)
                {
                    log.warn("Failed to get database connection", ex);
                    throw new UndeclaredThrowableException(ex);
                }
               
                // Prepare the statement to get the IP addresses assigned to a node.
                PreparedStatement nodeIPsGetStmt = dbConn.prepareStatement(RTCConstants.SQL_DB_NODE_IPADDRS);
               
                // get IP addresses for this node

                nodeIPsGetStmt.setString(1, String.valueOf(nodeid));

                ipRS = nodeIPsGetStmt.executeQuery();
                while(ipRS.next())
                {
			// Call the method to rescan the node and IP address
			rtcNodeIpRescan(nodeid,ipRS.getString(1));
		}
	    }

            finally
            {
                try
                {
                    if(ipRS != null)
                        ipRS.close();
                }
                catch(Exception e)
                {
                    if(log.isDebugEnabled())
                        log.debug("Exception while closing the get node IPs result set - node: " + nodeid, e);
                }
            }
	}

