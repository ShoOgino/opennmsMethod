	/**
	 * Constructor  - it parses categories from the categories.xml and
	 * populates them with 'RTCNode' objects created from data read from
	 * the database (services and outage tables)
	 *
	 * @exception SQLException thrown if there is an error reading initial data from the database
	 * @exception FilterParseException thrown if a rule in the categories.xml was incorrect
	 * @exception RTCException thrown if the initialization/data reading does not go through
	 */
	public DataManager()
		throws SAXException,
		       IOException,
		       SQLException,
		       FilterParseException,
		       RTCException
	{
		Category log = ThreadCategory.getInstance(DataManager.class);

		java.sql.Connection dbConn = null;
		try
		{
			DatabaseConnectionFactory.reload();
			dbConn = DatabaseConnectionFactory.getInstance().getConnection();
		}
		catch(IOException ex)
		{
			log.warn("Failed to load database config", ex);
			throw new UndeclaredThrowableException(ex);
		}
		catch(MarshalException ex)
		{
			log.warn("Failed to unmarshall database config", ex);
			throw new UndeclaredThrowableException(ex);
		}
		catch(ValidationException ex)
		{
			log.warn("Failed to unmarshall database config", ex);
			throw new UndeclaredThrowableException(ex);
		}
		catch(SQLException ex)
		{
			log.warn("Failed to get database connection", ex);
			throw new UndeclaredThrowableException(ex);
		}
		catch(ClassNotFoundException ex)
		{
			log.warn("Failed to get database connection", ex);
			throw new UndeclaredThrowableException(ex);
		}

		// read the categories.xml to get all the categories
		createCategoriesMap();

		if (m_categories == null || m_categories.isEmpty())
		{
			throw new RTCException("No categories found in categories.xml");
		}

		if(log.isDebugEnabled())
			log.debug("Number of categories read: " + m_categories.size());

		// create data holder
		m_map = new RTCHashMap(30000);

		// create the service tbale map
		m_serviceTableMap = new HashMap();
		PreparedStatement stmt = dbConn.prepareStatement(RTCConstants.SQL_DB_SVC_TABLE_READ);
		ResultSet rset = stmt.executeQuery();
		while(rset.next())
		{
			long svcid     = rset.getLong(1);
			String svcname = rset.getString(2);
			
			m_serviceTableMap.put(svcname, new Long(svcid));
		}

		rset.close();
		stmt.close();

		// Populate the nodes initially from the database
		populateNodesFromDB(dbConn);

		// close the database connection
		try
		{
			if(dbConn != null)
				dbConn.close();
		}
		catch(SQLException e)
		{
			ThreadCategory.getInstance(getClass()).warn("Exception closing JDBC connection", e);
		}
	}

