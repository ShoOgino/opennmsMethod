    /**
     * Return the downtime (difference between the regained and lost times) in
     * the last rolling window
     * 
     * @return the downtime (difference between the regained and lost times) in
     *         the last rolling window
     */
    public long getDownTime(long curTime, long rollingWindow) {
        long downTime = 0;

        // make sure the lost time is not later than current time!
        if (curTime < m_svcLostTime)
            return downTime;

        // the start of the rolling window
        long startTime = curTime - rollingWindow;

        if (m_svcRegainedTime == -1) {
            // node yet to regain service
            if (m_svcLostTime < startTime) {
                // if svclosttime is less than the rolling window
                // means its been down throughout
                downTime = rollingWindow;
            } else {
                downTime = curTime - m_svcLostTime;
            }
        } else {
            // node has regained service
            if (m_svcLostTime >= startTime) {
                downTime = m_svcRegainedTime - m_svcLostTime;
            } else if (m_svcRegainedTime > startTime) {
                downTime = m_svcRegainedTime - startTime;
            }
        }

        return downTime;
    }

