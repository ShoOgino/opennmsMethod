    /**
     * Add a datapoint to a round robin database.
     * 
     * @param owner
     *            the owner of the file. This is used in log messages
     * @param repositoryDir
     *            the directory the file resides in
     * @param dsName
     *            the datasource name for file. (Also becames the basename of
     *            the file)
     * @param val
     *            the value to be stored. This should be a string representation
     *            of a number
     * @throws RrdException
     */
    public static void updateRRD(String owner, String repositoryDir, String dsName, String val) throws RrdException {
        Category log = ThreadCategory.getInstance(RrdUtils.class);

        // Issue the RRD update
        String rrdFile = repositoryDir + File.separator + dsName + ".rrd";
        long time = (System.currentTimeMillis() + 500L) / 1000L;

        String updateVal = Long.toString(time) + ":" + val;

        if (log.isDebugEnabled())
            log.debug("updateRRD:updating RRD file: " + rrdFile + " with value: " + updateVal);

        Object rrd = null;
        try {
            rrd = getStrategy().openFile(rrdFile);
            getStrategy().updateFile(rrd, updateVal);
        } catch (Exception e) {
            log.error("Error updating rrdFile " + rrdFile + " with value: " + updateVal, e);
            throw new org.opennms.netmgt.rrd.RrdException("Error updating rrdFile " + rrdFile + " with value: " + updateVal, e);
        } finally {
            try {
                if (rrd != null)
                    getStrategy().closeFile(rrd);
            } catch (Exception e) {
                throw new org.opennms.netmgt.rrd.RrdException("Exception closing rrdDb", e);
            }
        }

        if (log.isDebugEnabled())
            log.debug("updateRRD: RRD update command completed.");
    }

