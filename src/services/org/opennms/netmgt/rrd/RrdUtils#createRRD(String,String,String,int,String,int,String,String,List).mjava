    /**
     * Create a round robin database file. See the man page for rrdtool create
     * for definitions of each of these.
     * 
     * @param creator -
     *            A string representing who is creating this file for use in log
     *            msgs
     * @param directory -
     *            The directory to create the file in
     * @param dsName -
     *            The datasource name for use in the round robin database
     * @param step -
     *            the step for the database
     * @param dsType -
     *            the type for the datasource
     * @param dsHeartbeat -
     *            the heartbeat for the datasouce
     * @param dsMin -
     *            the minimum allowable value for the datasource
     * @param dsMax -
     *            the maximum allowable value for the datasouce
     * @param rraList -
     *            a List of the round robin archives to create in the database
     * @return true if the file was actually created, false otherwise
     */
    public static boolean createRRD(String creator, String directory, String dsName, int step, String dsType, int dsHeartbeat, String dsMin, String dsMax, List rraList) throws RrdException {
        String fileName = dsName + getExtension();

        if (log().isDebugEnabled())
            log().debug("createRRD: rrd path and file name to create: " + directory + File.separator + fileName);

        String completePath = directory + File.separator + fileName;

        // Create directories if necessary
        //

        File f = new File(completePath);
        if (f.exists()) {
            return false;
        }

        File dir = new File(directory);
        if (!dir.isDirectory()) {
            if (!dir.mkdirs()) {
                throw new org.opennms.netmgt.rrd.RrdException("Unable to create RRD repository directory: " + directory);
            }
        }

        try {
            Object def = getStrategy().createDefinition(creator, directory, dsName, step, Collections.singletonList(new RrdDataSource(dsName, dsType, dsHeartbeat, dsMin, dsMax)), rraList);
            getStrategy().createFile(def);
            return true;
        } catch (Exception e) {
            log().debug("An error occured creating rrdfile " + completePath, e);
            throw new org.opennms.netmgt.rrd.RrdException("An error occured creating rrdfile " + completePath, e);
        }
    }

