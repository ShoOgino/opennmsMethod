    /**
     * <p>
     * This method is used to start the discovery process. When called the
     * discovery configuration file is parsed and the internal state for
     * discovery is setup. If the discovery process has already started then an
     * exception is generated.
     * </p>
     * 
     * <p>
     * The discovery process may be restarted if, and only if, is has first been
     * stopped.
     * </p>
     * 
     * @throws java.lang.IllegalStateException
     *             Thrown if the service is already running.
     * @throws java.lang.reflect.UndeclaredThrowableException
     *             Thrown if an error occurs that is not recoverable.
     * 
     */
    public synchronized void start() {
        ThreadCategory.setPrefix(LOG4J_CATEGORY);
        Category log = ThreadCategory.getInstance();

	if (m_manager == null) {
	    log.error("The discovery service has not been initialized and start() was called");
            throw new IllegalStateException("The discovery service has not been successfully initialized");
	}

        setStatus(STARTING);

        try {
            m_eventWriter.start();
        } catch (Exception ex) {
            log.error("Failed to start event writer", ex);
            throw new UndeclaredThrowableException(ex);
        }

        try {
            m_manager.start();
        } catch (Exception ex) {
            try {
                m_eventWriter.stop();
            } catch (Exception exx) {
            }

            log.error("Failed to start ping manager", ex);
            throw new UndeclaredThrowableException(ex);
        }

        setStatus(RUNNING);
    }

