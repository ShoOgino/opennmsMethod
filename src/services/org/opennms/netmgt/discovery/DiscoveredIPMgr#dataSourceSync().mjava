	/** 
	 * Clears and synchronizes the internal known IP address
	 * cache with the current information contained in the
	 * database. To synchronize the cache the method opens a new
	 * connection to the database, loads the address, and then
	 * closes it's connection.
	 *
	 * @throws java.sql.SQLException Thrown if the connection cannot be
	 * 	created or a database error occurs.
	 *
	 */
	static synchronized void dataSourceSync()
		throws SQLException
	{
		java.sql.Connection c = null;
		try
		{
			// Get database connection
			c = DatabaseConnectionFactory.getInstance().getConnection();
			
			// Run with it
			//
			//c.setReadOnly(true);

			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery(IP_LOAD_SQL);

			if(rs != null)
			{
				m_discovered.clear();
				while(rs.next())
				{
					String ipstr = rs.getString(1);
					try
					{
						m_discovered.add(InetAddress.getByName(ipstr));
					}
					catch(UnknownHostException uhE)
					{
						// log?
					}
				}
				rs.close();
			}

			s.close();
		}
		finally
		{
			try
			{
				if(c != null)
					c.close();
			}
			catch(SQLException sqlE) { }
		}
	}

