    /**
     * <P>
     * Creates a new IPAddressRange object that can be used to encapsulate a
     * contiguous range of IP Addresses. Once created the object can be used to
     * get either an Iterator or Enumeration object to cycle through the list of
     * address encapsulated by this object.
     * </P>
     * 
     * <P>
     * It is important to note that if the address for start is greater than
     * end, the values will be swapped so that the iteration is always from the
     * lowest address to the highest address as defined by a 32-bit unsigned
     * quantity.
     * </P>
     * 
     * @param start
     *            The starting address.
     * @param end
     *            The ending address.
     * 
     */
    IPAddressRange(InetAddress start, InetAddress end) {
        m_begin = IPSorter.convertToLong(start.getAddress());
        m_end = IPSorter.convertToLong(end.getAddress());
    }

