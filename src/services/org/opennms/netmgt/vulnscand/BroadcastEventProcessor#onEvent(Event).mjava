	/**
	 * This method is invoked by the JMS topic session
	 * when a new event is available for processing. Currently
	 * only text based messages are processed by this callback.
	 * Each message is examined for its Universal Event Identifier
	 * and the appropriate action is taking based on each UEI.
	 *
	 * @param event	The event message.
	 *
	 */
	public void onEvent(Event event)
	{
		Category log = ThreadCategory.getInstance(getClass());

		String eventUei = event.getUei();
		if (eventUei == null)
			return;

		if (log.isDebugEnabled())
			log.debug("Received event: " + eventUei);

		if(eventUei.equals(EventConstants.SPECIFIC_VULN_SCAN_EVENT_UEI))
		{

// ADD RESCAN CAPABILITIES HERE
// NEED TO GET THE SCAN LEVEL,
// LAST SCAN DATE FROM THE DATABASE,
// AND THE RESCAN INTERVAL

/*
			// new poll event
			try
			{
				if (log.isDebugEnabled())
					log.debug("onMessage: Adding interface to suspectInterface Q: " + event.getInterface());
				m_suspectQ.add(new NessusScan(new NessusScanConfiguration(InetAddress.getByName(event.getInterface()), int newScanLevel, Date newLastScan, long newInterval)));
			}
			catch (java.net.UnknownHostException ex)
			{
				log.error("onMessage: Could not schedule invalid interface: \"" + event.getInterface() + "\"", ex);
			}
			catch(Exception ex)
			{
				log.error("onMessage: Failed to add interface \"" + event.getInterface() + "\" to suspect queue", ex);
			}
*/
		}
		else
		{
			log.error("Cannot process event with UEI: " + event.getUei());
		}
	} // end onEvent()

