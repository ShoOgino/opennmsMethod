    /**
     * Adds a column to the statement. The column is assumed to be in the passed
     * in table. This means insuring that this column is valid, its table is
     * listed in the m_tables list as well as any intermediate tables necessary
     * to join this table to the primary table. It returns the tablename.colname
     * used to reference this column in the SQL.
     * 
     * @param t
     *            A Table that must contain the column colName
     * @param colName
     *            the name of the column to add
     * @return the 'tablename.column' expression used to reference the column in
     *         SQL.
     * 
     * @param t
     * @param colName
     * @return a string represtenting the part of the where portion of the
     *         clause for this column
     */
    private String addColumnToStatement(Table t, String colName) {
        String[] joinTableNames = m_schemaFactory.getJoinTablesForTable(t);
        for(int i = 0; i < joinTableNames.length; i++) {
            Table joinTable = m_schemaFactory.getTableByName(joinTableNames[i]);
            if (joinTable == null) throw new FilterParseException("Unable to locate visable table for "+joinTableNames[i]+" referrenced in join for table "+t.getName());
            if (!m_tables.contains(joinTable)) {
                if (m_tables.size() == 0)
                    m_from.append(joinTable.getName());
                else
                    m_from.append(", ").append(joinTable.getName());
                
                m_tables.add(joinTable);
            }
        }
        return t.getName()+"."+colName;
    }

