	/**
	 * This method is used to build the join condtions to be 
         * added to the where clause of a complete select statement.
         * A join condition will only be built between two tables if
         * the table being looked at has a &lt;join&gt; reference indicating
         * a join condition between itself and the driver table.
	 * (NOTE: in the case of the virtual columns in the ifServices
	 * table the join condiontion will be included in the substitution.
	 * The service table will not be joined to the driver table by
	 * this method).
	 *
	 * @return The completed join clause for the WHERE clause
	 */
	private String constructJoin()
	{
		//first we need to find the driver table
		//
		Table primary = getPrimaryTable();

		StringBuffer joinBuf = new StringBuffer();
		Iterator i = m_tables.iterator();
		while(i.hasNext())
		{
			Table t = (Table)i.next();
			if(!t.equals(primary))
			{
				Enumeration ejoin = t.enumerateJoin();
				while(ejoin.hasMoreElements())
				{
					Join j = (Join)ejoin.nextElement();
					if(j.getTable().equals(primary.getName()))
					{
						joinBuf.append(" AND ");
						joinBuf.append(t.getName()).append('.').append(j.getColumn());
						joinBuf.append(" = ");
						joinBuf.append(j.getTable()).append('.').append(j.getTableColumn());
					}
				}
			}
		}
		return joinBuf.toString();
	}

