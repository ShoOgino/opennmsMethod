    /**
     * Invokes a poll of the remote interface.
     * 
     * If the interface changes status then node outage processing will be
     * invoked and the status of the entire node will be evaluated.
     */
    public synchronized PollStatus poll(PollableService pSvc) {
        Category log = ThreadCategory.getInstance(getClass());

        if (log.isDebugEnabled())
            log.debug("poll: polling nodeid " + m_nodeId + " status=" + getStatus());

        setStatusChanged(false);

        // Retrieve PollableInterface object from the NIF
        PollableInterface pInterface = pSvc.getInterface();
        
        // Poll the service via the PollableInterface object
        PollStatus ifStatus = pInterface.poll(pSvc);
        
        // If interface status changed and is different from the node status
        if (ifStatus != getStatus() && pInterface.statusChanged()) {
        
            log.debug("poll: requested interface is "+ifStatus+"; testing remaining interfaces");
        
            // update the nodes status
            PollStatus newStatus = pollRemainingInterfaces(pInterface);
            updateStatus(newStatus);
        
        }

        // Call generateEvents() which will inspect the current status
        // of the N/I/S tree and generate any events necessary to keep
        // RTC and OutageManager in sync.
        generateEvents(new Date());

        if (log.isDebugEnabled())
            log.debug("poll: poll of nodeid " + m_nodeId + " completed, status=" + getStatus());

        return getStatus();
    }

