    private void deleteNode(PollerNode pNode) {
        Category log = ThreadCategory.getInstance(getClass());
        int nodeId = pNode.getNodeId();
        // Remove the node from the Poller's node map
        getPoller().removeNode(nodeId);

        // Iterate over the node's interfaces and delete
        // all services on each interface.
        Iterator iter = pNode.getInterfaces().iterator();
        while (iter.hasNext()) {
            PollerInterface pIf = (PollerInterface) iter.next();

            // Iterate over the interface's services and mark
            // them for deletion.
            Iterator svc_iter = pIf.getServices().iterator();
            while (svc_iter.hasNext()) {
                PollerService pSvc = (PollerService) svc_iter.next();
                pSvc.markAsDeleted();

                // Now remove the service from the pollable services
                // list
                getPollableServices().remove(pSvc);
            }

            // Delete all entries from the interface's internal service
            // map
            pIf.deleteAllServices();
        }

        // Delete all entries from the node's internal interface map
        pNode.deleteAllInterfaces();

        // Mark the node as deleted to prevent any further node
        // outage processing on this node
        pNode.markAsDeleted();

        if (log.isDebugEnabled())
            log.debug("nodeDeletedHandler: deletion of nodeid " + pNode.getNodeId() + " completed.");
    }

