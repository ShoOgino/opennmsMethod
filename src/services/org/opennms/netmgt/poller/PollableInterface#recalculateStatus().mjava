	/**
	 * Responsible for recalculating the UP/DOWN status of the interface.
	 * 
	 */
	public synchronized void recalculateStatus()
	{
		Category log = ThreadCategory.getInstance(getClass());
		
		if (log.isDebugEnabled())
			log.debug("recaclulateStatus: interface=" + m_address.getHostAddress());
		
		int status = Pollable.STATUS_UNKNOWN;
		
		// Get configured critical service
		String criticalSvcName = PollerConfigFactory.getInstance().getCriticalService();
		
		// If critical service defined and supported by this 
		// interface then simply need to check the critical 
		// service status...
		//
		if (criticalSvcName != null && this.supportsService(criticalSvcName))
		{
			PollableService criticalSvc = getService(criticalSvcName);
			if (criticalSvc.getStatus() == Pollable.STATUS_UP)
				status = Pollable.STATUS_UP;
			else
				status = Pollable.STATUS_DOWN;
		}
		else 
		{
			// No critical service defined so iterate over the 
			// interface's services in order to determine interface
			// status
			boolean allServicesDown = true;
			Iterator iter = m_services.values().iterator();
			while (iter.hasNext())
			{
				PollableService pSvc = (PollableService)iter.next();
				if ( pSvc.getStatus() == Pollable.STATUS_UP )
				{
					if (log.isDebugEnabled())
						log.debug("recalculateStatus: svc=" + pSvc.getServiceName() + " status=UP, atleast one svc is UP!");
					allServicesDown = false;
					break;
				}
			}
			
			if (allServicesDown)
				status = Pollable.STATUS_DOWN;
			else
				status = Pollable.STATUS_UP;
		}
		
		m_status = status;
		
		if (log.isDebugEnabled())
			log.debug("recalculateStatus: completed, interface=" + m_address.getHostAddress() + " status=" + Pollable.statusType[m_status]);
	}

