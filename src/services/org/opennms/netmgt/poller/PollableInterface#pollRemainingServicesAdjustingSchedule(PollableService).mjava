    private void pollRemainingServicesAdjustingSchedule(PollableService pSvc) {
        Iterator iter = m_services.values().iterator();
        while (iter.hasNext()) {
            PollableService svc = (PollableService) iter.next();

            // Skip critical service since already polled
            if (svc == pSvc)
                continue;

            // Poll the service
            PollStatus tmpStatus = svc.poll();

            // If status of non-critical service changes to UP
            // then create PollableServiceProxy object and
            // reschedule the proxy service at the
            // appropriate interval
            //
            // PollableServiceProxy is a lightweight object which
            // encapsulates the PollableService object and allows us
            // to reschedule the service to be polled at the
            // appropriate
            // interval until the scheduler schedules the
            // PollableService
            // object and it is updated with an interval based on
            // its new status.
            if (tmpStatus == PollStatus.STATUS_UP) {
                svc.adjustSchedule();
            }
        }
    }

