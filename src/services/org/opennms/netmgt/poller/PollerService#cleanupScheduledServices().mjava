    /**
     * This method is called to remove a pollable service from the service
     * updates map. It is necessary to not only remove the passed
     * PollableService object but also to mark any other pollable services which
     * share the same nodeid, interface address and service name for deletion.
     * The reason for this is that the interface/service pair may have applied
     * to multiple packages resulting in the same interface/service pair being
     * polled multiple times.
     */
    void cleanupScheduledServices() {
        Category log = ThreadCategory.getInstance(getClass());

        // Go ahead and remove 'this' service from the list.
        m_pollableServices.remove(this);
        if (log.isDebugEnabled())
            log.debug("cleanupScheduledServices: deleted " + this + ":" + getPackageName());

        // Next interate over the pollable service list and mark any pollable
        // service
        // objects which refer to the same node/interface/service pairing
        // for deletion.
        synchronized (m_pollableServices) {
            Iterator iter = m_pollableServices.iterator();
            if (log.isDebugEnabled())
                log.debug("cleanupScheduledServices: iterating over serviceUpdatesMap(numEntries=" + m_pollableServices.size() + ") looking for " + this);

            while (iter.hasNext()) {
                PollerService temp = (PollerService) iter.next();

                if (log.isDebugEnabled())
                    log.debug("cleanupScheduledServices: comparing " + this);

                // If the two objects are equal but not identical (in other
                // words they refer to two different objects with the same
                // nodeid, ipAddress, and service name) then need to set the
                // deletion flag so that the next time the interface
                // is pulled from the queue for execution it will be deleted.
                if (this.equals(temp)) {
                    // Now set the deleted flag
                    temp.markAsDeleted();
                    if (log.isDebugEnabled())
                        log.debug("cleanupScheduledServices: marking " + this + ":" + temp.getPackageName() + " as deleted.");
                }
            }
        }
    }

