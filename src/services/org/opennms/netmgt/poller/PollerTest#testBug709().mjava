    public void testBug709() {

        m_pollerConfig.setNodeOutageProcessingEnabled(true);

        MockNode node = m_network.getNode(2);
        MockService icmpService = m_network.getService(2, "192.168.1.3", "ICMP");
        MockService httpService = m_network.getService(2, "192.168.1.3", "HTTP");

        // start the poller
        startDaemons();

        //
        // Bring Down the HTTP service and expect nodeLostService Event
        //

        // expect node lost service for HTTP
        m_anticipator.reset();
        anticipateSvcStatusChanged(httpService, m_anticipator, ServiceMonitor.SERVICE_UNAVAILABLE);

        // bring down the HTTP service
        httpService.bringDown();

        // make sure the down events are received
        assertEquals(0, m_anticipator.waitForAnticipated(10000).size());
        assertEquals(0, m_anticipator.unanticipatedEvents().size());

        //
        // Bring Down the ICMP (on the only if on the node) now expect nodeDown
        // only.
        //

        // expect node down event
        m_anticipator.reset();
        anticipateNodeStatusChanged(node, m_anticipator, ServiceMonitor.SERVICE_UNAVAILABLE);

        // bring down the ICMP service
        icmpService.bringDown();

        // make sure the down events are received
        assertEquals(0, m_anticipator.waitForAnticipated(10000).size());
        assertEquals(0, m_anticipator.unanticipatedEvents().size());

        //
        // Bring up both the node and the httpService at the same time. Expect
        // both a nodeUp and a nodeRegainedService
        //

        // expect node up event and node regained service
        m_anticipator.reset();
        anticipateNodeStatusChanged(node, m_anticipator, ServiceMonitor.SERVICE_AVAILABLE);

        // FIXME: Bug 709: The following event never occurs. We sent a
        // nodeLostService earlier we should send a nodeGainedService
        // anticipateSvcStatusChanged(httpService, anticipator,
        // ServiceMonitor.SERVICE_AVAILABLE);

        // bring up all the services on the node
        node.bringUp();

        // make sure the down events are received
        assertEquals(0, m_anticipator.waitForAnticipated(10000).size());
        assertEquals(0, m_anticipator.unanticipatedEvents().size());

    }

