    public boolean meetsCriteria(Variable result, String operator, String operand) {

        Boolean retVal = null;
        
        retVal = isCriteriaNull(result, operator, operand);
        
        if (retVal == null) {
            String value = result.toString();
            retVal = checkStringCriteria(operator, operand, value);
            
            if (retVal == null) {
                
                BigInteger val = null;
                
                int vbType = result.getSyntax();

                switch (vbType) {
                case BER.INTEGER :
                    val = BigInteger.valueOf(((Integer32) result).getValue());
                    break;
                case BER.COUNTER64:
                    val = BigInteger.valueOf(((Counter64) result).getValue());
                    break;
                case BER.GAUGE32:
                case BER.TIMETICKS:
                case BER.COUNTER32:
                    val = BigInteger.valueOf(((UnsignedInteger32) result).getValue());
                    break;
                default:
                    val = new BigInteger(result.toString());
                break;
                }
                
                BigInteger intOperand = new BigInteger(operand);
                if (LESS_THAN.equals(operator)) {
                    return val.compareTo(intOperand) < 0;
                } else if (LESS_THAN_EQUALS.equals(operator)) {
                    return val.compareTo(intOperand) <= 0;
                } else if (GREATER_THAN.equals(operator)) {
                    return val.compareTo(intOperand) > 0;
                } else if (GREATER_THAN_EQUALS.equals(operator)) {
                    return val.compareTo(intOperand) >= 0;
                } else {
                    throw new IllegalArgumentException("operator " + operator + " is unknown");
                }
            }
        } else if (retVal.booleanValue()) {
            return true;
        }
        
        return retVal.booleanValue();
    }

