    private String buildCommand(NetworkInterface iface, Map parameters) {
        
        /*
         * Sorting this map just in case the poller gets changed and the Map
         * is no longer a TreeMap.
         */
        Map sortedParameters = new TreeMap(parameters);
        // Following a successful poll 'currentPort' will contain the port on
        // the remote host that was successfully queried
        //
        String cmd = "GET " + getUrl(parameters) + " HTTP/1.1\r\n";
        cmd += "Connection: CLOSE \r\n";

        if (getVirtualHost(parameters) != null) {
            cmd = cmd + "Host: " + getVirtualHost(parameters) +"\r\n";
        } else {
            cmd += "Host: " + getIpv4Addr(iface).getHostName() +"\r\n";
        }
        
        cmd += "User-Agent: "+getUserAgent(parameters) +"\r\n";
        
        if (getBasicAuthentication(parameters) != null) {
            cmd += "Authorization: Basic "+getBasicAuthentication(parameters) +"\r\n";
        }

        for (Iterator it = sortedParameters.keySet().iterator(); it.hasNext();) {
            String parmKey = (String) it.next();
            if (parmKey.matches("header[0-9]+$")) {
                cmd += getHeader(parameters, parmKey)+"\r\n";
            }
        }
        
        cmd = cmd + "\r\n";
        log().debug("checkStatus: cmd:\n" + cmd);
        return cmd;
    }

