    /**
     * This is the main method of the class. An instance is normally enqueued on
     * the scheduler which checks its <code>isReady</code> method to determine
     * execution. If the instance is ready for execution then it is started with
     * it's own thread context to execute the query. The last step in the method
     * before it exits is to reschedule the interface.
     * 
     */
    public void run() {
        Category log = ThreadCategory.getInstance(getClass());

        try {
            this.doRun(true);
        } catch (LockUnavailableException e) {
            // failed to acquire lock, just reschedule on 10 second queue
            if (log.isDebugEnabled())
                log.debug("Lock unavailable, rescheduling on 10 sec queue, reason: " + e.getMessage());
            this.reschedule(10000);
        } catch (InterruptedException e) {
            // The thread was interrupted; reschedule on 10 second queue
            if (log.isDebugEnabled())
                log.debug(e);
            this.reschedule(10000);
        }
    }

