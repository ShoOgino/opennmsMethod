    /**
     * This method determines which check method to call to create a request,
     * send to the server and process the results. It merely determines the
     * method to be called based on the type param.
     * 
     * @param type
     *            the short ID of the type of check to be processed.
     * @param param
     *            the object containing the parameters for performing checks
     *            on the respones from the remote service.
     * @return the NsclientPacket as processed by the check command method
     *         that is called.
     * @throws NsclientException
     *             this method rethrows NsclientExceptions caused by the check
     *             commands.
     */
    public NsclientPacket processCheckCommand(short type,
            NsclientCheckParams param) throws NsclientException {
        try {
            switch (type) {
            case CHECK_CLIENTVERSION:
                return checkClientVersion(param);
            case CHECK_CPULOAD:
                return checkCpuLoad(param);
            case CHECK_UPTIME:
                return checkUptime(param);
            case CHECK_SERVICESTATE:
                return checkServiceState(param);
            case CHECK_USEDDISKSPACE:
                return checkUsedDiskSpace(param);
            case CHECK_PROCSTATE:
                return checkProcState(param);
            case CHECK_MEMUSE:
                return checkMemoryUsage(param);
            case CHECK_COUNTER:
                return checkPerfCounter(param);
            case CHECK_FILEAGE:
                return checkFileAge(param);
            }
            return null;
        } catch (NsclientException e) {
            throw e;
        }
    }

