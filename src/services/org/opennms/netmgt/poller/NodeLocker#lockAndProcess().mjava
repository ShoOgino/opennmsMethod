    public void lockAndProcess() {
        // acquire lock to 'PollableNode'

        Category log = ThreadCategory.getInstance(getClass());
        boolean ownLock = false;
        try {
            // Attempt to obtain node lock...wait as long as it takes.
            //
            if (log.isDebugEnabled())
                log.debug(m_caller + ": Trying to get node lock for nodeId " + m_node.getNodeId());

            ownLock = m_node.getNodeLock(NodeLocker.WAIT_FOREVER);
            if (ownLock) {
                if (log.isDebugEnabled())
                    log.debug(m_caller + ": obtained node lock for nodeid: " + m_node.getNodeId());

                process();
            } else {
                // failed to acquire lock
                log.error(m_caller + ": failed to obtain lock on nodeId " + m_node.getNodeId());
                handleLockFailed();
            }
        } catch (InterruptedException iE) {
            // failed to acquire lock
            log.error(m_caller + ": thread interrupted...failed to obtain lock on nodeId " + m_node.getNodeId());
            handleException(iE);
        } catch (Throwable t) {
            log.error(m_caller+": unexpected exception.", t);
            handleException(t);
        } finally {
        
            if (ownLock) {
                if (log.isDebugEnabled())
                    log.debug(m_caller + ": releasing node lock for nodeid: " + m_node.getNodeId());
                try {
                    m_node.releaseNodeLock();
                } catch (InterruptedException iE) {
                    log.error(m_caller + ": thread interrupted...failed to release lock on nodeId " + m_node.getNodeId());
                    handleException(iE);
                }
            }
        }
    }

