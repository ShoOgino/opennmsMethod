    private int scheduleMatchingServices(String criteria) throws Exception {
        final Category log = ThreadCategory.getInstance();
        String sql = "SELECT ifServices.nodeId AS nodeId, ifServices.ipAddr AS ipAddr, " +
                "ifServices.serviceId AS serviceId, service.serviceName AS serviceName, " +
                "outages.svcLostEventId AS svcLostEventId, events.eventUei AS svcLostEventUei, " +
                "outages.ifLostService AS ifLostService, outages.ifRegainedService AS ifRegainedService " +
        "FROM ifServices " +
        "JOIN service ON ifServices.serviceId = service.serviceId " +
        "LEFT OUTER JOIN outages ON " +
        "ifServices.nodeId = outages.nodeId AND " +
        "ifServices.ipAddr = outages.ipAddr AND " +
        "ifServices.serviceId = outages.serviceId AND " +
        "ifRegainedService IS NULL " +
        "LEFT OUTER JOIN events ON outages.svcLostEventId = events.eventid " +
        "WHERE ifServices.status = 'A'" +
        (criteria == null ? "" : " AND "+criteria);
       
        
        
        Querier querier = new Querier(m_dbConnectionFactory, sql) {
            protected void processRow(ResultSet rs) throws SQLException {
                scheduleService(rs.getInt("nodeId"), rs.getString("ipAddr"), rs.getString("serviceName"), 
                                (Number)rs.getObject("svcLostEventId"), rs.getTimestamp("ifLostService"), 
                                rs.getString("svcLostEventUei"));
            }
        };
        querier.execute();
        
        m_network.recalculateStatus();
        m_network.resetStatusChanged();
        
        
        return querier.getCount();

    }

