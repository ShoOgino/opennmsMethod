    /**
     * <p>
     * This method sends an xmlrpc request to an external xmlrpc server and gets
     * the response from the xmlrpc server as a String.
     * </p>
     * 
     * @param command
     *            The server command to process the request.
     * @param params
     *            a list of parameters need for the external server command to
     *            process the request.
     */
    private boolean sendXmlrpcRequest(String command, Vector params) {
        Category log = ThreadCategory.getInstance(getClass());

        if (m_xmlrpcClient == null)
            return false;

        boolean success = false;

        for (int i = 0; i < m_retries; i++) {
            try {
                Object reply = m_xmlrpcClient.execute(command, params);
                if (log.isDebugEnabled())
                    log.debug("Response from XMLRPC server: " + m_xmlrpcClient.getURL().toString() + "\n\t" + reply.toString());
                success = true;
            } catch (XmlRpcException e) {
                // log.error("Failed to send message to XMLRPC server: ", e);
            } catch (IOException e) {
                // log.error("XmlrpcNotifier: Failed to send message to XMLRPC
                // server: ", e);
            }
            if (success)
                break;
        }

        if (!success)
            log.error("Can not communicate with XMLRPC server: " + m_xmlrpcClient.getURL().toString());

        return success;
    }

