	/**
	 * Reads off of the event queue and depends on the uei of the event 
	 * of read, process the event to send a notification to the external
         * XMLRPC server via XMLRPC protocol.
	 * 
	 */
	public void run()
	{
		Category log = ThreadCategory.getInstance(getClass());

		synchronized(this)
		{
			m_status = RUNNING;
		}

		while(statusOK())
		{
			Object obj = null;
			try
			{
				obj = m_eventQ.remove(1000);
			}
			catch(InterruptedException iE)
			{
				log.debug("Caught interrupted exception");
				log.debug(iE.getLocalizedMessage(), iE);

				obj = null;

				m_status = STOP_PENDING;
			}
			catch(FifoQueueException qE)
			{
				log.debug("Caught fifo queue exception");
				log.debug(qE.getLocalizedMessage(), qE);

				obj = null;

				m_status = STOP_PENDING;
			}

			if(obj != null && statusOK())
			{
				try
				{
					processEvent((Event)obj);
				}
				catch(Throwable t)
				{
					log.error("Unexpected error processing event", t);
				}
			}
		}
	} 

