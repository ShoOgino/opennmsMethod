    public void create() {
        update("shutdown");
        update("create table node (" +
                   "nodeID integer, " +
                   "dpName      varchar(12)," +
                   "nodeCreateTime  timestamp not null," +
                   "nodeParentID    integer," +
                   "nodeType    char(1)," +
                   "nodeSysOID  varchar(256)," +
                   "nodeSysName varchar(256)," +
                   "nodeSysDescription  varchar(256)," +
                   "nodeSysLocation varchar(256)," +
                   "nodeSysContact  varchar(256)," +
                   "nodeLabel   varchar(256)," +
                   "nodeLabelSource char(1)," +
                   "nodeNetBIOSName varchar(16)," +
                   "nodeDomainName  varchar(16)," +
                   "operatingSystem varchar(64)," +
                   "lastCapsdPoll   timestamp," +
                   //"constraint fk_dpName foreign key (dpName) references distPoller," +
                   "constraint pk_nodeID primary key (nodeID)" +
        ")");
        
        update("create table ipInterface (" +
                   "nodeID integer, " +
                   "ipAddr varchar(16) not null, " +
                   "ifIndex         integer," +
                   "ipHostname      varchar(256)," +
                   "ipStatus        integer," +
                   "ipLastCapsdPoll     timestamp," +
                   "isSnmpPrimary           char(1)," +
                   "isManaged char(1), " +
                   "constraint fk_nodeID1 foreign key (nodeID) references node ON DELETE CASCADE" +
        ");");
        
        update("create table service (" +
                   "serviceID integer, " +
                   "serviceName varchar(32) not null, " +
                   "constraint pk_serviceID primary key (serviceID)" +
        ")");
        
        update("create table ifServices (" +
                   "nodeID          integer, " +
                   "ipAddr          varchar(16) not null," +
                   "ifIndex         integer," +
                   "serviceID       integer," +
                   "lastGood        timestamp," +
                   "lastFail        timestamp," +
                   "qualifier       char(16)," +
                   "status              char(1)," +
                   "source          char(1)," +
                   "notify                  char(1), " +
                   "constraint fk_nodeID3 foreign key (nodeID) references node ON DELETE CASCADE," +
                   "constraint fk_serviceID1 foreign key (serviceID) references service ON DELETE CASCADE" +
        ");");
        
        update("create table events (" +
                   "eventID         integer," +
                   "eventUei        varchar(256) not null," +
                   "nodeID          integer," +
                   "eventTime       timestamp not null," +
                   "eventHost       varchar(256)," +
                   "eventSource     varchar(128) not null," +
                   "ipAddr          varchar(16)," +
                   "eventDpName     varchar(12) not null," +
                   "eventSnmphost       varchar(256)," +
                   "serviceID       integer," +
                   "eventSnmp       varchar(256)," +
                   "eventParms      longvarchar," +
                   "eventCreateTime     timestamp not null," +
                   "eventDescr      varchar(4000)," +
                   "eventLoggroup       varchar(32)," +
                   "eventLogmsg     varchar(256)," +
                   "eventSeverity       integer not null," +
                   "eventPathOutage     varchar(1024)," +
                   "eventCorrelation    varchar(1024)," +
                   "eventSuppressedCount    integer," +
                   "eventOperInstruct   varchar(1024)," +
                   "eventAutoAction     varchar(256)," +
                   "eventOperAction     varchar(256)," +
                   "eventOperActionMenuText varchar(64)," +
                   "eventNotification   varchar(128)," +
                   "eventTticket        varchar(128)," +
                   "eventTticketState   integer," +
                   "eventForward        varchar(256)," +
                   "eventMouseOverText  varchar(64)," +
                   "eventLog        char(1) not null," +
                   "eventDisplay        char(1) not null," +
                   "eventAckUser        varchar(256)," +
                   "eventAckTime        timestamp," +
                   "constraint pk_eventID primary key (eventID)," +
                   "constraint fk_nodeID6 foreign key (nodeID) references node ON DELETE CASCADE" +
        ")");
        
        update("create table outages (" +
                   "outageID        integer," +
                   "svcLostEventID      integer," +
                   "svcRegainedEventID  integer," +
                   "nodeID          integer," +
                   "ipAddr          varchar(16) not null," +
                   "serviceID       integer," +
                   "ifLostService       timestamp not null," +
                   "ifRegainedService   timestamp," +
                   "constraint pk_outageID primary key (outageID)," +
                   "constraint fk_eventID1 foreign key (svcLostEventID) references events (eventID) ON DELETE CASCADE," +
                   "constraint fk_eventID2 foreign key (svcRegainedEventID) references events (eventID) ON DELETE CASCADE," +
                   "constraint fk_nodeID4 foreign key (nodeID) references node (nodeID) ON DELETE CASCADE," +
                   "constraint fk_serviceID2 foreign key (serviceID) references service (serviceID) ON DELETE CASCADE" +
        ")");
        
        update("create sequence outageNxtId start with 1");
        update("create sequence eventNxtId start with 1");
        update("create table seqQueryTable (row integer)");
        update("insert into seqQueryTable (row) values (0)");
        
    }

