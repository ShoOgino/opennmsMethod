    /**
     * Helper method that takes IP address from the force rescan event,
     * retrieves the nodeid (JDBC) and adds it to the rescan schedule for immediate
     * processing when the next thread is available.
     * 
     * @param event
     */
    private void handleForceRescan(Event event) throws InsufficientInformationException {
        // If the event has a node identifier use it otherwise
        // will need to use the interface to lookup the node id
        // from the database
        int nodeid = -1;

        if (event.hasNodeid())
            nodeid = (int) event.getNodeid();
        else {
            // Extract interface from the event and use it to
            // lookup the node identifier associated with the
            // interface from the database.
            //

            // ensure the ipaddr is set
            EventUtils.checkInterface(event);

            // Get database connection and retrieve nodeid
            Connection dbc = null;
            PreparedStatement stmt = null;
            ResultSet rs = null;
            try {
                dbc = DatabaseConnectionFactory.getInstance().getConnection();

                // Retrieve node id
                stmt = dbc.prepareStatement(SQL_RETRIEVE_NODEID);
                stmt.setString(1, event.getInterface());
                rs = stmt.executeQuery();
                if (rs.next()) {
                    nodeid = rs.getInt(1);
                }
            } catch (SQLException sqlE) {
                log().error("handleForceRescan: Database error during nodeid retrieval for interface " + event.getInterface(), sqlE);
            } finally {
                try {
                    if (rs != null) rs.close();
                } catch (SQLException e) {
                    log().error("handleForceRescan: Exception thrown closing resultset: ", e);
                } finally {
                    try {
                        if (stmt != null) stmt.close();                        
                    } catch (SQLException e) {
                        log().error("handleForceRescan: Exception thrown closing statement: ", e);
                    } finally {
                        try {
                            if (dbc != null) dbc.close();
                        } catch (SQLException e) {
                            log().error("handleForceRescan: Exception thrown closing connection: ", e);
                        }
                    }

                }
            }

        }

        if (nodeid == -1) {
            log().error("handleForceRescan: Nodeid retrieval for interface " + event.getInterface() + " failed.  Unable to perform rescan.");
        } else {
            // Rescan the node.
            m_scheduler.forceRescan(nodeid);
        }
    }

