	/**
	 * Load the current node from the database. If the node
	 * was modified, the modifications are lost. The nodeid
	 * and dpName must be set prior to this call.
	 *
	 * @param c	The connection used to load the data.
	 *
	 * @throws java.sql.SQLException Thrown if an error occurs
	 * 	with the connection
	 */
	private boolean load(Connection c)
		throws SQLException
	{
		if(!m_fromDb)
			throw new IllegalStateException("The record does not exists in the database");

		Category log = ThreadCategory.getInstance(getClass());


		// create the Prepared statment and then
		// start setting the result values
		//
		PreparedStatement stmt = c.prepareStatement(SQL_LOAD_REC);
		stmt.setInt(1, m_nodeId);
		stmt.setString(2, m_dpName);

		// Run the insert
		//
		ResultSet rset = stmt.executeQuery();
		if(!rset.next())
		{
			rset.close();
			stmt.close();
			return false;
		}

		// extract the values.
		//
		int ndx = 1;

		// get the time
		//
		m_createTime = rset.getTimestamp(ndx++);

		// the parent id
		//
		m_parentId = rset.getInt(ndx++);
		if(rset.wasNull())
			m_parentId = -1;

		// the node type
		//
		String str = rset.getString(ndx++);
		if(str != null && !rset.wasNull())
			m_type = str.charAt(0);
		else
			m_type = NODE_TYPE_UNKNOWN;

		// the sysoid
		//
		m_sysoid = rset.getString(ndx++);
		if(rset.wasNull())
			m_sysoid = null;

		// the sysname
		//
		m_sysname = rset.getString(ndx++);
		if(rset.wasNull())
			m_sysname = null;
	
		// the sys description
		//
		m_sysdescr = rset.getString(ndx++);
		if(rset.wasNull())
			m_sysdescr = null;

		// the system location
		//
		m_syslocation = rset.getString(ndx++);
		if(rset.wasNull())
			m_syslocation = null;

		// the system contact
		//
		m_syscontact = rset.getString(ndx++);
		if(rset.wasNull())
			m_syscontact = null;

		// the node label
		//
		m_label = rset.getString(ndx++);
		if(rset.wasNull())
			m_label = null;

		// the label type
		//
		str = rset.getString(ndx++);
		if(rset.wasNull() || str == null)
			m_labelSource = LABEL_SOURCE_UNKNOWN;
		else
			m_labelSource = str.charAt(0);

		// the netbios name
		//
		m_nbName = rset.getString(ndx++);
		if(rset.wasNull())
			m_nbName = null;

		// the domain name
		//
		m_nbDomainName = rset.getString(ndx++);
		if(rset.wasNull())
			m_nbDomainName = null;

		// the operating system
		//
		m_os = rset.getString(ndx++);
		if(rset.wasNull())
			m_os = null;

		// get the last poll time
		//
		m_lastPoll = rset.getTimestamp(ndx++);

		rset.close();
		stmt.close();

		// clear the mask and mark as backed
		// by the database
		//
		m_changed = 0;
		return true;
	}

