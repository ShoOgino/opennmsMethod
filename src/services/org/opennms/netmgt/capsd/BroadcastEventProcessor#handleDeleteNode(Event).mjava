    /**
     * Handle a deleteNode Event. Here we process the event by marking all the appropriate data
     * rows as deleted.
     * 
     * FIXME: finish the doc here
     * 
     * @param e
     *            The event indicating what node to delete
     * @throws InsufficientInformationException
     *             if the required information is not part of the event
     */
    private void handleDeleteNode(Event e) throws InsufficientInformationException, FailedOperationException {
        // validate event
        EventUtils.checkEventId(e);
        EventUtils.checkNodeId(e);
        if (isXmlRpcEnabled()) EventUtils.requireParm(e, EventConstants.PARM_TRANSACTION_NO);

        Category log = ThreadCategory.getInstance(getClass());

        // log the event
        long nodeid = e.getNodeid();
        if (log.isDebugEnabled())
                log.debug("handleDeleteNode: Event\n" + "uei\t\t" + e.getUei() + "\neventid\t\t" + e.getDbid() + "\nnodeId\t\t" + nodeid
                        + "\neventtime\t" + (e.getTime() != null ? e.getTime() : "<null>"));

        long txNo = EventUtils.getLongParm(e, EventConstants.PARM_TRANSACTION_NO, -1L);

        // update the database
        Connection dbConn = null;
        List eventsToSend = null;
        try {
            dbConn = DatabaseConnectionFactory.getInstance().getConnection();
            dbConn.setAutoCommit(false);

            String source = (e.getSource() == null ? "OpenNMS.Capsd" : e.getSource());

            eventsToSend = doDeleteNode(dbConn, source, nodeid, txNo);
        } catch (SQLException ex) {
            log.error("handleDeleteService:  Database error deleting service " + e.getService() + " on ipAddr " + e.getInterface() + " for node "
                    + nodeid, ex);
            throw new FailedOperationException("database error: " + ex.getMessage(), ex);

        } finally {

            if (dbConn != null) try {
                if (eventsToSend != null) {
                    dbConn.commit();
                    for (Iterator it = eventsToSend.iterator(); it.hasNext();) {
                        EventUtils.sendEvent((Event) it.next(), e.getUei(), txNo, isXmlRpcEnabled());
                    }
                } else {
                    dbConn.rollback();
                }
            } catch (SQLException ex) {
            } finally {
                if (dbConn != null) try { dbConn.close(); } catch (SQLException ex) {}
            }
        }
    }

