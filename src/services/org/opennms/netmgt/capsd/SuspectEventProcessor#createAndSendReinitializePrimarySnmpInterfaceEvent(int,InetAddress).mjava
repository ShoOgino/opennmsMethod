	/**
	 * This method is responsible for generating a reinitializePrimarySnmpInterface
	 * event and sending it to eventd. 
	 *
	 * @param nodeId  	Nodeid of node being rescanned.
	 * @param InetAddress 	Primary SNMP interface address.
	 */
	private void createAndSendReinitializePrimarySnmpInterfaceEvent(int nodeId, InetAddress primarySnmpIf)
	{
		Category log = ThreadCategory.getInstance(getClass());
		
		if (log.isDebugEnabled())
			log.debug("reinitializePrimarySnmpInterface: nodeId: " + nodeId  + 
				" interface: " + primarySnmpIf.getHostAddress());
		
		Event newEvent = new Event();
		
		newEvent.setUei(EventConstants.REINITIALIZE_PRIMARY_SNMP_INTERFACE_EVENT_UEI);
		
		newEvent.setSource("OpenNMS.Capsd");
		
		newEvent.setNodeid(nodeId);
		
		newEvent.setHost(Capsd.getLocalHostAddress());
		
		newEvent.setInterface(primarySnmpIf.getHostAddress());
		
		newEvent.setTime(EventConstants.formatToString(new java.util.Date()));

		// Send event to Eventd
		try
		{
			EventIpcManagerFactory.getInstance().getManager().sendNow(newEvent);

			if (log.isDebugEnabled())
				log.debug("createAndSendReinitializePrimarySnmpInterfaceEvent: successfully sent reinitializePrimarySnmpInterface event for nodeID: " + nodeId);
		}
		catch(Throwable t)
		{
			log.warn("run: unexpected throwable exception caught during send to middleware", t);
		}
	}

