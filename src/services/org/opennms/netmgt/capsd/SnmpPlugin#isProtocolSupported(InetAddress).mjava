	/**
	 * Returns true if the protocol defined by this
	 * plugin is supported. If the protocol is not 
	 * supported then a false value is returned to the 
	 * caller.
	 *
	 * @param address	The address to check for support.
	 *
	 * @return True if the protocol is supported by the address.
	 */
	public boolean isProtocolSupported(InetAddress address)
	{
		boolean isSupported = false;
		SnmpSession session = null;
		SnmpPeer peer = SnmpPeerFactory.getInstance().getPeer(address);
		try
		{
			if(peer == null)
				peer = new SnmpPeer(address);
			session = new SnmpSession(peer);

			SnmpResponseHandler handler = new SnmpResponseHandler();
			SnmpPduPacket out = new SnmpPduRequest(SnmpPduPacket.GETNEXT,
							       new SnmpVarBind[] { new SnmpVarBind(DEFAULT_OID) });
			
			synchronized(handler)
			{
				session.send(out, handler);
				try
				{
					wait((long)((peer.getRetries()+1) * peer.getTimeout()));
				}
				catch(InterruptedException e)
				{
					Thread.currentThread().interrupt();
				}
			}

			if(handler.getResult() != null)
			{
				isSupported = true;
			}
		}
		catch(Throwable t)
		{
			throw new UndeclaredThrowableException(t);
		}
		finally
		{
			if(session != null)
				session.close();
		}

		return isSupported;
	}

