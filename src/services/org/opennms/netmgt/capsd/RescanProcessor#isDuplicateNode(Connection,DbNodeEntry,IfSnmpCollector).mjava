	/**
	 * This method checks if a suspect node entry is a duplicate node to the
         * updating node by verify if each interface in the suspect node is 
         * contained in the ipAddrTable of the updating node.
	 * 
         * @param dbc           Database connection
	 * @param suspectNode	the suspect node to verify duplication. 
	 * @param snmpc         the SNMP collection of the updating node.
	 */
        private boolean isDuplicateNode(Connection dbc, DbNodeEntry suspectNode, IfSnmpCollector snmpc)
        {

		Category log = ThreadCategory.getInstance(getClass());
		if (suspectNode == null)
                {
		        if (log.isDebugEnabled())
			        log.debug("isDuplicateNode: null node.");
                        return false;

                }
						
		// Retrieve list of interfaces associated with the suspect node
                try 
                {
		        DbIpInterfaceEntry[] tmpIfArray = suspectNode.getInterfaces(dbc);
				
			for (int i = 0; i < tmpIfArray.length; i++)
			{
			        InetAddress addr = tmpIfArray[i].getIfAddress();
				int ifIndex = tmpIfArray[i].getIfIndex();
  				
                                // Skip non-IP or loopback interfaces
       				if (addr.getHostAddress().equals("0.0.0.0") || 
       					addr.getHostAddress().startsWith("127.")) 
       				{
       					continue;
       				}
				
                                int indexFromSnmpc = snmpc.getIfIndex(addr);
                                if ( ifIndex != indexFromSnmpc)
                                {
				        if (log.isDebugEnabled())
					        log.debug("isDuplicateNode: Interface/ifindex: " + addr.getHostAddress() 
                                                        + "/" + ifIndex
                                                        + " is not in the ipAddrTable of the updating node.");
                                        return false;
			        }
                                else
                                {       
			                if (log.isDebugEnabled())
					        log.debug("isDuplicateNode: Interface: " + addr.getHostAddress()
                                                        + " found a match in the ipAddrTable of the updating node.");
                                }
                        }
			
                        return true;
                }
                catch (SQLException sqlE)
                {
                        log.error("isDuplicateNode: failed to retrieve all interfaces for the supect node"
                                + suspectNode.getNodeId(), sqlE);
                        return false;
                }
        }

