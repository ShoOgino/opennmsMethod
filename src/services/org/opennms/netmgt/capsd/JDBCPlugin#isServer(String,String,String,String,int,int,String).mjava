    /**
     * Checks if a given server is listening o a given interface
     * 
     * @param user
     *            Database user
     * @param password
     *            Database password
     * @param hostname
     *            name of the RDBMS server
     * @param db_url
     *            Database connection url
     * @param timeout
     *            Default login timeout
     * @param retries
     *            Number of retrys before giving up a connection attempts
     * @param db_driver
     *            JDBC driver to use
     * @see DBTools#constructUrl
     */

    private boolean isServer(String user, String password, String hostname, String db_url, int timeout, int retries, String db_driver) {
        Category log = ThreadCategory.getInstance(getClass());

        boolean status = false;
        Connection con = null;
        Statement statement = null;
        ResultSet result = null;
        boolean connected = false;

        for (int attempts = 1; attempts <= retries && !connected;) {
            log.info(getClass().getName() + ": Trying to detect JDBC server on '" + hostname + "', attempts #: " + attempts);
            try {

                log.debug(getClass().getName() + ": Loading JDBC driver: '" + db_driver + "'");
                Class.forName(db_driver).newInstance();
                log.debug(getClass().getName() + ": JDBC driver loaded: '" + db_driver + "'");

                String url = DBTools.constructUrl(db_url, hostname);
                log.debug(getClass().getName() + ": Constructed JDBC url: '" + url + "'");

                DriverManager.setLoginTimeout(timeout);
                con = DriverManager.getConnection(url, user, password);
                connected = true;
                log.debug(getClass().getName() + ": Got database connection: '" + con + "' (" + url + ", " + user + ", " + password + ")");

                DatabaseMetaData metadata = con.getMetaData();
                log.debug(getClass().getName() + ": Got database metadata");

                result = metadata.getCatalogs();
                while (result.next()) {
                    result.getString(1);
                    log.debug(getClass().getName() + ": Metadata catalog: '" + result.getString(1) + "'");
                }

                // The JDBC server was detected using JDBC, update the status
                status = true;
                log.info(getClass().getName() + ": JDBC server detected on: '" + hostname + "', attempts #:" + attempts);
            } catch (NullPointerException nullExp) {
                log.error(nullExp.toString());
            } catch (IllegalArgumentException illegalExp) {
                log.error(illegalExp.toString());
            } catch (InstantiationException insExp) {
                log.error(insExp.toString());
            } catch (IllegalAccessException illegalExp) {
                log.error(illegalExp.toString());
            } catch (ClassNotFoundException classExp) {
                log.error(classExp.toString());
            } catch (SQLException sqlException) {
                log.error(sqlException.toString());
            } finally {
                attempts++;
                if (result != null) {
                    try {
                        result.close();
                    } catch (SQLException ignore) {
                    }
                }
                if (statement != null) {
                    try {
                        statement.close();
                    } catch (SQLException ignore) {
                    }
                }
                if (con != null) {
                    try {
                        con.close();
                    } catch (SQLException ignore) {
                    }
                }
            }
        }
        return status;
    }

