    /**
     * FIXME: finish the doc here
     * 
     * @param dbConn
     * @param nodeLabel
     * @param ipaddr
     * @param txNo
     * @return
     * @throws SQLException
     * @throws FailedOperationException
     */
    private List createInterfaceOnNode(Connection dbConn, String nodeLabel, String ipaddr, long txNo) throws SQLException, FailedOperationException {
        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            Category log = ThreadCategory.getInstance(getClass());
            // There is no ipinterface associated with the specified nodeLabel
            // exist
            // in the database. Verify if a node with the nodeLabel already
            // exist in
            // the database. If not, create a node with the nodeLabel and add it
            // to the
            // database, and also add the ipaddress associated with this node to
            // the
            // database. If the node with the nodeLabel exists in the node
            // table, just
            // add the ip address to the database.
            stmt = dbConn.prepareStatement(SQL_QUERY_NODE_EXIST);
            stmt.setString(1, nodeLabel);

            rs = stmt.executeQuery();
            List eventsToSend = new LinkedList();
            while (rs.next()) {

                if (log.isDebugEnabled())
                    log.debug("addInterfaceHandler:  add interface: " + ipaddr + " to the database.");

                // Node already exists. Add the ipaddess to the ipinterface
                // table
                InetAddress ifaddr = InetAddress.getByName(ipaddr);
                int nodeId = rs.getInt(1);
                String dpName = rs.getString(2);

                DbIpInterfaceEntry ipInterface = DbIpInterfaceEntry.create(nodeId, ifaddr);
                ipInterface.setHostname(ifaddr.getHostName());
                ipInterface.setManagedState(DbIpInterfaceEntry.STATE_MANAGED);
                ipInterface.setPrimaryState(DbIpInterfaceEntry.SNMP_NOT_ELIGIBLE);
                ipInterface.store(dbConn);

                // create a nodeEntry
                DbNodeEntry nodeEntry = DbNodeEntry.get(nodeId, dpName);
                Event newEvent = EventUtils.createNodeGainedInterfaceEvent(nodeEntry, ifaddr, txNo);
                eventsToSend.add(newEvent);

            }
            return eventsToSend;
        } catch (UnknownHostException e) {
            throw new FailedOperationException("unable to resolve host " + ipaddr + ": " + e.getMessage(), e);
        } finally {
            try {
                if (rs != null)
                    rs.close();
                if (stmt != null)
                    stmt.close();
            } catch (SQLException e) {
            }
        }
    }

