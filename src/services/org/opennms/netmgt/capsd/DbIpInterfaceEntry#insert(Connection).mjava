	/**
	 * Inserts the new interface into the ipInterface table
	 * of the OpenNMS databasee.
	 *
	 * @param c	The connection to the database.
	 *
	 * @throws java.sql.SQLException Thrown if an error occurs
	 * 	with the connection
	 */
	private void insert(Connection c)
		throws SQLException
	{
		if(m_fromDb)
			throw new IllegalStateException("The record already exists in the database");

		Category log = ThreadCategory.getInstance(getClass());

		// first extract the next node identifier
		//
		StringBuffer names = new StringBuffer("INSERT INTO ipInterface (nodeID,ipAddr");
		StringBuffer values= new StringBuffer("?,?");

		if((m_changed & CHANGED_IFINDEX) == CHANGED_IFINDEX)
		{
			values.append(",?");
			names.append(",ifIndex");
		}

		if((m_changed & CHANGED_HOSTNAME) == CHANGED_HOSTNAME)
		{
			values.append(",?");
			names.append(",ipHostname");
		}

		if((m_changed & CHANGED_MANAGED) == CHANGED_MANAGED)
		{
			values.append(",?");
			names.append(",isManaged");
		}

		if((m_changed & CHANGED_STATUS) == CHANGED_STATUS)
		{
			values.append(",?");
			names.append(",ipStatus");
		}

		if((m_changed & CHANGED_POLLTIME) == CHANGED_POLLTIME)
		{
			values.append(",?");
			names.append(",ipLastCapsdPoll");
		}

		if((m_changed & CHANGED_PRIMARY) == CHANGED_PRIMARY)
		{
			values.append(",?");
			names.append(",isSnmpPrimary");
		}


		names.append(") VALUES (").append(values).append(')');
		log.debug("DbIpInterfaceEntry.insert: SQL insert statment = " + names.toString());

		// create the Prepared statment and then
		// start setting the result values
		//
		PreparedStatement stmt = c.prepareStatement(names.toString());
		names = null;

		int ndx = 1;
		stmt.setInt(ndx++, m_nodeId);
		stmt.setString(ndx++, m_ipAddr.getHostAddress());

		if((m_changed & CHANGED_IFINDEX) == CHANGED_IFINDEX)
			stmt.setInt(ndx++, m_ifIndex);

		if((m_changed & CHANGED_HOSTNAME) == CHANGED_HOSTNAME)
			stmt.setString(ndx++, m_hostname);

		if((m_changed & CHANGED_MANAGED) == CHANGED_MANAGED)
			stmt.setString(ndx++, new String( new char[] { m_managedState } ));

		if((m_changed & CHANGED_STATUS) == CHANGED_STATUS)
			stmt.setInt(ndx++, m_status);

		if((m_changed & CHANGED_POLLTIME) == CHANGED_POLLTIME)
		{
			stmt.setTimestamp(ndx++, m_lastPoll);
		}

		if((m_changed & CHANGED_PRIMARY) == CHANGED_PRIMARY)
			stmt.setString(ndx++, new String(new char[] { m_primaryState }));


		// Run the insert
		//
		int rc = stmt.executeUpdate();
		log.debug("DbIpInterfaceEntry.insert: SQL update result = " + rc);
		stmt.close();

		// clear the mask and mark as backed
		// by the database
		//
		m_fromDb = true;
		m_changed = 0;
	}

