    /**
     * Process the event, add or remove a specified service from an interface. An 'action'
     * parameter wraped in the event will tell which action to take to the service.
     * 
     * @param event
     *            The event to process.
     * @throws FailedOperationException
     *             FIXME: finish the doc here
     */
    private void handleChangeService(Event event) throws InsufficientInformationException, FailedOperationException {
        Category log = ThreadCategory.getInstance(getClass());

        EventUtils.checkInterface(event);
        EventUtils.checkService(event);
        EventUtils.requireParm(event, EventConstants.PARM_ACTION);
        if (isXmlRpcEnabled()) {
            EventUtils.requireParm(event, EventConstants.PARM_TRANSACTION_NO);
        }

        String action = EventUtils.getParm(event, EventConstants.PARM_ACTION);
        long txNo = EventUtils.getLongParm(event, EventConstants.PARM_TRANSACTION_NO, -1L);

        if (log.isDebugEnabled()) log.debug("changeServiceHandler:  processing changeService event on: " + event.getInterface());

        Connection dbConn = null;
        List eventsToSend = null;
        try {
            dbConn = DatabaseConnectionFactory.getInstance().getConnection();
            dbConn.setAutoCommit(false);

            eventsToSend = doChangeService(dbConn, event.getInterface(), event.getService(), action, txNo);
        } catch (SQLException sqlE) {
            log.error("SQLException during changeService on database.", sqlE);
            throw new FailedOperationException("exeption processing changeService: " + sqlE.getMessage(), sqlE);
        } finally {
            if (dbConn != null) try {
                if (eventsToSend != null) {
                    dbConn.commit();
                    for (Iterator it = eventsToSend.iterator(); it.hasNext();) {
                        EventUtils.sendEvent((Event) it.next(), event.getUei(), txNo, isXmlRpcEnabled());
                    }
                } else {
                    dbConn.rollback();
                }
                dbConn.close();
            } catch (SQLException ex) {
            }
        }

    }

