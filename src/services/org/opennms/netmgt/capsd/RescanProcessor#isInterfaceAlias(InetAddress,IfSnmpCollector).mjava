    /**
     * Determines if the passed InetAddress object represents an interface
     * alias. The interface is an alias if the IpAddrTable collected from it via
     * SNMP does not contain itself.
     * 
     * @param ipAddr
     *            Address of interface to be tested
     * @param snmpc
     *            IfSnmpCollector object containing SNMP collected ifTable and
     *            ipAddrTable information.
     * 
     * @return TRUE if the provided IP address is an alias, FALSE otherwise.
     */
    private boolean isInterfaceAlias(InetAddress ipAddr, IfSnmpCollector snmpc) {
        Category log = ThreadCategory.getInstance(getClass());

        // Sanity check...null parms?
        if (ipAddr == null || snmpc == null)
            throw new IllegalArgumentException("ipAddr and snmpc parms cannot be null.");

        // SNMP collection successful?
        if (!snmpc.hasIpAddrTable())
            return false;

        // Verify that SNMP collection contains ifTable and ipAddrTable entries
        IfTable ifTable = null;
        IpAddrTable ipAddrTable = null;

        if (snmpc.hasIfTable())
            ifTable = snmpc.getIfTable();

        if (snmpc.hasIpAddrTable())
            ipAddrTable = snmpc.getIpAddrTable();

        if (ifTable == null || ipAddrTable == null)
            return false;

        // Loop through the interface table entries until there are no more
        // entries or we've found a match
        boolean isAlias = true;
        Iterator iter = ifTable.getEntries().iterator();

        while (iter.hasNext()) {
            IfTableEntry ifEntry = (IfTableEntry) iter.next();

            if (ifEntry.containsKey("ifIndex") != true) {
                if (log.isDebugEnabled())
                    log.debug("isInterfaceAlias:  Breaking from loop");
                break;
            }

            //
            // Get the list of IP addresses for the current index and
            // determine if the provided address is present.
            //
            int ifIndex = -1;

            SnmpInt32 snmpIfIndex = (SnmpInt32) ifEntry.get(IfTableEntry.IF_INDEX);
            if (snmpIfIndex != null)
                ifIndex = snmpIfIndex.getValue();

            List addrList = IpAddrTable.getIpAddresses(ipAddrTable.getEntries(), ifIndex);
            Iterator addrIter = addrList.iterator();
            while (addrIter.hasNext()) {
                InetAddress tmpAddr = (InetAddress) addrIter.next();

                // Compare temp address to the provided IP address...as soon as
                // we find
                // a match we're done.
                if (tmpAddr != null && tmpAddr.getHostAddress().equals(ipAddr.getHostAddress())) {
                    // Match found, break out of inner while loop
                    isAlias = false;
                    break;
                }
            }

            // If match found break out of outer while loop
            if (isAlias == false)
                break;
        } // end while

        return isAlias;
    }

