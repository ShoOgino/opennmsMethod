    /**
     * <P>
     * This method is used to find the corresponding netmask for the indexed
     * interface. The list of IP Address table entries are searched until <EM>
     * the first</EM> netmask address is found for the interface. The netmask
     * is then returned as a string. If there is no interface corresponding to
     * the index then a null is returned.
     * </P>
     * 
     * @param ipAddrEntries
     *            List of IpAddrTableEntry objects to search
     * @param ifIndex
     *            The interface index to search for.
     * 
     * @return The netmask for the interface.
     */
    public static String getNetmask(List ipAddrEntries, int ifIndex) {
        if (ifIndex == -1) {
            return null;
        }

        Iterator iter = ipAddrEntries.iterator();
        while (iter.hasNext()) {
            IpAddrTableEntry ipAddrEntry = (IpAddrTableEntry) iter.next();
            Integer snmpIpAddrIndex = ipAddrEntry.getIpAdEntIfIndex();
            if (snmpIpAddrIndex == null) {
                continue;
            }

            int ipAddrIndex = snmpIpAddrIndex.intValue();
            if (ipAddrIndex == ifIndex) {
                InetAddress snmpAddr = ipAddrEntry.getIpAdEntNetMask();
                return (snmpAddr == null ? null : snmpAddr.getHostAddress());
            }
        }

        return null;
    }

