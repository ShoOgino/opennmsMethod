        /**
         * <P>
         * This method is used to process received SNMP PDU packets from the remote
         * agent. The method is part of the SnmpHandler interface and will be
         * invoked when a PDU is successfully decoded. The method is passed the
         * receiving session, the PDU command, and the actual PDU packet.
         * </P>
         * 
         * <P>
         * When all the data has been received from the session the signaler object,
         * initialized in the constructor, is signaled. In addition, the receiving
         * instance will call notifyAll() on itself at the same time.
         * </P>
         * 
         * <P>
         * For SNMP version 2 devices, all the received data enters a temporary
         * array. After the collecting process, the method sorts the data so that
         * each interface has its own map.
         * </P>
         * 
         * @param session
         *            The SNMP Session that received the PDU
         * @param command
         *            The command contained in the received pdu
         * @param pdu
         *            The actual received PDU.
         * 
         */
        public void snmpReceivedPdu(SnmpSession session, int command, SnmpPduPacket pdu) {
            
            try {
                
                if (log().isDebugEnabled()) {
                    log().debug("snmpReceivedPdu: got SNMP response, current version: " + ((m_version == SnmpSMI.SNMPV1) ? "SNMPv1" : "SNMPv2"));
                }
                
                checkResponseType(command); 
                checkReponseErrorStatus(pdu);
                
                m_currentWalkState = m_currentWalkState.processVarbinds(this, pdu);
                if (m_currentWalkState != null) {
                    m_currentWalkState.send(this, session);
                } else {
                    done();
                } 
                
            } catch (InvalidResponseException e) {
                m_error = true;
                log().debug(e.getMessage());
                done();
            }
        }

