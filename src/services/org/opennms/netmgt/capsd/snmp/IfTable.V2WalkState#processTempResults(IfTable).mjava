        void processTempResults(IfTable table) {
            if (table.log().isDebugEnabled())
                table.log().debug("smnpReceivedPDU: All SNMPv2 data received, processing...");
            // all the data has been retrieved from the MIB, so
            // now
            // we must enter it into our maps. Each map will
            // hold all
            // the MIB variable values per interface.
            //
            // get the next possible index value from the
            // temporary storage
            // array, since the first variable is the ifIndex
            // value. After
            // scan through the entire temporary array,
            // comparing the
            // index of each OID to the index stored as
            // 'ifIndex'.
            for (int x = 0; x < table.m_ifNumber; x++) {
                SnmpVarBind[] templist = new SnmpVarBind[22];
                
                table.log().debug("Processing index: "+x+" value is: "+m_tempStorage[x].getValue());
                
                SnmpInt32 ifIndex = (SnmpInt32) m_tempStorage[x].getValue();
        
                // parse each oid to get index
                int tempcount = 0;
        
                for (int j = 0; j < m_responses && tempcount < 22; j++) {
                    // Extract the "instance" id from the
                    // current SnmpVarBind's object id
                    //
                    String from_oid = m_tempStorage[j].getName().toString();
                    SnmpObjectId id = new SnmpObjectId(from_oid);
                    int[] ids = id.getIdentifiers();
                    int instance_id = ids[ids.length - 1];
                    String temp_index = Integer.toString(instance_id);
        
                    try {
                        Integer check = Integer.valueOf(temp_index);
        
                        // if the indexes match, store it within
                        // templist
                        if (check.intValue() == ifIndex.getValue()) {
                            templist[tempcount++] = m_tempStorage[j];
                        }
                    } catch (NumberFormatException nfE) {
                        table.log().warn("snmpReceivedPdu: unable to convert last decimal of object identifier '" + m_tempStorage[j].getName().toString() + "' to integer for ifIndex comparison.", nfE);
                    }
                }
        
                // create VarBind list from templist.
                SnmpVarBind[] vblist = new SnmpVarBind[tempcount];
                for (int a = 0; a < tempcount; a++) {
                    vblist[a] = templist[a];
                }
        
                processVarbinds(table, vblist);
            } // end for()
            
            m_tempStorage = null;
        }

