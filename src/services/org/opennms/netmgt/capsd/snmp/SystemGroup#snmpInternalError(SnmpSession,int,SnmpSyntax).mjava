    /**
     * <P>
     * This method is part of the SnmpHandler interface and called when an
     * internal error happens in a session. This is usually the result of an I/O
     * error. This method will not be called if the session times out sending a
     * packet, see snmpTimeoutError for timeout handling.
     * </P>
     * 
     * @param session
     *            The session that had an unexpected error
     * @param error
     *            The error condition
     * @param pdu
     *            The PDU being sent when the error occured
     * 
     * @see #snmpTimeoutError
     * @see org.opennms.protocols.snmp.SnmpHandler SnmpHandler
     */
    public void snmpInternalError(SnmpSession session, int error, SnmpSyntax pdu) {
        Category log = ThreadCategory.getInstance(getClass());
        if (log.isEnabledFor(Priority.WARN)) {
            log.warn("snmpInternalError: The session experienced an internal error, error = " + error);
        }

        m_error = true;

        if (m_signal != null) {
            synchronized (m_signal) {
                m_signal.signalAll();
            }
        }

        synchronized (this) {
            this.notifyAll();
        }
    }

