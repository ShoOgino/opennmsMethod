    /**
     * <P>
     * This method is used to find the corresponding IP Address for the indexed
     * interface. The list of IP Address entries are searched until <EM>the
     * first</EM> IP Address is found for the interface. The IP Address is then
     * returned as a string. If there is no interface corresponding to the index
     * then a null is returned to the caller.
     * </P>
     * 
     * @param ipAddrEntries
     *            List of IpAddrTableEntry objects to search
     * @param ifIndex
     *            The interface index to search for
     * 
     * @return IP Address for the indexed interface.
     */
    public static InetAddress getIpAddress(List ipAddrEntries, int ifIndex) {
        Category log = ThreadCategory.getInstance(IpAddrTable.class);

        if (ifIndex == -1 || ipAddrEntries == null) {
            return null;
        }

        Iterator iter = ipAddrEntries.iterator();
        while (iter.hasNext()) {
            IpAddrTableEntry ipAddrEntry = (IpAddrTableEntry) iter.next();

            Integer snmpIpAddrIndex = ipAddrEntry.getIpAdEntIfIndex();

            if (snmpIpAddrIndex == null) {
                continue;
            }

            int ipAddrIndex = snmpIpAddrIndex.intValue();

            if (ipAddrIndex == ifIndex) {
                return ipAddrEntry.getIpAdEntAddr();
            }

        }

        return null;
    }

