    private void processV2Complete() {
        // Convert SNMP variable binding list to an array
        // for processing
        //
        SnmpVarBind[] tempStorage = new SnmpVarBind[m_snmpVarBindList.size()];
        tempStorage = (SnmpVarBind[]) m_snmpVarBindList.toArray(tempStorage);
        // since the MIB does not store the number of
        // interfaces that have
        // IP addresses, the method must resort to an
        // alternative. By
        // counting the number of values found for the
        // ipAddrIfIndex variable,
        // we'll have the number of interfaces with IP's.
        // Each IP-bound
        // interface will have a value for each MIB variable
        // listed
        //
        int numRows = 0;
        SnmpObjectId firstCol = new SnmpObjectId(getColumns()[0].getOid());
        for(int i = 0; i < tempStorage.length; i++) {
            if (firstCol.isRootOf(tempStorage[i].getName()))
                numRows++;
        }
        
        // store the IP Address Table data for each
        // interface into a map.
        //
        int numCols = getColumns().length;
        for (int row = 0; row < numRows; row++) {
            SnmpVarBind[] rowVarbinds = new SnmpVarBind[numCols];
            for (int col = 0; col < numCols; col++) {
                rowVarbinds[col] = tempStorage[row + (col * numRows)];
            }
            update(rowVarbinds);
        }
    }

