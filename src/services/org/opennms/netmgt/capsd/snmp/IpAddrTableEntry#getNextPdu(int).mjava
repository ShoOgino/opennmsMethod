	/**
	 * <P>If the SNMP version is V1, this method is used to get a 
	 * generic SNMP GETNEXT PDU that contains one varbind per member 
	 * element.</P>
	 *
	 * <P>If the SNMP version is V2, this method is used to get an
	 * SNMP GETBULK PDU with a single varbind containing the TABLE_OID
	 * object identifier.</P>
	 *
	 * <P>The PDU can then be used to perform an <EM>SNMP walk</EM> of 
	 * the MIB-II IP Address table of a remote host.</P>
	 * 
	 * @param version	SnmpSMI.SNMPV1 or SnmpSMI.SNMPV2
	 * 
	 * @return An SnmpPduPacket object with a command of GETNEXT (for SNMPv1)
	 * or GETBULK (for SNMPv2).
	 *
	 */
	public static SnmpPduPacket getNextPdu(int version)
	{
		SnmpPduPacket pdu = null;

		if (version == SnmpSMI.SNMPV2) 
		{
			pdu = new SnmpPduBulk();
			((SnmpPduBulk)pdu).setMaxRepititions(10);
			pdu.setRequestId(SnmpPduPacket.nextSequence());
			SnmpObjectId   oid = new SnmpObjectId(TABLE_OID);
			pdu.addVarBind(new SnmpVarBind(oid));
		}
		else 
		{
			pdu = new SnmpPduRequest(SnmpPduPacket.GETNEXT);
			pdu.setRequestId(SnmpPduPacket.nextSequence());
			for(int x = 0; x < ms_elemList.length; x++)
			{
				SnmpObjectId   oid = new SnmpObjectId(ms_elemList[x].getOid());
				pdu.addVarBind(new SnmpVarBind(oid));
			}
		}

		return pdu;
	}

