	/** 
	 * Convenience method which takes an SmbAuth object with userid
	 * and password information and the NetBIOS name for a remote server
	 * and builds the appropriate SMB url string which can be used to
	 * enumerate the server's shares.
	 *
	 * @param smbAuth	SMB Authentication object w/ userid/password info
	 * @param cname		NetBIOS address of remote server
	 *
	 * @return URL string which can be used in a subsequent SmbFile() call.
	 */
	static String getSmbURL(SmbAuth smbAuth, String cname)
	{
		// Build SMB server url
		//
		// If we don't have a valid SmbAuth object url has format:
		// 	smb://<netbios_name>
		// 
		// For server authentication url has format:
		// 	smb://<userid>:<password>@<netbios_name>
		//
		// For domain authentication url has format:
		// 	smb://<domain>;<userid>:<password>@<netbios_name>
				
		// Set url parameters
		String domainParm = null;
		String useridParm = null;
		String passwordParm = null;
				
		if (smbAuth != null)
		{
			useridParm = smbAuth.getUser();
			passwordParm = smbAuth.getPassword();
			if (smbAuth.getType().equalsIgnoreCase("domain"))
				domainParm = smbAuth.getContent();
		}					
				
		// Build url from parms
		String url = "smb://";
		if (domainParm != null)
			url = url.concat(domainParm + ";");
		
		if (useridParm != null)
			url = url.concat(useridParm);
					
		if (passwordParm != null)
			url = url.concat(":" + passwordParm);
				
		if (useridParm != null)
			url = url.concat("@");
					
		url = url.concat(cname);
		
		return url;
	}

