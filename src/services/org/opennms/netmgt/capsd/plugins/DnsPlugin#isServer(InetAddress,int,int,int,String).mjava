    /**
     * 
     * @param nserver
     *            The address for the name server test.
     * @param port
     *            The port to test for name resolution
     * @param timeout
     *            Timeout in milliseconds
     * @param lookup
     *            Host name to be used in DNS lookup packet
     * 
     * @return True if server, false if not.
     */
    private boolean isServer(InetAddress nserver, int port, int retries, int timeout, String lookup) {
        boolean isAServer = false;
        Category log = ThreadCategory.getInstance(getClass());

        // Allocate a communication socket
        //
        DatagramSocket socket = null;
        try {
            // Allocate a socket
            //
            socket = new DatagramSocket();
            socket.setSoTimeout(timeout);

            // Allocate a receive buffer
            //
            byte[] data = new byte[512];

            for (int count = 0; count < retries && !isAServer; count++) {
                try {
                    // Construct a new DNS Address Request
                    //
                    DNSAddressRequest request = new DNSAddressRequest(lookup);

                    // build the datagram packet used to request the address.
                    //
                    byte[] rdata = request.buildRequest();
                    DatagramPacket outpkt = new DatagramPacket(rdata, rdata.length, nserver, port);
                    rdata = null;

                    // send the output packet
                    //
                    socket.send(outpkt);

                    // receive a resposne
                    //
                    DatagramPacket inpkt = new DatagramPacket(data, data.length);
                    socket.receive(inpkt);
                    if (inpkt.getAddress().equals(nserver)) {
                        try {
                            request.verifyResponse(inpkt.getData(), inpkt.getLength());
                            isAServer = true;
                        } catch (IOException ex) {
                            log.debug("Failed to match response to request, an IOException occured", ex);
                        }
                    }
                } catch (InterruptedIOException ex) {
                    // discard this exception, do next loop
                    //
                }
            }
        } catch (IOException ex) {
            log.warn("isServer: An I/O exception during DNS resolution test.", ex);
        } finally {
            if (socket != null)
                socket.close();
        }

        return isAServer;
    }

