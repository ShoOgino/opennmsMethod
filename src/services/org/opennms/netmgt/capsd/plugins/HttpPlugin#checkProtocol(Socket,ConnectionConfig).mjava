    /**
     * @param sChannel
     * @param isAServer
     * @return
     * @throws IOException
     */
    protected boolean checkProtocol(Socket socket, ConnectionConfig config) throws IOException {
        boolean isAServer = false;

        Category log = ThreadCategory.getInstance(getClass());

        try {
            BufferedReader lineRdr = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            socket.getOutputStream().write(m_queryString.getBytes());
            String line = null;
            StringBuffer response = new StringBuffer();
            while ((line = lineRdr.readLine()) != null) {
                response.append(line).append(System.getProperty("line.separator"));
            }

            if (response.toString() != null && response.toString().indexOf(m_responseString) > -1) {
                if (m_checkReturnCode) {
                    StringTokenizer t = new StringTokenizer(response.toString());
                    t.nextToken();
                    int rVal = Integer.parseInt(t.nextToken());
                    if (rVal >= 99 && rVal <= 600)
                        isAServer = true;
                } else {
                    isAServer = true;
                }
            }
        } catch (NumberFormatException e) {
            log.debug(getPluginName() + ": failed to parse response code from host " + config.getInetAddress().getHostAddress(), e);
            isAServer = false;
        }
        return isAServer;
    }

