	/**
	 * This method is responsible for generating a nodeInfoChanged event and
	 * adding it to the event list. 
	 *
	 * @param updatedEntry	Updated node entry object
	 * @param originalEntry	Original node entry object
	 */
	private void createNodeInfoChangedEvent(DbNodeEntry updatedEntry, DbNodeEntry originalEntry)
	{
		Category log = ThreadCategory.getInstance(getClass());
		
		if (log.isDebugEnabled())
			log.debug("createNodeInfoChangedEvent: nodeId: " + updatedEntry.getNodeId());
		
		Event newEvent = new Event();
		
		newEvent.setUei(EventConstants.NODE_INFO_CHANGED_EVENT_UEI);
		
		newEvent.setSource("OpenNMS.Capsd");
		
		newEvent.setNodeid(updatedEntry.getNodeId());
		
		newEvent.setHost(Capsd.getLocalHostAddress());
		
		newEvent.setTime(EventConstants.formatToString(new java.util.Date()));

		// Add appropriate parms
		Parms eventParms = new Parms();
		Parm eventParm = null;
		Value parmValue = null;
		
		// SysOID						
		if (updatedEntry.getSystemOID() != null)
		{
			eventParm = new Parm();
			eventParm.setParmName(EventConstants.PARM_NODE_SYSOID);
			parmValue = new Value();
			parmValue.setContent(updatedEntry.getSystemOID());
			eventParm.setValue(parmValue);
			eventParms.addParm(eventParm);
		}
		
		// SysName						
		if (updatedEntry.getSystemName() != null)
		{
			eventParm = new Parm();
			eventParm.setParmName(EventConstants.PARM_NODE_SYSNAME);
			parmValue = new Value();
			parmValue.setContent(updatedEntry.getSystemName());
			eventParm.setValue(parmValue);
			eventParms.addParm(eventParm);
		}
		
		// SysDescription
		if (updatedEntry.getSystemDescription() != null)
		{
			// Add new node label
			eventParm = new Parm();
			eventParm.setParmName(EventConstants.PARM_NODE_SYSDESCRIPTION);
			parmValue = new Value();
			parmValue.setContent(updatedEntry.getSystemDescription());
			eventParm.setValue(parmValue);
			eventParms.addParm(eventParm);
		}
		
		// SysLocation
		if (updatedEntry.getSystemLocation() != null)
		{
			// Add new node label
			eventParm = new Parm();
			eventParm.setParmName(EventConstants.PARM_NODE_SYSLOCATION);
			parmValue = new Value();
			parmValue.setContent(updatedEntry.getSystemLocation());
			eventParm.setValue(parmValue);
			eventParms.addParm(eventParm);
		}
		
		// SysContact
		if (updatedEntry.getSystemContact() != null)
		{
			// Add new node label
			eventParm = new Parm();
			eventParm.setParmName(EventConstants.PARM_NODE_SYSCONTACT);
			parmValue = new Value();
			parmValue.setContent(updatedEntry.getSystemContact());
			eventParm.setValue(parmValue);
			eventParms.addParm(eventParm);
		}
		
		// NetBIOS name
		if (updatedEntry.getNetBIOSName() != null)
		{
			// Add new node label
			eventParm = new Parm();
			eventParm.setParmName(EventConstants.PARM_NODE_NETBIOS_NAME);
			parmValue = new Value();
			parmValue.setContent(updatedEntry.getNetBIOSName());
			eventParm.setValue(parmValue);
			eventParms.addParm(eventParm);
		}
		
		// Domain name
		if (updatedEntry.getDomainName() != null)
		{
			// Add new node label
			eventParm = new Parm();
			eventParm.setParmName(EventConstants.PARM_NODE_DOMAIN_NAME);
			parmValue = new Value();
			parmValue.setContent(updatedEntry.getDomainName());
			eventParm.setValue(parmValue);
			eventParms.addParm(eventParm);
		}

		// Operating System
		if (updatedEntry.getOS() != null)
		{
			// Add new node label
			eventParm = new Parm();
			eventParm.setParmName(EventConstants.PARM_NODE_OPERATING_SYSTEM);
			parmValue = new Value();
			parmValue.setContent(updatedEntry.getOS());
			eventParm.setValue(parmValue);
			eventParms.addParm(eventParm);
		}
		
		// Add Parms to the event
		newEvent.setParms(eventParms);
		
		/// Add event to the list of events to be sent out.
		m_eventList.add(newEvent);
		
		if (log.isDebugEnabled())
			log.debug("createNodeInfoChangedEvent: successfully created nodeInfoChanged event for nodeid: " + updatedEntry.getNodeId());
	}

