	int getIfIndex(InetAddress address)
	{
		Category log = ThreadCategory.getInstance(getClass());
		
		log.debug("getIfIndex: retrieving ifIndex for " + address.getHostAddress());
		if(m_ipAddrTable == null || m_ipAddrTable.getEntries() == null)
		{
			log.debug("getIfIndex: Illegal index, no table present.");
			throw new IndexOutOfBoundsException("Illegal Index, no table present");
		}

		if (log.isDebugEnabled())
			log.debug("getIfIndex: num ipAddrTable entries: " + m_ipAddrTable.getEntries().size());
		Iterator i = m_ipAddrTable.getEntries().iterator();
		while(i.hasNext())
		{
			IpAddrTableEntry entry = (IpAddrTableEntry)i.next();
			SnmpIPAddress snmpAddr = (SnmpIPAddress)entry.get(IpAddrTableEntry.IP_ADDR_ENT_ADDR);
			if(snmpAddr != null)
			{
				InetAddress ifAddr = null;
				try
				{
					ifAddr = snmpAddr.convertToIpAddress();
				}
				catch(SnmpBadConversionException e)
				{
					log.error("Failed to convert snmp collected address: " + ifAddr, e);
					continue;
				}

				if(ifAddr.equals(address))
				{
					// found it
					// extract the ifIndex
					//
					SnmpInt32 ndx = (SnmpInt32)entry.get(IpAddrTableEntry.IP_ADDR_IF_INDEX);
					log.debug("getIfIndex: got a match for address " + address.getHostAddress() + " index: " + ndx);
					if(ndx != null)
						return ndx.getValue();
				}
			}
		}
		log.debug("getIfIndex: no matching ipAddrTable entry for " + address.getHostAddress());
		return -1;
	}

