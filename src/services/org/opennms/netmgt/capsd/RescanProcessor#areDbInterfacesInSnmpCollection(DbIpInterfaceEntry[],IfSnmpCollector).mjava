        /**
         * This method is used to verify if each interface on a node stored in the database is in the specified
         * SNMP data collection.
	 *
         * @param ipInterfaces	the ipInterfaces on a node stored in the database
	 * @param snmpc		IfSnmpCollector object containing SNMP collected
	 * 			ipAddrTable information.
	 * 
	 * @return TRUE if each ipInterface is contained in the ipAddrTable of the specified SNMP collection.
         *
         */
        private boolean areDbInterfacesInSnmpCollection(DbIpInterfaceEntry[] dbInterfaces, IfSnmpCollector snmpc)
        {
		Category log = ThreadCategory.getInstance(getClass());
		
                // Sanity check...null parms?
		if (dbInterfaces == null || snmpc == null)
                {
			log.error("areDbInterfacesInSnmpCollection: empty dbInterfaces or IfSnmpCollector.");
			return false;
		}
                
		// SNMP collection successful?
		if (snmpc.failed())
		{
                        log.error("areDbInterfacesInSnmpCollection: Snmp Collector failed.");
			return false;
		}
                
		// Verify that SNMP collection contains ipAddrTable entries
		IpAddrTable ipAddrTable = null;
		
		if (snmpc.hasIpAddrTable())
			ipAddrTable = snmpc.getIpAddrTable();
		
		if ( ipAddrTable == null)
		{
                        log.error("areDbInterfacesInSnmpCollection: null ipAddrTable in the snmp collection");
			return false;
		}
                
                List ipAddrList = IpAddrTable.getIpAddresses(ipAddrTable.getEntries());
                
		// Loop through the interface table entries until there are no more
		// entries or we've found a match
                for (int i=0; i < dbInterfaces.length; i++)
                {
                        InetAddress ipaddr = dbInterfaces[i].getIfAddress();
  			// Skip non-IP or loopback interfaces
       			if (ipaddr.getHostAddress().equals("0.0.0.0") || 
       				ipaddr.getHostAddress().startsWith("127.")) 
       			{
       				continue;
       			}
                        
                        Iterator iter = ipAddrList.iterator();
                        boolean found = false;
                        while (iter.hasNext())
                        {
                                InetAddress addr = (InetAddress)iter.next();

  				// Skip non-IP or loopback interfaces
       				if (addr.getHostAddress().equals("0.0.0.0") || 
       					addr.getHostAddress().startsWith("127.")) 
       				{
       					continue;
       				}
                                
			        if (log.isDebugEnabled())
				        log.debug("areDbInterfacesInSnmpCollection: ipaddress in db: " + ipaddr.getHostAddress()
                                                + " ipaddress in ipAddrTable: " + addr.getHostAddress()); 
                                
                                if (ipaddr.getHostAddress().equals(addr.getHostAddress()))
                                {
                                        found = true;
			                if (log.isDebugEnabled())
				                log.debug("areDbInterfacesInSnmpCollection: found match for ipaddress: " 
                                                        + ipaddr.getHostAddress()); 
                                        break;
                                }
                        }
                        if (!found)
                        {
			        if (log.isDebugEnabled())
			                log.debug("areDbInterfacesInSnmpCollection: ipaddress : " + ipaddr.getHostAddress() 
                                                + " not in the snmp collection. Snmp collection is not usable.");
                                return false;
                        }
                }

                return true;
       }

