        /**
         * This method is responsible for generating a nodeAdded event and sending
         * it to eventd..
         *
         * @param nodeEntry     The node Added.
         * @param txNo          the transaction no.
         * @param callerUei     the Uei of the caller event.
         *
         */
        private void createAndSendNodeAddedEvent(DbNodeEntry nodeEntry, long txNo, String callerUei)
        {
		Category log = ThreadCategory.getInstance(getClass());
		if (log.isDebugEnabled())
			log.debug("createAndSendNodeAddedEvent:  nodeId  " + nodeEntry.getNodeId());
        
                Event newEvent = new Event();
                newEvent.setUei(EventConstants.NODE_ADDED_EVENT_UEI);
                newEvent.setSource("OpenNMS.Capsd");
                newEvent.setNodeid(nodeEntry.getNodeId());
                newEvent.setHost(Capsd.getLocalHostAddress());
                newEvent.setTime(EventConstants.formatToString(new java.util.Date()));

                // Add appropriate parms
                Parms eventParms = new Parms();
                Parm eventParm = null;
                Value parmValue = null;

                eventParm = new Parm();
                eventParm.setParmName(EventConstants.PARM_NODE_LABEL);
                parmValue = new Value();
                parmValue.setContent(nodeEntry.getLabel());
                eventParm.setValue(parmValue);
                eventParms.addParm(eventParm);

                // Add node label source
                eventParm = new Parm();
                eventParm.setParmName(EventConstants.PARM_NODE_LABEL_SOURCE);
                parmValue = new Value();
                char labelSource[] = new char[] {nodeEntry.getLabelSource()};
                parmValue.setContent(new String(labelSource));
                eventParm.setValue(parmValue);
                eventParms.addParm(eventParm);
                
                
                // Add Parms to the event
                newEvent.setParms(eventParms);

                // Send event to Eventd
                try
                {
                        EventIpcManagerFactory.getInstance().getManager().sendNow(newEvent);

                        if (log.isDebugEnabled())
                                log.debug("createdAndSendNodeAddedEvent: successfully sent nodeAdded event for nodeId: " 
                                        + nodeEntry.getNodeId());
                }
                catch(Throwable t)
                {
                        log.warn("run: unexpected throwable exception caught during send to middleware", t);
                        if (m_xmlrpc)
                        {
                                int status = EventConstants.XMLRPC_NOTIFY_FAILURE;
                                createAndSendXmlrpcNotificationEvent(txNo, callerUei, 
                                        "caught unexpected throwable exception.", status);
                        }
                }
        }                

