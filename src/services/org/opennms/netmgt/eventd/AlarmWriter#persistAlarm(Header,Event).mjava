    /**
     * The method that inserts the event into the database
     * 
     * @param eventHeader
     *            the event header
     * @param event
     *            the actual event to be inserted
     */
    public void persistAlarm(Header eventHeader, Event event) throws SQLException {
        if (event != null) {
            Category log = ThreadCategory.getInstance(AlarmWriter.class);

            // Check value of <logmsg> attribute 'dest', if set to
            // "donotpersist" then simply return, the uei is not to be
            // persisted to the database
            String logdest = event.getLogmsg().getDest();
            if (logdest.equals("donotpersist") || event.getReductionKey() == null) {
                log.debug("AlarmWriter: uei '" + event.getUei() + "' marked as 'doNotPersist' or reductionKey is null.");
                return;
            } else {
                if (log.isDebugEnabled()) {
                    log.debug("AlarmWriter dbRun for : " + event.getUei() + " nodeid: " + event.getNodeid() + " ipaddr: " + event.getInterface() + " serviceid: " + event.getService());
                }
            }

            try {
                if (!isReductionNeeded(eventHeader, event)) {
                    if (log.isDebugEnabled())
                        log.debug("AlarmWriter not reducing event for: " +event.getDbid()+ ": "+ event.getUei());
                    insertAlarm(eventHeader, event);
                } else {
                    if (log.isDebugEnabled())
                        log.debug("AlarmWriter is reducing event for: " +event.getDbid()+ ": "+ event.getUei());
                    updateAlarm(eventHeader, event);
                }

                // commit
                m_dbConn.commit();
            } catch (SQLException e) {
                log.warn("Error inserting event into the datastore", e);
                try {
                    m_dbConn.rollback();
                } catch (Exception e2) {
                    log.warn("Rollback of transaction failed!", e2);
                }

                throw e;
            }

            if (log.isDebugEnabled())
                log.debug("AlarmWriter finished for : " + event.getUei());
        }
    }

