	/**
	 * Constructor
	 */
	public EventIpcManagerDefaultImpl()
	{
		m_ueiListeners	  = new Hashtable();
		m_listeners       = new ArrayList();

		m_listenerThreads = new Hashtable();


		// load the eventd configuration and get the number of threads that
		// should process the events
		EventdConfigFactory eFactory = null;
		try
		{
			EventdConfigFactory.reload();
			eFactory = EventdConfigFactory.getInstance();
		}
		catch(MarshalException ex)
		{
			Category log = ThreadCategory.getInstance(this.getClass());
			log.error("Failed to load eventd configuration", ex);
			throw new UndeclaredEventException(ex);
		}
		catch(ValidationException ex)
		{
			Category log = ThreadCategory.getInstance(this.getClass());
			log.error("Failed to load eventd configuration", ex);
			throw new UndeclaredEventException(ex);
		}
		catch(IOException ex)
		{
			Category log = ThreadCategory.getInstance(this.getClass());
			log.error("Failed to load eventd configuration", ex);
			throw new UndeclaredEventException(ex);
		}

		// get number of threads
		int numReceivers = eFactory.getReceivers();

		// create handler pool
		m_eventHandlerPool = new RunnableConsumerThreadPool( "EventHandlerPool", 0.6f, 1.0f, numReceivers);

		// start pool
		m_eventHandlerPool.start();

		// database sequence query string
		m_getNextEventIdStr = eFactory.getGetNextEventID();

	}

