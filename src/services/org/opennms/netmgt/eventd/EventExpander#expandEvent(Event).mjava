    /**
     * <p>
     * This method is invoked to check and configure a received event. The event
     * configuration manager is consulted to find the appropriate configuration
     * that is used to expand the event. In addition, the security parameters
     * from the configuration manager is consulted to ensure that secure files
     * are cleared out if necessary.
     * </p>
     * 
     * <p>
     * Any secure fields that exists in the incomming event are cleared during
     * expansion.
     * </p>
     * 
     * @param e
     *            The event to expand if necesary.
     * 
     */
    public static synchronized void expandEvent(Event e) {
        org.opennms.netmgt.xml.eventconf.Event econf = lookup(e);

        if (econf != null) {
            if (EventConfigurationManager.isSecureTag("mask"))
                e.setMask(null);
            if (e.getMask() == null && econf.getMask() != null) {
                e.setMask(transform(econf.getMask()));
            }

            // Copy the UEI
            //
            if (e.getUei() == null)
                e.setUei(econf.getUei());

            // Copy the Snmp Information
            //
            if (e.getSnmp() == null && econf.getSnmp() != null)
                e.setSnmp(transform(econf.getSnmp()));

            // Copy the description
            //
            if (EventConfigurationManager.isSecureTag("descr"))
                e.setDescr(null);
            if (e.getDescr() == null && econf.getDescr() != null)
                e.setDescr(econf.getDescr());

            // Copy the log message if any
            //
            if (EventConfigurationManager.isSecureTag("logmsg"))
                e.setLogmsg(null);
            if (e.getLogmsg() == null && econf.getLogmsg() != null)
                e.setLogmsg(transform(econf.getLogmsg()));

            // Copy the severity
            //
            if (EventConfigurationManager.isSecureTag("severity"))
                e.setSeverity(null);
            if (e.getSeverity() == null && econf.getSeverity() != null)
                e.setSeverity(econf.getSeverity());

            // Set the correlation information
            //
            if (EventConfigurationManager.isSecureTag("correlation"))
                e.setCorrelation(null);
            if (e.getCorrelation() == null && econf.getCorrelation() != null)
                e.setCorrelation(transform(econf.getCorrelation()));

            // Copy the operator instruction
            //
            if (EventConfigurationManager.isSecureTag("operinstruct"))
                e.setOperinstruct(null);
            if (e.getOperinstruct() == null && econf.getOperinstruct() != null)
                e.setOperinstruct(econf.getOperinstruct());

            // Copy the auto actions.
            //
            if (EventConfigurationManager.isSecureTag("autoaction"))
                e.clearAutoaction();
            if (e.getAutoactionCount() == 0 && econf.getAutoactionCount() > 0) {
                Enumeration eter = econf.enumerateAutoaction();
                while (eter.hasMoreElements()) {
                    org.opennms.netmgt.xml.eventconf.Autoaction src = (org.opennms.netmgt.xml.eventconf.Autoaction) eter.nextElement();
                    e.addAutoaction(transform(src));
                }
            }

            // Convert the operator actions
            //
            if (EventConfigurationManager.isSecureTag("operaction"))
                e.clearOperaction();
            if (e.getOperactionCount() == 0 && econf.getOperactionCount() > 0) {
                Enumeration eter = econf.enumerateOperaction();
                while (eter.hasMoreElements()) {
                    org.opennms.netmgt.xml.eventconf.Operaction src = (org.opennms.netmgt.xml.eventconf.Operaction) eter.nextElement();
                    e.addOperaction(transform(src));
                }
            }

            // Convert the auto acknowledgement
            //
            if (EventConfigurationManager.isSecureTag("autoacknowledge"))
                e.setAutoacknowledge(null);
            if (e.getAutoacknowledge() == null && econf.getAutoacknowledge() != null)
                e.setAutoacknowledge(transform(econf.getAutoacknowledge()));

            // Convert the log group information
            //
            if (EventConfigurationManager.isSecureTag("loggroup"))
                e.clearLoggroup();
            if (e.getLoggroupCount() == 0 && econf.getLoggroupCount() > 0)
                e.setLoggroup(econf.getLoggroup());

            // Convert the trouble tickets.
            //
            if (EventConfigurationManager.isSecureTag("tticket"))
                e.setTticket(null);
            if (e.getTticket() == null && econf.getTticket() != null)
                e.setTticket(transform(econf.getTticket()));

            // Convert the forward entry
            //
            if (EventConfigurationManager.isSecureTag("forward"))
                e.clearForward();
            if (e.getForwardCount() == 0 && econf.getForwardCount() > 0) {
                Enumeration eter = econf.enumerateForward();
                while (eter.hasMoreElements()) {
                    org.opennms.netmgt.xml.eventconf.Forward src = (org.opennms.netmgt.xml.eventconf.Forward) eter.nextElement();
                    e.addForward(transform(src));
                }
            }

            // Convert the script entry
            //
            if (EventConfigurationManager.isSecureTag("script"))
                e.clearScript();
            if (e.getScriptCount() == 0 && econf.getScriptCount() > 0) {
                Enumeration eter = econf.enumerateScript();
                while (eter.hasMoreElements()) {
                    org.opennms.netmgt.xml.eventconf.Script src = (org.opennms.netmgt.xml.eventconf.Script) eter.nextElement();
                    e.addScript(transform(src));
                }
            }

            // Copy the mouse over text
            //
            if (EventConfigurationManager.isSecureTag("mouseovertext"))
                e.setMouseovertext(null);
            if (e.getMouseovertext() == null && econf.getMouseovertext() != null)
                e.setMouseovertext(econf.getMouseovertext());

            // Copy the reductionKey
            if (EventConfigurationManager.isSecureTag("reductionKey"))
                e.setReductionKey(null);
            if (e.getReductionKey() == null && econf.getReductionKey() != null)
                e.setReductionKey(econf.getReductionKey());

        } // end fill of event using econf

        // do the event parm expansion
        expandParms(e, m_dbConn);

    } // end expandEvent()

