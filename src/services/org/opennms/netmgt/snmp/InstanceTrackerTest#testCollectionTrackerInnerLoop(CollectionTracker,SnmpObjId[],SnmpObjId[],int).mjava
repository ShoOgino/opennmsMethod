    private void testCollectionTrackerInnerLoop(CollectionTracker tracker, final SnmpObjId[] expectedOids, SnmpObjId[] receivedOids, final int nonRepeaters) {
        class OidCheckedPduBuilder extends PduBuilder {
            int count = 0;

            public void addOid(SnmpObjId snmpObjId) {
                assertEquals(expectedOids[count].decrement(), snmpObjId);
                count++;
            }

            public void setNonRepeaters(int numNonRepeaters) {
                assertEquals(nonRepeaters, numNonRepeaters);
            }

            public void setMaxRepititions(int maxRepititions) {
                assertTrue("MaxRepititions must be positive", maxRepititions > 0);
            }
            
            public int getCount() {
                return count;
            }
            
        }

        // ensure it needs to receive something - object id for the instance
        assertFalse(tracker.isFinished());
        // ensure that is asks for the oid preceeding
        OidCheckedPduBuilder builder = new OidCheckedPduBuilder();
        ResponseProcessor rp = tracker.buildNextPdu(builder);
        assertNotNull(rp);
        assertEquals(expectedOids.length, builder.getCount());
        rp.processErrors(0, 0);
        for(int i = 0; i < receivedOids.length; i++)
            rp.processResponse(receivedOids[i], new TestSnmpValue("Value"));
        
        
    }

