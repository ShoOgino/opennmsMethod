    public void sendV2TestTrap(InetAddress agentAddress, int port, String community, SnmpObjId enterpriseId, int specific, long timeStamp) {
        boolean isGeneric = false;
        SnmpObjId trapOID;
        if (SnmpObjId.get(".1.3.6.1.6.3.1.1.5").isPrefixOf(enterpriseId)) {
            isGeneric = true;
            trapOID = enterpriseId;
        } else {
            trapOID = SnmpObjId.get(enterpriseId, new SnmpInstId(specific));
            // XXX or should it be this
            // trap OID = enterprise + ".0." + specific;
        }
        SnmpPduRequest pdu = new SnmpPduRequest(SnmpPduPacket.V2TRAP);
        pdu.addVarBindAt(0, new SnmpVarBind(".1.3.6.1.2.1.1.3.0", new SnmpTimeTicks(0)));
        pdu.addVarBindAt(1, new SnmpVarBind(".1.3.6.1.6.3.1.1.4.1.0", new SnmpObjectId(trapOID.getIds())));
        if (isGeneric) {
            pdu.addVarBindAt(2, new SnmpVarBind(".1.3.6.1.6.3.1.1.4.3.0", new SnmpObjectId(enterpriseId.getIds())));
        }

        for (Iterator it = m_registrations.values().iterator(); it.hasNext();) {
            RegistrationInfo info = (RegistrationInfo) it.next();
            if (port == info.getPort())
                info.getHandler().snmpReceivedTrap(info.getSession(), agentAddress, port, new SnmpOctetString(community.getBytes()), pdu);
        }

    }

