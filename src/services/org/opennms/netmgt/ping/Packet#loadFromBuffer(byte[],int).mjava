	/**
	 * Loads the data from the passed buffer into the
	 * current object. Once loaded the object's values
	 * should reflect the contents of the buffer.
	 *
	 * @param buf		The buffer to load from
	 * @param offset	The offset to begin loading from
	 *
	 * @return The offset of the next byte of data that was not
	 * 	used to initialize this object.
	 *
	 * @exception java.lang.IndexOutOfBoundsException
	 *	Thrown if there is not enough data contained in the buffer to 
	 * 	sufficent set the state of the object
	 *
	 */
	public int loadFromBuffer(byte[] buf, int offset)
	{
		if((buf.length - offset) < getNetworkSize())
			throw new IndexOutOfBoundsException("Insufficient Data");

		offset = super.loadFromBuffer(buf, offset);
		if(!isEchoReply() && !isEchoRequest())
			throw new IllegalArgumentException("Invalid type, must be echo request/reply packet");

		m_sent = 0;
		for(int x = 0; x < 8; x++)
		{
			m_sent <<= 8;
			m_sent |= byteToLong(buf[offset++]);
		}

		m_recv = 0;
		for(int x = 0; x < 8; x++)
		{
			m_recv <<= 8;
			m_recv |= byteToLong(buf[offset++]);
		}

		m_tid  = 0;
		for(int x = 0; x < 8; x++)
		{
			m_tid <<= 8;
			m_tid |= byteToLong(buf[offset++]);
		}

                m_rtt = 0;
                for(int x = 0; x < 8; x++)
                {
                        m_rtt <<= 8;
                        m_rtt |= byteToLong(buf[offset++]);
                }
	
		if(m_pad == null)
			m_pad = new byte[PAD_SIZE];
		for(int x = 0; x < PAD_SIZE; x++)
			m_pad[x] = buf[offset++];

		return offset;
	}

