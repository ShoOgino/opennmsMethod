    /**
     * 
     */
    private void automaticAcknowledge(Event event) {
        try {
            Collection ueis = getConfigManager().getConfiguration().getAutoAcknowledgeCollection();

            // see if this event has an auto acknowledge for a notice
            Iterator i = ueis.iterator();
            while (i.hasNext()) {
                AutoAcknowledge curAck = (AutoAcknowledge) i.next();
                if (curAck.getUei().equals(event.getUei())) {
                    try {
                        ThreadCategory.getInstance(getClass()).debug("Acknowledging event " + curAck.getAcknowledge() + " " + event.getNodeid() + ":" + event.getInterface() + ":" + event.getService());
                        getNotificationManager().acknowledgeNotice(event, curAck.getAcknowledge(), curAck.getMatch());
                    } catch (SQLException e) {
                        ThreadCategory.getInstance(getClass()).error("Failed to auto acknowledge notice.", e);
                    }
                }
                // if the clear flag is set, swap the event uei as the ack uei
                // and ack the second notice
                if (curAck.getUei().equals(event.getUei()) && curAck.getClear()) {
                    try {
                        ThreadCategory.getInstance(getClass()).debug("Acknowledging source event " + event.getUei() + " " + event.getNodeid() + ":" + event.getInterface() + ":" + event.getService());
                        getNotificationManager().acknowledgeNotice(event, event.getUei(), curAck.getMatch());
                    } catch (SQLException e) {
                        ThreadCategory.getInstance(getClass()).error("Failed to auto acknowledge source notice.", e);
                    }
                }

            }
        } catch (Exception e) {
            ThreadCategory.getInstance(getClass()).error("Unable to auto acknowledge notice due to exception.", e);
        }
    }

