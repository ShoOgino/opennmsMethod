	/**
	 *
	 */
	private void automaticAcknowledge(Event event)
	{
		try
                {
		Collection ueis = NotifdConfigFactory.getConfiguration().getAutoAcknowledgeCollection();
		
		List origNotifIds = null;		
		//see if this event has an auto acknowledge for a notice
		Iterator i = ueis.iterator();
		while(i.hasNext())
		{
			AutoAcknowledge curAck = (AutoAcknowledge)i.next();
			if (curAck.getUei().equals(event.getUei()))
			{
				try
				{
					ThreadCategory.getInstance(getClass()).debug("Acknowledging event " + curAck.getAcknowledge() + " " + event.getNodeid()+":"+event.getInterface()+":"+event.getService());
					//Get a copy of all unacknowledged messages for the original event - we need them a bit later
					origNotifIds =
						NotificationFactory.getNotifIds(
							event,
							curAck.getAcknowledge(),
							curAck.getMatch());

					NotificationFactory.getInstance().acknowledgeNotice(event, curAck.getAcknowledge(), curAck.getMatch());
				}
				catch (SQLException e)
				{
					ThreadCategory.getInstance(getClass()).error("Failed to auto acknowledge notice.", e);
				}
			}
			// if the clear flag is set, swap the event uei as the ack uei and ack the second notice
			if (curAck.getUei().equals(event.getUei()) && curAck.getClear())
			{
                                try
                                {
                                        ThreadCategory.getInstance(getClass()).debug("Acknowledging source event " + event.getUei() + " " + event.getNodeid()+":"+event.getInterface()+":"+event.getService());
                                        NotificationFactory.getInstance().acknowledgeNotice(event, event.getUei(), curAck.getMatch());
                                }
                                catch (SQLException e)
                                {
                                        ThreadCategory.getInstance(getClass()).error("Failed to auto acknowledge source notice.", e);
                                }
				//Now check for anyone who received the original notice (and who hasn't ack'd their message yet)
				//and send a notice to them so they know things are fixed
				Iterator iter = origNotifIds.iterator();
				while (iter.hasNext()) {
					int thisNotifId = ((Integer) iter.next()).intValue();
					sendMessageToReceiversOfNotice(thisNotifId, event);
				}
                        }

		}
	}
                catch (Exception e)
                {
                        ThreadCategory.getInstance(getClass()).error("Unable to auto acknowledge notice due to exception.", e);
                }
	}

