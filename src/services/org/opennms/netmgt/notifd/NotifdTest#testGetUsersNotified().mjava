    public void testGetUsersNotified() throws Exception {
        MockInterface iface = m_network.getInterface(1, "192.168.1.1");

        Date downDate = new Date();
        long finishedDowns = anticipateNotificationsForGroup("interface 192.168.1.1 down.", "InitialGroup", downDate, 0);

        //bring node down now
        Event event = iface.createDownEvent(downDate);
        m_eventMgr.sendEventToListeners(event);

        sleep(1000);
        
        Collection expectedResults = new LinkedList();
        Collection users = getUsersInGroup("InitialGroup");
        for (Iterator userIt = users.iterator(); userIt.hasNext();) {
            String userID = (String) userIt.next();
            List cmdList = new LinkedList();
            cmdList.add(userID);
            cmdList.add("mockNotifier");
            expectedResults.add(cmdList);
        }
        
        Collection notifIds = m_db.findNoticesForEvent(event);
        
        for (Iterator notifIt = notifIds.iterator(); notifIt.hasNext();) {
            Integer notifId = (Integer) notifIt.next();
            
            final Collection actualResults = new LinkedList();
            RowProcessor rp = new RowProcessor() {
                public void processRow(ResultSet rs) throws SQLException {
                    List cmdList = new LinkedList();
                    cmdList.add(rs.getString("userID"));
                    cmdList.add(rs.getString("media"));
                    actualResults.add(cmdList);
                }
            };
            m_notificationManager.forEachUserNotification(notifId.intValue(), rp);
            
            assertEquals(expectedResults, actualResults);
        }
    }

