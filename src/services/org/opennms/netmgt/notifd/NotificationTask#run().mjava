    /**
     */
    public void run() {
        Category log = ThreadCategory.getInstance(getClass());

        boolean outstanding = false;
        try {
            outstanding = m_notifd.getNotificationManager().noticeOutstanding(m_notifyId);
        } catch (Exception e) {
            log.error("Unable to get response status on notice #" + m_notifyId, e);
        }

        // check to see if someone has responded, if so remove all the brothers
        if (outstanding) {
            try {
                if (m_notifd.getUserManager().isUserOnDuty(m_user.getUserId(), Calendar.getInstance())) {
                    // send the notice

                    ExecutorStrategy command = null;
                    String cntct = "";

                    for (int i = 0; i < m_commands.length; i++) {
                        if (m_user.getUserId().equals("email-address")) {
                            cntct = m_user.getContact()[0].getInfo();
                        } else {
                            cntct = m_notifd.getUserManager().getContactInfo(m_user.getUserId(), m_commands[i].getName());
                        }
                        try {
                            m_notifd.getNotificationManager().updateNoticeWithUserInfo(m_user.getUserId(), m_notifyId, m_commands[i].getName(), cntct);
                        } catch (SQLException e) {
                            log.error("Could not insert notice info into database, aborting send notice...", e);
                            continue;
                        }
                        String binaryCommand = m_commands[i].getBinary();
                        if (binaryCommand == null) {
                            log.error("binary flag not set for command: " + m_commands[i].getExecute() + ".  Guessing false.");
                            binaryCommand = "false";
                        }
                        if (binaryCommand.equals("true")) {
                            command = new CommandExecutor();
                        } else {
                            command = new ClassExecutor();
                        }
                        log.debug("Class created is: " + command.getClass());

                        int returnCode = command.execute(m_commands[i].getExecute(), getArgumentList(m_commands[i]));
                        log.debug("command " + m_commands[i].getName() + " return code = " + returnCode);
                    }
                } else {
                    log.debug("User " + m_user.getUserId() + " is not on duty, skipping...");
                }
            } catch (IOException e) {
                log.debug("Could not get user duty schedule information: ", e);
            } catch (MarshalException e) {
                log.debug("Could not get user duty schedule information: ", e);
            } catch (ValidationException e) {
                log.debug("Could not get user duty schedule information: ", e);
            }
        } else {
            // remove all the related notices that have yet to be sent
            for (int i = 0; i < m_siblings.size(); i++) {
                NotificationTask task = (NotificationTask) m_siblings.get(i);

                // FIXME: Reported on discuss list and not found to ever
                // be initialized anywhere.
                // m_notifTree.remove(task);
            }
        }
    }

