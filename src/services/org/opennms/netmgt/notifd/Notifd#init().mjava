    public synchronized void init() {
        ThreadCategory.setPrefix(LOG4J_CATEGORY);

        m_noticeQueues = new HashMap();
        m_queueHandlers = new HashMap();
        m_eventReader = null;
        try {
            NotifdConfigFactory.reload();

            ThreadCategory.getInstance(getClass()).info("Notification status = " + NotifdConfigFactory.getPrettyStatus());

            Queue queues[] = NotifdConfigFactory.getConfiguration().getQueue();
            for (int i = 0; i < queues.length; i++) {
                NoticeQueue curQueue = new NoticeQueue();

                Class handlerClass = Class.forName(queues[i].getHandlerClass().getName());
                NotifdQueueHandler handlerQueue = (NotifdQueueHandler) handlerClass.newInstance();

                handlerQueue.setQueueID(queues[i].getQueueId());
                handlerQueue.setNoticeQueue(curQueue);
                handlerQueue.setInterval(queues[i].getInterval());

                m_noticeQueues.put(queues[i].getQueueId(), curQueue);
                m_queueHandlers.put(queues[i].getQueueId(), handlerQueue);
            }
        } catch (Throwable t) {
            ThreadCategory.getInstance(getClass()).warn("start: Failed to load notifd queue handlers.", t);
        }

        // start the event reader
        //
        try {
            NotifdConfigFactory.init();
            m_eventReader = new BroadcastEventProcessor(m_noticeQueues);
        } catch (Exception ex) {
            ThreadCategory.getInstance(getClass()).error("Failed to setup event receiver", ex);
            throw new UndeclaredThrowableException(ex);
        }
    }

