    /**
     * This constructor is called to initilize the event receiver. A connection
     * to the message server is opened and this instance is setup as the
     * endpoint for broadcast events. When a new event arrives it is processed
     * and the appropriate action is taken.
     * 
     */
    BroadcastEventProcessor(Notifd notifd, Map noticeQueues) {
        // set up the exectuable queue first
        //
        m_notifd = notifd;
        m_noticeQueues = noticeQueues;

        // initialize the factory instances
        try {
            DatabaseConnectionFactory.init();
            GroupFactory.init();
            UserFactory.init();
            NotificationFactory.init();
            DestinationPathFactory.init();
            NotificationCommandFactory.init();
        } catch (Exception e) {
            ThreadCategory.getInstance(getClass()).error("Error getting group, user notification or command factory instances: " + e.getMessage(), e);
            return;
        }

        // start to listen for events
        getEventManager().addEventListener(this);
    }

