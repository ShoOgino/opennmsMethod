    private void sendResolvedNotifications(Collection notifIDs, Event event, String acknowledge, String[] match) throws Exception {
        for (Iterator it = notifIDs.iterator(); it.hasNext();) {
            int notifId = ((Integer) it.next()).intValue();
            final Map parmMap = rebuildParameterMap(notifId);
            
            String queueID = getNotificationManager().getQueueForNotification(notifId);
            
            
            final Map userNotifitcations = new HashMap();
            RowProcessor acknowledgeNotification = new RowProcessor() {
                public void processRow(ResultSet rs) throws SQLException {
                    String userID = rs.getString("userID");
                    String cmd = rs.getString("media");
                    List cmdList = (List)userNotifitcations.get(userID);
                    if (cmdList == null) {
                        cmdList = new ArrayList();
                        userNotifitcations.put(userID, cmdList);
                    }
                    cmdList.add(cmd);
                }
            };
            getNotificationManager().forEachUserNotification(notifId, acknowledgeNotification);
            
            for (Iterator userIt = userNotifitcations.keySet().iterator(); userIt.hasNext();) {
                String userID = (String) userIt.next();
                List cmdList = (List)userNotifitcations.get(userID);
                String[] cmds = (String[]) cmdList.toArray(new String[cmdList.size()]);
                sendResolvedNotificationsToUser(queueID, userID, cmds, parmMap);
            }
            
        }
    }

