        /**
	 * This method determines if the notice should continue based on the status of the notify
         */
	private boolean continueWithNotice(Event event)
	{
		String nodeID = String.valueOf(event.getNodeid());
		String ipAddr = event.getInterface();
		String service = event.getService();
		
		boolean continueNotice = false;
		
		//can't check the database if any of these are null, so let the notice continue
		if (nodeID==null || ipAddr==null || service==null)
		{
			ThreadCategory.getInstance(getClass()).debug("nodeID=" + nodeID + " ipAddr=" + ipAddr + " service=" + service + ". Not checking DB, allowing notice to continue.");
			return true;
		}
		
		try
		{
			//check the database to see if notices were turned off for this service
			String notify = NotificationFactory.getInstance().getServiceNoticeStatus(nodeID,
								          	                 ipAddr,
										                 service);
			if ("Y".equals(notify))
			{
				continueNotice = true;
				ThreadCategory.getInstance(getClass()).debug("notify status for service " + service + " on interface/node " + ipAddr + "/" + nodeID + " is 'Y', continuing...");
			}
			else
			{
				ThreadCategory.getInstance(getClass()).debug("notify status for service " + service + " on interface/node " + ipAddr + "/" + nodeID + " is " + notify + ", not continuing...");
			}
		}
		catch (Exception e)
		{
			ThreadCategory.getInstance(getClass()).error("Not able to get notify status for service " + service + " on interface/node " + ipAddr + "/" + nodeID + ". Not sending notice... "  + e.getMessage());
		}
		
		//in case of a error we will return false
		return continueNotice;
	}

