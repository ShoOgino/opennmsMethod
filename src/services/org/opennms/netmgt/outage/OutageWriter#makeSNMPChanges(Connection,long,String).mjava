	/**
	 * <p>This method is called when the service jsut deleted was SNMP - so that
	 * appropriate changes can be effected in the database tables to mark this
	 * deletion.</p>
	 *
	 * @param nodeID		NodeID associated with the interface
	 * @param ipAddr		IP Address associated with the interface
	 * 
	 * @throws SQLException	If there is a problem modifying the database.
	 */
	private void makeSNMPChanges(Connection dbConn, long nodeID, String ipAddr)
		throws SQLException
	{
		Category log = ThreadCategory.getInstance(OutageWriter.class);
		
		if (log.isDebugEnabled())
			log.debug("makeSNMPChanges: clearing snmp info entry from 'node' table");			
		// See if this was the primary SNMP interface for the node,
		// clear snmp data from the node table

	 	// Prepare SQL statement used to clear snmp info for a nodeid in the 'node' table
		PreparedStatement clearNodeSnmpInfoStmt = dbConn.prepareStatement(OutageConstants.DB_CLEAR_NODE_SNMP_INFO);
		clearNodeSnmpInfoStmt.setLong(1, nodeID);

		clearNodeSnmpInfoStmt.executeUpdate();

		// close statement
		clearNodeSnmpInfoStmt.close();

		if (log.isDebugEnabled())
			log.debug("makeSNMPChanges: cleared snmp info entry from 'node' table");			
		if (log.isDebugEnabled())
				log.debug("makeSNMPChanges: clearing snmp info entry from 'ipinterface' table");			

		// clear snmp data from ipinterface table

		// Prepare SQL statement used to clear snmp info for a nodeid/ip
		// from the 'ipinterface' table
		PreparedStatement clearInterfaceSnmpInfoStmt = dbConn.prepareStatement(OutageConstants.DB_CLEAR_INTERFACE_SNMP_INFO);
		clearInterfaceSnmpInfoStmt.setLong(1, nodeID);
			
		clearInterfaceSnmpInfoStmt.executeUpdate();

		// close statement
		clearInterfaceSnmpInfoStmt.close();

		if (log.isDebugEnabled())
			log.debug("makeSNMPChanges: cleared snmp info entry from 'ipinterface' table");			
	}

