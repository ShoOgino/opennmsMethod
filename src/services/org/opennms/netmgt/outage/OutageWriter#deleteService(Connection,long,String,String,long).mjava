	/**
	 * <p>Delete the service and associated info from the database.</p>
         *
         * @param dbConn        JDBC database connection
	 * @param nodeID	NodeID associated with the interface
	 * @param ipAddr	IP Address associated with the interface
	 * @param serviceName 	Name of the service to delete
	 * @param serviceID	ID of the service to delete
	 * 
	 */
	private void deleteService(Connection dbConn, long nodeID, String ipAddr, String serviceName, 
                long serviceID) throws SQLException
	{
		Category log = ThreadCategory.getInstance(OutageWriter.class);

                PreparedStatement stmt = null;
	
                // There are other services exist on the node/interface pair. Just delete
                // the node/interface/service tuple.
                        
                // Deleting all the userNotified info associated with the nodeid/interface/service tuple
                stmt = dbConn.prepareStatement(OutageConstants.DB_DELETE_USERSNOTIFIED_ON_SERVICE);
                stmt.setLong(1, nodeID);
                stmt.setString(2, ipAddr);
                stmt.setLong(3, serviceID);
                stmt.executeUpdate();

                stmt.close();
		if (log.isDebugEnabled())
		        log.debug("handleDeleteService: deleted all userNotified info on: " 
                                + nodeID + "/" + ipAddr + "/" + serviceName);

                // Deleting all the notifications assocaited with the nodeid/interface/service tuple
                stmt = dbConn.prepareStatement(OutageConstants.DB_DELETE_NOTIFICATIONS_ON_SERVICE);
                stmt.setLong(1, nodeID);
                stmt.setString(2, ipAddr);
                stmt.setLong(3, serviceID);
                stmt.executeUpdate();

                stmt.close();
		if (log.isDebugEnabled())
		        log.debug("handleDeleteService: deleted all notifications on: " 
                                + nodeID + "/" + ipAddr + "/" + serviceName);

                // Deleting all the outages assocaited with the nodeid/interface/service tuple
                stmt = dbConn.prepareStatement(OutageConstants.DB_DELETE_OUTAGES_ON_SERVICE);
                stmt.setLong(1, nodeID);
                stmt.setString(2, ipAddr);
                stmt.setLong(3, serviceID);
                stmt.executeUpdate();

                stmt.close();
	        if (log.isDebugEnabled())
	                log.debug("handleDeleteService: deleted all outages on: " 
                                + nodeID + "/" + ipAddr + "/" + serviceName);

                // Deleting all the events assocaited with the nodeid/interface/service tuple
                stmt = dbConn.prepareStatement(OutageConstants.DB_DELETE_EVENTS_ON_SERVICE);
                stmt.setLong(1, nodeID);
                stmt.setString(2, ipAddr);
                stmt.setLong(3, serviceID);
                stmt.executeUpdate();

                stmt.close();
		if (log.isDebugEnabled())
		        log.debug("handleDeleteService: deleted all events on: " 
                                + nodeID + "/" + ipAddr + "/" + serviceName);

                // Deleting the service
                stmt = dbConn.prepareStatement(OutageConstants.DB_DELETE_SERVICE);
                stmt.setLong(1, nodeID);
                stmt.setString(2, ipAddr);
                stmt.setLong(3, serviceID);
                stmt.executeUpdate();

                stmt.close();
		if (log.isDebugEnabled())
		        log.debug("handleDeleteService: deleted the service based on: " 
                                + nodeID + "/" + ipAddr + "/" + serviceName);
			
	}

