	/**
	 * <p>Verify the specified interface is primary interface.</p>
	 *
         * @param dbConn        JDBC database connection
	 * @param nodeID	NodeID associated with the interface
	 * @param ipAddr	IP Address associated with the interface
	 * 
	 */
	private boolean isSnmpPrimaryInterface(Connection dbConn, long nodeID, String ipAddr)
	{
		Category log = ThreadCategory.getInstance(OutageWriter.class);
		
		if (log.isDebugEnabled())
			log.debug("isSnmpPrimaryInterface: verify if the interface: " + ipAddr 
                                + " is the primary interface on node: " + nodeID);
                        
                char isPrimary = 'N';
                PreparedStatement stmt = null;
		try 
                {
                        stmt = dbConn.prepareStatement(OutageConstants.DB_QUERY_PRIMARY_INTERFACE);
		        stmt.setLong(1, nodeID);
                        stmt.setString(2, ipAddr);

                        ResultSet rs = stmt.executeQuery();

                        if (rs.next())
                        {
                                isPrimary = rs.getString(1).charAt(0);
		                if (log.isDebugEnabled())
			                log.debug("isSnmpPrimaryInterface: Interface " + ipAddr 
                                                + " is " + isPrimary + " on node: " + nodeID);
                        }
                        rs.close();
                        stmt.close();
		}
                catch (SQLException e)
                {
		        log.warn("isSnmpPrimaryInterface: get SQL Exception: ", e);
                }
                finally
                {
                        try
                        {
                                if (stmt != null)
                                        stmt.close();
                        }
                        catch (SQLException sqlE) {}
                }
                return isPrimary == 'P';
	}

