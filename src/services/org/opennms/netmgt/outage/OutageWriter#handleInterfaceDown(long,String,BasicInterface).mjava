    /**
     * Handles interface down events. Record the 'interfaceDown' event in the
     * outages table - create a new outage entry for each active service of the
     * nodeid/ip if service not already down.
     */
    private void handleInterfaceDown(long eventID, String eventTime, BasicInterface iface) {
        if (eventID == -1 || !iface.isValid()) {
            ThreadCategory.getInstance(getClass()).warn(EventConstants.INTERFACE_DOWN_EVENT_UEI + " ignored - info incomplete - eventid/nodeid/ip: " + eventID + "/" + iface);
            return;
        }

        Connection dbConn = null;
        try {
            dbConn = getConnection();

            iface.openOutages(dbConn, eventID, eventTime);

            // commit work
            DbUtil.commit(dbConn, "Outage recorded for all active services for " + iface, "interfaceDown could not be recorded  for nodeid/ipAddr: " + iface);

        } catch (SQLException sqle) {
            DbUtil.rollback(dbConn, "SQL exception while handling \'interfaceDown\'", sqle);
        } finally {
            DbUtil.close(dbConn);
        }
    }

