    /**
     * Handles interface down events. Record the 'interfaceDown' event in the
     * outages table - create a new outage entry for each active service of the
     * nodeid/ip if service not already down.
     */
    private void handleInterfaceDown(long eventID, String eventTime, BasicInterface iface) {
        Category log = ThreadCategory.getInstance(OutageWriter.class);
        
        if (eventID == -1 || !iface.isValid()) {
            log.warn(EventConstants.INTERFACE_DOWN_EVENT_UEI + " ignored - info incomplete - eventid/nodeid/ip: " + eventID + "/" + iface);
            return;
        }

        Connection dbConn = null;
        try {
            dbConn = getConnection();

            // Set the database commit mode
            dbConn.setAutoCommit(false);

            // Prepare SQL statement used to get active services for the
            // nodeid/ip
            PreparedStatement activeSvcsStmt = dbConn.prepareStatement(OutageConstants.DB_GET_ACTIVE_SERVICES_FOR_INTERFACE);

            // Prepare SQL statement used to see if there is already an
            // 'open' record for the node/ip/svc combination
            PreparedStatement openStmt = dbConn.prepareStatement(OutageConstants.DB_OPEN_RECORD);
            // Prepare statement to insert a new outage table entry
            PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE);

            // Prepare statement to insert a new outage table entry
            newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE);

            if (log.isDebugEnabled())
                log.debug("handleInterfaceDown: creating new outage entries...");

            activeSvcsStmt.setLong(1, iface.getNodeId());
            activeSvcsStmt.setString(2, iface.getIpAddr());
            ResultSet activeSvcsRS = activeSvcsStmt.executeQuery();
            while (activeSvcsRS.next()) {
                BasicService svc = new BasicService(iface, activeSvcsRS.getLong(1));
                if (svc.openOutageExists(dbConn)) {
                    if (log.isDebugEnabled())
                        log.debug("handleInterfaceDown: " + svc + " already down");
                } else {
                    newOutageWriter.setLong(1, getNextOutageId(dbConn));
                    newOutageWriter.setLong(2, eventID);
                    newOutageWriter.setLong(3, svc.getNodeId());
                    newOutageWriter.setString(4, svc.getIpAddr());
                    newOutageWriter.setLong(5, svc.getServiceId());
                    newOutageWriter.setTimestamp(6, convertEventTimeIntoTimestamp(eventTime));

                    // execute update
                    newOutageWriter.executeUpdate();

                    if (log.isDebugEnabled())
                        log.debug("handleInterfaceDown: Recording new outage for " + svc);
                }
            }
            // close result set
            activeSvcsRS.close();

            // commit work
            DbUtil.commit(log, dbConn, "Outage recorded for all active services for " + iface, "interfaceDown could not be recorded  for nodeid/ipAddr: " + iface);

            // close statements
            activeSvcsStmt.close();
            openStmt.close();
            newOutageWriter.close();
        } catch (SQLException sqle) {
            DbUtil.rollback(log, dbConn, "SQL exception while handling \'interfaceDown\'", sqle);
        } finally {
            DbUtil.close(log, dbConn);
        }
    }

