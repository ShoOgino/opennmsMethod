    /**
     * This method checks the outage table and determines if an open outage
     * entry exists for the specified node/ip/service tuple.
     * 
     * @throws SQLException
     *             if database error encountered.
     */
    private boolean openOutageExists(Connection dbConn, long nodeId, String ipAddr, long serviceId) throws SQLException {
        int numOpenOutages = -1;

        // Prepare SQL statement used to see if there is already an
        // 'open' record for the node/ip/svc combination
        PreparedStatement openStmt = null;
        if (ipAddr != null && serviceId > 0) {
            // have nodeid/ipAddr/serviceid tuple
            openStmt = dbConn.prepareStatement(OutageConstants.DB_OPEN_RECORD);
            openStmt.setLong(1, nodeId);
            openStmt.setString(2, ipAddr);
            openStmt.setLong(3, serviceId);
        } else if (ipAddr != null) {
            // have nodeid/ipAddr pair
            openStmt = dbConn.prepareStatement(OutageConstants.DB_OPEN_RECORD_2);
            openStmt.setLong(1, nodeId);
            openStmt.setString(2, ipAddr);
        } else {
            // have nodeid
            openStmt = dbConn.prepareStatement(OutageConstants.DB_OPEN_RECORD_3);
            openStmt.setLong(1, nodeId);
        }

        ResultSet rs = openStmt.executeQuery();
        if (rs.next()) {
            numOpenOutages = rs.getInt(1);
        }

        // close result set
        rs.close();

        // close statement
        openStmt.close();

        if (numOpenOutages > 0)
            return true;
        else
            return false;
    }

