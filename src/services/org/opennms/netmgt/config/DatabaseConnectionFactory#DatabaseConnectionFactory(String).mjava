    /**
     * Private constructor
     * 
     * @exception java.io.IOException
     *                Thrown if the specified config file cannot be read
     * @exception org.exolab.castor.xml.MarshalException
     *                Thrown if the file does not conform to the schema.
     * @exception org.exolab.castor.xml.ValidationException
     *                Thrown if the contents do not match the required schema.
     */
    private DatabaseConnectionFactory(String configFile) throws IOException, MarshalException, ValidationException, ClassNotFoundException {
        Class dsc = Database.class;

        // Set the system identifier for the source of the input stream.
        // This is necessary so that any location information can
        // positively identify the source of the error.
        //
        InputSource dbIn = new InputSource(new FileInputStream(configFile));
        dbIn.setSystemId(configFile);

        // Attempt to load the database reference.
        //
        m_database = (Database) Unmarshaller.unmarshal(dsc, dbIn);

        m_dbcCache = new LinkedList();

        Param[] parms = m_database.getDriver().getParam();
        for (int i = 0; i < parms.length; i++) {
            if (parms[i].getName().equals("user"))
                m_driverUser = parms[i].getValue();
            else if (parms[i].getName().equals("password"))
                m_driverPass = parms[i].getValue();
        }
        m_driverUrl = m_database.getDriver().getUrl();
        String driverCN = m_database.getDriver().getClassName();

        Class.forName(driverCN);
    }

