    /**
     * This method determines the appropriate value for an SNMP4J target.  If
     * the order of operations is:
     * 1st: return a valid requested version
     * 2nd: return a valid version defined in a definition within the snmp-config
     * 3rd: return a valid version in the snmp-config
     * 4th: return the default version
     * @param def
     * @param requestedSnmpVersion
     * @return
     */
    private int determineVersion(Definition def, int requestedSnmpVersion) {
        
        int version = SnmpConstants.version1;
        
        String cfgVersion = "v1";
        if (requestedSnmpVersion == VERSION_UNSPECIFIED) {
            if (def.getVersion() == null) {
                if (m_config.getVersion() == null) {
                    return version;
                } else {
                    cfgVersion = m_config.getVersion();
                }
            } else {
                cfgVersion = def.getVersion();
            }
        } else {
            return requestedSnmpVersion;
        }
        
        if (cfgVersion.equals("v1")) {
            version = SnmpConstants.version1;
        } else if (cfgVersion.equals("v2c")) {
            version = SnmpConstants.version2c;
        } else if (cfgVersion.equals("v3")) {
            version = SnmpConstants.version3;
        }
        
        return version;
    }

