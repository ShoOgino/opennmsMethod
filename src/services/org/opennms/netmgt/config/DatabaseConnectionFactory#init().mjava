    /**
     * Load the config from the default config file and create the singleton
     * instance of this factory.
     * 
     * @exception java.io.IOException
     *                Thrown if the specified config file cannot be read
     * @exception org.exolab.castor.xml.MarshalException
     *                Thrown if the file does not conform to the schema.
     * @exception org.exolab.castor.xml.ValidationException
     *                Thrown if the contents do not match the required schema.
     * @throws SQLException 
     * @throws PropertyVetoException 
     * 
     */
    public static synchronized void init() throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {
        if (m_loaded) {
            // init already called - return
            // to reload, reload() will need to be called
            return;
        }

        File cfgFile = ConfigFileConstants.getFile(ConfigFileConstants.DB_CONFIG_FILE_NAME);
        try {
            if (!isLegacy()) {
                m_singleton = new C3P0ConnectionFactory(cfgFile.getPath());                
            } else {
                LegacyDatabaseConnectionFactory.init();
                m_singleton = LegacyDatabaseConnectionFactory.getInstance();
            }
        } catch (MarshalException e) {
            throw e;
        } catch (ValidationException e) {
            throw e;
        } catch (FileNotFoundException e) {
            throw e;
        } catch (PropertyVetoException e) {
            throw e;
        } catch (SQLException e) {
            throw e;
        }
        m_loaded = true;
    }

