    /**
     * Wish there was a better way to do this!
     * @param eventToken
     * @param e
     * @return String value from the event field specified in @param eventToken
     */
    private String getEventField(String eventToken, Event e) {
        if (eventToken.equalsIgnoreCase("descr")) {
            return e.getDescr();
        } else if (eventToken.equalsIgnoreCase("distPoller")) {
            return e.getDistPoller();
        } else if (eventToken.equalsIgnoreCase("host")) {
            return e.getHost();
        } else if (eventToken.equalsIgnoreCase("ifAlias")) {
            return e.getIfAlias();
        } else if (eventToken.equalsIgnoreCase("interface")) {
            return e.getInterface();
        } else if (eventToken.equalsIgnoreCase("service")) {
            return e.getService();
        } else if (eventToken.equalsIgnoreCase("severity")) {
            return e.getSeverity();
        } else if (eventToken.equalsIgnoreCase("snmpHost")) {
            return e.getSnmphost();
        } else if (eventToken.equalsIgnoreCase("source")) {
            return e.getSource();
        } else if (eventToken.equalsIgnoreCase("logGroup")) {
            return e.getLogmsg().getContent();
        } else if (eventToken.equalsIgnoreCase("masterStation")) {
            return e.getMasterStation();
        } else if (eventToken.equalsIgnoreCase("mouseOverText")) {
            return e.getMouseovertext();
        } else if (eventToken.equalsIgnoreCase("operInstruct")) {
            return e.getOperinstruct();
        }
        return null;
    }

