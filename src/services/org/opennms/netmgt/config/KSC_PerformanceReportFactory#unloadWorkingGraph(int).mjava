        /** Unloads the working graph into the working report list at the requested graph number.  
            If the graph was modified from an existing graph, then the old one is replaced.
            A new blank working graph is then created */ 
        public void unloadWorkingGraph(int requested_graphnum) throws MarshalException, ValidationException 
        {
            int total_graphs = working_report.getGraphCount();
            int insert_location = requested_graphnum--;
            boolean replace_graph = false;
            
            // Check range for existing graph and delete if it is in the valid range 
            if ((graph_index >= 0) && (graph_index < total_graphs)) { 
                // in range... delete existing graph.
                working_report.removeGraph(working_report.getGraph(graph_index));     
            }

            // Check range for insertion point 
            if ((insert_location < 0) || (insert_location >= total_graphs)) { 
                // out of range... assume the new graph needs to be appended to list 
                working_report.addGraph(working_graph);
            }
            else {
                // Insert the graph in the configuration within the working report
                working_report.addGraph(insert_location, working_graph);
            }

            // Create a new and unique instance of a report for screwing around with as the working report
            working_graph = this.getNewGraph(); 
            graph_index=-1;
        } 

