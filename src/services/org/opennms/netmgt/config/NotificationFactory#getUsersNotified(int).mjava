	/**
	 * Returns a list of user ids of users who were sent a message for the given notification id
	 * @param notifId
	 * @return
	 * @throws IOException
	 * @throws MarshalException
	 * @throws ValidationException
	 */
	public List getUsersNotified(int notifId)
		throws IOException, MarshalException, ValidationException {
		List usersNotified = new ArrayList();
		String getNotifiedUsersSql =
			"SELECT userid,media FROM usersnotified WHERE notifyid=?";
		Connection connection = null;
		try {
			connection =
				DatabaseConnectionFactory.getInstance().getConnection();
			PreparedStatement statement =
				connection.prepareStatement(getNotifiedUsersSql);

			statement.setInt(1, notifId);

			ResultSet results = statement.executeQuery();
			while (results.next()) {
				Map thisResult=new HashMap();
				thisResult.put("userId",results.getString(1));
				thisResult.put("command",results.getString(2));
				usersNotified.add(thisResult);
			}
			statement.close();
			results.close();
		} catch (SQLException e) {
			ThreadCategory.getInstance(
				NotificationFactory.class.getName()).error(
				"Error getting users ids for notification: " + e.getMessage(),
				e);
		} finally {
			if (connection != null) {
				try {
					connection.close();
				} catch (SQLException e) {
				}
			}
		}
		return usersNotified;
	}

