    /**
     * 
     */
    public void acknowledgeNotice(Event event, String uei, String[] matchList) throws SQLException, IOException, MarshalException, ValidationException {
        // get the notification id and see if only one is returned
        Connection connection = null;
        try {
            connection = getConnection();
            StringBuffer sql = new StringBuffer("SELECT notifyid FROM notifications WHERE eventuei=? AND respondTime is null ");
    
            for (int i = 0; i < matchList.length; i++) {
                sql.append("AND ").append(matchList[i]).append("=? ");
            }
    
            sql.append("ORDER BY pagetime");
    
            PreparedStatement statement = connection.prepareStatement(sql.toString());
            statement.setString(1, uei);
    
            for (int i = 0; i < matchList.length; i++) {
                if (matchList[i].equals("nodeid")) {
                    statement.setLong(i + 2, event.getNodeid());
                }
    
                if (matchList[i].equals("interfaceid")) {
                    statement.setString(i + 2, event.getInterface());
                }
    
                if (matchList[i].equals("serviceid")) {
                    statement.setInt(i + 2, getServiceId(event.getService()));
                }
            }
    
            ResultSet results = statement.executeQuery();
    
            // count how many rows were returned, if there is even one then the
            // page
            // has been responded too.
    
            if (results != null) {
                while (results.next()) {
                    int notifID = results.getInt(1);
                    PreparedStatement update = connection.prepareStatement(getConfigManager().getConfiguration().getAcknowledgeUpdateSql());
    
                    update.setString(1, "auto-acknowledged");
                    update.setTimestamp(2, new Timestamp((new Date()).getTime()));
                    update.setInt(3, notifID);
    
                    update.executeUpdate();
                    update.close();
                }
            }
    
            statement.close();
            results.close();
        } finally {
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                }
            }
        }
    }

