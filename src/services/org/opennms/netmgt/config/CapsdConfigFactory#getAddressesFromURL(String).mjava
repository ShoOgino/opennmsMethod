    /**
     * The file URL is read and a 'specific IP' is added for each entry in this
     * file. Each line in the URL file can be one of -<IP><space># <comments>
     * or <IP>or #<comments>
     * 
     * Lines starting with a '#' are ignored and so are characters after a '
     * <space>#' in a line.
     * 
     * @param url
     *            the URL file
     * 
     * @return List of addresses retrieved from the URL
     */
    private List getAddressesFromURL(String url) {
        List addrList = new ArrayList();

        try {
            // open the file indicated by the url
            URL fileURL = new URL(url);

            File file = new File(fileURL.getFile());

            // check to see if the file exists
            if (file.exists()) {
                BufferedReader buffer = new BufferedReader(new FileReader(file));

                String ipLine = null;
                String specIP = null;

                // get each line of the file and turn it into a specific address
                while ((ipLine = buffer.readLine()) != null) {
                    ipLine = ipLine.trim();
                    if (ipLine.length() == 0 || ipLine.charAt(0) == COMMENT_CHAR) {
                        // blank line or skip comment
                        continue;
                    }

                    // check for comments after IP
                    int comIndex = ipLine.indexOf(COMMENT_STR);
                    if (comIndex == -1) {
                        specIP = ipLine;
                    } else {
                        specIP = ipLine.substring(0, comIndex);
                        ipLine = ipLine.trim();
                    }

                    addrList.add(specIP);

                    specIP = null;
                }

                buffer.close();
            } else {
                // log something
                ThreadCategory.getInstance().warn("URL does not exist: " + url.toString());
            }
        } catch (MalformedURLException e) {
            ThreadCategory.getInstance().error("Error reading URL: " + url.toString() + ": " + e.getLocalizedMessage());
        } catch (FileNotFoundException e) {
            ThreadCategory.getInstance().error("Error reading URL: " + url.toString() + ": " + e.getLocalizedMessage());
        } catch (IOException e) {
            ThreadCategory.getInstance().error("Error reading URL: " + url.toString() + ": " + e.getLocalizedMessage());
        }

        return addrList;
    }

