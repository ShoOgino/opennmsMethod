    public Target getTarget(InetAddress inetAddress, int supportedSnmpVersion) {
        

        String transportAddress = null;
        //String transportAddress = inetAddress.getHostAddress() + "/" + DEFAULT_PORT;
        Address targetAddress = null;
        //Address targetAddress = new UdpAddress(transportAddress);
        
        
        if (m_config == null) {
            UserTarget target = new UserTarget();

            if (supportedSnmpVersion == SnmpConstants.version1 || supportedSnmpVersion == SnmpConstants.version2c || supportedSnmpVersion == SnmpConstants.version3) {
                target.setVersion(supportedSnmpVersion);
            }
            
            return target;
        }
        

        Target target = null;

        // Attempt to locate the node
        //
        Enumeration edef = m_config.enumerateDefinition();
        DEFLOOP: while (edef.hasMoreElements()) {
            Definition def = (Definition) edef.nextElement();

            // check the specifics first
            //
            Enumeration espec = def.enumerateSpecific();
            while (espec.hasMoreElements()) {
                String saddr = (String) espec.nextElement();
                try {
                    InetAddress addr = InetAddress.getByName(saddr);
                    if (addr.equals(inetAddress)) {
                        target = createTarget(addr, def, supportedSnmpVersion);
                        break DEFLOOP;
                    }
                } catch (UnknownHostException e) {
                    Category log = ThreadCategory.getInstance(getClass());
                    log.warn("SnmpPeerFactory: could not convert host " + saddr + " to InetAddress", e);
                }
            }

            // check the ranges
            //
            long lhost = toLong(inetAddress);
            Enumeration erange = def.enumerateRange();
            while (erange.hasMoreElements()) {
                Range rng = (Range) erange.nextElement();
                try {
                    InetAddress begin = InetAddress.getByName(rng.getBegin());
                    InetAddress end = InetAddress.getByName(rng.getEnd());

                    long start = toLong(begin);
                    long stop = toLong(end);

                    if (start <= lhost && lhost <= stop) {
                        target = createTarget(inetAddress, def, supportedSnmpVersion);
                        break DEFLOOP;
                    }
                } catch (UnknownHostException e) {
                    Category log = ThreadCategory.getInstance(getClass());
                    log.warn("SnmpPeerFactory: could not convert host(s) " + rng.getBegin() + " - " + rng.getEnd() + " to InetAddress", e);
                }
            }
        } // end DEFLOOP

        if (target == null) {

            Definition def = new Definition();
            target = createTarget(inetAddress, def, VERSION_UNSPECIFIED);
        }

        return target;

    }

