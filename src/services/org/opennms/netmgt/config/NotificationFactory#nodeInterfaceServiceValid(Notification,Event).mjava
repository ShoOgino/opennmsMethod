	private boolean nodeInterfaceServiceValid(Notification notif, Event event)
	{
		boolean result = false;

		Connection connection = null;
		try
		{

			// Get the Interface and Service from the Event

			String eventIf = (String)event.getInterface();
			String eventSrv = (String)event.getService();

                        // ThreadCategory.getInstance(getClass()).debug("Notification Event Interface: " + eventIf + " Service: " + eventSrv);

			// Get the Notification Rule

			Filter filter = new Filter(notif.getRule());

			// Select the Interfaces and Services that match the rule
			
			String sql = filter.getInterfaceWithServiceStatement();

                        // ThreadCategory.getInstance(getClass()).debug("getSQL Returned SQL for Notification: " + notif.getName() + ": " + sql);
			
			connection = DatabaseConnectionFactory.getInstance().getConnection();
			Statement stmt = connection.createStatement();
			ResultSet rows = stmt.executeQuery(sql);
			
			// Loop through the rows returned from the SQL query and return true if they match event
			
                        while (rows.next())
                        {
				String notifIf = rows.getString(1);
				String notifSrv = rows.getString(2);

                       		// ThreadCategory.getInstance(getClass()).debug("Notification Notif Interface: " + notifIf + " Service: " + notifSrv);
						
				if (eventIf == null)
				{
					result = true;
					break;
				}
				else if (eventSrv == null && eventIf.equals(notifIf))
				{
					result = true;
					break;
				}
				else if (eventSrv.equals(notifSrv) && eventIf.equals(notifIf))
				{
					result = true;
					break;
				}
			}
									 
			try
			{
				rows.close();
			}
			catch(SQLException e) { }

			try
			{
				stmt.close();
			}
			catch(SQLException e) { }
		}
		catch (SQLException e)
		{
			ThreadCategory.getInstance(getClass()).error("Filter query threw exception: " + notif.getName() + ": " + notif.getRule(), e);
			return true;
		}
		catch (FilterParseException e)
		{
			ThreadCategory.getInstance(getClass()).error("Invalid filter rule for notification " + notif.getName() + ": " + notif.getRule(), e);
			
			//go ahead and send the notification
			return true;
		}
		finally
		{
			if(connection != null)
			{
				try { connection.close(); } catch(SQLException e) { }
			}
		}
		
		return result;
	}

