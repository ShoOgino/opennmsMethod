    private boolean nodeInterfaceServiceValid(Notification notif, Event event) {
        boolean result = false;
    
        Connection connection = null;
        try {
    
            // Get the Interface and Service from the Event
    
            long eventNode = event.getNodeid();
            String eventIf = (String) event.getInterface();
            String eventSrv = (String) event.getService();
    
            if (eventNode == 0 && eventIf == null && eventSrv == null) {
                return true;
            }
    
            // ThreadCategory.getInstance(getClass()).debug("Notification Event
            // Interface: " + eventIf + " Service: " + eventSrv);
    
            // Get the Notification Rule
    
            String sql = getInterfaceFilter(notif.getRule());
    
            ThreadCategory.getInstance(getClass()).debug("getSQL Returned SQL for Notification: " + notif.getName() + ": " + sql);
    
            connection = getConnection();
            Statement stmt = connection.createStatement();
            ResultSet rows = stmt.executeQuery(sql);
    
            // Loop through the rows returned from the SQL query and return true
            // if they match event
    
            while (rows.next()) {
                String notifIf = rows.getString(1);
                String notifSrv = rows.getString(2);
                long notifNode = rows.getLong(3);
    
                // ThreadCategory.getInstance(getClass()).debug("Notification
                // Notif Interface: " + notifIf + " Service: " + notifSrv);
    
                // if there is no If with the event, there can be no service,
                // thus check only if the node matches
                if (eventIf == null || eventIf.equals("0.0.0.0")) {
                    if (eventNode == notifNode) {
                        result = true;
                        break;
                    }
                }
                // If there is no Srv with the event, check and see if the If
                // matches
                else if (eventSrv == null) {
                    if (eventIf.equals(notifIf)) {
                        result = true;
                        break;
                    }
                }
                // Otherwise, insure that both the Srv and If match
                else if (eventSrv.equals(notifSrv) && eventIf.equals(notifIf)) {
                    result = true;
                    break;
                }
            }
    
            try {
                rows.close();
            } catch (SQLException e) {
            }
    
            try {
                stmt.close();
            } catch (SQLException e) {
            }
        } catch (SQLException e) {
            ThreadCategory.getInstance(getClass()).error("Filter query threw exception: " + notif.getName() + ": " + notif.getRule(), e);
            return true;
        } catch (FilterParseException e) {
            ThreadCategory.getInstance(getClass()).error("Invalid filter rule for notification " + notif.getName() + ": " + notif.getRule(), e);
    
            // go ahead and send the notification
            return true;
        } finally {
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                }
            }
        }
    
        return result;
    }

