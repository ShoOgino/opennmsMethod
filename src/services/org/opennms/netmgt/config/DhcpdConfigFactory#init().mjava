	/**
	 * Load the config from the default config file and create the 
	 * singleton instance of this factory.
	 *
	 * @exception java.io.IOException Thrown if the specified config
	 * 	file cannot be read
	 * @exception org.exolab.castor.xml.MarshalException Thrown if the 
	 * 	file does not conform to the schema.
	 * @exception org.exolab.castor.xml.ValidationException Thrown if 
	 *	the contents do not match the required schema.
	 */
	public static synchronized void init()
		throws 	IOException,
			MarshalException, 
			ValidationException
	{
		if (m_loaded)
		{
			// init already called - return
			// to reload, reload() will need to be called
			return;
		}

		String homeDir = System.getProperty("opennms.home");
		if(homeDir == null)
			throw new IOException("Unable to get required property \'opennms.home\'");
		

		// Form the complete filename for the config file
		String configFile;
		if (homeDir.endsWith(File.separator))
		{
			configFile = homeDir + "etc" + File.separator + ConfigFileConstants.DHCPD_CONFIG_FILE_NAME;
		}
		else if (homeDir.endsWith("/"))
			// here because the user can still use the '/'
			// delimited name for the directory on the windows platform
		{
			configFile = homeDir + "etc/" + ConfigFileConstants.DHCPD_CONFIG_FILE_NAME;
		}
		else
		{
			configFile = homeDir + File.separator + "etc" + File.separator + ConfigFileConstants.DHCPD_CONFIG_FILE_NAME;
		}

		m_singleton = new DhcpdConfigFactory(configFile);

		m_loaded = true;
	}

