		public String getResult(Event srcEvent) {
			if (m_val.getMatches() == null) return m_val.getResult();

			String attributeValue = getAttributeValue(srcEvent);

			if (attributeValue == null) {
				throw new TranslationFailedException("failed to match null against '"+m_val.getMatches()+"' for attribute "+getAttributeName());
			}

			Pattern p = Pattern.compile(m_val.getMatches());
			final Matcher m = p.matcher(attributeValue);
			if (!m.matches())
				throw new TranslationFailedException("failed to match "+attributeValue+" against '"+m_val.getMatches()+"' for attribute "+getAttributeName());
			
			class MatchTable implements PropertiesUtils.SymbolTable {

				public String getSymbolValue(String symbol) {
					try {
						int groupNum = Integer.parseInt(symbol);
						if (groupNum > m.groupCount())
							return null;
						return m.group(groupNum);
					} catch (NumberFormatException e) {
						return null;
					}
				}
				
			};
			MatchTable matches = new MatchTable();

			return PropertiesUtils.substitute(m_val.getResult(), matches);
		}

