    public void testTranslateEvent() {
		// test non matching uei match fails
        Event pse = createPassiveStatusEvent("Router", "192.168.1.1", "ICMP", "Down");
        assertNull(m_config.translateEvent(pse));
        
        // test matchin uei succeeds
        Event te = createTranslatableEvent("Router", "192.168.1.1", "ICMP", "Down");
        List translatedEvents = m_config.translateEvent(te);
		assertNotNull(translatedEvents);
		assertEquals(1, translatedEvents.size());
        Event event = (Event)translatedEvents.get(0);
		//assertEquals("192.168.1.1", event.getInterface());
        
        // test null parms fails
        Event teWithNullParms = createTranslatableEvent("Router", "192.168.1.1", "ICMP", "Down");
        teWithNullParms.setParms(null);
        assertNull(m_config.translateEvent(teWithNullParms));
        
        // test empty  parm list fails
        Event teWithNoParms = createTranslatableEvent("Router", "192.168.1.1", "ICMP", "Down");
        Parms parms = teWithNoParms.getParms();
        parms.setParmCollection(new ArrayList(0));
        assertNull(m_config.translateEvent(teWithNoParms));

        // test missing a parm fails
        Event teWithWrongParms = createTranslatableEvent("Router", "192.168.1.1", "ICMP", "Down");
        Parms p = teWithWrongParms.getParms();
        p.getParm(2).setParmName("unmatching"); // change the name for the third parm so it fails to match
        assertNull(m_config.translateEvent(teWithWrongParms));

        // that a matching parm value succeeds
        Event te2 = createTranslatableEvent("Router", "xxx192.168.1.1xxx", "ICMP", "Down");
        assertNotNull(m_config.translateEvent(te2));
        
        // that a matching parm value succeeds
        Event te3 = createTranslatableEvent("Router", "xxx192.168.1.2", "ICMP", "Down");
        assertNull(m_config.translateEvent(te3));
    }

