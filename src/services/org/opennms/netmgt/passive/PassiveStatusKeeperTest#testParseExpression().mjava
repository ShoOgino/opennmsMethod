    public void testParseExpression() {
        String result = m_config.parseExpression("Channel 9", "~^(Channel) (9)", "$1-$2");
        assertEquals("Channel-9", result);
        
        result = m_config.parseExpression("Channel 9", "~.*(nnel).*", null);
        assertEquals("Channel 9", result);
        
        result = m_config.parseExpression("Channel 9", "~^(Channel) (9)", null);
        assertEquals("Channel 9", result);
        
        result = m_config.parseExpression("Channel 9", "~^(Channel) (9)", "$1$2");
        assertEquals("Channel9", result);
        
        result = m_config.parseExpression("Channel 9", "Channel 19", null);
        assertEquals("Channel 19", result);
        
        //the entire value tested should be returned
        result = m_config.parseExpression("Channel 9 on your side", "~^Channel 9.*", null);
        assertEquals("Channel 9 on your side", result);
        
        //test weird formatting
        result = m_config.parseExpression("Channel 9 on your side", "~^(Channel) (9).*(side)$", "$2--server--$3->$1s");
        assertEquals("9--server--side->Channels", result);
        
        //formatting should be ignored if there is no grouping
        result = m_config.parseExpression("Channel 9", "~^Channel 9", "$1-$2");
        assertEquals("Channel 9", result);
    }

