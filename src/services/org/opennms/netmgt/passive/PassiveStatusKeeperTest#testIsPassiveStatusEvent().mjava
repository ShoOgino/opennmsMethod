    /**
     * This is a test for the method that verifies valid passive status events
     * for the passive status keeper.
     * @throws ValidationException 
     * @throws MarshalException 
     *
     */
    public void testIsPassiveStatusEvent() throws MarshalException, ValidationException {
        
        Event e = createPassiveStatusEvent("Router", "192.168.1.1", "ICMP", "Down");
        assertTrue(m_config.isPassiveStatusEvent(e));
        
        //test for missing required parms
        e = createPassiveStatusEvent("Router", "192.168.1.1", null, "Down");
        assertFalse(m_config.isPassiveStatusEvent(e));
        
        //this will test the event simply doesn't match a registered uei.
        e.setUei("bogusUei");
        assertFalse(m_config.isPassiveStatusEvent(e));
        
        /*
         * now test to make sure not only does the event match the uei, that it understands
         * there are no parms required for this configuration that derives the key based on
         * literal field values.
         */
        m_config = new PassiveStatusConfigFactory(new StringReader(getDerivedLiteralFieldConfig()));
        PassiveStatusConfigFactory.setInstance(m_config);
        e = createPassiveStatusEvent(null, null, null, null);
        assertTrue(m_config.isPassiveStatusEvent(e));
        
    }

