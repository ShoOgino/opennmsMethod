	/**
	 * <P>Initialize the service thresholder.</P>
	 *
	 * @param parameters	Not currently used.
	 *
	 * @exception RuntimeException	Thrown if an unrecoverable error occurs that prevents 
	 * the plug-in from functioning.
	 *
	 */
	public void initialize(Map parameters) 
	{
		// Log4j category
		//
		Category log = ThreadCategory.getInstance(getClass());
		
		// Get local host name (used when generating threshold events)
		//
		try
		{
			m_host = InetAddress.getLocalHost().getHostName();
		}
		catch(UnknownHostException e)
		{
			if(log.isEnabledFor(Priority.WARN))
				log.warn("initialize: Unable to resolve local host name.", e);
			m_host = "unresolved.host";
		}
		
		// Initialize jni RRD interface.
		//
		try
		{
			org.opennms.netmgt.rrd.Interface.init();
		}
		catch(SecurityException se)
		{
			if(log.isEnabledFor(Priority.FATAL))
				log.fatal("initialize: Failed to initialize JNI RRD interface", se);
			throw new UndeclaredThrowableException(se);
		}
		catch(UnsatisfiedLinkError ule)
		{
			if(log.isEnabledFor(Priority.FATAL))
				log.fatal("initialize: Failed to initialize JNI RRD interface", ule);
			throw new UndeclaredThrowableException(ule);
		}
		
		// Save local reference to singleton instance 
		//
		m_rrdInterface = org.opennms.netmgt.rrd.Interface.getInstance();
		
		if (log.isDebugEnabled())
			log.debug("initialize: successfully instantiated JNI interface to RRD...");
		
		return;
	}

