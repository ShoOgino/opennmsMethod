	/**
	 * Reads the ICMP Address Mask Reqeust from the specified 
	 * buffer and sets the internal fields equal to the data. 
	 * If the buffer does not have sufficent data to restore the
	 * header then an IndexOutOfBoundsException is thrown
	 * by the method. If the buffer does not contain an
	 * address mask reqeust then an IllegalArgumentException
	 * is thrown.
	 *
	 * @param buf	The buffer to read the data from.
	 * @param offset The offset to start reading data.
	 *
	 * @return The new offset after reading the data.
	 *
	 * @exception java.lang.IndexOutOfBoundsException Thrown if there
	 *	is not sufficent data in the buffer.
	 */
	public final int loadFromBuffer(byte[] buf, int offset)
	{
		//
		// minimum length
		//
		if(buf.length < (offset + 36))
			throw new IndexOutOfBoundsException("Insufficient data to load ICMP error message");

		offset = super.loadFromBuffer(buf, offset);

		//
		// create the header
		//
		m_iphdr = new IPHeader(buf, offset);

		//
		// check the minimum length again
		//
		if(buf.length < (offset + 16 + m_iphdr.getHeaderLength()))
			throw new IndexOutOfBoundsException("Insufficient data to load ICMP error message");

		offset += m_iphdr.getHeaderLength();

		//
		// load the extra 8-bytes
		//
		m_protoData = new byte[8];
		for(int x = 0; x < 8; x++)
		{
			m_protoData[x] = buf[offset++];
		}
			
		return offset;
	}

