    /**
     * Returns the next 16-bit sequence identifier for the class. The method is
     * synchronized to prevent duplicate identifiers from being issued.
     * depending on the number of classes and how often the method is called it
     * will eventually wrap. When the value wraps back to zero, a random number
     * is generated and may cause a collision with an existing identifier. The
     * probability is low, but possible.
     * 
     * @return The next 16-bit sequence number, may be negative.
     */
    public final static synchronized short nextSequenceId() {
        if (sm_seq == 0) {
            Date d = new Date();
            Random r = new Random(d.getTime());
            sm_seq = (short) (r.nextInt());
        }
        return ++sm_seq;
    }

