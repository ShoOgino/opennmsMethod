	public void databaseCheckLanguage() throws Exception {
		/*
		 * Don't bother checking if the database version is 7.4 or greater and
		 * just return without throwing an exception. We can (and do) use SQL
		 * state checks instead of matching on the exception text, so the
		 * language of server error messages does not matter.
		 */
		if (m_pg_version >= 7.4) {
			return;
		}

		/*
		 * Use column names that should never exist and also encode the current
		 * time, in hopes that this should never actually succeed.
		 */
		String timestamp = Long.toString(System.currentTimeMillis());
		String bogus_query = "SELECT bogus_column_" + timestamp + " "
				+ "FROM bogus_table_" + timestamp + " "
				+ "WHERE another_bogus_column_" + timestamp + " IS NULL";

		// Expected error: "ERROR: relation "bogus_table" does not exist"
		try {
			Statement st = m_dbconnection.createStatement();
			ResultSet rs = st.executeQuery(bogus_query);
		} catch (SQLException e) {
			if (e.toString().indexOf("does not exist") != -1) {
				/*
				 * Everything is fine, since we matched the error. We should be
				 * safe to assume that all of the other error messages we need
				 * to check for are in English.
				 */
				return;
			}
			throw new Exception("The database server's error messages "
					+ "are not in English, however the installer "
					+ "requires them to be in English when using "
					+ "PostgreSQL earlier than 7.4.  You either "
					+ "need to set \"lc_messages = 'C'\" in your "
					+ "postgresql.conf file and restart "
					+ "PostgreSQL or upgrade to PostgreSQL 7.4 or "
					+ "later.  The installer executed the query " + "\""
					+ bogus_query + "\" and expected "
					+ "\"does not exist\" in the error message, "
					+ "but this exception was received instead: " + e, e);
		}

		/*
		 * We should not get here, as the above command should always throw an
		 * exception, so complain and throw an exception about not getting the
		 * exception we were expecting. Are you lost yet? Good!
		 */
		throw new Exception("Expected an SQLException when executing a "
				+ "bogus query to test for the server's error "
				+ "message language, however the query succeeded "
				+ "unexpectedly.  SQL query: \"" + bogus_query + "\".");

	}

