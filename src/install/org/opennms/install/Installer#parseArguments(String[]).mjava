    public void parseArguments(String[] argv) throws Exception {
	LinkedList args = new LinkedList();

	for (int i = 0; i < argv.length; i++) {
	    StringBuffer b = new StringBuffer(argv[i]);
	    boolean is_arg = false;

	    while (b.length() > 0 && b.charAt(0) == '-') {
		is_arg = true;
		b.deleteCharAt(0);
	    }

	    if (is_arg) {
		while (b.length() > 0) {
		    char c = b.charAt(0);
		    b.deleteCharAt(0);

		    switch (c) {
		    case 'h':
			printHelp();
			break;

		    case 'c':
			m_force = true;
			break;

		    case 'd':
			m_update_database = true;
			break;
		       
		    case 'i':
			m_do_inserts = true;
			break;

		    case 's':
			m_update_iplike = true;
			break;

		    case 'U':
			m_update_unicode = true;
			break;

		    case 'u':
			i++;
			m_pg_user = getNextArg(argv, i, 'u');
			break;

		    case 'p':
			i++;
			m_pg_pass = getNextArg(argv, i, 'p');
			break;

		    case 'y':
			m_install_webapp = true;
			break;

		    case 'T':
			i++;
			m_tomcat_conf = getNextArg(argv, i, 'T');
			break;

		    case 'w':
			i++;
			m_webappdir = getNextArg(argv, i, 'w');
			break;

		    case 'W':
			i++;
			m_tomcatserverlibdir = getNextArg(argv, i, 'W');
			break;

		    case 'x':
			m_debug = true;
			break;

		    case 'r':
			m_rpm = true;
			break;

		    case 'N':
			m_ignore_notnull = true;
			break;

		    case 'R':
			m_no_revert = true;
			break;

		    default:
			throw new Exception("unknown option '" + c + "'" +
					    ", use '-h' option for usage");
		    }
		}
	    } else {
		args.add(argv[i]);
	    }
	}

	if (args.size() != 0) {
	    throw new Exception("too many command-line arguments specified");
	}
    }

