	public List getTableColumnsFromSQL(String table) throws Exception {
		String create = getTableFromSQL(table);
		LinkedList columns = new LinkedList();
		boolean parens = false;
		StringBuffer accumulator = new StringBuffer();
		Matcher m;

		for (int i = 0; i <= create.length(); i++) {
			char c = ' ';

			if (i < create.length()) {
				c = create.charAt(i);

				if (c == '(' || c == ')') {
					parens = (c == '(');
					accumulator.append(c);
					continue;
				}
			}

			if (((c == ',') && !parens) || i == create.length()) {
				String a = accumulator.toString().trim();

				if (a.toLowerCase().startsWith("constraint ")) {
					if (columns.size() == 0) {
						throw new Exception("found constraint with no "
								+ "previous column");
					}

					Constraint constraint = new Constraint(a);
					Column lastcol = (Column) columns.getLast();
					if (!constraint.getColumn().equals(lastcol.getName())) {
						throw new Exception("constraint does not "
								+ "reference previous column ("
								+ lastcol.getName() + "): " + constraint);
					}
					lastcol.addConstraint(constraint);
				} else {
					Column column = new Column();
					column.parse(accumulator.toString());
					columns.add(column);
				}

				accumulator = new StringBuffer();
			} else {
				accumulator.append(c);
			}
		}

		return columns;
	}

