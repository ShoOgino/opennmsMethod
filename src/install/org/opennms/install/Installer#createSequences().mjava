    public void createSequences() throws Exception {
	Statement st = m_dbconnection.createStatement();
	ResultSet rs;

	System.out.println("- creating sequences... ");

	Iterator i = m_sequences.iterator();
	while (i.hasNext()) {
	    String sequence = (String) i.next();
	    if (!m_seqmapping.containsKey(sequence)) {
		throw new Exception("Cannot find sequence mapping for " +
				    sequence);
	    }
	    String[] mapping = (String[]) m_seqmapping.get(sequence);
	}

	i = m_sequences.iterator();
	while (i.hasNext()) {
	    String sequence = (String) i.next();
	    String[] mapping = (String[]) m_seqmapping.get(sequence);
	    int minvalue = 1;
	    boolean remove;

	    System.out.print("  - checking \"" + sequence +
			       "\" minimum value... ");

	    try {
		rs = st.executeQuery("SELECT MAX(" + mapping[0] +
				     ") AS max FROM " + mapping[1]);

		if (rs.next()) {
		    minvalue = rs.getInt(1) + 1;
		}
	    } catch (SQLException e) {
		if (e.toString().indexOf("does not exist") == -1) {
		    throw new Exception(e);
		}
	    }

	    System.out.println(Integer.toString(minvalue));
	    
	    System.out.print("  - removing sequence \"" + sequence + "\"... ");

	    rs = st.executeQuery("SELECT relname FROM pg_class " +
				 "WHERE relname = '" +
				 sequence.toLowerCase() + "'");

	    remove = rs.next();
	    if (remove) {
		st.execute("DROP SEQUENCE " + sequence);
		System.out.println("REMOVED");
	    } else {
		System.out.println("CLEAN");
	    }

	    System.out.print("  - creating sequence \"" + sequence + "\"... ");
	    st.execute("CREATE SEQUENCE " + sequence + " minvalue " +
		       minvalue);
	    st.execute("GRANT ALL on " + sequence + " TO " + m_user);
	    System.out.println("OK");
	}

	System.out.println("- creating sequences... DONE");
    }

