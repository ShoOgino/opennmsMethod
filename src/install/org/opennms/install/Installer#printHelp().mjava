    public void printHelp() {
        m_out.println("usage:");
        m_out.println("  java -jar opennms_install.jar -h");
        m_out.println("  java -jar opennms_install.jar " + "[-r] [-x] [-N] [-R] [-c] [-d] [-i] [-s] [-U] [-y]");
        m_out.println("                                " + "[-u <PostgreSQL admin user>]");
        m_out.println("                                " + "[-p <PostgreSQL admin password>]");
        m_out.println("                                " + "[-T <tomcat4.conf>]");
        m_out.println("                                " + "[-w <tomcat webapps directory>");
        m_out.println("                                " + "[-W <tomcat server/lib directory>]");
        m_out.println("");
        m_out.println(m_required_options);
        m_out.println("");
        m_out.println("   -h    this help");
        m_out.println("");
        m_out.println("   -d    perform database actions");
        m_out.println("   -i    insert data into the database");
        m_out.println("   -s    update iplike postgres function");
        m_out.println("   -U    upgrade database to unicode, if needed");
        m_out.println("   -y    install web application (see -w and -W)");
        m_out.println("");
        m_out.println("   -u    username of the PostgreSQL " + "administrator (default: \"" + m_pg_user + "\")");
        m_out.println("   -p    password of the PostgreSQL " + "administrator (default: \"" + m_pg_pass + "\")");
        m_out.println("   -c    drop and recreate tables that already " + "exist");
        m_out.println("");
        m_out.println("   -T    location of tomcat.conf");
        m_out.println("   -w    location of tomcat's webapps directory");
        m_out.println("   -W    location of tomcat's server/lib " + "directory");
        m_out.println("");
        m_out.println("   -r    run as an RPM install (does nothing)");
        m_out.println("   -x    turn on debugging for database data " + "transformation");
        m_out.println("   -N    ignore NOT NULL constraint checks when " + "transforming data");
        m_out.println("         useful after a table is reverted by a " + "previous run of the installer");
        m_out.println("   -R    do not revert a table to the original if " + "an error occurs when");
        m_out.println("         transforming data -- only used for debugging");

        System.exit(0);
    }

