    protected static void augmentInterfacesWithSnmpData(Interface[] intfs, Connection conn) throws SQLException {
        if (intfs == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        for (int i = 0; i < intfs.length; i++) {
            if (intfs[i].getIfIndex() != 0) {
                PreparedStatement pstmt = conn.prepareStatement("SELECT * FROM SNMPINTERFACE WHERE NODEID=? AND SNMPIFINDEX=?");
                pstmt.setInt(1, intfs[i].getNodeId());
                pstmt.setInt(2, intfs[i].getIfIndex());

                ResultSet rs = pstmt.executeQuery();

                if (rs.next()) {
                    Object element = new Integer(rs.getInt("snmpifindex"));
                    intfs[i].m_snmpIfIndex = ((Integer) element).intValue();

                    element = rs.getString("snmpIpAdEntNetMask");
                    intfs[i].m_snmpIpAdEntNetMask = (String) element;

                    element = rs.getString("snmpPhysAddr");
                    intfs[i].m_snmpPhysAddr = (String) element;

                    element = rs.getString("snmpIfDescr");
                    intfs[i].m_snmpIfDescr = (String) element;

                    element = rs.getString("snmpIfName");
                    intfs[i].m_snmpIfName = (String) element;

                    element = new Integer(rs.getInt("snmpIfType"));
                    intfs[i].m_snmpIfType = ((Integer) element).intValue();

                    element = new Integer(rs.getInt("snmpIfOperStatus"));
                    intfs[i].m_snmpIfOperStatus = ((Integer) element).intValue();

                    element = new Integer(rs.getInt("snmpIfSpeed"));
                    intfs[i].m_snmpIfSpeed = ((Integer) element).intValue();

                    element = new Integer(rs.getInt("snmpIfAdminStatus"));
                    intfs[i].m_snmpIfAdminStatus = ((Integer) element).intValue();

                    element = rs.getString("snmpIfAlias");
                    intfs[i].m_snmpIfAlias = (String) element;
                }

                rs.close();
                pstmt.close();

                PreparedStatement pstmt2 = conn.prepareStatement("SELECT issnmpprimary FROM ipinterface WHERE nodeid=? AND ifindex=?");
                pstmt2.setInt(1, intfs[i].getNodeId());
                pstmt2.setInt(2, intfs[i].getIfIndex());

                ResultSet rs2 = pstmt2.executeQuery();

                if (rs2.next()) {
                    Object issnmpprimary = new String(rs2.getString("issnmpprimary"));
                    intfs[i].m_isSnmpPrimary = (String) issnmpprimary;
		}

                rs2.close();
                pstmt2.close();
            }
        }
    }

