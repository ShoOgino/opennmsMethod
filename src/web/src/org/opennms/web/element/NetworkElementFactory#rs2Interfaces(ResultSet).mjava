    /**
     * This method returns the data from the result set as an vector of ipinterface objects.
     */
    protected static Interface[] rs2Interfaces(ResultSet rs) throws SQLException {
        Interface[] intfs = null;
        Vector vector = new Vector();

        while(rs.next()) {
            Interface intf = new Interface();

            Object element = new Integer(rs.getInt("nodeid"));
            intf.m_nodeId = ((Integer)element).intValue();

            element = new Integer(rs.getInt("ifIndex"));
            intf.m_ifIndex = ((Integer)element).intValue();
        
            element = new Integer(rs.getInt("ipStatus"));
            intf.m_ipStatus = ((Integer)element).intValue();

            element = rs.getString("ipHostname");
            intf.m_ipHostName = (String)element;

            element = rs.getString("ipAddr");
            intf.m_ipAddr = (String)element;

            element = rs.getString("isManaged");
            if( element != null ) {
                intf.m_isManaged = ((String)element).charAt(0);
            }

            element = rs.getTimestamp("ipLastCapsdPoll");
            if (element != null)
                intf.m_ipLastCapsdPoll = EventConstants.formatToString(new Date(((Timestamp)element).getTime()));

            vector.addElement( intf ) ;
        }

        intfs = new Interface[vector.size()];

        for( int i = 0;i < intfs.length; i++ ) {
            intfs[i] = (Interface)vector.elementAt(i);
        }

        return intfs;
    }

