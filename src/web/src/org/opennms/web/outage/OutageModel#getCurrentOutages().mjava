    /**
     * Query the database to retrieve the current outages. 
     * 
     * @returns An array of {@link Outage Outage} objects,
     * or if there are none, an empty array.
     * @throws SQLException If there is a problem getting a database connection
     * or making a query.
     */             
    public Outage[] getCurrentOutages() throws SQLException {
        Outage[] outages = new Outage[0];
        Connection conn = Vault.getDbConnection();

        try {
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("select outages.nodeId, node.nodeLabel, outages.ipaddr, ipinterface.iphostname, service.servicename, outages.serviceId, outages.iflostservice, outages.svclosteventid, notifications.notifyId, notifications.answeredBy from outages left outer join notifications on (outages.svclosteventid=notifications.eventid) where ifregainedservice is null and node.nodeid=outages.nodeid and ipinterface.ipaddr=outages.ipaddr and outages.serviceid=service.serviceid order by nodelabel, ipaddr, serviceName");
    
            outages = rs2Outages(rs, false, true);
            
            rs.close();
            stmt.close();
        }
        finally {
            Vault.releaseDbConnection( conn );
        }
                
        return outages;
    }

