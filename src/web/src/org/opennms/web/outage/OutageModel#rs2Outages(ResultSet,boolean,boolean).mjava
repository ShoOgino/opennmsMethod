    /* LJK Feb 21, 2002: all these special case result set methods need to be cleaned up */    
    protected static Outage[] rs2Outages( ResultSet rs, boolean includesRegainedTime, boolean includesNotifications ) throws SQLException {        
        Outage[] outages = null;
        Vector vector = new Vector();

        while(rs.next()) {
            Outage outage = new Outage();

            Object element = new Integer(rs.getInt("nodeid"));
            outage.nodeId = ((Integer)element).intValue();
        
            element = rs.getString("ipaddr");
            outage.ipAddress = (String)element;
        
            element = new Integer(rs.getInt("serviceid"));
            outage.serviceId = ((Integer)element).intValue();
        
            element = rs.getString("nodeLabel");
            outage.nodeLabel = (String)element;
                    
            element = rs.getString("iphostname");
            outage.hostname = (String)element;            
            
            element = rs.getString("servicename");
            outage.serviceName = (String)element;

            element = new Integer(rs.getInt("outageid"));
            if( element != null) {
            	outage.outageId = ((Integer)element).intValue();
            }
            
            element = rs.getTimestamp("iflostservice");
            if( element != null) {
                outage.lostServiceTime = new Date(((Timestamp)element).getTime());                
            }
            
            if( includesRegainedTime ) {                
                element = rs.getTimestamp("ifregainedservice");
                if( element != null) {
                    outage.regainedServiceTime = new Date(((Timestamp)element).getTime());                
                }            
            }
                        
            if(includesNotifications) {                
                int intElement = rs.getInt("svclosteventid");
                if(intElement != 0 ) {
                    outage.lostServiceEventId = new Integer(intElement);
                }
                
                intElement = rs.getInt("notifyid");
                if(intElement != 0 ) {
                    outage.lostServiceNotificationId = new Integer(intElement);
                }

                element = rs.getString("answeredby");
                outage.lostServiceNotificationAcknowledgedBy = (String)element;
             
            }
    
            vector.addElement( outage );
        }

        outages = (Outage[])vector.toArray( new Outage[vector.size()] );

        return outages;
    }

