    public void testOutageList() throws Exception {
        beginAt("/admin/sched-outages/index.jsp");
        assertTitleEquals("Scheduled Outage administration");
        
        ExpectedTable expectedTable = new ExpectedTable();
        List affects = new ArrayList();
        affects.add(new ExpectedCell("", 4));
        affects.add(new ExpectedCell("Affects...", 4));
        affects.add(new ExpectedCell("", 2));
        
        appendRow(expectedTable, affects);
        
        List header = new ArrayList();
        header.add(new ExpectedCell("Name"));
        header.add(new ExpectedCell("Type"));
        header.add(new ExpectedCell("Nodes/Interfaces"));
        header.add(new ExpectedCell("Times"));
        header.add(new ExpectedCell("Notifications"));
        header.add(new ExpectedCell("Polling"));
        header.add(new ExpectedCell("Thresholds"));
        header.add(new ExpectedCell("Data collection"));
        header.add(new ExpectedCell("", 2));
        appendRow(expectedTable, header);
        
        Outage[] outages = m_outages.getOutage();
        for (int i = 0; i < outages.length; i++) {
            Outage outage = outages[i];
            List cells = new ArrayList();
            cells.add(new ExpectedCell(outage.getName()));
            cells.add(new ExpectedCell(outage.getType()));
            cells.add(new ExpectedCell(""));
            cells.add(new ExpectedCell(getTimeSpanString(outage)));
            cells.add(new ExpectedCell(""));
            cells.add(new ExpectedCell(""));
            cells.add(new ExpectedCell(""));
            cells.add(new ExpectedCell(""));
            cells.add(new ExpectedCell("Edit"));
            cells.add(new ExpectedCell("Delete"));
            appendRow(expectedTable, cells);
            
        }
        assertTableEquals("outages", expectedTable);
        submit();
        assertTitleEquals("Scheduled Outage administration");
        assertTextPresent("Edit Outages");
    }

