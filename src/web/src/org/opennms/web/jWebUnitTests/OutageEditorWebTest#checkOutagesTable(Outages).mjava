    private void checkOutagesTable(Outages pollOutages) {
        
        WebTable table = getDialog().getWebTableBySummaryOrId("outages");
        // Top header line
        assertCell(table, 0, 0, "", 4);
        assertCell(table, 0, 4, "Affects...", 4);
        // Second header line
        String[] headerCells = { "Name", "Type", "Nodes/Interfaces", "Times", "Notifications", "Polling", "Thresholds", "Data collection", null, null};
        assertRow(table, 1, headerCells);
        Outage[] outages = pollOutages.getOutage();
        for (int i = 0; i < outages.length; i++) {
            Outage outage = outages[i];
            assertCell(table, i+2, 0, outage.getName());
            assertCell(table, i+2, 1, outage.getType());
            
            // TODO: check for interfaces and nodes
            assertCell(table, i+2, 2, "");
            
            assertCell(table, i+2, 3, getTimeSpanString(outage));
            
            // test the X 's
            assertCellImage(table, i+2, 4, computeImgSrc(outage));
            assertCellImage(table, i+2, 5, computeImgSrc(outage));
            assertCellImage(table, i+2, 6, computeImgSrc(outage));
            assertCellImage(table, i+2, 7, computeImgSrc(outage));
            
            // the the links
            assertCellLink(table, i+2, 8, "Edit", computeEditURL(outage));
            assertCellLink(table, i+2, 9, "Delete", computeDeleteURL(outage));
            
        }
    }

