    /**
     * Creates a new DOM tree document that represents the data in the
     * collection. This document will be serialized to a file to save the
     * configuration.
     * 
     * @param groups
     *            the information to save
     * @throws XMLWriteException
     *             if cannot handle the xml
     */
    protected void saveDocument(Collection groups) throws XMLWriteException {
        Element root = m_document.createElement("groupinfo");
        m_document.appendChild(root);

        // write the header
        XMLHeader header = new XMLHeader(getVersion(), m_document);
        root.appendChild(header.getHeaderElement());

        if (groups.size() > 0) {
            Element groupsElement = addEmptyElement(root, "groups");

            Object groupsArray[] = groups.toArray();
            for (int i = 0; i < groupsArray.length; i++) {
                Group curGroup = (Group) groupsArray[i];

                Element curGroupElement = addEmptyElement(groupsElement, "group");

                addDataElement(curGroupElement, "groupName", curGroup.getGroupName());

                if (curGroup.getGroupComments() != null && !curGroup.getGroupComments().equals("")) {
                    addDataElement(curGroupElement, "groupComments", curGroup.getGroupComments());
                }

                if (curGroup.getUserCount() > 0) {
                    Element membersElement = addEmptyElement(curGroupElement, "userMembers");

                    List users = curGroup.getUsers();
                    for (int j = 0; j < users.size(); j++) {
                        addDataElement(membersElement, "userID", (String) users.get(j));
                    }
                }
            }
        }

        serializeToFile();
    }

