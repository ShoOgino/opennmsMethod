	/**This constructor is designed to build a new DutySchedule from a String
	   representation formatted as such. <day_of_week_abbr><start>-<stop>
	   eg. MoWeFr800-1700, TuTh900-1500.
	   @param String aSchedule, the string to convert to a new DutySchedule
	*/
	public DutySchedule(String aSchedule)
	{
		m_days = new BitSet(7);
		
		//parse the endtime and day/begin time out
		StringTokenizer timeTokens = new StringTokenizer( aSchedule, "-");
		String daysAndStartTime = timeTokens.nextToken();
		
		m_stopTime = Integer.parseInt(timeTokens.nextToken());
		
		//loop through the first half of the string and get each two letter
		//day abbreviation, set the appropriate BitSet values
		for (int j = 0; j < daysAndStartTime.length(); j++)
		{
			//check to see if there is a character or digit at the current index
			if (!Character.isDigit(daysAndStartTime.charAt(j)))
			{
				//look at the current and next characters, advance the loop counter
				//by one and add one to get the propert substring
				m_days.set(getDayInt(daysAndStartTime.substring(j, ++j+1)));
			}
			else
			{
				//if a digit was seen this is the start time, get it and stop the loop
				m_startTime = Integer.parseInt(daysAndStartTime.substring(j, daysAndStartTime.length()));
				break;
			}
		}
	}

