    public List getDataSourceList(String nodeId, String intf, boolean includeNodeQueries) {
        if(nodeId == null || intf == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }
        
        List dataSources = new ArrayList();
        
        File nodeDir = new File(this.rrdDirectory, nodeId);
        File intfDir = new File(nodeDir, intf);
        
        int suffixLength = RrdFileConstants.RRD_SUFFIX.length();
        
        //get the node data sources
        if(includeNodeQueries) {            
            dataSources.addAll(this.getDataSourceList(nodeId));
        }
        
        //get the interface data sources
        File[] intfFiles = intfDir.listFiles(RrdFileConstants.RRD_FILENAME_FILTER);
        
        for(int i = 0; i < intfFiles.length; i++ ) {
            String fileName = intfFiles[i].getName();
            String dsName = fileName.substring(0, fileName.length() - suffixLength);
            
            dataSources.add(dsName); 
        }        
        
        return dataSources;
    }

