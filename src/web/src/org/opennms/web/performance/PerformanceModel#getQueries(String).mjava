    public PrefabGraph[] getQueries(String nodeId) {
        if (nodeId == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        // create a temporary list of queries to return
        List returnList = new LinkedList();

        // get the full list of all possible queries
        PrefabGraph[] queries = this.getQueries();

        // get all the data sources supported by node
        List availDataSourceList = this.getDataSourceList(nodeId);

        // for each query, see if all the required data sources are available
        // in the available data source list, if so, add that query to the
        // returnList
        for (int i = 0; i < queries.length; i++) {
            List requiredList = Arrays.asList(queries[i].getColumns());

            if (availDataSourceList.containsAll(requiredList)) {
                returnList.add(queries[i]);
            }
        }

        // put the queries in returnList into an array
        PrefabGraph[] availQueries = (PrefabGraph[]) returnList.toArray(new PrefabGraph[returnList.size()]);

        return availQueries;
    }

