    private void fillModifyFormFromUser(User user) {

        // First make sure the number of dutySchedules matches
        String[] dutySchedules = user.getDutySchedule();

        int numScheds = Integer.parseInt(getTester().getDialog().getFormParameterValue("dutySchedules"));
        if (numScheds > dutySchedules.length) {
            for(int i = dutySchedules.length; i < numScheds; i++) {
                checkCheckbox("deleteDuty"+i);
            }
            clickButton("removeSchedulesButton");
        } else if (numScheds < dutySchedules.length) {
            int needed = dutySchedules.length - numScheds;
            selectOption("numSchedules", String.valueOf(needed));
            clickButton("addSchedulesButton");
        }
        
        setWorkingForm("modifyUser");
        setFormElement("fullName", user.getFullName());
        setFormElement("userComments", user.getUserComments());
        setFormElement("email", getContact(user, "email"));
        setFormElement("pemail", getContact(user, "pemail"));
        setFormElement("xmppAddress", getContact(user, "xmppAddress"));
        setFormElement("numericalService", getServiceProvider(user, "numericPage"));
        setFormElement("numericalPin", getContact(user, "numericPage"));
        setFormElement("textService", getServiceProvider(user, "textPage"));
        setFormElement("textPin", getContact(user, "textPage"));

        assertFormElementEquals("dutySchedules", String.valueOf(dutySchedules.length));

        for(int i = 0; i < dutySchedules.length; i++) {
            DutySchedule sched = new DutySchedule(dutySchedules[i]);
            setCheckboxSelection("duty"+i+"Mo", sched.hasDay(DutySchedule.MONDAY));
            setCheckboxSelection("duty"+i+"Tu", sched.hasDay(DutySchedule.TUESDAY));
            setCheckboxSelection("duty"+i+"We", sched.hasDay(DutySchedule.WEDNESDAY));
            setCheckboxSelection("duty"+i+"Th", sched.hasDay(DutySchedule.THURSDAY));
            setCheckboxSelection("duty"+i+"Fr", sched.hasDay(DutySchedule.FRIDAY));
            setCheckboxSelection("duty"+i+"Sa", sched.hasDay(DutySchedule.SATURDAY));
            setCheckboxSelection("duty"+i+"Su", sched.hasDay(DutySchedule.SUNDAY));
            setFormElement("duty"+i+"Begin", String.valueOf(sched.getStartTime()));
            setFormElement("duty"+i+"End", String.valueOf(sched.getStopTime()));
        }
        
        OncallSchedule[] schedules = user.getOncallSchedule();
        
        assertFormElementEquals("oncallScheduleCount", String.valueOf(schedules.length));
        
        for(int i = 0; i < schedules.length; i++) {
            OncallSchedule schedule = schedules[i];
            String schedPrefix = "oncallSchedule["+i+"]";
            setFormElement(schedPrefix+".name", schedule.getName());
            assertFormElementEquals(schedPrefix+".type", schedule.getType());
            
            Time[] times = schedule.getTime();
            assertFormElementEquals(schedPrefix+".timeCount", String.valueOf(times.length));
            for(int j = 0; j < times.length; j++) {
                Time time = times[j];
                String timePrefix = schedPrefix+".time["+j+"]";
                if (!"specific".equals(schedule.getType())) {
                    setFormElement(timePrefix+".day", time.getDay());
                } 
                setFormElement(timePrefix+".begins", time.getBegins());
                setFormElement(timePrefix+".ends", time.getEnds());
            }
        }
        
    }

