    public void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException {

        // the docbase to which all our elements will be relative
        // String base = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + request.getContextPath() + "/";

        response.setContentType("image/png");

        // create a transcoder
        PNGTranscoder t = new PNGTranscoder();

        // for some reason, the JPEGTranscoder doesn't work...
        // JPEGTranscoder t = new JPEGTranscoder();
        // t.addTranscodingHint(JPEGTranscoder.KEY_QUALITY, new Float(.8));

        try {
            // grab SVG directly from the jsp page.
            // gosh darn it this was such a supremely elegant trick
            // until I discovered it didn't work with HTTP
            // Authentication.  *sigh*
            // TranscoderInput input = new TranscoderInput(base + "/inline.jsp");


            // create the object that will make our SVG for us
            // DocumentGenerator docgen = new DocumentGenerator();
            // now we get this from our HttpSession via jsp
            DocumentGenerator docgen = (DocumentGenerator) request.getSession().getAttribute("docgen");


            // pass the servlet context so the DocumentGenerator can find its icons
            // ServletContext ctx = getServletContext();
            // docgen.setNodes(nodes);
            // docgen.setServletContext(ctx);
            // docgen.setUrlBase(base);

            // generate and retrieve the SVG DOM we've got to get it
            // out of the Document object format into something the
            // transcoder recognizes.  For some reason, even though
            // there is a TranscoderInput(Document) constructor, it
            // doesn't seem to be able to do anything with the
            // Document object.  So I turn the Document into a String
            // and feed that into the TranscoderInput.

            Document doc = docgen.getHostDocument(true);
            ByteArrayOutputStream baos = new ByteArrayOutputStream(8192);
            Writer docwriter = new OutputStreamWriter(baos, "UTF-8");
            DOMUtilities.writeDocument(doc, docwriter);
            docwriter.flush();
            docwriter.close();
            String svg = baos.toString();
            TranscoderInput input = new TranscoderInput(new StringReader(svg));

            // uncomment this if you want to see the SVG we're transcoding.
            // this is a pleasant side-effect of having to turn it into a String
            // log(svg);

            // create the transcoder output
            OutputStream ostream = response.getOutputStream();
            TranscoderOutput output = new TranscoderOutput(ostream);


            // this isn't really necessary, and in fact slows the JVM
            // down a little bit when we gc.  the Transcoder uses so
            // much memory though, that I like to keep this in here to
            // see what it's doing.

            Runtime rt = java.lang.Runtime.getRuntime();

            log("Maximum memory available: " + rt.maxMemory());
            log("Allocated memory: " + rt.totalMemory());
            log("Free memory: " + rt.freeMemory());
            log("Garbage collecting");
            java.lang.System.gc();
            log("GC finished.");
            log("Allocated memory: " + rt.totalMemory());
            log("Free memory: " + rt.freeMemory());

            log("starting transcoding");

            try {
                t.transcode(input, output);
            } catch(HeadlessException e) {
                // doesn't seem to do this anymore.  Something changed...
                log("HeadlessException in SVGTranscoder during transcoding");
                log(e.toString());
            } catch(TranscoderException e) {
                log("TranscoderException in SVGTranscoder during transcoding");
                log(e.toString());
            } catch(Exception e) {
                log("Exception in SVGTranscoder during transcoding");
                log(e.toString());
            }

            log("finished transcoding");
            log("Allocated memory: " + rt.totalMemory());
            log("Free memory: " + rt.freeMemory());
        } catch(IOException e) {
            log("IOException in SVGTranscoder");
            log(e.toString());
        } catch(Exception e) {
            log("Exception in SVGTranscoder");
            log(e.toString());
        }

    }

