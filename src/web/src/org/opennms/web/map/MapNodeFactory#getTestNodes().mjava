    /**
     * generate a bunch of made-up nodes with generic node data in
     * them.  This won't really work as expected anymore because the
     * IPAddress display has been replaced with RTC display.
     */

    public Vector getTestNodes() {
	Vector nodes = new Vector();

	MapNode onms = new MapNode();
	onms.setNodeID(0);
	onms.setNodeParent(-1);
	onms.setHostname("opennms");
	onms.setIconName("images/svg/opennms.svg");
	onms.setIPAddress("192.168.1.100");
	onms.setStatus("up");
	nodes.add(onms);

	for(int i = 1; i <= 4; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(0);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/other.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 5; i <= 5; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(1);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/unspecified.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 6; i <= 7; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(2);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/telephony.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 8; i <= 10; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(3);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/server.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 11; i <= 11; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(4);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/server.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 12; i <= 12; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(5);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/server.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 13; i <= 14; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(7);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/server.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 15; i <= 16; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(8);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/server.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 17; i <= 21; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(12);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/infrastructure.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 22; i <= 23; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(13);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/laptop.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 24; i <= 27; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(14);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/printer.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}

	for(int i = 28; i <= 36; i++) {
	    MapNode n = new MapNode();

	    n.setNodeID(i);
	    n.setNodeParent(16);
	    n.setHostname("node" + new Integer(i).toString());
	    n.setIconName("images/svg/workstation.svg");
	    n.setIPAddress("192.168.1." + new Integer(i).toString());
	    n.setStatus("up");

	    nodes.add(n);
	}


	return nodes;
    }

