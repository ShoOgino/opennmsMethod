    /**
     * generate HTML that will output imagemap information for the map
     * that corresponds to the HostDocument created later.  This is
     * currently dependent on the NodeFactory generating the same
     * nodes with the same parent/child relationship since the
     * createJavascriptMap and createHostDocument each call it
     * independently.  It would be A Good Idea(tm) to call it
     * somewhere externally and, e.g. put it into a Session attribute
     * or something along those lines so we don't run the risk of
     * having the information change between method calls.  Will do
     * later...
     *
     * @param mapname the "name" of the HTML element that will have
     * the imagemap attached.  e.g. <map name="mapname">
     * @param uri the page and parameters that will be created for the
     * link for the given node.  e.g. "node.jsp?node=" will result in
     * a link to "[urlbase]/node.jsp?node=[nodeid]"
     */

    public String getImageMap(String mapname, String uri) {
	StringBuffer map = new StringBuffer();

	map.append("<map name=" + mapname + ">\n");
	Iterator i = nodes.iterator();
	while(i.hasNext()) {
	    MapNode mn = (MapNode)i.next();
	    map.append("<area shape=\"rect\" ");
	    map.append("coords=");
	    map.append(mn.getIconMinX() + ",");
	    map.append(mn.getIconMinY() + ",");
	    map.append(mn.getIconMaxX() + ",");
	    map.append(mn.getIconMaxY() + " ");
	    map.append("href=" + this.urlBase + uri + mn.getNodeID());
	    map.append(">\n");
	}	
	map.append("</map>\n");

	return map.toString();
    }

