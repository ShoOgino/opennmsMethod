    /**
     * load the SVG icon data so we can embed it directly into the SVG
     * we output instead of loading each icon as an external entity.
     *
     * this doesn't work right for some reason.  when the SVG is
     * rendered, the icons are all messed up or don't show up.  For
     * now, forget trying to load the icons as "symbol" elements
     * inside of the SVG document and just refer to them as external
     * entities...
     *
     * When I have more time, I will try to fix this.
     */

    private void loadIcons() {
        try {
            String parser = XMLResourceDescriptor.getXMLParserClassName();
            SAXSVGDocumentFactory f = new SAXSVGDocumentFactory(parser);
            DOMImplementation impl = SVGDOMImplementation.getDOMImplementation();

            Enumeration e = iconNames.keys();
            System.err.println("Loading icons");
            while(e.hasMoreElements()) {
                String icon = (String) e.nextElement();
                String filename = (String) iconNames.get(icon);
                String uriStr = "file:///opt/tomcat/webapps/batik/images/" + filename;
                URI uri = new URI(uriStr);

                // log("loading icon " + icon + " from " + uriStr);
                // log("URI is " + uri.toString());
                // log("Scheme is " + uri.getScheme());

                Document iconDoc = f.createDocument(uri.toString());
                Element iconRootElement = iconDoc.getDocumentElement();

                // log("Icon loaded");

                Element symbol = this.document.createElementNS(this.namespace, "symbol");
                symbol.setAttributeNS(null, "id", icon);

                // log("Symbol element created");

                Node clonedIcon = this.document.importNode(iconRootElement, true);

                // log("icon cloned");

                symbol.appendChild(clonedIcon);
                this.document.getDocumentElement().appendChild(symbol);
            }
        } catch(IOException e) {
            log("IOException in DocumentGenerator.loadIcons()");
            log(e.toString());
        } catch(Exception e) {
            log("Exception in DocumentGenerator.loadIcons()");
            log(e.toString());
        }
    }

