    /**
     * This method is responsible for determining the 
     * color based on the status of the node, and the
     * node label
     * 
     * @param String nodeID
     *            the nodeID of the node being checked
     */
    public static String[] getNodeLabelAndColor(String nodeID) throws SQLException {

        Connection conn = Vault.getDbConnection();
	int count = 0;
	String result[] = new String[2];
	result[1] = "lightblue";

        try {
            PreparedStatement stmt = conn.prepareStatement(GET_NODELABEL_BY_NODEID);
            stmt.setString(1, nodeID);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                result[0] = rs.getString(1);
            }
	    rs.close();
            stmt.close();

            stmt = conn.prepareStatement(COUNT_MANAGED_SVCS);
            stmt.setString(1, nodeID);
            rs = stmt.executeQuery();
            while (rs.next()) {
                count = rs.getInt(1);
            }
            if(count > 0) {
                PreparedStatement stmt1 = conn.prepareStatement(SQL_GET_LATEST_NODE_DOWN_EVENTID);
                PreparedStatement stmt2 = conn.prepareStatement(SQL_GET_LATEST_NODE_UP_EVENTID);
                stmt1.setString(1, nodeID);
                stmt2.setString(1, nodeID);
                ResultSet rs1 = stmt1.executeQuery();
                if (rs1.next()) {
                    int nodeDownEventId = rs1.getInt(1);
                    ResultSet rs2 = stmt2.executeQuery();
                    if (rs2.next()) {
                        if(rs2.getInt(1) > nodeDownEventId) {
                            result[1] = "green";
                        } else {
                            result[1] = "red";
                        }
                    } else {
                        result[1] = "red";
                    } 
                    rs2.close();
                    stmt2.close();
                } else {
                    result[1] = "green";
                }
                rs1.close();
                stmt1.close();
            }
            rs.close();
	    stmt.close();
        } finally {
            Vault.releaseDbConnection(conn);
        }
	return result;
    }

