    /**
     * This method is used to process an snmp tag.
     * 
     * @param snmpElement
     *            the DOM element to handle.
     * @return the parse Snmp object
     */
    private Snmp processSnmp(Element snmpElement) {
        Snmp snmp = new Snmp();

        NodeList nl = ((Node) snmpElement).getChildNodes();
        int size = nl.getLength();

        for (int i = 0; i < size; i++) {
            Node curNode = nl.item(i);
            if (curNode.getNodeType() == Node.ELEMENT_NODE) {
                String curTag = ((Element) curNode).getTagName();
                m_curElement.replace(0, m_curElement.length(), curTag);

                if (curTag.equals("id")) {
                    snmp.setId(processParmValue(curNode));
                } else if (curTag.equals("idtext")) {
                    snmp.setIdText(processParmValue(curNode));
                } else if (curTag.equals("version")) {
                    snmp.setVersion(processParmValue(curNode));
                } else if (curTag.equals("specific")) {
                    snmp.setSpecific(processParmValue(curNode));
                } else if (curTag.equals("generic")) {
                    snmp.setGeneric(processParmValue(curNode));
                } else if (curTag.equals("community")) {
                    snmp.setCommunity(processParmValue(curNode));
                }
            }
        }

        return snmp;
    }

