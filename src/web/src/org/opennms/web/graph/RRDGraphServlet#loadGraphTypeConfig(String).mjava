    public GraphTypeConfig loadGraphTypeConfig(String propertiesFilename)
		throws ServletException {
        Properties properties = new Properties();

        try {
            properties.load(new FileInputStream(propertiesFilename));

            RrdUtils.graphicsInitialize();
        } catch (FileNotFoundException e) {
            log("Could not find configuration file", e);
            throw new ServletException("Could not find configuration file", e);
        } catch (IOException e) {
            log("Could not load configuration file", e);
            throw new ServletException("Could not load configuration file: ", e);
        } catch (RrdException e) {
            log("Could not inititalize the graphing system", e);
            throw new ServletException("Could not initialize graphing system: " + e.getMessage(), e);
        } catch (Throwable e) {
            log("Unexpected exception or error occurred", e);
            throw new ServletException("Unexpected exception or error occured: " + e.getMessage(), e);
        }

        GraphTypeConfig config = new GraphTypeConfig();

        config.setWorkDir(new File(properties.getProperty("command.input.dir")));
        config.setCommandPrefix(properties.getProperty("command.prefix"));
        config.setMimeType(properties.getProperty("output.mime"));
        config.setReportMap(PrefabGraph.getPrefabGraphDefinitions(properties));

        return config;
    }

