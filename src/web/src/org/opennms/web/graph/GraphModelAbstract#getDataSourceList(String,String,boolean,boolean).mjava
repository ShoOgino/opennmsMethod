    public List getDataSourceList(String nodeIdOrDomain, String intf, boolean includeNodeQueries, boolean isNode) {
        Category log = ThreadCategory.getInstance(this.getClass());
        if (nodeIdOrDomain == null || intf == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        List dataSources = new ArrayList();

        File nodeOrDomainDir = new File(getRrdDirectory(), nodeIdOrDomain);
        File intfDir = new File(nodeOrDomainDir, intf);

        int suffixLength = RrdFileConstants.RRD_SUFFIX.length();

        // get the node data sources
        if (includeNodeQueries && isNode) {
            dataSources.addAll(this.getDataSourceList(nodeIdOrDomain));
        }

        // get the interface data sources
        File[] intfFiles = intfDir.listFiles(RrdFileConstants.RRD_FILENAME_FILTER);

        for (int i = 0; i < intfFiles.length; i++) {
            String fileName = intfFiles[i].getName();
            String dsName = fileName.substring(0, fileName.length() - suffixLength);

            dataSources.add(dsName);
	    log.debug("getDataSourceList: adding " + dsName);
        }

        return dataSources;
    }

