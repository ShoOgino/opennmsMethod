    /**
     * Checks the parameters passed to this servlet, and if all are okay,
     * executes the RRDTool command in another process and pipes its PNG output
     * to the <code>ServletOutputStream</code> back to the requesting web
     * browser.
     */
    public void doGet(HttpServletRequest request, HttpServletResponse response)
	    throws ServletException, IOException {
        String type = request.getParameter("type");

        if (type == null) {
	    returnErrorImage(response, s_missingParamsPath);
            return;
        }

	GraphTypeConfig config = getGraphConfig(type);

	String command;
	if (isTypeAdHoc(type)) {
	    command = getCommandAdhoc(config, request, response);
	} else {
	    command = getCommandNonAdhoc(config, request, response);
	}

	if (command == null) {
	    returnErrorImage(response, s_missingParamsPath);
            return;
        }

        File workDir = config.getWorkDir();
        InputStream tempIn = null;
        try {
            log("Executing RRD command in this directory: " + workDir);
            log(command);

            tempIn = RrdUtils.createGraph(command, workDir);
        } catch (RrdException e) {
            log("Read from stderr: " + e.getMessage());
	    returnErrorImage(response, s_rrdError);
	    return;
	}

        if (tempIn != null) {
            response.setContentType(config.getMimeType());

            StreamUtils.streamToStream(tempIn, response.getOutputStream());

            tempIn.close();
        }
    }

