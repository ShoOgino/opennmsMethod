    public Notification getNoticeInfo(int id) throws SQLException {
        Notification nbean = new Notification();
        
        Connection conn = Vault.getDbConnection();

        try {
            //create the list of users the page was sent to
            PreparedStatement sentTo = conn.prepareStatement(SENT_TO);
            sentTo.setInt(1, id);
            ResultSet sentToResults = sentTo.executeQuery();
            
            List sentToList = new ArrayList();
            sentToResults.beforeFirst();
            while(sentToResults.next())
            {
                    NoticeSentTo newSentTo = new NoticeSentTo();
                    newSentTo.setUserId( sentToResults.getString(USERID) );
                    Timestamp ts = sentToResults.getTimestamp(NOTICE_TIME);
		    if (ts != null)
                    	newSentTo.setTime(ts.getTime());
		    else
                    	newSentTo.setTime(0);
                    newSentTo.setMedia( sentToResults.getString(MEDIA) );
                    newSentTo.setContactInfo( sentToResults.getString(CONTACT) );
                    sentToList.add(newSentTo);
            }
            
            nbean.m_sentTo = sentToList;
            
            //fill out the rest of the bean
            PreparedStatement pstmt = conn.prepareStatement(NOTICE_ID);
            pstmt.setInt(1, id);
            ResultSet rs = pstmt.executeQuery();
            
            rs.beforeFirst();
            while(rs.next()) {
                    Object element = rs.getString(TXT_MESG);
                    nbean.m_txtMsg = (String)element;
                    
                    element = rs.getString(NUM_MESG);
                    nbean.m_numMsg = (String)element;
                    
                    element = new Integer(rs.getInt(NOTIFY));
                    nbean.m_notifyID = ((Integer)element).intValue();
                    
                    element = rs.getTimestamp(TIME);
                    nbean.m_timeSent = ((Timestamp)element).getTime();
                    
                    element = rs.getTimestamp(REPLYTIME);
		    if (element != null)
                	nbean.m_timeReply = ((Timestamp)element).getTime();
		    else
                	nbean.m_timeReply = 0;
                    
                    element = rs.getString(ANS_BY);
                    nbean.m_responder = (String)element;
                    
                    element = new Integer(rs.getInt(NODE));
                    nbean.m_nodeID = ((Integer)element).intValue();
                    
                    element = rs.getString(INTERFACE);
                    nbean.m_interfaceID = (String)element;
                    
                    element = new Integer(rs.getInt(SERVICE));
                    nbean.m_serviceId = ((Integer)element).intValue();
                    
                    element = new Integer(rs.getInt(EVENTID));
                    nbean.m_eventId = ((Integer)element).intValue();
                    
                    Statement stmttmp = conn.createStatement();
                    ResultSet rstmp = stmttmp.executeQuery("SELECT servicename from service where serviceid = " + nbean.m_serviceId);
                    
                    if(rstmp.next()) {
                            element = rstmp.getString("servicename");
                            if(element != null) {
                                    nbean.m_serviceName = (String)element;
                            }
                    }
            }
            
            rs.close();
            pstmt.close();
        }
        catch( SQLException e ) {
            m_logger.debug("Problem getting data from the notifications table.");
            m_logger.debug("Error: " + e.getLocalizedMessage());

            throw e;
        }
        finally {
            Vault.releaseDbConnection( conn );
        }
        
        return nbean;
    }

