    /** 
     * Return all notices (optionally only unacknowledged notices) sorted by time
     * for the given service.
     */
    public static Notification[] getNoticesForService( int nodeId, String ipAddress, int serviceId, boolean includeAcknowledged ) throws SQLException {
        if( ipAddress == null ) {
            throw new IllegalArgumentException( "Cannot take null parameters." );
        }

        Notification[] notices = null;
        Connection conn = Vault.getDbConnection();

        try {
            StringBuffer select = new StringBuffer("SELECT * FROM NOTIFICATIONS WHERE NODEID=? AND INTERFACEID=? AND SERVICEID=?"); 

            if( !includeAcknowledged ) {
                select.append( " AND RESPONDTIME IS NULL" );
            }

            select.append( " ORDER BY NOTIFYID DESC" );

            PreparedStatement stmt = conn.prepareStatement( select.toString() );
            stmt.setInt( 1, nodeId );
            stmt.setString( 2, ipAddress );
            stmt.setInt( 3, serviceId );
            ResultSet rs = stmt.executeQuery();
    
            notices = rs2Notices( rs );
          
            rs.close();
            stmt.close();
        }
        finally {
            Vault.releaseDbConnection( conn );
        }

        return notices;
    }

