	/**This method creates a new DOM tree document that represents the data
	   in the collection. This document will be serialized to a file to 
	   save the configuration.
	   @param Collection groups, the information to save
	   @exception XMLWriteException
	*/
	protected void saveDocument(Collection notifications) 
		throws XMLWriteException
	{
		Element root = m_document.createElement("notifications");
		root.setAttribute("status", status);
		m_document.appendChild(root);
		
		//write the header
		XMLHeader header = new XMLHeader(getVersion(), m_document);
		root.appendChild(header.getHeaderElement());
		
		if (notifications.size() > 0)
		{
			Object notificationsArray[] = notifications.toArray();
			for (int i = 0; i < notificationsArray.length; i++)
			{
				Notification curNotif = (Notification)notificationsArray[i];
				
				Element curNotifElement = addEmptyElement(root, "notification");
				curNotifElement.setAttribute("interval", curNotif.getInterval());
				
				addDataElement(curNotifElement, "name", curNotif.getName());
				addDataElement(curNotifElement, "comments", curNotif.getComments());
				
				List targets = curNotif.getTargets();
				
				for (int j = 0; j < targets.size(); j++)
				{
					NotificationTarget curTarget = (NotificationTarget)targets.get(j);
					
					Element curTargetElement = addEmptyElement(curNotifElement, "target");
					
					if (curTarget.getType() == NotificationTarget.TARGET_TYPE_USER)
					{
						addDataElement(curTargetElement, "user", ((UserTarget)curTarget).getUserName());
						addDataElement(curTargetElement, "command", ((UserTarget)curTarget).getCommandName());
					}
					else if (curTarget.getType() == NotificationTarget.TARGET_TYPE_NOTIF)
					{
						curTargetElement.setAttribute("type", "notif");
						addDataElement(curTargetElement, "notif", ((NotifTarget)curTarget).getNotifName());
						String notifInterval = ((NotifTarget)curTarget).getInterval();
						if(notifInterval != null && !notifInterval.trim().equals(""))
						{
							addDataElement(curTargetElement, "interval", notifInterval);
						}
					}
					else if (curTarget.getType() == NotificationTarget.TARGET_TYPE_GROUP)
					{
						curTargetElement.setAttribute("type", "group");
						addDataElement(curTargetElement, "group", ((GroupTarget)curTarget).getGroupName());
						addDataElement(curTargetElement, "command", ((GroupTarget)curTarget).getCommandName());
					}
				}
			}
		}
		
		serializeToFile();
	}

