    /** 
     * Convenience method for translating a <code>java.sql.ResultSet</code>
     * containing notice information into an array of <code>Notification</code>
     * objects.
     */
    protected static Notification[] rs2Notices( ResultSet rs ) throws SQLException {
        Notification[] notices = null;
        Vector vector = new Vector();

        while(rs.next()) {
            Notification notice = new Notification();
        
            Object element = new Integer(rs.getInt("notifyid"));
            notice.m_notifyID = ((Integer)element).intValue();
        
            element = rs.getTimestamp("pagetime");
            notice.m_timeSent = ((Timestamp)element).getTime();
	    
	    element = rs.getTimestamp("respondtime");
            if( element != null ) {
                notice.m_timeReply = ((Timestamp)element).getTime();
	    }
        
	    element = rs.getString("textmsg");
	    notice.m_txtMsg = (String)element;

	    element = rs.getString("numericmsg");
	    notice.m_numMsg = (String)element;

	    element = rs.getString("answeredby");
 	    notice.m_responder = (String)element;

	    element = new Integer(rs.getInt("nodeid"));
	    notice.m_nodeID = ((Integer)element).intValue();

	    element = rs.getString("interfaceid");
	    notice.m_interfaceID = (String)element;

            element = new Integer(rs.getInt("eventid"));
	    notice.m_eventId = ((Integer)element).intValue();
            
	    element = new Integer(rs.getInt("serviceid"));
	    if( element != null ) {
                notice.m_serviceId = ((Integer)element).intValue();
		element = NetworkElementFactory.getServiceNameFromId( notice.m_serviceId );
                notice.m_serviceName = (String)element;
            }
	    
	    vector.addElement( notice );
        }

        notices = new Notification[vector.size()];

        for( int i=0; i < notices.length; i++ ) {
            notices[i] = (Notification)vector.elementAt(i);
        }

        return notices;
    }

