    /**
     * Parses the magic-users.properties file into two mappings: from magic
     * username to password, and from magic role to authorized users of that
     * role.
     */
    protected Map[] parseMagicUsers() throws FileNotFoundException, IOException {
        Map passwordMap = new HashMap();
        Map roleMap = new HashMap();

        // read the file
        Properties props = new Properties();
        props.load(new FileInputStream(this.magicUsersFile));

        // look up users and their passwords
        String[] users = BundleLists.parseBundleList(props.getProperty("users"));

        for (int i = 0; i < users.length; i++) {
            String username = props.getProperty("user." + users[i] + ".username");
            String password = props.getProperty("user." + users[i] + ".password");

            passwordMap.put(username, password);
        }

        // look up roles and their users
        String[] roles = BundleLists.parseBundleList(props.getProperty("roles"));

        for (int i = 0; i < roles.length; i++) {
            String rolename = props.getProperty("role." + roles[i] + ".name");
            String[] authUsers = BundleLists.parseBundleList(props.getProperty("role." + roles[i] + ".users"));

            roleMap.put(rolename, Arrays.asList(authUsers));
        }

        return (new Map[] { passwordMap, roleMap });
    }

