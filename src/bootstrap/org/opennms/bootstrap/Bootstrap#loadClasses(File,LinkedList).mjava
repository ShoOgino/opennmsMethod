    public static void loadClasses(File dir, LinkedList urls)
		throws MalformedURLException {
        FileFilter dirFilter = new FileFilter() {
            public boolean accept(File pathname) {
                return pathname.isDirectory();
            }
        };

	//System.out.println("adding directory: " + dir.toURL());
	urls.add(dir.toURL());

        File[] dirlist = dir.listFiles(dirFilter);
	if (dirlist == null) {
	    //	    System.out.println("File.listFiles returned null: " + dir);
	    return;
	}
        for (int i = 0; i < dirlist.length; i++) {
            //ClassPather.loadClasses(dirlist[i], urls);
        }

        // It is also possible to filter the list of returned files.
        // This example does not return any files that ends with `.jar'.
        FilenameFilter jarFilter = new FilenameFilter() {
            public boolean accept(File dir, String name) {
                return name.endsWith(".jar");
            }
        };

        File[] children = dir.listFiles(jarFilter);
        for (int i = 0; i < children.length; i++) {
	    //System.out.println("adding jar: " + children[i].toURL());
	    urls.add(children[i].toURL());
	}
    }

