    public static void main(String[] args) throws Exception {
	final String bootPropertiesName = "bootstrap.properties";
	final String opennmsHomeProperty = "opennms.home";

	String classToExec = null;
	String classToExecMethod = null;
	String[] classToExecArgs = null;

	classToExec = "org.opennms.netmgt.vmmgr.Manager";
	classToExecMethod = "main";
	classToExecArgs = args;

	boolean propertiesLoaded = false;
	String opennmsHome = System.getProperty(opennmsHomeProperty);
	if (opennmsHome != null) {
	    File f = new File(opennmsHome + File.separator + "etc" +
			      File.separator + bootPropertiesName);
	    if (f.exists()) {
		loadProperties(new FileInputStream(f));
		propertiesLoaded = true;
	    }
	}

	/*
	if (!propertiesLoaded) {
            ClassLoader l =  Thread.currentThread().getContextClassLoader();
            is = l.getResourceAsStream(bootPropertiesName);

	    if (is == null) {
		loadProperties(is);
		propertiesLoaded = true;
	    }
	}
	*/

	if (!propertiesLoaded) {
	    File parent = findOpenNMSHome();
	    File f = new File(parent.getPath() +
			      File.separator + "etc" +
			      File.separator + bootPropertiesName);
	    if (f.exists()) {
		loadProperties(new FileInputStream(f));
		propertiesLoaded = true;
	    }

	    System.setProperty(opennmsHomeProperty,
			       parent.getPath());
	}

	if (!propertiesLoaded) {
	    System.err.println("Warning: Could not find boot properties file.");
	}

	String dir = System.getProperty("opennms.classpath");
	if (dir == null) {
	    dir = System.getProperty(opennmsHomeProperty) +
		File.separator + "lib" +
		File.pathSeparator +
		System.getProperty(opennmsHomeProperty) +
		File.separator + "etc";
	}
	ClassLoader cl = Bootstrap.loadClasses(dir);
    
	String path;

	if (System.getProperty("opennms.library.jicmp") == null) {
	    path = cl.getResource(System.mapLibraryName("jicmp")).getPath();
	    if (path != null) {
		System.setProperty("opennms.library.jicmp", path);
	    }
	}

	if (System.getProperty("opennms.library.jrrd") == null) {
	    path = cl.getResource(System.mapLibraryName("jrrd")).getPath();
	    if (path != null) {
		System.setProperty("opennms.library.jrrd", path);
	    }
	}

	if (classToExec != null) {
	    String className = classToExec;
	    Class[] classes = new Class[] { classToExecArgs.getClass() };
	    Object[] methodArgs = new Object[] { classToExecArgs };

	    Class c = cl.loadClass(className);
	    Method method = c.getMethod(classToExecMethod, classes);
	    method.invoke(null, methodArgs);
	}
    }

