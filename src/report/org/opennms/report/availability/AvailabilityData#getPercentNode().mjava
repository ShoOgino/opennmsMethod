        /**
         * Returns percent/node combinations for the last month.
	 * This is used to get the last months top 20 offenders
         */
        public TreeMap getPercentNode()
        {
		org.apache.log4j.Category log = ThreadCategory.getInstance(this.getClass());
		int days = m_daysInLastMonth;
		long endTime = m_lastMonthEndTime;
		Calendar cal = new GregorianCalendar();
		cal.setTimeInMillis(endTime);
		cal.add(Calendar.DATE, -1 * days);
		long rollingWindow = endTime - cal.getTime().getTime();
		long startTime = cal.getTime().getTime();
		if(log.isDebugEnabled())
		{
			log.debug("getPercentNode: Start time " + new java.util.Date(startTime));
			log.debug("getPercentNode: End time " + new java.util.Date(endTime));
		}
                TreeMap percentNode = new TreeMap();
		Iterator nodeIter = m_nodes.iterator();

		while(nodeIter.hasNext())
		{
			Node node = (Node)nodeIter.next();
			if(node != null)
			{
				double percent = node.getPercentAvail(endTime, rollingWindow);
				String nodeName = node.getName();
				if(log.isDebugEnabled())
					log.debug("Node " + nodeName + " " + percent + "%");
				if(percent < 100.0)
				{
					List tmp = (List)percentNode.get(new Double(percent));
					if(tmp == null)
						tmp = new ArrayList();
					tmp.add(nodeName);
					percentNode.put(new Double(percent), tmp);
				}
			}
		}
	        if(log.isDebugEnabled())
        	        log.debug("Percent node " + percentNode );
		return percentNode;
        }

