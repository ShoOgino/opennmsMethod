    /**
     * @param logourl
     * @param categoryName
     * @param format
     */
    public static void generateReport(String logourl, String categoryName, String format) throws Exception {

        // This report will be invoked by the mailer script.
        // Only SVG formatted reports are needed.
        // 
        Category log = ThreadCategory.getInstance(AvailabilityReport.class);
        SimpleDateFormat fmt = new SimpleDateFormat("yyyyMMdd");
        String catFileName = categoryName.replace(' ', '-');
        String pdfFileName = null;
        if (format.equals("SVG"))
            pdfFileName = ConfigFileConstants.getHome() + "/share/reports/AVAIL-SVG-" + catFileName + fmt.format(new java.util.Date()) + ".pdf";
        else if (format.equals("PDF"))
            pdfFileName = ConfigFileConstants.getHome() + "/share/reports/AVAIL-PDF-" + catFileName + fmt.format(new java.util.Date()) + ".pdf";
        else if (format.equals("HTML"))
            pdfFileName = ConfigFileConstants.getHome() + "/share/reports/AVAIL-HTML-" + catFileName + fmt.format(new java.util.Date()) + ".html";
        try {
            AvailabilityReport report = new AvailabilityReport("Unknown");
            report.getReportData(logourl, categoryName, format);
            if (log.isInfoEnabled())
                log.info("Generated Report Data... ");
            File file = new File(pdfFileName);
            FileOutputStream pdfFileWriter = new FileOutputStream(file);
            String xslFileName = null;
            if (format.equals("SVG"))
                xslFileName = ConfigFileConstants.getFilePathString() + ConfigFileConstants.getFileName(ConfigFileConstants.REPORT_SVG_XSL);
            else if (format.equals("PDF"))
                xslFileName = ConfigFileConstants.getFilePathString() + ConfigFileConstants.getFileName(ConfigFileConstants.REPORT_PDF_XSL);
            else if (format.equals("HTML"))
                xslFileName = ConfigFileConstants.getFilePathString() + ConfigFileConstants.getFileName(ConfigFileConstants.REPORT_HTML_XSL);
            report.generatePDF(xslFileName, pdfFileWriter, format);
            if (log.isInfoEnabled()) {
                log.debug("xsl -> " + xslFileName + " pdfFileName -> " + pdfFileName + " format -> " + format);
                log.info("Generated Report ... and saved as " + pdfFileName);
            }
        } catch (IOException ioe) {
            if (log.isEnabledFor(Priority.FATAL))
                log.fatal("IOException ", ioe);
        } catch (Exception e) {
            if (log.isEnabledFor(Priority.FATAL))
                log.fatal("Exception  ", e);
        }
    }

