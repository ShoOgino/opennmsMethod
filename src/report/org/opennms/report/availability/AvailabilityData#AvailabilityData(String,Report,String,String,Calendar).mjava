    /**
     * Constructor
     * 
     */
    public AvailabilityData(String categoryName, Report report, String format, String monthFormat, Calendar calendar) throws IOException, MarshalException, ValidationException, Exception {
        ThreadCategory.setPrefix(LOG4J_CATEGORY);
        org.apache.log4j.Category log = ThreadCategory.getInstance(this.getClass());
        if (log.isDebugEnabled())
            log.debug("Inside AvailabilityData");

        m_nodes = new ArrayList();
        initialiseInterval(calendar);
        m_categoryName = categoryName;
        Catinfo config = null;
        try {
            CategoryFactory.init();
            m_catFactory = CategoryFactory.getInstance();
            config = m_catFactory.getConfig();
        } catch (IOException ioe) {
            if (log.isEnabledFor(Priority.FATAL))
                log.fatal("IOException " + ioe);
            throw ioe;
        } catch (MarshalException marshex) {
            if (log.isEnabledFor(Priority.FATAL))
                log.fatal("Exception " + marshex);
            throw marshex;
        } catch (ValidationException ex) {
            if (log.isEnabledFor(Priority.FATAL))
                log.fatal("Exception " + ex);
            throw ex;
        }

        if (log.isDebugEnabled())
            log.debug("CATEGORY " + categoryName);
        if (categoryName.equals("") || categoryName.equals("all")) {
            Enumeration enumCG = config.enumerateCategorygroup();
            int catCount = 0;
			if (log.isDebugEnabled())
                log.debug("catCount " + catCount);
            while (enumCG.hasMoreElements()) {
                Categorygroup cg = (Categorygroup) enumCG.nextElement();

                // go through the categories
                org.opennms.netmgt.config.categories.Categories cats = cg.getCategories();

                Enumeration enumCat = cats.enumerateCategory();
                while (enumCat.hasMoreElements()) {
                    org.opennms.netmgt.config.categories.Category cat = (org.opennms.netmgt.config.categories.Category) enumCat.nextElement();
                    Enumeration enumMonitoredSvc = cat.enumerateService();
                    List monitoredServices = new ArrayList();
                    while (enumMonitoredSvc.hasMoreElements()) {
                        String service = (String) enumMonitoredSvc.nextElement();
                        monitoredServices.add(service);
                    }
                    if (log.isDebugEnabled())
                        log.debug("CATEGORY " + cat.getLabel());
                    catCount++;
                    populateDataStructures(cat, report, format, monthFormat, catCount);
                }
            }
			if (log.isDebugEnabled())
                log.debug("catCount " + catCount);
        } else {
            org.opennms.netmgt.config.categories.Category cat = (org.opennms.netmgt.config.categories.Category) m_catFactory.getCategory(categoryName);
            if (log.isDebugEnabled())
                log.debug("CATEGORY - now populate data structures " + cat.getLabel());
            populateDataStructures(cat, report, format, monthFormat, 1);
        }

        SimpleDateFormat simplePeriod = new SimpleDateFormat("MMMMMMMMMMM dd, yyyy");
        String reportPeriod = simplePeriod.format(new java.util.Date(m_12MonthsBack)) + " - " + simplePeriod.format(new java.util.Date(m_endTime));
        Created created = report.getCreated();
        if (created == null)
            created = new Created();
        created.setPeriod(reportPeriod);
        report.setCreated(created);

        if (log.isDebugEnabled())
            log.debug("After availCalculations");
    }

