	public synchronized static void initialize() throws IOException {   
	    if (s_initialized) return;
	    
	    s_icmpSocket = new IcmpSocket();
	    s_pendingRequests = Collections.synchronizedMap(new HashMap<RequestId, PingRequest>());
	    s_pendingReplyQueue = new LinkedBlockingQueue<Reply>();
	    s_timeoutQueue = new DelayQueue<PingRequest>();
	    
	    s_socketReader = new Thread("ICMP-Socket-Reader") {
	        public void run() {
	            try {
	                processPackets();
	            } catch (InterruptedException e) {
                    errorf("Thread %s interrupted!", this);
	            }
	        }
	    };
	    
	    s_replyProcessor = new Thread("ICMP-Reply-Processor") {
	        public void run() {
	            try {
	                processReplies();
	            } catch (InterruptedException e) {
                    errorf("Thread %s interrupted!", this);
	            }
	        }
	    };
	    
	    s_timeoutProcessor = new Thread("ICMP-Timeout-Processor") {
	        public void run() {
	            try {
	                processTimeouts();
	            } catch (InterruptedException e) {
                    errorf("Thread %s interrupted!", this);
	            }
	        }
	    };
	    
	    s_timeoutProcessor.start();
	    s_replyProcessor.start();
	    s_socketReader.start();
	    s_initialized = true;
	}

