	/**
	 * <p>parallelPing</p>
	 *
	 * @param host a {@link java.net.InetAddress} object.
	 * @param count a int.
	 * @param timeout a long.
	 * @param pingInterval a long.
	 * @return a {@link java.util.List} object.
	 * @throws java.lang.Exception if any.
	 */
	public List<Number> parallelPing(InetAddress host, int count, long timeout, long pingInterval) throws Exception {
	    initialize();
	    ParallelPingResponseCallback cb = new ParallelPingResponseCallback(count);
        
        if (timeout == 0) {
            timeout = DEFAULT_TIMEOUT;
        }
        
        for (int i = 0; i < count; i++) {
            PingRequest<IcmpSocket> request = new org.opennms.netmgt.ping.PingRequest(host, (short) i, timeout, 0, cb);
            s_pingTracker.sendRequest(request);
            Thread.sleep(pingInterval);
        }
        
        cb.waitFor();
        return cb.getResponseTimes();
	}

