    @Override
    public Object execute() {
        LOG.debug("opennms:ping {} {}", m_location != null ? "-l " + m_location : "", m_host);
        InetAddress byName;
        try {
            byName = InetAddress.getByName(m_host);
        } catch (UnknownHostException uhe) {
            System.out.printf("PING %s: Unknown host%n", uhe);
            return null;
        }
        final PingRequestBuilder.Callback callback = (newSequence, summary) -> {
            if (m_count > 1) {
                if (summary.getSequences().size() == 0) {
                    System.out.println(PingStringUtils.renderHeader(summary));
                }
                if (newSequence != null) {
                    System.out.println(PingStringUtils.renderSequence(summary.getRequest(), newSequence));
                }
                if (summary.isComplete()) {
                    System.out.println(PingStringUtils.renderSummary(summary));
                }
            }
        };

        final CompletableFuture<PingSummary> future = locationAwarePingClient.ping(byName)
            .withLocation(m_location)
            .withSystemId(m_systemId)
            .withNumberOfRequests(m_count)
            .withProgressCallback(callback).execute();

        while (true) {
            try {
                PingSummary summary = future.get(1, TimeUnit.SECONDS);
                // If count is one, we do not wrap the execution in another Thead, therefore the "onCompletion" is
                // executed by the Pinger-Thread which output is piped to "output.log" instead of "karaf.log" resulting
                // in an empty return. Therefore we print manually.
                // In case of m_count > 1, the callback takes care of the "karaf.log" output.
                if (m_count == 1) {
                    System.out.println(String.format("PING: %s %.3f ms", byName, summary.getSequence(0).getResponse().getRtt()));
                }
                break;
            } catch (TimeoutException e) {
                // pass
            } catch (InterruptedException | ExecutionException e) {
                if (m_count == 1) {
                    System.out.println(String.format("PING: %s %s", byName, e.getCause().getClass().getName()));
                }
                break;
            }
            System.out.print(".");
        }
        return null;
    }

