    private void initialize() {
        if (m_pinger == null) {
            final Class<? extends Pinger> pinger = BestMatchPingerFactory.findPinger();
            try {
                m_pinger = pinger.newInstance();
            } catch (final Throwable t) {
                LOG.error("Failed to initialize best match pinger ({}): {}  Falling back to the null pinger.", pinger, t.getMessage());
                LOG.trace("Failed to initialize best match pinger ({}).  Falling back to the null pinger.", pinger, t);
                m_pinger = new NullPinger();
            }

            try {
                if (m_allowFragmentation != null) {
                    m_pinger.setAllowFragmentation(m_allowFragmentation);
                }
            } catch (final Throwable t) {
                LOG.debug("Failed to set 'allow fragmentation' flag on pinger {}: {}", pinger, t.getMessage());
                LOG.trace("Failed to set 'allow fragmentation' flag on pinger {}.", pinger, t);
            }

            try {
                if (m_trafficClass != null) {
                    m_pinger.setTrafficClass(m_trafficClass);
                }
            } catch (final Throwable t) {
                LOG.debug("Failed to set traffic class on pinger {}", pinger, t);
            }
        }
    }

