    private static PingerMatch tryPinger(final Class<? extends Pinger> pingerClass) {
        boolean v4 = false;
        boolean v6 = false;

        final Pinger pinger;
        try {
            pinger = pingerClass.newInstance();
        } catch (final Throwable t) {
            LOG.info("Failed to get instance of {}.", pingerClass, t);
            return PingerMatch.NONE;
        }

        try {
            if (pinger.isV4Available()) {
                v4 = true;
            }
        } catch (final Throwable t) {
            LOG.info("Failed to initialize {} for IPv4.", pingerClass, t);
        }

        try {
            if (pinger.isV6Available()) {
                v6 = true;
            }
        } catch (final Throwable t) {
            LOG.info("Failed to initialize {} for IPv4.", pingerClass, t);
        }

        try {
            final long timeout = Long.valueOf(System.getProperty("org.opennms.netmgt.icmp.best.timeout", "500"), 10);
            final Number result = pinger.ping(InetAddressUtils.getLocalHostAddress(), timeout, 0);
            if (result == null) {
                throw new IllegalStateException("No result pinging localhost.");
            }
        } catch (final Throwable t) {
            LOG.info("Found pinger {}, but it was unable to ping localhost.", pingerClass, t);
            return PingerMatch.NONE;
        }

        if (v4 && v6) {
            return PingerMatch.IPv46;
        } else if (v6) {
            return PingerMatch.IPv6;
        } else if (v4) {
            return PingerMatch.IPv4;
        } else {
            return PingerMatch.NONE;
        }
    }

