    /** {@inheritDoc} */
    @Override
    public CreateCommand createDefinition(String creator, String directory, String rrdName, int step, List<RrdDataSource> dataSources, List<String> rraList) throws Exception {
        File f = new File(directory);
        if (!f.exists()) {
            if (!f.mkdirs()) {
        	       LOG.warn("Could not make directory: {}", f.getPath());
            }
        }

        String fileName = directory + File.separator + rrdName + getDefaultFileExtension();

        if (new File(fileName).exists()) {
            LOG.debug("createDefinition: filename [{}] already exists returning null as definition", fileName);
            return null;
        }

        int k = 0;
        final String[] arguments = new String[dataSources.size() + rraList.size()];

        final long start = (System.currentTimeMillis() / 1000L - 10L);

        for (RrdDataSource dataSource : dataSources) {
            arguments[k++] = String.format("DS:%s:%s:%d:%s:%s",
                    dataSource.getName(), dataSource.getType(), dataSource.getHeartBeat(),
                    dataSource.getMin(), dataSource.getMax());
        }

        for (String rra : rraList) {
            arguments[k++] = rra;
        }

        return new CreateCommand(fileName, step, start, arguments);
    }

