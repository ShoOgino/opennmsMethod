	private void processRrdFontArgument(final RrdGraphDef graphDef, final String argParm) {
	    final String[] argValue = tokenize(argParm, ":", false);
            if (argValue.length < 2) {
                LOG.warn("Argument '{}' does not specify font size", argParm);
                return;
            }
            if (argValue.length > 3) {
                LOG.debug("Argument '{}' includes extra data, ignoring the extra data.", argParm);
            }
	    float newPointSize = 0f;
	    try {
	        newPointSize = Integer.parseInt(argValue[1]) * 1.5f;
	    } catch (final NumberFormatException e) {
	        LOG.warn("Failed to parse {} as an integer: {}", argValue[1], e.getMessage(), e);
	    }
	    int fontTag;
	    Font font;

	    if (argValue[0].equals("DEFAULT")) {
	        fontTag = RrdGraphDef.FONTTAG_DEFAULT;
	    } else if (argValue[0].equals("TITLE")) {
	        fontTag = RrdGraphDef.FONTTAG_TITLE;
	    } else if (argValue[0].equals("AXIS")) {
	        fontTag = RrdGraphDef.FONTTAG_AXIS;
	    } else if (argValue[0].equals("UNIT")) {
	        fontTag = RrdGraphDef.FONTTAG_UNIT;
	    } else if (argValue[0].equals("LEGEND")) {
	        fontTag = RrdGraphDef.FONTTAG_LEGEND;
	    } else if (argValue[0].equals("WATERMARK")) {
	        fontTag = RrdGraphDef.FONTTAG_WATERMARK;
	    } else {
	        LOG.warn("invalid font tag {}", argValue[0]);
	        return;
	    }

	    try {
	        font = graphDef.getFont(fontTag);

	        // If we have a font specified, try to get a font object for it.
	        if (argValue.length == 3 && argValue[2] != null && argValue[2].length() > 0) {
	            final float origPointSize = font.getSize2D();

                    // Get our new font
	            font = Font.decode(argValue[2]);

	            // Font.decode() returns a 12 px font size, by default unless you specify
	            // a font size in the font name pattern.
	            if (newPointSize > 0) {
	                font = font.deriveFont(newPointSize);
	            } else {
	                font = font.deriveFont(origPointSize);
	            }
	        } else {
	            // If we don't have a font name specified, then we just adjust the font size.
	            font = font.deriveFont(newPointSize);
	        }

	        if (fontTag == RrdGraphDef.FONTTAG_DEFAULT) {
	            graphDef.setFont(fontTag, font, true, newPointSize == 0);
	        } else {
	            graphDef.setFont(fontTag, font);
	        }
	    } catch (final Throwable e) {
	        LOG.warn("unable to create font from font argument {}", argParm, e);
	    }
	}

