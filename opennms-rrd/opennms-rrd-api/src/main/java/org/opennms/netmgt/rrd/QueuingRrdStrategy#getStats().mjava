    /**
     * Print queue statistics.
     *
     * @return a {@link java.lang.String} object.
     */
    @Override
    public String getStats() {
        long now = System.currentTimeMillis();

        long currentElapsedMillis = Math.max(now - lastStatsTime, 1);
        long totalElapsedMillis = Math.max(now - getStartTime(), 1);

        long currentEnqueuedOps = (getEnqueuedOperations() - lastEnqueued);
        long currentDequeuedOps = (getDequeuedOperations() - lastDequeued);
        long currentDequeuedItems = (getDequeuedItems() - lastDequeuedItems);

        long currentSigOpsEnqueued = (getSignificantOpsEnqueued() - lastSignificantEnqueued);
        long currentSigOpsDequeued = (getSignificantOpsDequeued() - lastSignificantDequeued);
        //long currentSigOpsCompleted = (significantOpsCompleted - lastSignificantCompleted);

        long currentEnqueueRate = (long) (currentEnqueuedOps * 1000.0 / currentElapsedMillis);
        long currentSigEnqueueRate = (long) (currentSigOpsEnqueued * 1000.0 / currentElapsedMillis);
        long currentInsigEnqueueRate = (long) ((currentEnqueuedOps - currentSigOpsEnqueued) * 1000.0 / currentElapsedMillis);
        long overallEnqueueRate = (long) (getEnqueuedOperations() * 1000.0 / totalElapsedMillis);
        long overallSigEnqueueRate = (long) (getSignificantOpsEnqueued() * 1000.0 / totalElapsedMillis);
        long overallInsigEnqueueRate = (long) ((getEnqueuedOperations() - getSignificantOpsEnqueued()) * 1000.0 / totalElapsedMillis);

        long currentDequeueRate = (long) (currentDequeuedOps * 1000.0 / currentElapsedMillis);
        long currentSigDequeueRate = (long) (currentSigOpsDequeued * 1000.0 / currentElapsedMillis);
        long currentInsigDequeueRate = (long) ((currentDequeuedOps - currentSigOpsDequeued) * 1000.0 / currentElapsedMillis);
        long overallDequeueRate = (long) (getDequeuedOperations() * 1000.0 / totalElapsedMillis);
        long overallSigDequeueRate = (long) (getSignificantOpsDequeued() * 1000.0 / totalElapsedMillis);
        long overallInsigDequeueRate = (long) ((getDequeuedOperations() - getSignificantOpsDequeued()) * 1000.0 / totalElapsedMillis);

        long currentItemDequeueRate = (long) (currentDequeuedItems * 1000.0 / currentElapsedMillis);
        long overallItemDequeueRate = (long) (getDequeuedItems() * 1000.0 / totalElapsedMillis);

        String stats = "\nQS:\t" + "totalOperationsPending=" + getTotalOperationsPending() +
                ", significantOpsPending=" + (getSignificantOpsEnqueued() - getSignificantOpsCompleted()) +
                ", filesWithSignificantWork=" + filesWithSignificantWork.size() +
                ", filesWithInsignificantWork=" + filesWithInsignificantWork.size()

                + "\nQS:\t" + ", createsCompleted=" + getCreatesCompleted() +
                ", updatesCompleted=" + getUpdatesCompleted() +
                ", errors=" + getErrors() +
                ", promotionRate=" + ((double) (getPromotionCount() * 1000.0 / totalElapsedMillis)) +
                ", promotionCount=" + getPromotionCount()

                + "\nQS:\t" + ", currentEnqueueRates=(" + currentSigEnqueueRate + "/" + currentInsigEnqueueRate + "/" + currentEnqueueRate + ")" +
                ", currentDequeueRate=(" + currentSigDequeueRate + "/" + currentInsigDequeueRate + "/" + currentDequeueRate + ")" +
                ", currentItemDequeRate=" + currentItemDequeueRate +
                ", currentOpsPerUpdate=" + (currentDequeuedOps / Math.max(currentDequeuedItems, 1.0)) +
                ", currentPrcntSignificant=" + (currentSigOpsEnqueued * 100.0 / Math.max(currentEnqueuedOps, 1.0)) + "%" + ", elapsedTime=" + ((currentElapsedMillis + 500) / 1000)

                + "\nQS:\t" + ", overallEnqueueRate=(" + overallSigEnqueueRate + "/" + overallInsigEnqueueRate + "/" + overallEnqueueRate + ")" +
                ", overallDequeueRate=(" + overallSigDequeueRate + "/" + overallInsigDequeueRate + "/" + overallDequeueRate + ")" +
                ", overallItemDequeRate=" + overallItemDequeueRate +
                ", overallOpsPerUpdate=" + (getDequeuedOperations() / Math.max(getDequeuedItems(), 1.0)) +
                ", overallPrcntSignificant=" + (getSignificantOpsEnqueued() * 100.0 / Math.max(getEnqueuedOperations(), 1.0)) + "%" +
                ", totalElapsedTime=" + ((totalElapsedMillis + 500) / 1000);

        lastStatsTime = now;
        lastEnqueued = getEnqueuedOperations();
        lastDequeued = getDequeuedOperations();
        lastDequeuedItems = getDequeuedItems();
        lastSignificantEnqueued = getSignificantOpsEnqueued();
        lastSignificantDequeued = getSignificantOpsDequeued();
        lastSignificantCompleted = getSignificantOpsCompleted();
        lastOpsPending = getTotalOperationsPending();

        return stats;
    }

