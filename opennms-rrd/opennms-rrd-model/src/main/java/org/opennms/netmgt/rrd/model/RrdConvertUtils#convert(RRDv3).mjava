    /**
     * Converts a RRDtool object into a JRobin object.
     *
     * @param rrd the RRDtool object representation
     * @return the JRobin object representation
     * @throws IllegalArgumentException the illegal argument exception (when the conversion is not possible)
     */
    protected static RRDv1 convert(RRDv3 rrd) throws IllegalArgumentException {
        RRDv1 jrb = new RRDv1();
        jrb.setStep(rrd.getStep());
        jrb.setLastUpdate(rrd.getLastUpdate());
        for (org.opennms.netmgt.rrd.model.v3.RRA rrav3 : rrd.getRras()) {
            org.opennms.netmgt.rrd.model.v1.RRA rrav1 = new org.opennms.netmgt.rrd.model.v1.RRA();
            try {
                rrav1.setConsolidationFunction(rrav3.getConsolidationFunction().name());
            } catch (IllegalArgumentException e) {
                throw new IllegalArgumentException("RRDv1 doesn't support the consolidation function " + rrav3.getConsolidationFunction().value());
            }
            rrav1.setPdpPerRow(rrav3.getPdpPerRow());
            rrav1.setRows(rrav3.getRows());
            rrav1.setXff(rrav3.getParameters().getXff());
            for (org.opennms.netmgt.rrd.model.v3.RRADS rradsv3 : rrav3.getDataSources()) {
                org.opennms.netmgt.rrd.model.v1.RRADS rradsv1 = new org.opennms.netmgt.rrd.model.v1.RRADS();
                rradsv1.setUnknownDataPoints(rradsv3.getUnknownDataPoints());
                rradsv1.setValue(rradsv3.getValue());
                rrav1.getDataSources().add(rradsv1);
            }
            jrb.addRRA(rrav1);
        }
        for (org.opennms.netmgt.rrd.model.v3.DS dsv3 : rrd.getDataSources()) {
            org.opennms.netmgt.rrd.model.v1.DS dsv1 = new org.opennms.netmgt.rrd.model.v1.DS();
            try {
                dsv1.setType(dsv3.getType().value());
            } catch (IllegalArgumentException e) {
                throw new IllegalArgumentException("RRDv1 doesn't support the data source type " + dsv3.getType().value());
            }
            dsv1.setName(dsv3.getName());
            dsv1.setLastDs(dsv3.getLastDs());
            dsv1.setMin(dsv3.getMax());
            dsv1.setMax(dsv3.getMax());
            dsv1.setMinHeartbeat(dsv3.getMinHeartbeat());
            dsv1.setUnknownSec(dsv3.getUnknownSec());
            dsv1.setValue(dsv3.getValue());
            jrb.addDataSource(dsv1);
        }
        return jrb;
    }

