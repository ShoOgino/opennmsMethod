    /**
     * Converts a JRobin object into an RRDtool object.
     *
     * @param jrb the source JRobin object representation
     * @return the RRDtool object representation
     * @throws IllegalArgumentException the illegal argument exception (when the conversion is not possible)
     */
    protected static RRDv3 convert(RRDv1 jrb) throws IllegalArgumentException {
        RRDv3 rrd = new RRDv3();
        rrd.setStep(jrb.getStep());
        rrd.setLastUpdate(jrb.getLastUpdate());
        for (org.opennms.netmgt.rrd.model.v1.RRA rrav1 : jrb.getRras()) {
            org.opennms.netmgt.rrd.model.v3.RRA rrav3 = new org.opennms.netmgt.rrd.model.v3.RRA();
            rrav3.setConsolidationFunction(rrav1.getConsolidationFunction().name());
            rrav3.setPdpPerRow(rrav1.getPdpPerRow());
            rrav3.setRows(rrav1.getRows());
            rrav3.getParameters().setXff(rrav1.getXff());
            for (org.opennms.netmgt.rrd.model.v1.RRADS rradsv1 : rrav1.getDataSources()) {
                org.opennms.netmgt.rrd.model.v3.RRADS rradsv3 = new org.opennms.netmgt.rrd.model.v3.RRADS();
                rradsv3.setUnknownDataPoints(rradsv1.getUnknownDataPoints());
                rradsv3.setValue(rradsv1.getValue());
                rrav3.getDataSources().add(rradsv3);
            }
            rrd.addRRA(rrav3);
        }
        for (org.opennms.netmgt.rrd.model.v1.DS dsv1 : jrb.getDataSources()) {
            org.opennms.netmgt.rrd.model.v3.DS dsv3 = new org.opennms.netmgt.rrd.model.v3.DS();
            dsv3.setName(dsv1.getName());
            dsv3.setLastDs(dsv1.getLastDs());
            dsv3.setMin(dsv1.getMax());
            dsv3.setMax(dsv1.getMax());
            dsv3.setMinHeartbeat(dsv1.getMinHeartbeat());
            dsv3.setUnknownSec(dsv1.getUnknownSec());
            dsv3.setValue(dsv1.getValue());
            dsv3.setType(dsv1.getType().value());
            rrd.addDataSource(dsv3);
        }
        return rrd;
    }

