    /**
     * Merge.
     * <p>Merge the content of rrdSrc into this RRD.</p>
     * <p>The format must be equal in order to perform the merge operation.</p>
     * 
     * @param rrdSrc the RRD source
     * @throws IllegalArgumentException the illegal argument exception
     */
    public void merge(AbstractRRD rrdSrc) throws IllegalArgumentException {
        if (!hasMergeableRRAs(rrdSrc)) {
            throw new IllegalArgumentException("Invalid RRD format. There are not mergeable RRAs on the source RRD.");
        }
        for (AbstractRRA rra : rrdSrc.getRras()) {
            AbstractRRA localRra = getMergeableRRA(rra);
            if (localRra != null) {
                for (Row row : rra.getRows()) {
                    if (!row.isNan()) {
                        Long ts = rrdSrc.findTimestampByRow(rra, row);
                        Row localRow = findRowByTimestamp(localRra, ts);
                        if (localRow != null) {
                            localRow.setValues(row.getValues());
                        }
                    }
                }
            }
        }
    }

