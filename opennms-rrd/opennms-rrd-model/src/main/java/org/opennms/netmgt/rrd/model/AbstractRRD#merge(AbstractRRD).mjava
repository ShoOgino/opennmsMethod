    /**
     * Merge.
     * <p>Merge the content of rrdSrc into this RRD.</p>
     * <p>The format must be equal in order to perform the merge operation.</p>
     * 
     * @param rrdSrc the RRD source
     * @throws IllegalArgumentException the illegal argument exception
     */
    public void merge(AbstractRRD rrdSrc) throws IllegalArgumentException {
        if (!formatEquals(rrdSrc)) {
            throw new IllegalArgumentException("Invalid RRD format");
        }
        int rraNum = 0;
        for (AbstractRRA rra : rrdSrc.getRras()) {
            for (Row row : rra.getRows()) {
                if (!row.isNan()) {
                    Long ts = rrdSrc.findTimestampByRow(rra, row);
                    Row localRow = findRowByTimestamp(getRras().get(rraNum), ts);
                    if (localRow != null) {
                        localRow.setValues(row.getValues());
                    }
                }
            }
            rraNum++;
        }
    }

