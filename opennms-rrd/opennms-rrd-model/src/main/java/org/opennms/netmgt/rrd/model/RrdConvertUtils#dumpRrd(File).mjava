    /**
     * Dumps a RRD.
     *
     * @param sourceFile the source file
     * @return the RRD Object
     * @throws IOException Signals that an I/O exception has occurred.
     * @throws RrdException the RRD exception
     */
    public static RRDv3 dumpRrd(File sourceFile) throws IOException, RrdException {
        String rrdBinary = System.getProperty("rrd.binary");
        if (rrdBinary == null) {
            throw new IllegalArgumentException("rrd.binary property must be set");
        }
        String command = rrdBinary + " dump " + sourceFile.getAbsolutePath();
        String[] commandArray = StringUtils.createCommandArray(command, '@');
        RRDv3 rrd = null;
        Process process = Runtime.getRuntime().exec(commandArray);
        byte[] byteArray = FileCopyUtils.copyToByteArray(process.getInputStream());
        String errors = FileCopyUtils.copyToString(new InputStreamReader(process.getErrorStream()));
        if (errors.length() > 0) {
            throw new RrdException("RRDtool command fail: " + errors);
        }
        BufferedReader reader = null;
        try {
            InputStream is = new ByteArrayInputStream(byteArray);
            reader = new BufferedReader(new InputStreamReader(is));
            rrd = JaxbUtils.unmarshal(RRDv3.class, reader);
        } finally {
            reader.close();
        }
        return rrd;
    }

