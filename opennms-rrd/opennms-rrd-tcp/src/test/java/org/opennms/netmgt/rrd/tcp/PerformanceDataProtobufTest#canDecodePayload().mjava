    /**
     * Validate that we can decode a known payload.
     *
     * Used to help ensure we don't break binary compatibility unknowingly.
     */
    @Test
    public void canDecodePayload() throws IOException {
        PerformanceDataProtos.PerformanceDataReadings.Builder builder = PerformanceDataProtos.PerformanceDataReadings.newBuilder();
        builder.addMessage(PerformanceDataProtos.PerformanceDataReading.newBuilder()
                .setPath("path")
                .setOwner("me")
                .setTimestamp(1)
                .addAllDblValue(Arrays.asList(1d,2d,3d))
                .addAllStrValue(Arrays.asList("a", "b", "c"))
        );
        PerformanceDataProtos.PerformanceDataReadings expectedReadings = builder.build();

        PerformanceDataProtos.PerformanceDataReadings actualReadings;
        URL url = Resources.getResource("rrd-perf.dat");
        try (InputStream is = Resources.asByteSource(url).openStream()) {
            actualReadings = PerformanceDataProtos.PerformanceDataReadings.parseFrom(is);
        }

        assertEquals(expectedReadings, actualReadings);
    }

