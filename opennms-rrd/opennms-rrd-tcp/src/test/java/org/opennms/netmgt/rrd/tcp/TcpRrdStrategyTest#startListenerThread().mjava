    @BeforeClass
    public static void startListenerThread() throws Exception {
        m_listenerThread = new Thread() {
            @Override
            public void run() {
                this.setName("fail");
                ServerSocket ssocket = null;
                try {
                    ssocket = new ServerSocket(0);
                    m_listenPort = ssocket.getLocalPort();
                    LOG.debug("Listener thread started on port {}", m_listenPort);
                    ssocket.setSoTimeout(500);
                    while (true) {
                        try {
                            /*
                             * This python code is not working properly under Jython. My
                             * hunch is that it would be better under the new Jython 2.5.1
                             * but that version is not easy to use under Maven, see:
                             * 
                             * http://bugs.jython.org/issue1512
                             * http://bugs.jython.org/issue1513
                             * 
                            PythonInterpreter python = new PythonInterpreter();
                            python.execfile(
                                    // Load the python path parser script from the classpath
                                    Thread.currentThread().getContextClassLoader().getResourceAsStream(
                                            "rrdPathParser.py"
                                    )
                            );
                            python.eval("configureRrdPaths('" + m_tempDir + "')");
                             */

                            Socket socket = ssocket.accept();
                            PerformanceDataProtos.PerformanceDataReadings messages = PerformanceDataProtos.PerformanceDataReadings.parseFrom(socket.getInputStream());
                            LOG.debug("Number of messages in current packet: " + messages.getMessageCount());
                            for (PerformanceDataProtos.PerformanceDataReading message : messages.getMessageList()) {
                                StringBuffer values = new StringBuffer();
                                values.append("{ ");
                                for (int i = 0; i < message.getValueCount(); i++) {
                                    if (i != 0) { values.append(", "); }
                                    values.append(message.getValue(i));
                                }
                                values.append(" }");
                                LOG.debug("Message received: { " + 
                                        "path: \"" + message.getPath() + "\", " + 
                                        "owner: \"" + message.getOwner() + "\", " + 
                                        "timestamp: \"" + message.getTimestamp() + "\", " + 
                                        "values: " + values.toString() + " }");

                                /*
                                 * See comments above re: Jython
                                PyDictionary attributes = (PyDictionary)python.eval("parseRrdPath('" + message.getPath() + "')");
                                System.out.println(attributes.getClass().getName());
                                 */
                            }
                        } catch (SocketTimeoutException e) {
                            if (this.isInterrupted()) {
                                this.setName("notfailed");
                                return;
                            }
                        } catch (IOException e) {
                            LOG.error(e.getMessage(), e);
                        }
                    }
                } catch (IOException e) {
                    LOG.error(e.getMessage(), e);
                } catch (Throwable e) {
                    LOG.error(e.getMessage(), e);
                } finally {
                    try {
                        if (ssocket != null) ssocket.close();
                    } catch (IOException e) {
                        LOG.warn(e.getMessage(), e);
                    }
                }
            }
        };

        m_listenerThread.start();
    }

