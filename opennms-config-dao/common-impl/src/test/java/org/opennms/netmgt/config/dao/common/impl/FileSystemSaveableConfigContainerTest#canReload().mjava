    @Test
    public void canReload() throws IOException {
        File xmlFile = tempFolder.newFile("test.xml");
        TestEntity testEntity = new TestEntity();
        testEntity.setTestValues(Arrays.asList("Hello", "World"));
        Files.write(xmlFile.toPath(), JaxbUtils.marshal(testEntity).getBytes());

        // Create the container and verify it initialized with the content on the filesystem
        SaveableConfigContainer<TestEntity> container = new FileSystemSaveableConfigContainer<>(TestEntity.class,
                "test", null, xmlFile);
        TestEntity fromContainer = container.getConfig();
        assertThat(testEntity, equalTo(fromContainer));

        // Re-write to file
        testEntity.setTestValues(Arrays.asList("new"));
        Files.write(xmlFile.toPath(), JaxbUtils.marshal(testEntity).getBytes());

        // The file has been updated but we shouldn't see that reflected yet since the polling interval should not have
        // elapsed
        fromContainer = container.getConfig();
        assertThat(testEntity, not(equalTo(fromContainer)));

        // Do a reload and now we should see the change
        container.reload();
        fromContainer = container.getConfig();
        assertThat(testEntity, equalTo(fromContainer));
    }

