    /**
     * @return an Optional containing the new config if the old config was stale, otherwise containing empty if the old
     * config is still up to date
     */
    private Optional<T> reloadedConfigSupplier() {
        lastCheckedTime = System.currentTimeMillis();
        long lastUpdated = jsonStore.getLastUpdated(key, context)
                .orElseThrow(PollingJsonStoreReloadableConfigContainer::failedToFind);

        if (lastUpdated <= lastGotTime) {
            return Optional.empty();
        }

        // Get JSON and convert to jaxb object
        String jsonDocument = jsonStore.get(key, context)
                .orElseThrow(PollingJsonStoreReloadableConfigContainer::failedToFind);

        try {
            T updatedConfig = mapper.readValue(jsonDocument, entityClass);
            lastGotTime = lastUpdated;
            return Optional.of(updatedConfig);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

