    /**
     * This method performs a check of the state of NT services on the remote
     * service. The services to check are contained in the 'parameter' string
     * in a comma delimited format (that is prepared to the client format
     * using the <code>prepList</code> method.) The default result code is
     * <code>NsclientPacket.RES_STATE_OK</code> unless one of the services
     * responds as 'Stopped' - in which case the result code is set to
     * <code>NsclientPacket.RES_STATE_CRIT</code>
     * 
     * @param param
     *            The param string member should contain a comma delimited
     *            list of NT services on the remote service.
     * @return the processed <code>NsclientPacket</code>.
     * @throws NsclientException
     *             this method rethrows the exception thrown by
     *             <code>sendCheckRequest</code>
     */
    private NsclientPacket checkServiceState(NsclientCheckParams param)
            throws NsclientException {
        NsclientPacket pack = null;
        try {
            pack = sendCheckRequest(m_Password + "&" + CHECK_SERVICESTATE
                    + "&ShowAll&" + prepList(param.getParamString()));
            pack.setResultCode(NsclientPacket.RES_STATE_OK);

            // check up response from "1& Service1: State - Service2: State"
            String[] services = pack.getResponse().replaceFirst("^\\d&\\s+",
                                                                "").split(
                                                                          "\\s+-\\s+");
            for (int i = 0; i < services.length; i++) {
            	String stateValue = services[i].split(":\\s+")[1].trim();
                if (stateValue.equals("Stopped") || stateValue.equals("Unknown") ||
                        stateValue.equals("Not found")) {
                    pack.setResultCode(NsclientPacket.RES_STATE_CRIT);
                }
            }

            return pack;
        } catch (NsclientException e) {
            throw e;
        }
    }

