	/**
	 * Test that the WMI manager handles invalid username or password exceptions
	 * properly from the WMI client.
	 * 
	 * Test method for {@link org.opennms.protocols.wmi.WmiManager#init()}.
     *
     * @throws WmiException if there is a problem with the mock object.
	 */
	public final void testInitBadUserPass() throws WmiException {
		// Set up WMI mock client.
		// 1) Expect a call to connect() with a bad hostname.
		// 2) Throw a new WmiException indictating a user or password.
		m_WmiMock.connect("127.0.0.1", "Administrator", "wrongpassword", WmiParams.WMI_DEFAULT_NAMESPACE);
		expectLastCall()
				.andThrow(
						new WmiException(
								"Failed to connect to host '127.0.0.1': The attempted logon is invalid. This is either due to a bad username or authentication information. [0xC000006D]"));
		replay(m_WmiMock);

		try {
			// Create a manager.
			WmiManager wmiManager = new WmiManager("127.0.0.1",
					"Administrator", "wrongpassword");
			// Initialize
			wmiManager.init(m_WmiMock);

		} catch (WmiException e) {
			assertTrue(
					"Exception missing message: The attempted logon is invalid: "
							+ e, e.getMessage().contains(
							"The attempted logon is invalid"));
		}
		verify(m_WmiMock);

		reset(m_WmiMock);
	}

