	/**
	 * <p>compareString</p>
	 *
	 * @param comp1 a {@link java.lang.Object} object.
	 * @param comp2 a {@link java.lang.String} object.
	 * @return a boolean.
	 * @throws org.opennms.protocols.wmi.WmiException if any.
	 */
	public boolean compareString(Object comp1, String comp2)
			throws WmiException {
		if (comp1 instanceof String) {

			try {
				DateFormat fmt2 = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
				Date date1 = WmiClient.convertWmiDate((String) comp1);
				Date date2 = fmt2.parse(comp2);

				return compareToDate(date1, date2);
			} catch (ParseException e) {
				// ignore this exception and continue with string comparison.
			}
			return compareToString((String) comp1, comp2);
		} else if (comp1 instanceof Integer) {
			Integer compInt1 = (Integer) comp1;
			Integer compInt2 = Integer.parseInt(comp2);

			return compareToInteger(compInt1, compInt2);
		} else if (comp1 instanceof Boolean) {
			Boolean bool1 = (Boolean) comp1;
			Boolean bool2 = Boolean.parseBoolean(comp2);

			return compareToBoolean(bool1, bool2);
		} else if (comp1 instanceof Float) {
			Float fl1 = (Float) comp1;
			Float fl2 = Float.parseFloat(comp2);

			return compareToFloat(fl1, fl2);
		} else if (comp1 instanceof Date) {
			DateFormat fmt = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
			Date date1 = (Date) comp1;
			Date date2;
			try {
				date2 = fmt.parse(comp2);
			} catch (ParseException e) {
				throw new WmiException("Parsing date '" + comp2 + "' failed: "
						+ e.getMessage(), e);
			}

			return compareToDate(date1, date2);

		}

		// No root type found. Return false. Maybe instead we should throw an exception.
		// A potential bug to fix?
		// TODO maybe throwing an exception would be more useful?
		return false;
	}

