    private boolean isGroupAvailable(final WmiAgentState agentState, final Wpm wpm) {
        LOG.debug("Checking availability of group {} via object {} of class {} in namespace {}", wpm.getName(), wpm.getKeyvalue(), wpm.getWmiClass(), wpm.getWmiNamespace());
        WmiManager manager = null;

        /*
         * We provide a bogus comparison value and use an operator of "NOOP"
         * to ensure that, regardless of results, we receive a result and perform
         * no logic. We're only validating that the agent is reachable and gathering
         * the result objects.
         */
        try {
            // Get and initialize the WmiManager
            manager = agentState.getManager();
            manager.setNamespace(wpm.getWmiNamespace());
            manager.init();

            final WmiParams params = new WmiParams(WmiParams.WMI_OPERATION_INSTANCEOF, "not-applicable", "NOOP", wpm.getWmiClass(), wpm.getKeyvalue());
            final WmiResult result = manager.performOp(params);

            final boolean isAvailable = (result.getResultCode() == WmiResult.RES_STATE_OK);

            agentState.setGroupIsAvailable(wpm.getName(), isAvailable);
            LOG.debug("Group {} is {}{}.", wpm.getName(), (isAvailable ? "" : "not "), "available");
        } catch (final WmiException e) {
            // Log a warning signifying that this group is unavailable.
            LOG.warn("Error checking group ({}) availability.", wpm.getName(), e);
            // Set the group as unavailable.
            agentState.setGroupIsAvailable(wpm.getName(), false);
            
            // And then continue on to check the next wpm entry.
            return false;
        } finally {
            if (manager != null) {
                try {
                    manager.close();
                } catch (WmiException e) {
                    LOG.warn("An error occurred closing the WMI Manager", e);
                }
            }
        }
        return true;
    }

