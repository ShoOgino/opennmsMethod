	/**
	 * <P>
	 * Test to see if the passed host-port pair is an endpoint for a TCP server.
	 * If there is a TCP server at the destination value then a connection is
	 * made using the params variable data and a check is requested from the
	 * remote WMI service.
	 * </P>
	 * 
	 * @param host
	 *            The remote host to connect to.
	 * @param retries
	 *            The number of retries to attempt when connecting.
	 * @param timeout
	 *            The TCP socket timeout to use.
	 * @param params
	 *            The WMI parameters used to validate the response.
	 * @return The WmiResult the server sent, updated by WmiManager to
	 *         contain the proper result code based on the params passed.
	 */
	private WmiResult isServer(InetAddress host, String user, String pass,
			String domain, String matchType, int retries, int timeout,
			WmiParams params) {
		boolean isAServer = false;

		WmiResult result = null;
		for (int attempts = 0; attempts <= retries && !isAServer; attempts++) {
			try {
				// Create the WMI Manager
				WmiManager mgr = new WmiManager(host.getHostAddress(), user,
						pass, domain, matchType);

				// Connect to the WMI server.
				mgr.init();

				// Perform the operation specified in the parameters.
				result = mgr.performOp(params);
                if(params.getWmiOperation().equals(WmiParams.WMI_OPERATION_WQL)) {
                    log().debug(
						"WmiPlugin: "
								+ params.getWql()								
								+ " : "
								+ WmiResult.convertStateToString(result
										.getResultCode()));
                } else {
				    log().debug(
						"WmiPlugin: \\\\"
								+ params.getWmiClass()
								+ "\\"
								+ params.getWmiObject()
								+ " : "
								+ WmiResult.convertStateToString(result
										.getResultCode()));
                }

                isAServer = true;

				// Disconnect when complete.
				mgr.close();

			} catch (WmiException e) {
				StringBuffer message = new StringBuffer();
				message.append("WmiPlugin: Check failed... : ");
				message.append(e.getMessage());
				message.append(" : ");
				message.append((e.getCause() == null ? "" : e.getCause()
						.getMessage()));
				log().info(message.toString());
				isAServer = false;
			}
		}
		return result;
	}

