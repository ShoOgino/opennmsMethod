  /**
   * Walk the symbol tables and output XML
   */
  public void writeOids() {

    // write something like:
    // <mibObj oid=".1.3.6.1.2.1.2.2.1.10" instance="ifIndex" alias="ifInOctets" type="counter"/>
    StringBuffer sb = new StringBuffer();
    OidValues oidValues = null;
    TreeMap sortedMap = new TreeMap();

    if (printDebug) {
      System.out.println("Sorted OIDS from Vector");
    }
    sb = new StringBuffer();
    for (int i = 0; i < orderList.size(); i++) {
      String name = (String) orderList.elementAt(i);
      oidValues = (OidValues) oidNames.get(name);
      if (! (oidValues.getTypeId().equals("DEFAULT") ||
             oidValues.getAccess().equals(OidValues.NOT_ACCESSIBLE))) {
        String instanceVar = "0"; // TBD get the table instance var
        String aliasVar = oidValues.getTextOid();
        int index = aliasVar.lastIndexOf(".") + 1;
        String lastOidStr = aliasVar.substring(index);
        String tableName = (String) oidVarsTableName.get(lastOidStr);
        String numericOid = oidValues.getNumericOid();
        String typeName = oidValues.getTypeId();
        String typeFromTable = (String) typeNameTable.get(typeName);
        if (typeFromTable != null) {
          typeName = typeFromTable; // this gets the base type

        }
        if (tableName != null) {
          instanceVar = (String) tableAndIndex.get(tableName);
        }
        // There is a 19 char rrd limitation. Catenate a string onto the alias.
        if (lastOidStr.length() > tooLongSize) {
          lastOidStr = lastOidStr + TOO_LONG;
        }
        sb.append("<mibObj oid=\"").append(numericOid).append("\" ");
        sb.append("instance=\"").append(instanceVar).append("\" ");
        sb.append("alias=\"").append(lastOidStr).append("\" ");
        sb.append("type=\"").append(typeName).append("\" />").append("\n");
        System.out.print(sb.toString());
        sortedMap.put(numericOid, sb.toString());
        sb = new StringBuffer();

      }
      else {
        if (printDebug && oidValues.getTypeId().equals("DEFAULT")) {
          System.out.println("skipping oid with DEFAULT type, oid=" +
                             oidValues.getTextOid());
        }
        if (printDebug && oidValues.getAccess().equals(OidValues.NOT_ACCESSIBLE)) {
          System.out.println("skipping oid with no ACCESS, oid=" +
                             oidValues.getAccess());
        }
      }
    }

  } // end writeOIDS

