  static final public void SequenceOfVars() throws ParseException {
                                       /*@bgen(jjtree) TableOidVars */
  SimpleNode jjtn000 = new SimpleNode(JJTTABLEOIDVARS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
    try {
      jj_consume_token(SEQUENCE_TOKEN);
      jj_consume_token(LBRACE);
      label_21:
      while (true) {
        IdentifierInSequenceOfVars();
        if (jj_2_114(3)) {
          jj_consume_token(IDENTIFIER);
          label_22:
          while (true) {
            if (jj_2_110(3)) {
              ;
            } else {
              break label_22;
            }
            if (jj_2_111(3)) {
              SizeDeclaration();
            } else if (jj_2_112(3)) {
              jj_consume_token(LPAREN);
              jj_consume_token(INTEGER_LITERAL);
              jj_consume_token(68);
              jj_consume_token(68);
              jj_consume_token(INTEGER_LITERAL);
              jj_consume_token(RPAREN);
            } else {
              jj_consume_token(-1);
              throw new ParseException();
            }
          }
        } else if (jj_2_115(3)) {
          jj_consume_token(OBJECT_IDENTITY);
        } else if (jj_2_116(3)) {
          jj_consume_token(OBJECT_TYPE);
        } else if (jj_2_117(3)) {
          jj_consume_token(OBJECT_TOKEN);
          jj_consume_token(IDENTIFIER_TOKEN);
        } else if (jj_2_118(3)) {
          jj_consume_token(OCTET_TOKEN);
          jj_consume_token(STRING_TOKEN);
          if (jj_2_113(3)) {
            SizeDeclaration();
          } else {
            ;
          }
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
        label_23:
        while (true) {
          if (jj_2_119(3)) {
            ;
          } else {
            break label_23;
          }
          jj_consume_token(COMMA);
        }
        if (jj_2_120(3)) {
          ;
        } else {
          break label_21;
        }
      }
      jj_consume_token(RBRACE);
      jjtree.closeNodeScope(jjtn000, true);
      jjtc000 = false;
        jjtn000.setName(lastObjectIdentifierToken.image);
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        {if (true) throw (RuntimeException)jjte000;}
      }
      if (jjte000 instanceof ParseException) {
        {if (true) throw (ParseException)jjte000;}
      }
      {if (true) throw (Error)jjte000;}
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
  }

