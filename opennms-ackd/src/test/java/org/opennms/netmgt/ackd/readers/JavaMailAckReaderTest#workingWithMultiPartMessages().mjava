    /**
     * tests the ability to create acknowledgments from an email for a multi-part text.  This test
     * creates a message from scratch rather than reading from an inbox.  This message creation
     * may not actually represent what comes from a mail server.
     */
    @Test
    public void workingWithMultiPartMessages() throws JavaMailerException, MessagingException {
        List<Message> msgs = new ArrayList<Message>();
        Properties props = new Properties();
        Message msg = new MimeMessage(Session.getDefaultInstance(props));
        Address[] addrs = new Address[1];
        addrs[0] = new InternetAddress("david@opennms.org");
        msg.addFrom(addrs);
        msg.addRecipient(RecipientType.TO, new InternetAddress("david@opennms.org"));
        msg.setSubject("Re: Notice #1234 JavaMailReaderImplTest Test Message");
        Multipart mpContent = new MimeMultipart();
        BodyPart textBp = new MimeBodyPart();
        BodyPart htmlBp = new MimeBodyPart();
        textBp.setText("ack");
        htmlBp.setContent("<html>\n" + 
        		" <head>\n" + 
        		"  <title>\n" + 
        		"   Acknowledge\n" + 
        		"  </title>\n" + 
        		" </head>\n" + 
        		" <body>\n" + 
        		"  <h1>\n" + 
        		"   ack\n" + 
        		"  </h1>\n" + 
        		" </body>\n" + 
        		"</html>", "text/html");
        
        mpContent.addBodyPart(textBp);
        mpContent.addBodyPart(htmlBp);
        msg.setContent(mpContent);
        
        msgs.add(msg);
        
        List<OnmsAcknowledgment> acks = m_processor.createAcks(msgs);
        Assert.assertEquals(1, acks.size());
        Assert.assertEquals(AckType.NOTIFICATION, acks.get(0).getAckType());
        Assert.assertEquals("david@opennms.org", acks.get(0).getAckUser());
        Assert.assertEquals(AckAction.ACKNOWLEDGE, acks.get(0).getAckAction());
        Assert.assertEquals(new Integer(1234), acks.get(0).getRefId());
    }

