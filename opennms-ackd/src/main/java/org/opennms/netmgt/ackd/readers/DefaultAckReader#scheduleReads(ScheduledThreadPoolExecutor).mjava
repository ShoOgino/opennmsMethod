    private synchronized void scheduleReads(final ScheduledThreadPoolExecutor executor) {
        LOG.debug("scheduleReads: acquired lock, creating schedule...");

        executor.setContinueExistingPeriodicTasksAfterShutdownPolicy(false);
        executor.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);
        m_future = executor.scheduleWithFixedDelay(this.getAckProcessor(), getSchedule().getInitialDelay(), 
                getSchedule().getInterval(), getSchedule().getUnit());
        LOG.debug("scheduleReads: exited lock, schedule updated.");
        LOG.debug("scheduleReads: schedule is: attempts remaining: {}; initial delay: {}; interval: {}; unit: {}",
                  getSchedule().getAttemptsRemaining(),
                  getSchedule().getInitialDelay(),
                  getSchedule().getInterval(),
                  getSchedule().getUnit());

        LOG.debug("scheduleReads: executor details: active count: {}; completed task count: {}; task count: {}; queue size: {}", executor.getActiveCount(), executor.getCompletedTaskCount(), executor.getTaskCount(), executor.getQueue().size());
    }

