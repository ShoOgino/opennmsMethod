    /**
     * <p>handleReloadConfigEvent</p>
     *
     * @param event a {@link org.opennms.netmgt.events.api.model.IEvent} object.
     */
    @EventHandler(uei=EventConstants.RELOAD_DAEMON_CONFIG_UEI)
    public void handleReloadConfigEvent(IEvent event) {
        String specifiedDaemon = null;

        LOG.info("handleReloadConfigEvent: processing reload event: {}", event);

        List<IParm> parms = event.getParmCollection();

        for (IParm parm : parms) {
            specifiedDaemon = parm.getValue().getContent();

            if (EventConstants.PARM_DAEMON_NAME.equals(parm.getParmName()) 
                    && getName().equalsIgnoreCase(specifiedDaemon)) {

                LOG.debug("handleReloadConfigEvent: reload event is for this daemon: {}; reloading configuration...", getName());

                try {
                    m_configDao.reloadConfiguration();
                    EventBuilder bldr = new EventBuilder(
                                                         EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, 
                                                         getName(), 
                                                         Calendar.getInstance().getTime());
                    bldr.addParam(EventConstants.PARM_DAEMON_NAME, getName());
                    m_eventForwarder.sendNow(bldr.getEvent());

                    LOG.debug("handleReloadConfigEvent: restarting readers due to reload configuration event...");
                    this.restartReaders(true);
                } catch (Throwable e) {
                    LOG.error("handleReloadConfigEvent: ", e);
                    EventBuilder bldr = new EventBuilder(
                                                         EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, 
                                                         getName(), 
                                                         Calendar.getInstance().getTime());
                    bldr.addParam(EventConstants.PARM_DAEMON_NAME, getName());
                    bldr.addParam(EventConstants.PARM_REASON, e.getLocalizedMessage().substring(0, 128));
                    m_eventForwarder.sendNow(bldr.getEvent());
                }

                LOG.debug("handleReloadConfigEvent: configuration reloaded.");

                return;  //return here because we are done.
            }

        }
        LOG.debug("handleReloadConfigEvent: reload event not for this daemon: {}; daemon specified is: {}", getName(), specifiedDaemon);
    }

