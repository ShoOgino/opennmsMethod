    /**
     * Handles the event driven access to acknowledging <code>OnmsAcknowledgable</code>s.  The acknowledgment event
     * contains 4 parameters:
     *     ackUser: The user acknowledging the <code>OnmsAcknowledgable</code>
     *     ackAction: ack, unack, esc, clear
     *     ackType: <code>AckType</code. representing either an <code>OnmsAlarm</code>, <code>OnmsNotification</code>, etc.
     *     refId: The ID of the <code>OnmsAcknowledgable</code>
     *
     * @param event a {@link org.opennms.netmgt.events.api.model.IEvent} object.
     */
    @EventHandler(uei=EventConstants.ACKNOWLEDGE_EVENT_UEI)
    public void handleAckEvent(IEvent event) {
        
        LOG.info("handleAckEvent: Received acknowledgment event: {}", event);
        
        OnmsAcknowledgment ack;
        
        try {
            ack = new OnmsAcknowledgment(Event.copyFrom(event));
            m_ackDao.processAck(ack);
        } catch (ParseException e) {
            LOG.error("handleAckEvent: unable to process acknowledgment event: {}", event, e);
        }
    }

