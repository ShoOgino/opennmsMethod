    public static List<HypericAlertStatus> fetchHypericAlerts(String hypericSystem, List<String> alertIds) throws HttpException, IOException, JAXBException, XMLStreamException {
        StringBuffer alertIdString = new StringBuffer();
        for (int i = 0; i < alertIds.size(); i++) {
            if (i > 0) alertIdString.append(" ");
            alertIdString.append(alertIds.get(i));
        }

        HttpClient httpClient = new HttpClient();
        HostConfiguration hostConfig = new HostConfiguration();

        // TODO Change to a POST method if possible
        GetMethod httpMethod = new GetMethod("/hqu/opennms/alertStatus/list.hqu");
        // httpMethod.addParameter("alertIds", alertIdString.toString());

        httpClient.getParams().setParameter(HttpClientParams.SO_TIMEOUT, 3000);
        httpClient.getParams().setParameter(HttpClientParams.USER_AGENT, "OpenNMS Ackd.HypericAckProcessor");
        // Change these parameters to be configurable
        hostConfig.setHost(HYPERIC_IP_ADDRESS, HYPERIC_PORT);
        // hostConfig.getParams().setParameter(HttpClientParams.VIRTUAL_HOST, "localhost");
        // if(ParameterMap.getKeyedBoolean(map, "http-1.0", false))
        // httpClient.getParams().setParameter(HttpClientParams.PROTOCOL_VERSION,HttpVersion.HTTP_1_0);

        if (HYPERIC_USER != null && !"".equals(HYPERIC_USER) && HYPERIC_PASSWORD != null && !"".equals(HYPERIC_PASSWORD)) {
            httpClient.getParams().setAuthenticationPreemptive(true);
            httpClient.getState().setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(HYPERIC_USER, HYPERIC_PASSWORD));
        }

        List<HypericAlertStatus> retval = new ArrayList<HypericAlertStatus>();
        try {
            log().debug("httpClient request with the following parameters: " + httpClient);
            log().debug("hostConfig parameters: " + hostConfig);
            log().debug("getMethod parameters: " + httpMethod);
            httpClient.executeMethod(hostConfig, httpMethod);

            //Integer statusCode = httpMethod.getStatusCode();
            //String statusText = httpMethod.getStatusText();
            InputStream responseText = httpMethod.getResponseBodyAsStream();

            retval = parseHypericAlerts(new InputStreamReader(responseText));
        } finally{
            httpMethod.releaseConnection();
        }
        return retval;
    }

