    protected void scheduleReads() {
        log().debug("scheduleReads: attempting to acquire lock...");
        
        ReaderSchedule schedule = ReaderSchedule.createSchedule();
        
        synchronized (m_lock) {
            log().debug("scheduleReads: acquired lock, creating schedule...");
            
            m_executor.scheduleWithFixedDelay(getMailAckProcessor(), schedule.getInitialDelay(), 
                                              schedule.getInterval(), schedule.getUnit());
            
        }
        
        log().debug("scheduleReads: exited lock, schedule updated.");
        log().debug("scheduleReads: schedule is:" +
        		    " attempts remaining: "+schedule.getAttemptsRemaining()+
        		    "; initial delay: "+schedule.getInitialDelay()+
        		    "; interval: "+schedule.getInterval()+
        		    "; unit: "+schedule.getUnit());
        
        log().debug("scheduleReads: executor details:"+
                    " active count: "+m_executor.getActiveCount()+
                    "; completed task count: "+m_executor.getCompletedTaskCount()+
                    "; task count: "+m_executor.getTaskCount()+
                    "; queue size: "+m_executor.getQueue().size());
    }

