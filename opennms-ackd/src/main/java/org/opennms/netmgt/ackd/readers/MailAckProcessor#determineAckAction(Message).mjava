    /**
     * <p>determineAckAction</p>
     *
     * @param msg a {@link javax.mail.Message} object.
     * @return a {@link org.opennms.netmgt.model.AckAction} object.
     * @throws java.io.IOException if any.
     * @throws javax.mail.MessagingException if any.
     */
    protected AckAction determineAckAction(final Message msg) throws IOException, MessagingException {
        LOG.info("determineAckAcktion: evaluating message looking for user specified acktion...");
        
        List<String> messageText = JavaReadMailer.getText(msg);
        
        AckAction action = AckAction.UNSPECIFIED;
        if (messageText != null && messageText.size() > 0) {
            
            LOG.debug("determineAction: message text: "+messageText);
            
            if (m_ackdDao.acknowledgmentMatch(messageText)) {
                action = AckAction.ACKNOWLEDGE;
            } else if (m_ackdDao.clearMatch(messageText)) {
                action = AckAction.CLEAR;
            } else if (m_ackdDao.escalationMatch(messageText)) {
                action = AckAction.ESCALATE;
            } else if (m_ackdDao.unAcknowledgmentMatch(messageText)) {
                action = AckAction.UNACKNOWLEDGE;
            } else {
                action = AckAction.UNSPECIFIED;
            }
            
        } else {
            String concern = "determineAckAction: a reply message to a notification has no text to evaluate.  " +
            		"No action can be determined.";
            LOG.warn(concern);
            throw new MessagingException(concern);
        }
        LOG.info("determineAckAcktion: evaluated message, "+action+" action determined from message.");
        return action;
    }

