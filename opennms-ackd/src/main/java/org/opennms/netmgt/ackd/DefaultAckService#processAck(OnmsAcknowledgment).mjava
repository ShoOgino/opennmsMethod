    public void processAck(OnmsAcknowledgment ack) {
        
        List<Acknowledgeable> ackables = m_ackDao.findAcknowledgables(ack);
        EventBuilder ebuilder;
        
        if (ackables == null || ackables.size() < 1) {
            throw new IllegalStateException("No acknowlegables in the datbase for ack: "+ack);
        }
        
        for (Acknowledgeable ackable : ackables) {
            
            switch (ack.getAckAction()) {
            case ACKNOWLEDGE:
                ackable.acknowledge(ack.getAckUser());
                break;
            case CLEAR:
                ackable.clear(ack.getAckUser());
                break;
            case ESCALATE:
                ackable.escalate(ack.getAckUser());
            default:
                break;
            }
            
            m_ackDao.updateAckable(ackable);
            m_ackDao.save(ack);
            m_ackDao.flush();
            ebuilder = new EventBuilder(EventConstants.EVENT_ACKNOWLEDGED_UEI, "Ackd");
            OnmsNode node = ackable.getNode();
            ebuilder.setNode(node == null ? null : node);
            //ebuilder.setTime(ack.getAckTime());
            ebuilder.addParam("ackId", ack.getId().intValue());
            ebuilder.addParam("refId", ack.getRefId().intValue());
            ebuilder.addParam("ackType", String.valueOf(ack.getAckType())); //FIXME: needs string qualification like AckAction
            ebuilder.addParam("ackAction", String.valueOf(ack.getAckAction()));
            m_eventForwarder.sendNow(ebuilder.getEvent());
        }
    }

