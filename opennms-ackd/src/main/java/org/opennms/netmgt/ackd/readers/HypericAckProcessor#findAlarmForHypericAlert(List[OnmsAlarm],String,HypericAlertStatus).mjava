    /**
     * <p>findAlarmForHypericAlert</p>
     *
     * @param alarms a {@link java.util.List} object.
     * @param platformId a {@link java.lang.String} object.
     * @param alert a {@link org.opennms.netmgt.ackd.readers.HypericAckProcessor.HypericAlertStatus} object.
     * @return a {@link org.opennms.netmgt.model.OnmsAlarm} object.
     */
    public static OnmsAlarm findAlarmForHypericAlert(List<OnmsAlarm> alarms, String platformId, HypericAlertStatus alert) {
        for (OnmsAlarm alarm : alarms) {
            final Optional<String> targetPlatformId = alarm.findEventParameter("alert.source").map(OnmsEventParameter::getValue).filter(s -> Objects.equals(s, platformId));
            final Optional<String> targetAlertId = alarm.findEventParameter("alert.source").map(OnmsEventParameter::getValue).filter(s -> Objects.equals(s, String.valueOf(alert.getAlertId())));

            if (targetPlatformId.isPresent() && targetAlertId.isPresent()) {
                return alarm;
            }
        }
        return null;
    }

