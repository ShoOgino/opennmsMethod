    /**
     * Starts the AckReaders indicating a reload of their configuration is necessary.
     *
     * @param reloadConfig a boolean.
     */
    protected void startReaders(boolean reloadConfig) {
        int enabledReaderCount = getConfigDao().getEnabledReaderCount();
        
        if (enabledReaderCount < 1) {
            log().info("startReaders: there are not readers enabled in the configuration.");
            return;
        }
        
        m_executor.setCorePoolSize(enabledReaderCount);
        
        log().info("startReaders: starting "+enabledReaderCount+" enabled readers of "+m_ackReaders.size()+" readers registered.");
        for (AckReader reader : m_ackReaders) {
            
            log().debug("startReaders: starting reader: "+reader.getName());
            List<AckReaderState> allowedStates = new ArrayList<AckReaderState>();
            allowedStates.add(AckReaderState.STOPPED);
            
            try {
                adjustReaderState(reader, AckReaderState.STARTED, allowedStates, reloadConfig);
            } catch (Throwable e) {
                log().error("startReaders: Could not start reader: "+reader.getName(), e);
                continue;
            }
            
            log().debug("startReaders: reader: "+reader.getName()+" started.");
        }
        log().info("startReaders: "+m_ackReaders.size()+" readers started.");
    }

