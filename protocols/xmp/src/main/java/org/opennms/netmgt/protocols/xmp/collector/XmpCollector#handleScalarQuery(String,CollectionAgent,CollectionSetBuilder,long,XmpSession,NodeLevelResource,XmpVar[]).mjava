    private boolean handleScalarQuery(String groupName,
            CollectionAgent agent,
            CollectionSetBuilder collectionSetBuilder,
            long oldUptime,
            XmpSession session, 
            NodeLevelResource nodeLevelResource,
            XmpVar[] queryVars)
    {
        XmpMessage reply;
        long newUptime;
        int i;
        XmpVar[] vars;

        //log().debug("sending scalar query");
        reply = session.queryVars(queryVars);

        if (reply == null) {
            LOG.warn("collect: query to {} failed, {}", agent, Xmp.errorStatusToString(session.getErrorStatus()));
            return false;
        }

        // for each variable in reply, store it in collectionSet
        // hack alert: somewhere in some query, we asked for
        // sysUptime; find it save value for later

        // vars[i] should match up with mibObjects[i] !!!

        vars = reply.getMIBVars();

        newUptime = 0;

        for (i=0; i<vars.length; i++) {

            if (vars[i].getMibName().equals("core") &&
                    vars[i].getObjName().equals("sysUpTime")) {
                newUptime = vars[i].getValueLong();
            }

            // put in collectionSet via this attribute group

            final XmpVar xmpVar = vars[i];
            collectionSetBuilder.withAttribute(nodeLevelResource, groupName, xmpVar.getObjName(), xmpVar.getValue(), getType(xmpVar));
        }

        if (newUptime > oldUptime) { 
            collectionSetBuilder.disableCounterPersistence(false);
        }

        if (newUptime > 0) {
            // save the agent's sysUpTime in the CollectionAgent
            agent.setSavedSysUpTime(newUptime);
        }

        return true;

    } /* handleScalarQuery */

