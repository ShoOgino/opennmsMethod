    /**
     * Parses the URL.
     *
     * <p>Valid placeholders are:</p>
     * <ul>
     * <li><b>ipaddr</b>, The Node IP Address</li>
     * <li><b>step</b>, The Collection Step in seconds</li>
     * <li><b>nodeId</b>, The Node ID</li>
     * <li><b>nodeLabel</b>, The Node Label</li>
     * <li><b>foreignId</b>, The Node Foreign ID</li>
     * <li><b>foreignSource</b>, The Node Foreign Source</li>
     * </ul>
     * 
     * @param unformattedUrl the unformatted URL
     * @param agent the collection agent
     * @param collectionStep the collection step (in seconds)
     * @return the string
     */
    protected String parseUrl(final String unformattedUrl, final CollectionAgent agent, final Integer collectionStep) {
        NodeDao nodeDao = BeanUtils.getBean("daoContext", "nodeDao", NodeDao.class);
        OnmsNode node = nodeDao.get(agent.getNodeId());
        String url = unformattedUrl.replace("{ipaddr}", agent.getHostAddress());
        url = url.replace("{step}", collectionStep.toString());
        url = url.replace("{nodeId}", node.getNodeId());
        url = url.replace("{nodeLabel}", node.getLabel());
        url = url.replace("{foreignId}", node.getForeignId());
        url = url.replace("{foreignSource}", node.getForeignSource());
        return url;
    }

