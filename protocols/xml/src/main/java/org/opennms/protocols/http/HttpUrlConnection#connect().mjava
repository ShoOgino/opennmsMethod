    /* (non-Javadoc)
     * @see java.net.URLConnection#connect()
     */
    @Override
    public void connect() throws IOException {
        if (m_clientWrapper != null) {
            return;
        }
        m_clientWrapper = HttpClientWrapper.create();
        if (m_request != null) {
            int timeout = m_request.getParameterAsInt("timeout");
            if (timeout > 0) {
                m_clientWrapper.setConnectionTimeout(timeout)
                    .setSocketTimeout(timeout);
            }

            int retries = m_request.getParameterAsInt("retries");
            if (retries == 0) {
                retries = m_request.getParameterAsInt("retry");
            }
            if (retries > 0) {
                m_clientWrapper.setRetries(retries);
            }

            String disableSslVerification = m_request.getParameter("disable-ssl-verification");
            if (Boolean.parseBoolean(disableSslVerification)) {
                try {
                    m_clientWrapper.useRelaxedSSL("https");
                } catch (final GeneralSecurityException e) {
                    LOG.warn("Failed to set up relaxed SSL.", e);
                }
            }
        }

        m_clientWrapper.addRequestInterceptor(new RequestAcceptEncoding())
            .addResponseInterceptor(new ResponseContentEncoding());

        // Add User Authentication
        String[] userInfo = m_url.getUserInfo() == null ? null :  m_url.getUserInfo().split(":");
        if (userInfo != null && userInfo.length == 2) {
            // If the URL contains a username/password, it might need to be decoded
            LOG.debug("username before decoding: " + userInfo[0]);
            LOG.debug("password before decoding: " + userInfo[1]);
            for(String s : userInfo){
                s = URLDecoder.decode(s, "UTF-8");
            }
            LOG.debug("username after decoding: " + userInfo[0]);
            LOG.debug("password after decoding: " + userInfo[1]);
            m_clientWrapper.addBasicCredentials(userInfo[0], userInfo[1]);
        }

    }

