    public XmlDataCollection parseCollection(XmlDataCollection collection, XmlCollectionHandler handler, CollectionAgent agent, Map<String, Object> parameters) {
        // Clone the collection and perform token replacement in the source url and request using the handler
        XmlDataCollection preparsedCollection = collection.clone();
        // Remove blacklisted properties from the map
        Map<String, String> filteredParameters = filterParameters(parameters);
        for (XmlSource source : preparsedCollection.getXmlSources()) {
            final String originalUrlStr = source.getUrl();
            final String parsedUrlStr = handler.parseUrl(m_nodeDao, originalUrlStr, agent, collection.getXmlRrd().getStep(), filteredParameters);
            LOG.debug("parseCollection: original url: '{}', parsed url: '{}' ", originalUrlStr, parsedUrlStr);
            source.setUrl(parsedUrlStr);

            final Request originalRequest = source.getRequest();
            final Request parsedRequest = handler.parseRequest(m_nodeDao, originalRequest, agent, collection.getXmlRrd().getStep(), filteredParameters);
            LOG.debug("parseCollection: original request: '{}', parsed request: '{}' ", originalRequest, parsedRequest);
            source.setRequest(parsedRequest);
        }
        return preparsedCollection;
    }

