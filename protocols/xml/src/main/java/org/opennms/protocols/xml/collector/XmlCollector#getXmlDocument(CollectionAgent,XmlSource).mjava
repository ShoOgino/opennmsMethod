    /**
     * Gets the XML document.
     *
     * @param agent the agent
     * @param source the source
     * @return the XML document
     */
    public Document getXmlDocument(CollectionAgent agent, XmlSource source) {
        // The URL format could have some variables that will be replaced online to support dynamic URLs with timestamps.
        HashMap<String, String> translationMap = new HashMap<String, String>();
        translationMap.put("{ipaddr}", agent.getHostAddress());
        String urlStr = source.getUrl();
        for (Map.Entry<String, String> translation : translationMap.entrySet()) {
            RE re = new RE(translation.getKey());
            urlStr = re.subst(urlStr, translation.getValue());
        }
        // Create Document
        try {
            URL url = new URL(urlStr);
            URLConnection c = url.openConnection();
            c.connect();
            InputStream is = c.getInputStream();
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            factory.setIgnoringComments(true);
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document doc = builder.parse(is);
            if (c instanceof SftpUrlConnection) // We need to be sure to close the connections for SFTP
                ((SftpUrlConnection)c).disconnect();
            return doc;
        } catch (Exception e) {
            throw new XmlCollectorException("Can't retrieve data from " + urlStr);
        }
    }

