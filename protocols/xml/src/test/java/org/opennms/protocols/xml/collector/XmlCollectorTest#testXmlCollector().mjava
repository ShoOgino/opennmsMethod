    /**
     * Test XML collector.
     *
     * @throws Exception the exception
     */
    @Test
    public void testXmlCollector() throws Exception {
        CollectionAgent agent = EasyMock.createMock(CollectionAgent.class);
        EasyMock.expect(agent.getNodeId()).andReturn(1).anyTimes();
        EasyMock.expect(agent.getHostAddress()).andReturn("127.0.0.1").anyTimes();
        EventProxy eproxy = EasyMock.createMock(EventProxy.class);
        EasyMock.replay(agent, eproxy);

        Map<String, Object> parameters = new HashMap<String, Object>();
        parameters.put("collection", "3GPP");

        XmlDataCollectionConfigDaoJaxb xmlCollectionDao = new XmlDataCollectionConfigDaoJaxb();
        Resource resource = new FileSystemResource("src/test/resources/xml-datacollection-config.xml");
        xmlCollectionDao.setConfigResource(resource);
        xmlCollectionDao.afterPropertiesSet();

        MockXmlCollector collector = new MockXmlCollector();
        collector.setXmlCollectionDao(xmlCollectionDao);
        CollectionSet collectionSet = collector.collect(agent, eproxy, parameters);
        Assert.assertEquals(ServiceCollector.COLLECTION_SUCCEEDED, collectionSet.getStatus());

        ServiceParameters serviceParams = new ServiceParameters(new HashMap<String,Object>());
        BasePersister persister =  new GroupPersister(serviceParams, createRrdRepository()); // storeByGroup=true;
        collectionSet.visit(persister);

        EasyMock.verify(agent, eproxy);
    }

