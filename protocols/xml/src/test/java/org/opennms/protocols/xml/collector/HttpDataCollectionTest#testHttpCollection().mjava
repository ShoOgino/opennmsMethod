    /**
     * Test HTTP Data Collection
     *
     * @throws Exception the exception
     */
    @Test
    @JUnitHttpServer(port=10342, https=false, webapps={
            @Webapp(context="/junit", path="src/test/resources/test-webapp")
    })
    public void testHttpCollection() throws Exception {
        File configFile = new File("src/test/resources/http-datacollection-config.xml");
        XmlDataCollectionConfig config = JaxbUtils.unmarshal(XmlDataCollectionConfig.class, configFile);
        XmlDataCollection collection = config.getDataCollectionByName("Http-Count");
        RrdRepository repository = createRrdRepository(collection.getXmlRrd());

        Map<String, Object> parameters = new HashMap<String, Object>();
        parameters.put("collection", "Http-Count");
        parameters.put("pre-parse-html", "true");

        DefaultXmlCollectionHandler collector = new DefaultXmlCollectionHandler();
        collector.setNodeDao(m_nodeDao);
        collector.setRrdRepository(repository);
        collector.setServiceName("HTTP");

        XmlCollectionSet collectionSet = collector.collect(m_collectionAgent, collection, parameters);
        Assert.assertEquals(ServiceCollector.COLLECTION_SUCCEEDED, collectionSet.getStatus());

        ServiceParameters serviceParams = new ServiceParameters(new HashMap<String,Object>());
        BasePersister persister =  new GroupPersister(serviceParams, repository); // storeByGroup=true;
        collectionSet.visit(persister);

        RrdDb jrb = new RrdDb(new File("target/snmp/1/count-stats.jrb"));
        Assert.assertEquals(1, jrb.getDsCount());
        Datasource ds = jrb.getDatasource("count");
        Assert.assertNotNull(ds);
        Assert.assertEquals(new Double(5), Double.valueOf(ds.getLastValue()));
    }

