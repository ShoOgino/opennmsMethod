    /**
     * This method is used to test a passed address for DHCP server support. If
     * the target system is running a DHCP server and responds to the request
     * then a value of true is returned.
     * 
     * @param host
     *            The host address to check
     * @param retries
     *            The maximum number of attempts to try.
     * @param timeout
     *            The time to wait for a response to each request.
     * 
     * @return True if the remote host supports DHCP.
     */
    private boolean isServer(InetAddress host, int retries, int timeout) {
        boolean isAServer = false;
        long responseTime = -1;

        try {
            // Dhcpd.isServer() returns the response time in milliseconds
            // if the remote host is a DHCP server or -1 if the remote
            // host is not a DHCP server.
            responseTime = Dhcpd.isServer(host, timeout, retries);
        } catch (final InterruptedIOException ioE) {
            ioE.fillInStackTrace();
            LogUtils.debugf(this, ioE, "isServer: The DHCP discovery operation was interrupted");
        } catch (final IOException ioE) {
            LogUtils.warnf(this, ioE, "isServer: An I/O exception occured during DHCP discovery");
            isAServer = false;
        } catch (final Throwable t) {
            LogUtils.errorf(this, t, "isServer: An undeclared throwable exception was caught during test");
            isAServer = false;
        }

        // If response time is equal to or greater than zero
        // the remote host IS a DHCP server.
        if (responseTime >= 0)
            isAServer = true;

        // return the success/failure of this
        // attempt to contact a DHCP server.
        //
        return isAServer;
    }

