    @Test(timeout=90000)
    public void testJdhcp() throws IOException {
        assumeTrue(m_extendedTests);

        final DatagramSocket mySocket = new DatagramSocket(DHCPConstants.BOOTP_REPLY_PORT);

        try {
            DHCPPacket messageOut = new DHCPPacket();
    
            // fill DHCPMessage object 
            messageOut.setOp((byte) 1);    
            messageOut.setHtype((byte) 1);
            messageOut.setHlen((byte) 6);
            messageOut.setHops((byte) 0);
            messageOut.setXid(191991743); // should be a random int
            messageOut.setSecs((short) 0);
            messageOut.setFlags((short) 0);
    
            byte[] hw = new byte[16];
            hw[0] = (byte) 0x00;
            hw[1] = (byte) 0x60;
            hw[2] = (byte) 0x97; 
            hw[3] = (byte) 0xC6; 
            hw[4] = (byte) 0x76;
            hw[5] = (byte) 0x64;
            messageOut.setChaddr(hw);
    
            // set message type option to DHCPDISCOVER
            messageOut.setOption(DHCPOption.newOptionAsByte((byte) 53, DHCPConstants.DHCPDISCOVER));

            final byte[] buf = messageOut.serialize();

            final DatagramPacket packetOut = new DatagramPacket(buf, buf.length);
            packetOut.setAddress(InetAddressUtils.addr(DHCP_SERVER_IP));
            packetOut.setPort(DHCPConstants.BOOTP_REQUEST_PORT);

            mySocket.send(packetOut);

            final DatagramPacket packetIn = new DatagramPacket(new byte[1500], 1500);
            mySocket.receive(packetIn);
            DHCPPacket messageIn = DHCPPacket.getPacket(packetIn);

            System.out.println(messageIn);
            System.out.println("Destination Address:  " + DHCP_SERVER_IP);
            System.out.println("Ch Address:  " + Arrays.toString(messageIn.getChaddr()));
            System.out.println("Siaddr:  " + Arrays.toString(messageIn.getSiaddrRaw()));
            System.out.println("Ciaddr: " + Arrays.toString(messageIn.getCiaddrRaw()));
    
            System.out.println("Option54: " + messageIn.getOption((byte)54));
            System.out.println(messageIn.getOption((byte)54).getValueAsInetAddr());
        } finally {
            IOUtils.closeQuietly(mySocket);
        }
    }

