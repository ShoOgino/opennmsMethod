  /**
   * Walk the abstract syntax tree and collect information about
   * any OID in a table
   */
  public void collectTableInfo() {
    //if (printDebug) System.out.println("collectTableInfo node=" + this.toString());

    if (this.getVisited() == true) {
      return;
    }

    //   auiTable OBJECT-TYPE
    //      SYNTAX SEQUENCE OF AuiEntry ...
    // Save the name ("auiTable") as the value, and the entry ("AuiEntry") as the key
    // The entry is the key so that we can search it later by entry when we get the
    // sequence entry (in collectSequenceInfo)
    //  entryNameAndTableName is the symbol table Hashtable
    // The tree looks like:
    //    DeclOID default visited=false children=4
    //      ObjectIdentifier auiTable visited=false children=0
    //      TableSequenceOf AuiEntry visited=false children=0
    //      GetAccessIdentifier read-only visited=false children=0
    //      Parent auiTable visited=false children=0
    //      PartialOID 1 visited=false children=0
    boolean declOidFound = ParseMibTreeConstants.jjtNodeName[this.id].equals(
        "DeclOID");
    // walk through and see if it contains a TableSequenceOf node

    if (children != null) {
      // walk through the children and collect information
      String tableName = null;
      String entryName = null;
      for (int i = 0; i < children.length; ++i) {
        SimpleNode n = (SimpleNode) children[i];
        if (n != null) {
          if (ParseMibTreeConstants.jjtNodeName[n.getId()].equals("Parent")) {
            tableName = n.identifier_text;
          }
          else if (ParseMibTreeConstants.jjtNodeName[n.getId()].equals(
              "TableSequenceOf")) {
            // could mark the parent as a table here if we wanted to
            entryName = n.identifier_text;
          }

        } // end if

        if (n != null) {
          n.collectTableInfo();
          n.setVisited(true);
        }
      } // end for

      // we know we have found a table if entryName != null
      if (declOidFound && entryName != null) {
        if (printDebug) {
          System.out.println("collectTableInfo adding " + entryName + "/" +
                             tableName);
        }
        entryNameAndTableName.put(entryName, tableName);
      }
    }
  } // end collectTableInfo

