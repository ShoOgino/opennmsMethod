	/**
	 * @param events
	 */
	public void forwardEvents(final List<Event> events) {
		CompletableFuture.completedFuture(events)
			// Convert the events to ES actions
			.thenApplyAsync(this::convertEventsToEsActions, executor)
			// Log any uncaught exceptions
			.exceptionally(e -> {
				LOG.error("Unexpected exception during task execution: " + e.getMessage(), e);
				return null;
			})
			// Send the events to Elasticsearch
			.thenAcceptAsync(this::sendEvents, executor)
			// Log any uncaught exceptions
			.exceptionally(e -> {
				LOG.error("Unexpected exception during task completion: " + e.getMessage(), e);
				return null;
			});
	}

