    /**
     * utility method to populate a Map with the most import node attributes
     *
     * @param body the map
     * @param node the node object
     */
    private static void populateBodyWithNodeInfo(Map<String,String> body, OnmsNode node) {
        body.put("nodelabel", node.getLabel());
        body.put("nodesysname", node.getSysName());
        body.put("nodesyslocation", node.getSysLocation());
        body.put("foreignsource", node.getForeignSource());
        body.put("foreignid", node.getForeignId());
        body.put("operatingsystem", node.getOperatingSystem());
        StringBuilder categories=new StringBuilder();
        for (Iterator<OnmsCategory> i=node.getCategories().iterator();i.hasNext();) {
            categories.append(((OnmsCategory)i.next()).getName());
            if(i.hasNext()) {
                categories.append(",");
            }
        }
        body.put("categories", categories.toString());

		//assetRecord.
		OnmsAssetRecord assetRecord= node.getAssetRecord() ;
		if(assetRecord!=null){

			//geolocation
			OnmsGeolocation gl = assetRecord.getGeolocation();
			if (gl !=null){
				body.put("asset-latitude", (gl.getLatitude()!=null ? gl.getLatitude().toString() : null));
				body.put("asset-longitude", (gl.getLatitude()!=null ? gl.getLongitude().toString() : null));
			}

			//assetRecord
			body.put("asset-region", assetRecord.getRegion());
			body.put("asset-building", assetRecord.getBuilding());
			body.put("asset-floor",  assetRecord.getFloor());
			body.put("asset-room",   assetRecord.getRoom());
			body.put("asset-rack",  assetRecord.getRack());
			body.put("asset-slot",  assetRecord.getSlot());
			body.put("asset-port",  assetRecord.getPort());
			body.put("asset-category",  assetRecord.getCategory());
			body.put("asset-displaycategory",  assetRecord.getDisplayCategory());
			body.put("asset-notifycategory",  assetRecord.getNotifyCategory());
			body.put("asset-pollercategory",   assetRecord.getPollerCategory());
			body.put("asset-thresholdcategory",   assetRecord.getThresholdCategory());
			body.put("asset-managedobjecttype",   assetRecord.getManagedObjectType());
			body.put("asset-managedobjectinstance", assetRecord.getManagedObjectInstance());
			body.put("asset-manufacturer", assetRecord.getManufacturer());
			body.put("asset-vendor", assetRecord.getVendor());
			body.put("asset-modelnumber", assetRecord.getModelNumber());

		}

    }

