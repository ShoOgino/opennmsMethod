    public static DataTable convertJSONToDataTable(String text) {
        
        DataTable dataTable = DataTable.create();
        dataTable.addColumn(ColumnType.DATETIME, "Date");
        dataTable.addColumn(ColumnType.NUMBER, "DNS-AAAA");
        dataTable.addColumn(ColumnType.STRING, "title1");
        dataTable.addColumn(ColumnType.STRING, "text1");
        dataTable.addColumn(ColumnType.NUMBER, "DNS-A");
        dataTable.addColumn(ColumnType.STRING, "title2");
        dataTable.addColumn(ColumnType.STRING, "text2");
        dataTable.addColumn(ColumnType.NUMBER, "HTTP-v6");
        dataTable.addColumn(ColumnType.STRING, "title2");
        dataTable.addColumn(ColumnType.STRING, "text2");
        dataTable.addColumn(ColumnType.NUMBER, "HTTP-v4");
        dataTable.addColumn(ColumnType.STRING, "title2");
        dataTable.addColumn(ColumnType.STRING, "text2");
        
        final JSONObject jsonData = (JSONObject) JSONParser.parseStrict(text);
        final JSONArray d = jsonData.isArray();

        for (int j = 0; j < d.size(); j++) {
            final JSONObject dataPoint = d.get(j).isObject();
            final JSONArray values = dataPoint.get("values").isArray();
            dataTable.addRow();

            final Date date = new Date(Double.valueOf(dataPoint.get("time").isNumber().doubleValue()).longValue());
            dataTable.setValue(j, 0, date);

            for (int i = 0; i < values.size(); i++) {
                final JSONObject value = values.get(i).isObject();
                if (value != null) {
                    final String application = value.get("application").isString().stringValue();
                    insertApplicationData(dataTable, j, value, application);
                }
            }
        }        
        
        return dataTable;
    }

