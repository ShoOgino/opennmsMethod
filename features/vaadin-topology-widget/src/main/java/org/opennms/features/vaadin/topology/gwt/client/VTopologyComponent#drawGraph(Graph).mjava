    private void drawGraph(Graph graph) {
        D3 lines = m_edgeGroup.selectAll("line")
                .data(graph.getEdges().toArray(new Edge[0]), getEdgeId());
        
        D3 vertexGroup = m_vertexGroup.selectAll(".little")
                .data(graph.getVertices().toArray(new Vertex[0]), getVertexId());
        
        lines.exit().transition().duration(500).attr("opacity", 0).remove();
        vertexGroup.exit().transition().duration(500).attr("opacity", 0).remove();
        
        lines.transition().delay(500).duration(500)
                .attr("x1", getX1())
                .attr("x2", getX2())
                .attr("y1", getY1())
                .attr("y2", getY2())
                .attr("opacity", 1);
        
        vertexGroup.transition().delay(500).duration(500)
                .attr("transform", getTranslation())
                .attr("opacity", 1);
        
        lines.enter().append("line")
                .attr("opacity", 0)
                .attr("x1", getX1())
                .attr("x2", getX2())
                .attr("y1", getY1())
                .attr("y2", getY2())
                .style("stroke", "#ccc").transition().delay(1000).duration(500)
                .attr("opacity", 1);
        
        D3 vertex = vertexGroup.enter().append("g").attr("transform", getTranslation())
                .attr("opacity", 0)
                .attr("class", "little");
                
        vertex.append("circle").attr("r", 9);
        
        vertex.append("text").attr("dy", ".35em")
            .attr("text-anchor", "middle").style("fill", "white")
            .text(getVertexId());
        
        vertex.transition().delay(1000).duration(500).attr("opacity", 1);
                
        
	}

