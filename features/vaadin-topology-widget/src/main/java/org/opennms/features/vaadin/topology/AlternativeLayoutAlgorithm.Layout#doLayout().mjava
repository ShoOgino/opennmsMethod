		public void doLayout() {
			
			Set<Vertex> included = new LinkedHashSet<Vertex>();
			
			List<Vertex> vertices = m_graph.getVertices();
			if (vertices.size() < 1) return;

			Vertex initialVertex = vertices.get(0);
			Layer layer = new Layer();
			layer.add(initialVertex);
			
			while(layer != null) {
				included.addAll(layer);
				m_layers.add(layer);
				System.err.printf("Added layer %d which contains %d vertices totaling  %d\n", m_layers.size(), layer.size(), included.size());
				layer = nextLayer(layer, included);
			}
			

			int maxLayer = -1;
			for(Layer l : m_layers) {
				maxLayer = Math.max(maxLayer, l.size());
			}
			
			int width = m_xSpacing*(maxLayer+1);
			

			for(int i = 0; i < m_layers.size(); i++) {
				Layer l = m_layers.get(i);
				int j = 0;
				int lineLength = m_xSpacing*(l.size()-1);
				int xOffSet = (width-lineLength)/2;
				for(Vertex v : l) {
					v.setX(xOffSet + m_xSpacing*j);
					v.setY(m_ySpacing*(i+1));
					j++;
				}
			}
			
			
		}

