    /**
     * {@inheritDoc}
     *
     * This method is invoked by the EventIpcManager when a new event is
     * available for processing. Each message is examined for its Universal
     * Event Identifier and the appropriate action is taking based on each UEI.
     */
    @Override
    public void onEvent(Event event) {

        String eventUei = event.getUei();
        if (eventUei == null)
            return;

        LOG.debug("Received event: {}", eventUei);

        if (EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI.equals(eventUei)) {
            // add to known nodes
            if (event.getNodeid() != null && event.getInterface() != null) {
                m_trapdIpMgr.setNodeId(event.getInterface(), event.getNodeid().intValue());
            }
            LOG.debug("Added {} to known node list", event.getInterface());
        } else if (EventConstants.INTERFACE_DELETED_EVENT_UEI.equals(eventUei)) {
            // remove from known nodes
            if (event.getInterface() != null) {
                m_trapdIpMgr.removeNodeId(event.getInterface());
            }
            LOG.debug("Removed {} from known node list", event.getInterface());
        } else if (EventConstants.INTERFACE_REPARENTED_EVENT_UEI.equals(eventUei)) {
            // add to known nodes
            if (event.getNodeid() != null && event.getInterface() != null) {
                m_trapdIpMgr.setNodeId(event.getInterface(), event.getNodeid().intValue());
            }
            LOG.debug("Reparented {} to known node list", event.getInterface());
        }
    }

