	private Log toLog(TrapLogDTO messageLog) {
		final Log log = new Log();
		final Events events = new Events();
		log.setEvents(events);

		for (TrapDTO eachMessage : messageLog.getMessages()) {
			try {
				final Event event = eventCreator.createEventFrom(
						eachMessage,
						messageLog.getSystemId(),
						messageLog.getLocation(),
						messageLog.getTrapAddress());
				if (!shouldDiscard(event)) {
					if (event.getSnmp() != null) {
						trapdInstrumentation.incTrapsReceivedCount(event.getSnmp().getVersion());
					}
					events.addEvent(event);
				} else {
					LOG.debug("Trap discarded due to matching event having logmsg dest == discardtraps");
					trapdInstrumentation.incDiscardCount();
				}
			} catch (Throwable e) {
				LOG.error("Unexpected error processing trap: {}", eachMessage, e);
				trapdInstrumentation.incErrorCount();
			}
		}
		return log;
	}

