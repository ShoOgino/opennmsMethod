    public Event getEvent(TrapInformation trapInformation) {
        // Validate trap before continuing
        trapInformation.validate();

        // TODO MVR make log message nice
        LOG.debug("{} trap - trapInterface: ()", trapInformation.getVersion(), trapInformation.getTrapAddress());

        // Set event data
        final EventBuilder eventBuilder = new EventBuilder(null, "trapd");
        eventBuilder.setTime(new Date(trapInformation.getCreationTime()));
        eventBuilder.setCommunity(trapInformation.getCommunity());
        eventBuilder.setSnmpTimeStamp(trapInformation.getTimeStamp());
        eventBuilder.setSnmpVersion(trapInformation.getVersion());
        eventBuilder.setSnmpHost(str(trapInformation.getTrapAddress()));
        eventBuilder.setInterface(trapInformation.getTrapAddress());
        eventBuilder.setHost(InetAddressUtils.toIpAddrString(trapInformation.getAgentAddress()));

        // Handle trap identity
        final TrapIdentity trapIdentity = trapInformation.getTrapIdentity();
        if (trapIdentity != null) {
            // TODO MVR make Log message nice
            LOG.debug("setTrapIdentity: SNMP trap {}", trapIdentity);
            eventBuilder.setGeneric(trapIdentity.getGeneric());
            eventBuilder.setSpecific(trapIdentity.getSpecific());
            eventBuilder.setEnterpriseId(trapIdentity.getEnterpriseId());
        }

        // Handle var bindings
        for (int i = 0; i < trapInformation.getPduLength(); i++) {
            final SnmpVarBindDTO varBind = trapInformation.getSnmpVarBindDTO(i);
            if (varBind != null) {
                final SnmpObjId name = varBind.getSnmpObjectId();
                final SnmpValue value = varBind.getSnmpValue();
                eventBuilder.addParam(SyntaxToEvent.processSyntax(name.toString(), value));
                if (EventConstants.OID_SNMP_IFINDEX.isPrefixOf(name)) {
                    eventBuilder.setIfIndex(value.toInt());
                }
            }
        }

        // Resolve Node id and set, if known by OpenNMS
        final long nodeId = resolveNodeId(trapInformation);
        if (nodeId != -1) {
            eventBuilder.setNodeid(nodeId);
        }

        // If there was no systemId in the trap message, assume that
        // it was generated by this system. Eventd will fill in the
        // systemId of the local system if it remains null here.
        if (!Strings.isNullOrEmpty(trapInformation.getSystemId())) {
            eventBuilder.setDistPoller(trapInformation.getSystemId());
        }
        return eventBuilder.getEvent();
    }

