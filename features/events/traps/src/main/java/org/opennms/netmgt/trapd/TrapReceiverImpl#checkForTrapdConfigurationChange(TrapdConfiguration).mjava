    private boolean checkForTrapdConfigurationChange(TrapdConfiguration m_trapdConfig) {
        if (m_trapdConfig.getSnmpTrapPort() != m_snmpTrapPort) {
            LOG.info("SNMP trap port has been updated from trapd-confguration.xml.");
            return true;
        } else if (
            m_trapdConfig.getSnmpTrapAddress() != null &&
            !"*".equalsIgnoreCase(m_trapdConfig.getSnmpTrapAddress()) &&
            !m_trapdConfig.getSnmpTrapAddress().equalsIgnoreCase(m_snmpTrapAddress)
        ) {
            LOG.info("SNMP trap address has been updated from trapd-confguration.xml.");
            return true;
        } else {
            Map<String, SnmpV3User> newSnmpV3Users = getSnmpV3UserMap(m_trapdConfig);

            Map<String, SnmpV3User> existingSnmpV3Users = m_snmpV3Users.stream().collect(Collectors.toMap(SnmpV3User::getSecurityName, Function.<SnmpV3User>identity()));

            if (isSnmpV3UsersMapUpdated(existingSnmpV3Users, newSnmpV3Users) ) {
                LOG.info("SNMPv3 user list has been updated from trapd-confguration.xml.");
                return true;
            } else {
                return false;
            }
        }
    }

