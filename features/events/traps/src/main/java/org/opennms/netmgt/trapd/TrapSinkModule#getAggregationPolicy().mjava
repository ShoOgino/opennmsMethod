    @Override
    public AggregationPolicy<TrapInformationWrapper, TrapLogDTO> getAggregationPolicy() {
        return new AggregationPolicy<TrapInformationWrapper, TrapLogDTO>() {
            @Override
            public int getCompletionSize() {
                return config.getBatchSize();
            }

            @Override
            public int getCompletionIntervalMs() {
                return config.getBatchIntervalMs();
            }

            @Override
            public Object key(TrapInformationWrapper message) {
                return message.getTrapInformation().getTrapAddress();
            }

            @Override
            public TrapLogDTO aggregate(TrapLogDTO oldBucket, TrapInformationWrapper newMessage) {
                final TrapInformation trapInfo = newMessage.getTrapInformation();
                if (oldBucket == null) { // no log created yet
                    oldBucket = new TrapLogDTO(distPoller.getId(), distPoller.getLocation(), trapInfo.getTrapAddress());
                }
                final TrapDTO trapDTO = new TrapDTO(trapInfo);

                // include the raw message, if configured
                if(config.isIncludeRawMessage()) {
                    byte[] rawMessage = convertToRawMessage(trapInfo);
                    if (rawMessage != null) {
                        trapDTO.setRawMessage(convertToRawMessage(trapInfo));
                    }
                }

                oldBucket.addMessage(trapDTO);
                return oldBucket;
            }
        };
    }

