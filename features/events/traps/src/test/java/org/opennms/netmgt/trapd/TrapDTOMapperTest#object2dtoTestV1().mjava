	@Test
	public void object2dtoTestV1() throws UnknownHostException {
		long testStartTime = new Date().getTime();

		PDUv1 snmp4JV1TrapPdu = new PDUv1();
		snmp4JV1TrapPdu.setType(PDU.V1TRAP);
		snmp4JV1TrapPdu.setEnterprise(new OID(".1.3.6.1.6.3.1.1.4.1.0"));
		snmp4JV1TrapPdu.setGenericTrap(10);
		snmp4JV1TrapPdu.setSpecificTrap(0);
		snmp4JV1TrapPdu.setTimestamp(5000);
		snmp4JV1TrapPdu.add(new VariableBinding(new OID("1.3.6.1.2.1.1.5.0"),
				new OctetString("mockhost")));
		snmp4JV1TrapPdu.add(new VariableBinding(new OID(".1.3.6.1.2.1.1.3"),
				new OctetString("mockhost")));
		snmp4JV1TrapPdu.add(new VariableBinding(new OID(
				".1.3.6.1.6.3.1.1.4.1.0"), new OctetString("mockhost")));

		InetAddress inetAddress= InetAddress.getByName("127.0.0.1");;
		TrapInformation snmp4JV1Trap = new Snmp4JTrapNotifier.Snmp4JV1TrapInformation(
				inetAddress, "public", snmp4JV1TrapPdu);


		TrapDTO trapDto = new TrapDTO(snmp4JV1Trap);
		System.out.println("trapDto is : " + trapDto);
		System.out.println("trapDto.getBody() is : " + trapDto.getRawMessage());
		System.out.println("trapDto.getCommunity() is : " + trapDto.getCommunity());

		assertEquals(".1.3.6.1.6.3.1.1.4.1.0", trapDto.getTrapIdentity().getEnterpriseId());
		assertEquals(10, trapDto.getTrapIdentity().getGeneric());
		assertEquals(0, trapDto.getTrapIdentity().getSpecific());
		assertEquals(InetAddressUtils.ONE_TWENTY_SEVEN, trapDto.getAgentAddress());
		assertEquals("public", trapDto.getCommunity());
		assertEquals(5000, trapDto.getTimestamp());
		// This is the "default" value from SNMP4J that indicates that the trap has not been forwarded
		assertEquals("v1", trapDto.getVersion());

		// Make sure that the message was created after the start of the test
		assertTrue(trapDto.getCreationTime() >= testStartTime);
	}

