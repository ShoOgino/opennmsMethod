	@Test
	public void object2dtoTest() throws UnknownHostException {
		long testStartTime = new Date().getTime();

		PDU snmp4JV2cTrapPdu = new PDU();
		snmp4JV2cTrapPdu.setType(PDU.TRAP);
		OID oid = new OID(".1.3.6.1.2.1.1.3.0");
		snmp4JV2cTrapPdu.add(new VariableBinding(SnmpConstants.sysUpTime, new TimeTicks(5000)));
		snmp4JV2cTrapPdu.add(new VariableBinding(SnmpConstants.snmpTrapOID, oid));
		snmp4JV2cTrapPdu.add(new VariableBinding(SnmpConstants.snmpTrapAddress,new IpAddress("127.0.0.1")));

		snmp4JV2cTrapPdu.add(new VariableBinding(new OID(oid), new OctetString("Trap Msg v2-1")));
		snmp4JV2cTrapPdu.add(new VariableBinding(new OID(oid), new OctetString("Trap Msg v2-2")));

		snmp4JV2cTrapPdu.add(new VariableBinding(new OID("1.3.6.1.2.1.1.5.0"),
				new OctetString("Trap v1 msg-1")));
		snmp4JV2cTrapPdu.add(new VariableBinding(new OID(".1.3.6.1.2.1.1.3"),
				new OctetString("Trap v1 msg-2")));
		snmp4JV2cTrapPdu.add(new VariableBinding(new OID(".1.3.6.1.6.3.1.1.4.1.1"), 
				new OctetString("Trap v1 msg-3")));
		snmp4JV2cTrapPdu.add(new VariableBinding(new OID(".1.3.6.1.4.1.733.6.3.18.1.5.0"),
				new Integer32(1))); 
		snmp4JV2cTrapPdu.add(new VariableBinding(new OID("1.3.6.1.2.1.1.5.0"),
				new Null())); 
		snmp4JV2cTrapPdu.add(new VariableBinding(new OID("1.3.6.1.2.1.1.5.1"),
				new Null(128)));
		snmp4JV2cTrapPdu.add(new VariableBinding(new OID("1.3.6.1.2.1.1.5.2"),
				new Null(129)));
		snmp4JV2cTrapPdu.add(new VariableBinding(new OID("1.3.6.1.2.1.1.5.3"),
				new Null(130)));

		TrapInformation snmp4JV2cTrap = new Snmp4JTrapNotifier.Snmp4JV2TrapInformation(
			InetAddressUtils.ONE_TWENTY_SEVEN,
			"public",
			snmp4JV2cTrapPdu,
			new BasicTrapProcessor()
		);

		OnmsDistPoller distPoller = new OnmsDistPoller();
		distPoller.setId(DistPollerDao.DEFAULT_DIST_POLLER_ID);
		distPoller.setLabel(DistPollerDao.DEFAULT_DIST_POLLER_ID);
		distPoller.setLocation("localhost");
		DistPollerDao distPollerDao = new DistPollerDaoMinion(distPoller);

		TrapObjectToDTOProcessor mapper = new TrapObjectToDTOProcessor();
		mapper.setDistPollerDao(distPollerDao);

		TrapDTO trapDto = mapper.object2dto(snmp4JV2cTrap);
		System.out.println("trapDto is : " + trapDto);
		System.out.println("trapDto.getBody() is : " + trapDto.getBody());
		System.out.println("trapDto.getCommunity() is : " + trapDto.getHeader(TrapDTO.COMMUNITY));

		TrapNotification snmp4JV2cTrap1 = TrapDTOToObjectProcessor.dto2object(trapDto);

		assertEquals(".1.3.6.1.2.1.1.3", ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getTrapIdentity().getEnterpriseId());
		assertEquals(6, ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getTrapIdentity().getGeneric());
		assertEquals(0, ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getTrapIdentity().getSpecific());
		assertEquals(InetAddressUtils.ONE_TWENTY_SEVEN, ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getAgentAddress());
		assertEquals("public", ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getCommunity());
		assertEquals("localhost", ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getLocation());
		assertEquals(DistPollerDao.DEFAULT_DIST_POLLER_ID, ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getSystemId());
		assertEquals(5000, ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getTimeStamp());
		// Trap and agent address are identical with SNMPv2
		assertEquals(InetAddressUtils.ONE_TWENTY_SEVEN, ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getTrapAddress());
		assertEquals("v2", ((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getVersion());

		// Make sure that the message was created after the start of the test
		assertTrue(((BasicTrapProcessor)snmp4JV2cTrap1.getTrapProcessor()).getCreationTime() >= testStartTime);
	}

