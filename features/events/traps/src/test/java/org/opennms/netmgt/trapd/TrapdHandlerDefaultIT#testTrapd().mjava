	@Test
	public void testTrapd() throws Exception {
		// Expect one SyslogConnection message to be broadcast on the messaging
		// channel
		MockEndpoint broadcastTrapd = getMockEndpoint(
				"mock:activemq:broadcastTrap", false);
		broadcastTrapd.setExpectedMessageCount(1);

		MockEndpoint trapHandler = getMockEndpoint("mock:seda:trapHandler",
				false);
		trapHandler.setExpectedMessageCount(1);

		// Create a mock SyslogdConfig
		TrapdConfigBean config = new TrapdConfigBean();
		config.setSnmpTrapPort(10514);
		config.setSnmpTrapAddress("127.0.0.1");
		config.setNewSuspectOnTrap(false);

		TrapQueueProcessor trapQProcessor = new TrapQueueProcessor();
		TrapProcessor trapProcess = new TrapProcessorImpl();
		trapProcess.setAgentAddress(InetAddressUtils.ONE_TWENTY_SEVEN);
		trapProcess.setCommunity("comm");
		trapProcess.setTimeStamp(System.currentTimeMillis());
		trapProcess.setTrapAddress(InetAddressUtils.ONE_TWENTY_SEVEN);

		// create instance of snmp4JV2cTrap
		PDU snmp4JV2cTrapPdu = new PDU();
		
		OID oid = new OID(".1.3.6.1.2.1.1.3.0");
		snmp4JV2cTrapPdu.add(new VariableBinding(SnmpConstants.sysUpTime, new TimeTicks(5000)));
		snmp4JV2cTrapPdu.add(new VariableBinding(SnmpConstants.snmpTrapOID, new OID(oid)));
		snmp4JV2cTrapPdu.add(new VariableBinding(SnmpConstants.snmpTrapAddress,
				new IpAddress("127.0.0.1")));

		snmp4JV2cTrapPdu.add(new VariableBinding(new OID(oid), new OctetString("Major")));
		snmp4JV2cTrapPdu.setType(PDU.NOTIFICATION);

		TrapNotification snmp4JV2cTrap = new Snmp4JTrapNotifier.Snmp4JV2TrapInformation(
				InetAddressUtils.ONE_TWENTY_SEVEN, new String("public"),
				snmp4JV2cTrapPdu, trapProcess);

		trapQProcessor.setTrapNotification(snmp4JV2cTrap);

		trapQProcessor.setEventConfDao(m_eventConfDao);

		// Send a TrapQProcessor
		template.sendBody("activemq:broadcastTrap", trapQProcessor.call());

		assertMockEndpointsSatisfied();

		// Check that the input for the seda:trapHandler endpoint matches
		// the TrapQProcessor that we simulated via ActiveMQ
		TrapQueueProcessor result = trapHandler.getReceivedExchanges().get(0)
				.getIn().getBody(TrapQueueProcessor.class);
		System.out.println("Result ++++:" + result);
	}

