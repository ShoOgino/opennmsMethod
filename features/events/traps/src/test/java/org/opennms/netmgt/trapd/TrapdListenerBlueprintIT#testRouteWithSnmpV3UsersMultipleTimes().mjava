	@Test
	@JUnitHttpServer(port = 10500)
	public void testRouteWithSnmpV3UsersMultipleTimes() throws Exception {
		DefaultCamelContext camelContext = new DefaultCamelContext();
		Set<Object> uniqueExchangesRouted = new HashSet<Object>();
		camelContext.addRoutes(new RouteBuilder() {
			@Override
			public void configure() throws Exception {
				JaxbUtilsUnmarshalProcessor jaxbUnmarshaller = new JaxbUtilsUnmarshalProcessor(TrapdConfiguration.class);
				TrapReceiverImpl trapReciever = new TrapReceiverImpl(getTrapConfiguration());
				from("timer:mytimer?period=100")
				.to("http://localhost:10500/trapd-configuration-withSnmpV3Users.html")
				.bean(jaxbUnmarshaller)
				.bean(TrapdConfigBean.class, "onUpdate")
				.bean(trapReciever, "setTrapdConfig").to("mock:result");
			}
		});
		camelContext.start();

		MockEndpoint mockEndPoint = camelContext.getEndpoint("mock:result", MockEndpoint.class);

		if (mockEndPoint.getExchanges().toArray().length == 10) {
			uniqueExchangesRouted.add(mockEndPoint.getExchanges().toArray());
			assertEquals(1, uniqueExchangesRouted);
		}
		ProducerTemplate producerTemplate = camelContext.createProducerTemplate();
		producerTemplate.start();

		mockEndPoint.assertIsSatisfied();

		producerTemplate.stop();
		camelContext.stop();
	}

