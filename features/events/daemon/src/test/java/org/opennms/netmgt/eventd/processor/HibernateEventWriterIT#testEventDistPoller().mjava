    /**
     * Tests writing events with various distPoller values.
     * 
     * @throws SQLException
     */
    @Test
    public void testEventDistPoller() throws Exception {
        String systemId = UUID.randomUUID().toString();
        EventBuilder bldr = new EventBuilder("testUei", "testSource");
        bldr.setDistPoller(systemId);
        bldr.setLogMessage("test");

        Event event = bldr.getEvent();
        assertEquals(new Integer(0), event.getDbid());
        m_eventWriter.process(bldr.getLog());
        assertTrue(event.getDbid() > 0);

        String minionId = jdbcTemplate.queryForObject("SELECT systemId FROM events LIMIT 1", String.class);
        assertEquals(DistPollerDao.DEFAULT_DIST_POLLER_ID, minionId);

        jdbcTemplate.execute("DELETE FROM events");
        jdbcTemplate.execute(String.format("INSERT INTO monitoringsystems (id, location, type) VALUES ('%s', 'Hello World', '%s')", systemId, OnmsMonitoringSystem.TYPE_MINION));

        event = bldr.getEvent();
        m_eventWriter.process(bldr.getLog());
        assertTrue(event.getDbid() > 0);

        minionId = jdbcTemplate.queryForObject("SELECT systemId FROM events LIMIT 1", String.class);
        assertEquals(systemId, minionId);
    }

