    @Test
    public void testWriteEventWithParameters() throws Exception {
        final EventBuilder builder = new EventBuilder("testUei", "testSource");
        builder.setLogDest(HibernateEventWriter.LOG_MSG_DEST_LOG_AND_DISPLAY);
        builder.addParam("param1", "value1");
        builder.addParam("param2", 1337);
        builder.addParam("param3", true);
        builder.addParam("param4", 23.42);
        builder.addParam("param4", 42.23); // Test for duplicated values - last should win

        // Test for long parameter name - see NMS-10525
        final String longParamName = "param5 - with a really long name - " + IntStream.range(1, 1024)
                .mapToObj(i ->"x")
                .collect(Collectors.joining());
        builder.addParam(longParamName, longParamName);

        m_eventWriter.process(builder.getLog());

        final List<Map<String, Object>> parameters = jdbcTemplate.queryForList("SELECT name, value FROM event_parameters WHERE eventID = " + builder.getEvent().getDbid() + " ORDER BY name");
        assertEquals(5, parameters.size());

        assertEquals("param1", parameters.get(0).get("name"));
        assertEquals("value1", parameters.get(0).get("value"));

        assertEquals("param2", parameters.get(1).get("name"));
        assertEquals("1337", parameters.get(1).get("value"));

        assertEquals("param3", parameters.get(2).get("name"));
        assertEquals("true", parameters.get(2).get("value"));

        assertEquals("param4", parameters.get(3).get("name"));
        assertEquals("42.23", parameters.get(3).get("value"));

        assertEquals(longParamName, parameters.get(4).get("name"));
        assertEquals(longParamName, parameters.get(4).get("value"));
    }

