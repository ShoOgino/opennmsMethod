    /**
     * Constructs a new instance of an server to handle incoming TCP
     * connections.
     *
     * @param parent
     *            The parent fiber
     * @param port
     *            The port to listen on.
     * @param address TODO
     * @param handlers a {@link java.util.List} object.
     * @throws java.io.IOException if any.
     */
    public TcpServer(Fiber parent, List<EventHandler> handlers, int port, InetAddress address) throws IOException {
        m_parent = parent;
        m_tcpPort = port;
        m_ipAddress = address;
        m_receivers = new LinkedList<TcpStreamHandler>();
        m_stop = false;
        m_context = null;
        m_handlers = handlers;
        m_logPrefix = org.opennms.netmgt.eventd.Eventd.LOG4J_CATEGORY;
        m_recsPerConn = TcpEventReceiver.UNLIMITED_EVENTS;

        try {
            m_tcpSock = new ServerSocket(m_tcpPort, 0, m_ipAddress);

            // Set SO_REUSEADDR so that we don't run into problems in
            // unit tests trying to rebind to an address where other tests
            // also bound. This shouldn't have any effect at runtime.
            try {
                LOG.debug("Setting socket SO_REUSEADDR to true");
                m_tcpSock.setReuseAddress(true);
            } catch (SocketException e) {
                LOG.warn("An I/O error occured while trying to set SO_REUSEADDR", e);
            }

        } catch (IOException e) {
            IOException n = new IOException("Could not create listening TCP socket on " + m_ipAddress + ":" + m_tcpPort + ": " + e);
            n.initCause(e);
            throw n;
        }
    }

