	@Test
	public void testSyslogd() throws Exception {

		SimpleRegistry registry = new SimpleRegistry();
		CamelContext syslogd = new DefaultCamelContext(registry);
		syslogd.addComponent("kafka", new KafkaComponent());
		syslogd.addRoutes(new RouteBuilder() {
			@Override
			public void configure() throws Exception {

				from("seda:handleMessage").convertBodyTo(SyslogConnection.class).process(new Processor() {
					@Override
					public void process(Exchange exchange) throws Exception {
						SyslogConnection connection = new SyslogConnection();
						connection.setSourceAddress(InetAddressUtils.ONE_TWENTY_SEVEN);
						exchange.getIn().setBody(connection);
						exchange.getIn().setHeader(KafkaConstants.PARTITION_KEY,simple("${body.hostname}"));
					}
				}).log("address:${body.sourceAddress}").log("port: ${body.port}").transform(simple("${body.byteBuffer}")).convertBodyTo(String.class).log(body().toString()).to("kafka:localhost:" + kafkaPort + "?topic=syslog;serializerClass=kafka.serializer.StringEncoder");

			}
		});

		syslogd.addRoutes(new RouteBuilder(){
			@Override
			public void configure() throws Exception {
				from("kafka:localhost:" + kafkaPort + "?topic=syslog&zookeeperHost=localhost&zookeeperPort=" + zookeeperPort + "&groupId=group1")
				.process(new Processor() {
					@Override
					public void process(Exchange exchange) throws Exception {
						String messageKey = "";
						if (exchange.getIn() != null) {
							Message message = exchange.getIn();
							Integer partitionId = (Integer) message.getHeader(KafkaConstants.PARTITION);
							String topicName = (String) message.getHeader(KafkaConstants.TOPIC);
							if (message.getHeader(KafkaConstants.KEY) != null) {
								messageKey = (String) message.getHeader(KafkaConstants.KEY);
							}
							Object data = message.getBody();

							System.out.println("topicName :: "
									+ topicName + " partitionId :: "
									+ partitionId + " messageKey :: "
									+ messageKey + " message :: "
									+ data + "\n");
						}
					}
				}).to("log:input");
			}
		});

		syslogd.start();

		ProducerTemplate template = syslogd.createProducerTemplate();
		SyslogConnection connection = new SyslogConnection();
		connection.setSourceAddress(InetAddressUtils.ONE_TWENTY_SEVEN);
		template.sendBody( "seda:handleMessage", connection);
	}

