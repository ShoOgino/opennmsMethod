    @SafeVarargs
    private static <T> boolean compare(final String field, final T... values) {
        T first = null;
        boolean needsFirst = true;
        for (T value : values) {
            if (needsFirst) {
                first = value;
                needsFirst = false;
            } else {
//                System.err.println("Comparing: " + first + " ?= " + string);
                if (first == null) {
                    if (value != null) {
                        LOG.warn("Different values for {}: {}", field, Arrays.stream(values).map(String::valueOf).collect(Collectors.joining(", ")));
                        return false;
                    }
                } else {
                    if (value instanceof Date) {
                        if (Math.abs(((Date)first).getTime() - ((Date)value).getTime()) > 1000) {
                            LOG.warn("Time values for {} differ by more than 1 second: {}", field, Arrays.stream(values).map(String::valueOf).collect(Collectors.joining(", ")));
                            return false;
                        } else {
                            continue;
                        }
                    } else if (!first.equals(value)) {
                        LOG.warn("Different values for {}: {}", field, Arrays.stream(values).map(String::valueOf).collect(Collectors.joining(", ")));
                        return false;
                    }
                }
            }
        }
        return true;
    }

