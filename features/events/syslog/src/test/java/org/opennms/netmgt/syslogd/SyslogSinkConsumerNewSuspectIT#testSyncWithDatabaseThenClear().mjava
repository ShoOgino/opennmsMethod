    @Test
    @Transactional
    public void testSyncWithDatabaseThenClear() throws Exception {
        // The cache has not been sync'd with the database yet
        assertEquals(0, m_cache.size());

        final Integer nodeId = m_databasePopulator.getNode1().getId();
        // One of the interfaces on node1
        final InetAddress addr = InetAddressUtils.addr("192.168.1.3");

        final byte[] bytes = ("<34>1 2010-08-19T22:14:15.000Z " + InetAddressUtils.str(addr) + " - - - - \uFEFFfoo0: load test 0 on tty1\0").getBytes();
        final DatagramPacket pkt = new DatagramPacket(bytes, bytes.length, addr, SyslogClient.PORT);

        // Sync the cache with the database
        m_cache.dataSourceSync();

        // The cache has entries from the database
        assertTrue(0 < m_cache.size());

        // Create a new SyslogConnection and call it to create the processed event
        Event e = dispatchAndCapture(new SyslogConnection(pkt, false));
        // The node is in the database so it should already be in the cache
        Long foundid = e.getNodeid();
        LOG.debug("Found node ID: {}", foundid);
        assertEquals("Node ID was not present: " + e.getNodeid(), Long.valueOf(nodeId.longValue()), foundid);

        // Clear the cache
        m_cache.clear();
        assertEquals(0, m_cache.size());

        // Create a new SyslogConnection and call it to create the processed event
        e = dispatchAndCapture(new SyslogConnection(pkt, false));
        // The node is in the database so it should already be in the cache
        foundid = e.getNodeid();
        LOG.debug("Found node ID: {}", foundid);
        assertTrue("Node ID was unexpectedly present: " + e.getNodeid(), foundid < 1);
    }

