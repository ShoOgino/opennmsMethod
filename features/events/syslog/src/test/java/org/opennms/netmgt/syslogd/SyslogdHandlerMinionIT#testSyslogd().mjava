	@Test(timeout=60000)
	public void testSyslogd() throws Exception {
		// Expect one SyslogConnection message to be broadcast on the messaging channel
		JmsQueueNameFactory factory = new JmsQueueNameFactory("Syslogd", "BroadcastSyslog");
		MockEndpoint broadcastSyslog = getMockEndpoint("mock:queuingservice:" + factory.getName(), false);

		// Create a mock SyslogdConfig
		SyslogConfigBean config = new SyslogConfigBean();
		config.setSyslogPort(10514);
		config.setNewSuspectOnMessage(false);
		config.setParser("org.opennms.netmgt.syslogd.CustomSyslogParser");
		config.setForwardingRegexp("^.*\\s(19|20)\\d\\d([-/.])(0[1-9]|1[012])\\2(0[1-9]|[12][0-9]|3[01])(\\s+)(\\S+)(\\s)(\\S.+)");
		config.setMatchingGroupHost(6);
		config.setMatchingGroupMessage(8);
		config.setDiscardUei("DISCARD-MATCHING-MESSAGES");

		int numberOfMessages = 20;
		SyslogConnection[] conns = new SyslogConnection[numberOfMessages];
		for (int i = 0; i < numberOfMessages; i++) {
			conns[i] = new SyslogConnection(InetAddressUtils.ONE_TWENTY_SEVEN, 2000, ByteBuffer.wrap("<34>main: 2010-08-19 localhost foo0: load test 0 on tty1\0".getBytes("US-ASCII")), config, DistPollerDao.DEFAULT_DIST_POLLER_ID);
		}

		broadcastSyslog.setExpectedMessageCount(numberOfMessages);

		// Warm up (open JMS connections, etc)
		long startTime = System.currentTimeMillis();
		for (int i = 0; i < numberOfMessages; i++) {
			template.asyncSendBody("seda:handleMessage", conns[i]);
		}
		long endTime = System.currentTimeMillis();
		LOG.info("Warm-up messages took {}ms", endTime - startTime);
		assertMockEndpointsSatisfied();
		resetMocks();


		numberOfMessages = 5000;
		conns = new SyslogConnection[numberOfMessages];
		for (int i = 0; i < numberOfMessages; i++) {
			conns[i] = new SyslogConnection(InetAddressUtils.ONE_TWENTY_SEVEN, 2000, ByteBuffer.wrap("<34>main: 2010-08-19 localhost foo0: load test 0 on tty1\0".getBytes("US-ASCII")), config, DistPollerDao.DEFAULT_DIST_POLLER_ID);
		}

		broadcastSyslog.setExpectedMessageCount(numberOfMessages);

		// Send a SyslogConnection to seda:handleMessage
		startTime = System.currentTimeMillis();
		for (int i = 0; i < numberOfMessages; i++) {
			template.asyncSendBody("seda:handleMessage", conns[i]);
		}
		endTime = System.currentTimeMillis();
		LOG.info("Test messages took {}ms", endTime - startTime);

		assertMockEndpointsSatisfied();

		endTime = System.currentTimeMillis();
		LOG.info(
			"Message transmission took {}ms ({} events per second)", 
			endTime - startTime, 
			Math.round((double)numberOfMessages / ((double)(endTime - startTime) / 1000.0))
		);
	}

