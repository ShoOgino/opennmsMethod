    /**
     * {@inheritDoc}
     *
     * This method is invoked by the EventIpcManager when a new event is
     * available for processing. Each message is examined for its Universal
     * Event Identifier and the appropriate action is taking based on each
     * UEI.
     */
    @Override
    @Transactional
    public void onEvent(Event event) {

        String eventUei = event.getUei();

        if (EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI.equals(eventUei)) {
            LOG.debug("Received event: {}", eventUei);
            int nodeId = event.getNodeid().intValue();
            OnmsNode node = m_nodeDao.get(nodeId);
            // add to known nodes
            m_syslogdIPMgr.setNodeId(node.getLocation().getLocationName(), event.getInterfaceAddress(), nodeId);
            LOG.debug("Added {} to known node list", event.getInterface());
        } else if (EventConstants.INTERFACE_DELETED_EVENT_UEI.equals(eventUei)) {
            LOG.debug("Received event: {}", eventUei);
            int nodeId = event.getNodeid().intValue();
            OnmsNode node = m_nodeDao.get(nodeId);
            // remove from known nodes
            m_syslogdIPMgr.removeNodeId(node.getLocation().getLocationName(), event.getInterfaceAddress());
            LOG.debug("Removed {} from known node list", event.getInterface());
        } else if (EventConstants.INTERFACE_REPARENTED_EVENT_UEI.equals(eventUei)) {
            LOG.debug("Received event: {}", eventUei);
            int nodeId = event.getNodeid().intValue();
            OnmsNode node = m_nodeDao.get(nodeId);
            // add to known nodes
            m_syslogdIPMgr.setNodeId(node.getLocation().getLocationName(), event.getInterfaceAddress(), nodeId);
            LOG.debug("Reparented {} to known node list", event.getInterface());
        }
    }

