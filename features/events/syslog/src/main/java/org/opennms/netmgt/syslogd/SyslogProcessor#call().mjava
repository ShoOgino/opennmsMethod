    /**
     * The event processing execution context.
     */
    @Override
    public Callable<Void> call() {
        // get a logger
        try {
            if (LOG.isTraceEnabled())  {
                LOG.trace("Processing a syslog to event dispatch", m_event.toString());
                String uuid = m_event.getEvent().getUuid();
                LOG.trace("Event {");
                LOG.trace("  uuid  = {}", (uuid != null && uuid.length() > 0 ? uuid : "<not-set>"));
                LOG.trace("  uei   = {}", m_event.getEvent().getUei());
                LOG.trace("  src   = {}", m_event.getEvent().getSource());
                LOG.trace("  iface = {}", m_event.getEvent().getInterface());
                LOG.trace("  time  = {}", m_event.getEvent().getTime());
                LOG.trace("  Msg   = {}", m_event.getEvent().getLogmsg().getContent());
                LOG.trace("  Dst   = {}", m_event.getEvent().getLogmsg().getDest());
                List<Parm> parms = (m_event.getEvent().getParmCollection() == null ? null : m_event.getEvent().getParmCollection());
                if (parms != null) {
                    LOG.trace("  parms {");
                    for (Parm parm : parms) {
                        if ((parm.getParmName() != null)
                                && (parm.getValue().getContent() != null)) {
                            LOG.trace("    ({}, {})", parm.getParmName().trim(), parm.getValue().getContent().trim());
                        }
                    }
                    LOG.trace("  }");
                }
                LOG.trace("}");
            }

            EventIpcManagerFactory.getIpcManager().sendNow(m_event.getEvent());

            if (m_NewSuspectOnMessage && !m_event.getEvent().hasNodeid()) {
                LOG.trace("Syslogd: Found a new suspect {}", m_event.getEvent().getInterface());
                sendNewSuspectEvent(m_localAddr, m_event.getEvent().getInterface());
            }

        } catch (Throwable t) {
            LOG.error("Unexpected error processing SyslogMessage - Could not send", t);
        }

        // This task is the terminal task of syslogd so it doesn't return a Callable
        return null;
    }

