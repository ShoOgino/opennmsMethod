		public CompletableFuture<Event> parse(ByteBuffer incoming, ExecutorService executor) {

			// Put all mutable parts of the parse operation into a state object
			final ParserState state = new ParserState(incoming, new EventBuilder("uei.opennms.org/test", this.getClass().getSimpleName()));

			CompletableFuture<ParserState> future = CompletableFuture.completedFuture(state);

			// Apply each parse stage to the message
			for (ParserStage stage : m_stages) {
				future = future.thenApply(stage::apply);
			}

			//future.exceptionally(e -> { /* DO SOMETHING */ return null; });

			return future.thenApply(s -> {
				return s.builder.getEvent();
			});
		}

