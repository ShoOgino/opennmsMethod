	@Override
	public CompletableFuture<Event> parse(ByteBuffer incoming) {

		// Put all mutable parts of the parse operation into a state object
		final ParserState state = new ParserState(incoming, new EventBuilder());

		CompletableFuture<ParserState> future = CompletableFuture.completedFuture(state);

		// Apply each parse stage to the message
		for (ParserStage stage : m_stages) {
			future = future.thenApply(stage::apply);
		}

		//future.exceptionally(e -> { /* DO SOMETHING */ return null; });

		return future.thenApply(s -> {
			if (s == null) {
				return null;
			} else {
				return s.builder.getEvent();
			}
		});
	}

