    /**
     * <p>start</p>
     */
    @Override
    public synchronized void start() {
        try {
            switch(IMPLEMENTATION) {
            case NIO:
            case NIO_DISRUPTOR:
                // NIO SyslogReceiver implementation

                DatagramChannel channel = DatagramChannel.open();
                if (m_dgIp != null && m_dgIp.length() != 0) {
                    channel.socket().bind(new InetSocketAddress(InetAddressUtils.addr(m_dgIp), m_dgPort));
                } else {
                    channel.socket().bind(new InetSocketAddress(m_dgPort));
                }

                if (IMPLEMENTATION == SyslogReceiverImpl.NIO) {
                    m_receiver = new SyslogReceiverNioThreadPoolImpl(
                        channel,
                        m_config
                    );
                } else {
                    m_receiver = new SyslogReceiverNioDisruptorImpl(
                        channel,
                        m_config
                    );
                }
                break;
            case NETTY:
                // Camel Netty SyslogReceiver implementation

                m_receiver = new SyslogReceiverCamelNettyImpl(
                    (m_dgIp != null && m_dgIp.length() != 0) ? 
                        InetAddressUtils.addr(m_dgIp) :
                        InetAddressUtils.getLocalHostAddress(),
                    m_dgPort,
                    m_config
                );
                break;
            case JAVA_NET:
            default:
                // java.net SyslogReceiver implementation

                // The UDP socket for receipt of packets
                DatagramSocket dgSock;

                if (m_dgIp != null && m_dgIp.length() != 0) {
                    dgSock = new DatagramSocket(m_dgPort, InetAddressUtils.addr(m_dgIp));
                } else {
                    dgSock = new DatagramSocket(m_dgPort);
                }

                m_receiver = new SyslogReceiverJavaNetImpl(
                    dgSock,
                    m_config
                );
            }

        } catch (IOException e) {
            throw new java.lang.reflect.UndeclaredThrowableException(e);
        }

        Thread rThread = new Thread(m_receiver, "Syslog Event Receiver["
                + getIpAddress() + ":" + m_dgPort + "]");

        try {
            rThread.start();

        } catch (RuntimeException e) {
            rThread.interrupt();
            throw e;
        }
    }

