    /**
     * The execution context.
     */
    @Override
    public void run() {

        // Get a log instance
        Logging.putPrefix(Syslogd.LOG4J_CATEGORY);

        SimpleRegistry registry = new SimpleRegistry();
        m_camel = new DefaultCamelContext(registry);
        try {
            m_camel.addRoutes(new RouteBuilder() {
                @Override
                public void configure() throws Exception {
                    String from = String.format("netty:udp://%s:%s?sync=false&allowDefaultCodec=false&receiveBufferSize=%d&connectTimeout=%d",
                        InetAddressUtils.str(m_host),
                        m_port,
                        Integer.MAX_VALUE,
                        SOCKET_TIMEOUT
                    );

                    from(from)
                    //.convertBodyTo(java.nio.ByteBuffer.class)
                    .process(new Processor() {
                        @Override
                        public void process(Exchange exchange) throws Exception {
                            ChannelBuffer buffer = exchange.getIn().getBody(ChannelBuffer.class);
                            // NettyConstants.NETTY_REMOTE_ADDRESS is a SocketAddress type but because 
                            // we are listening on an InetAddress, it will always be of type InetAddressSocket
                            InetSocketAddress source = (InetSocketAddress)exchange.getIn().getHeader(NettyConstants.NETTY_REMOTE_ADDRESS); 
                            WaterfallExecutor.waterfall(m_executor, new SyslogConnection(source.getAddress(), source.getPort(), buffer.toByteBuffer(), m_config));
                        }
                    });
                }
            });

            m_camel.start();
        } catch (Exception e) {
            LOG.error("Could not configure Camel routes for syslog receiver", e);
        }
    }

