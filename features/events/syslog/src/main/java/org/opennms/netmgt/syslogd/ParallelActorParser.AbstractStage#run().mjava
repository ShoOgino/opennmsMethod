		public final void run() {
			while(true) {
				try {
					m_incoming.mark();
					char c = (char)m_incoming.get();
					//System.err.println(c);
					switch (acceptChar(c)) {
						case CONTINUE:
							continue;
						case COMPLETE_AFTER_CONSUMING:
							if (m_resultConsumer != null) {
								m_resultConsumer.accept(getValue());
							}
							return;
						case COMPLETE_WITHOUT_CONSUMING:
							// Put the char back on the deque
							//m_incoming.putFirst(c);
							m_incoming.reset();
							if (m_resultConsumer != null) {
								m_resultConsumer.accept(getValue());
							}
							return;
						case CANCEL:
							throw new CancellationException(getClass().getSimpleName() + " match failed");
					}
					/*
				} catch (InterruptedException e) {
					CancellationException ex = new CancellationException("Unexpected InterruptedException while parsing: " + e.getMessage());
					ex.initCause(e);
					throw ex;
					*/
				} finally {}
			}
		}

