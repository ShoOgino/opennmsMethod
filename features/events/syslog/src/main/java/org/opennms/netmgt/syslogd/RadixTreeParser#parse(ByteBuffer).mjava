	@Override
	public CompletableFuture<Event> parse(ByteBuffer incoming) {
		ParserState state = new ParserState(incoming, new EventBuilder());

		// TODO: Use better collection than ArrayList?
		final List<CompletableFuture<ParserState>> finishedFutures = new ArrayList<>();

		// Top of future tree is parser state
		final CompletableFuture<ParserState> parent = CompletableFuture.completedFuture(state);

		// Recursively construct the parser tree
		addStageFutures(finishedFutures, parent, tree);

		return firstNonNullResult(finishedFutures).thenApply(s -> {
			if (s == null) {
				return null;
			} else {
				return s.builder.getEvent();
			}
		});
	}

