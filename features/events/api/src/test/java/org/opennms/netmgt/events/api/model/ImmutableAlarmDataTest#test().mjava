    @Test
    public void test() {
        UpdateField updateField1 = new UpdateField();
        updateField1.setValueExpression("value-1");
        updateField1.setUpdateOnReduction(true);
        updateField1.setFieldName("field-1");

        List<UpdateField> updateFields = new ArrayList<>();
        updateFields.add(updateField1);

        ManagedObject managedObject = new ManagedObject();
        managedObject.setType("managed-object-type");

        AlarmData alarmData = new AlarmData();
        alarmData.setReductionKey("reduction-key");
        alarmData.setAlarmType(1);
        alarmData.setClearKey("clear-key");
        alarmData.setAutoClean(false);
        alarmData.setX733AlarmType("alarm-type");
        alarmData.setX733ProbableCause(0);
        alarmData.setUpdateField(updateFields);
        alarmData.setManagedObject(managedObject);

        // Mutable to Immutable
        IAlarmData immutableAlarmData = ImmutableMapper.fromMutableAlarmData(alarmData);

        // Attempt to add to immutable list.
        try {
            immutableAlarmData.getUpdateFieldList().add(
                    ImmutableUpdateField.newBuilder().build());
            fail();
        } catch (Exception e) {
            // Expected...
        }

        // Immutable to Mutable
        AlarmData convertedAlarmData = AlarmData.copyFrom(immutableAlarmData);

        String expectedXml = XmlTest.marshalToXmlWithJaxb(alarmData);
        String convertedXml = XmlTest.marshalToXmlWithJaxb(convertedAlarmData);
        XmlTest.assertXmlEquals(expectedXml, convertedXml);
    }

