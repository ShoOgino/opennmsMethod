	 /**
	  * Recursively adds all items in the includedItems list to the
	  * filteredChildren map in the same order as they are in the children map.
	  * Starts from parentItemId and recurses down as long as child items that
	  * should be included are found.
	  * 
	  * @param parentItemId
	  *            The item id to start recurse from. Not added to a
	  *            filteredChildren list
	  * @param includedItems
	  *            Set containing the item ids for the items that should be
	  *            included in the filteredChildren map
	  */
	 private void addFilteredChildrenRecursively(Vertex parentItemId, Set<Vertex> includedItems) {
		 Collection<Vertex> childList = m_graphContainer.getBaseTopology().getChildren(parentItemId, m_graphContainer.getCriteria());
		 if (childList == null) {
			 return;
		 }

		 for (Vertex childItemId : childList) {
			 if (includedItems.contains(childItemId)) {
				 addFilteredChild(parentItemId, childItemId);
				 addFilteredChildrenRecursively(childItemId, includedItems);
			 }
		 }
	 }

