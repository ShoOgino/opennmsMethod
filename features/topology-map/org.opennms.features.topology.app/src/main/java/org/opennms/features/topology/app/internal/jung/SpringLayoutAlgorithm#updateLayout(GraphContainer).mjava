	public void updateLayout(final GraphContainer graphContainer) {
		
		TopoGraph g = getGraph((SimpleGraphContainer) graphContainer);
		
		int szl = g.getSemanticZoomLevel();
		
		
		SparseGraph<Object, TopoEdge> jungGraph = new SparseGraph<Object, TopoEdge>();

		Collection<Object> vertices = g.getGraphContainer().getDisplayVertexIds(szl);

		for(Object v : vertices) {
			jungGraph.addVertex(v);
		}
		
		List<TopoEdge> edges = g.getEdges(szl);
		
		for(TopoEdge e : edges) {
			jungGraph.addEdge(e, e.getSource().getItemId(), e.getTarget().getItemId());
		}
		

		
		SpringLayout<Object, TopoEdge> layout = new SpringLayout<Object, TopoEdge>(jungGraph);
		layout.setInitializer(new Transformer<Object, Point2D>() {
			public Point2D transform(Object v) {
				return new Point(graphContainer.getX(v), graphContainer.getY(v));
			}
		});
		layout.setSize(selectLayoutSize(graphContainer));
		layout.setRepulsionRange(LAYOUT_REPULSION);
		
		int count = 0;
		while(!layout.done() && count < 700) {
			layout.step();
			count++;
		}
		
		
		for(Object v : vertices) {
			graphContainer.setX(v, (int)layout.getX(v));
			graphContainer.setY(v, (int)layout.getY(v));
		}
		
		
		
		
	}

