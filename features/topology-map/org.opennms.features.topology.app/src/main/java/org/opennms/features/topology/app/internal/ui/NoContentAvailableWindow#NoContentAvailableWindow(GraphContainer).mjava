    public NoContentAvailableWindow(final GraphContainer graphContainer) {
        super("No focus defined");

        setId("no-focus-defined-window");
        setResizable(false);
        setClosable(false);
        setDraggable(true);
        setModal(false);
        setWidth(500, Sizeable.Unit.PIXELS);
        setHeight(300, Sizeable.Unit.PIXELS);

        Label label = new Label("This means" +
                "<ul>" +
                "<li>the last vertex was removed from focus or</li>" +
                "<li>no default focus is available.</li>" +
                "</ul>" +
                "To add a vertex to focus" +
                "<ul>" +
                "<li>manually add a vertex to focus via the search box</li>" +
                "<li>use the default focus</li>" +
                "</ul>",  ContentMode.HTML);

        final HorizontalLayout defaultLayout = new HorizontalLayout();
        defaultLayout.setMargin(true);
        defaultLayout.setSpacing(true);
        noDefaultsAvailable = new Label("No vertices found.<br/>Please add vertices manually.", ContentMode.HTML);
        noDefaultsAvailable.setVisible(false);

        Button defaultFocusButton = new Button("Use Default Focus");
        defaultFocusButton.setId("defaultFocusBtn");
        defaultFocusButton.addClickListener(new Button.ClickListener() {

            @Override
            public void buttonClick(Button.ClickEvent event) {
                List<Criteria> defaultCriteriaList = graphContainer.getTopologyServiceClient().getDefaults().getCriteria();
                if (defaultCriteriaList != null) {
                    defaultCriteriaList.forEach(eachCriteria -> graphContainer.addCriteria(eachCriteria));
                    graphContainer.redoLayout();
                    noDefaultsAvailable.setVisible(false);
                } else {
                    noDefaultsAvailable.setVisible(true);
                }
            }
        });
        defaultLayout.setMargin(true);
        defaultLayout.addComponent(defaultFocusButton);
        defaultLayout.addComponent(noDefaultsAvailable);

        VerticalLayout contentLayout = new VerticalLayout();
        contentLayout.setMargin(true);
        contentLayout.addComponent(label);
        contentLayout.addComponent(defaultLayout);

        setContent(contentLayout);
    }

