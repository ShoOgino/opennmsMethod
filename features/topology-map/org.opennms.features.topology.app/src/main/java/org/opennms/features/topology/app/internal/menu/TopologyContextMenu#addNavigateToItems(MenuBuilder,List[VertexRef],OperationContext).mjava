	// adds menu items for the "navigate to" operation
	private static void addNavigateToItems(MenuBuilder menuBuilder, List<VertexRef> targets, OperationContext operationContext) {
		if (!targets.isEmpty()) {
			menuBuilder.createPath("Navigate To");

			final GraphContainer graphContainer = operationContext.getGraphContainer();
			// Find the vertices in other graphs that this vertex links to
			final Collection<VertexRef> oppositeVertices = graphContainer.getTopologyServiceClient().getOppositeVertices(targets.get(0));

			// Find all namespaces
			final Set<String> targetNamespaces = oppositeVertices.stream().map(VertexRef::getNamespace).collect(Collectors.toSet());

			// Find provider for namespaces and add menu entry
			for (String eachTargetNamespace : targetNamespaces) {
				// Find the graph provider for the target namespace
				final GraphProvider targetGraphProvider = graphContainer.getTopologyServiceClient().getGraphProviders().stream()
						.filter(g -> g.getNamespace().equals(eachTargetNamespace))
						.findFirst().orElse(null);
				if (targetGraphProvider == null) {
					LOG.warn("No graph provider found for namespace '{}'.", eachTargetNamespace);
					continue;
				}
				NavigationMenuItem item = new NavigationMenuItem(targetGraphProvider, targets.get(0));
				menuBuilder.addMenuItem(item, "Navigate To");
			}

		}
	}

