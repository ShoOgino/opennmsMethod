	/**
	 * Sets the graph, updates the ViewRenderer if need be and 
	 * updates all graphUpdateListeners
	 * @param graph
	 */
	private void setGraph(GWTGraph graph) {
		m_graph = graph;
		updateGraphUpdateListeners();
		if(isPanToSelection()) {
		    centerSelection(m_graph.getVertices());
		} else if(isFitToView()) {
		    fitMapToView(m_graph.getVertices());
		}
        
		//Set the ViewRenderer to the Animated one if it isn't already
		if(getViewRenderer() != m_graphDrawer) {
		    setTopologyViewRenderer(m_graphDrawer);
		}
        
        final D3 selectedVertices = D3.d3().selectAll(GWTVertex.SELECTED_VERTEX_CLASS_NAME);
        selectedVertices.each(new Handler<GWTVertex>() {
        
            @Override
            public void call(GWTVertex gwtVertex, int index) {
                SVGGElement vertex = D3.getElement(selectedVertices, index).cast();
                vertex.getParentElement().appendChild(vertex);
            }
        });
		
        
	}

