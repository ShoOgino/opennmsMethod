	 /**
	  * Scans the itemId and all its children for which items should be included
	  * when filtering. All items which passes the filters are included.
	  * Additionally all items that have a child node that should be included are
	  * also themselves included.
	  * 
	  * @param itemId
	  * @param includedItems
	  * @return true if the itemId should be included in the filtered container.
	  */
	 private boolean filterIncludingParents(Vertex itemId,
			 HashSet<Vertex> includedItems) {
		 boolean toBeIncluded = passesFilters(itemId);

		 Collection<? extends Vertex> childList = m_graphContainer.getBaseTopology().getChildren(vRef(itemId));
		 if (childList != null) {
			 for (Vertex childItemId : childList) {
				 toBeIncluded |= filterIncludingParents(childItemId, includedItems);
			 }
		 }

		 if (toBeIncluded) {
			 includedItems.add(itemId);
		 }
		 return toBeIncluded;
	 }

