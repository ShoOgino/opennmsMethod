    private void rebuildGraph() {
    	
    	List<Vertex> displayVertices = new ArrayList<Vertex>();
    	
    	for(Vertex v : m_mergedGraphProvider.getVertices(getCriteria())) {
    		int vzl = m_mergedGraphProvider.getSemanticZoomLevel(v);
    		if (vzl == getSemanticZoomLevel() || (vzl < getSemanticZoomLevel() && !m_mergedGraphProvider.hasChildren(v))) {
    			displayVertices.add(v);
			}
    	}
    	
    	Set<Edge> displayEdges = new HashSet<Edge>();

        final List<Edge> edges = m_mergedGraphProvider.getEdges(getCriteria());
        for(Edge e : edges) {
    		VertexRef source = e.getSource().getVertex();
    		VertexRef target = e.getTarget().getVertex();

    		Vertex displaySource = getDisplayVertex(source);
			Vertex displayTarget = getDisplayVertex(target);
			if (displaySource == null || displayTarget == null) {
				// skip this one
			}
			else if (refEquals(displaySource, displayTarget)) {
				// skip this one
			}
			else if (refEquals(source, displaySource) && refEquals(target, displayTarget)) {
				displayEdges.add(e);
			} else {
				// we may need to create a pseudo edge to represent this edge
				String pseudoId = pseudoId(displaySource, displayTarget);
				PseudoEdge pEdge = new PseudoEdge("pseudo-"+e.getNamespace(), pseudoId, e.getStyleName(), displaySource, displayTarget);
                //This is a hack to get around the device A to device Z label in NCS Path when going through groups
                if(e.getStyleName().equals("ncs edge direct")){
                    pEdge.setTooltipText(e.getTooltipText());
                }
				displayEdges.add(pEdge);
			}
    	}

        if (m_graph == null) {
            m_graph = new VEGraph(displayVertices, displayEdges);
        } else {
            m_graph.updateLayout(displayVertices, displayEdges);
        }

        unselectVerticesWhichAreNotVisibleAnymore();

    	fireGraphChanged();
    	
    }

