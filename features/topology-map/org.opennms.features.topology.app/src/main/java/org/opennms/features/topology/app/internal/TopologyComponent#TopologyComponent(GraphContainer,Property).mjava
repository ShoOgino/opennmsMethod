	public TopologyComponent(GraphContainer dataSource, Property scale) {
		setGraph(dataSource.getGraph());
		
		m_graphContainer = dataSource;

		m_graphContainer.getSelectionManager().addSelectionListener(new SelectionListener() {
			
			@Override
			public void selectionChanged(SelectionManager selectionManager) {
			    if(selectionManager.getSelectedVertexRefs().size() > 0) {
    			    Collection<? extends Vertex> visible = m_graphContainer.getGraph().getDisplayVertices();
    			    Collection<VertexRef> selected = selectionManager.getSelectedVertexRefs();
    			    Collection<VertexRef> vRefs = new ArrayList<VertexRef>();
    			    for(VertexRef vRef : selected) {
    			        if(visible.contains(vRef)) {
    			            vRefs.add(vRef);
    			        }
    			    }
    			    m_boundingBox = m_graphContainer.getGraph().getLayout().computeBoundingBox(vRefs);
    				
			    }else {
			        m_boundingBox = null;
			    }
			    requestRepaint();
			}
			
		});

		m_graphContainer.addChangeListener(this);
		
		setScaleDataSource(scale);
				
	}

