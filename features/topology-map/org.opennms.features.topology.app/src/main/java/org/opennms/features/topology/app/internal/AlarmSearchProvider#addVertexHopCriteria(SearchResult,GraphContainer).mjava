    /**
     * Creates a criteria that provides <VertexRefs> matching the Alarm query from the users query
     * stored in the <SearchResult> that was created by this class during the query method.  The SearchResult 
     * and the Criterion use the AlarmID as the ID for dereferencing in the container.
     */
	@Override
	public void addVertexHopCriteria(SearchResult searchResult, GraphContainer container) {
        LOG.debug("SearchProvider.addVertexHopCriteria: called with search result: '{}'", searchResult);
        
        AlarmSearchResult aResult = new AlarmSearchResult(searchResult);
        
        String id = searchResult.getId();
        String query = searchResult.getQuery();
        
        if (!OnmsSeverity.get(query).equals(OnmsSeverity.INDETERMINATE)) {
            aResult.setSeverityQuery(true);
        } else {
            aResult.setAlarmId(Integer.valueOf(id));
            aResult.setSeverityQuery(false);
        }

        container.addCriteria(new AlarmHopCriteria(aResult, alarmProvider));

        LOG.debug("SearchProvider.addVertexHop: adding hop criteria {}.", new AlarmHopCriteria(aResult, alarmProvider));
	}

