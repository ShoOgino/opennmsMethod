    private void zoomToFit(final BoundingRect rect) {
        
        SVGElement svg = getSVGElement();
        final int svgWidth = svg.getParentElement().getOffsetWidth(); 
        final int svgHeight = svg.getParentElement().getOffsetHeight();
        
        double svgCenterX = svgWidth/2;
        double svgCenterY = svgHeight/2;
        
        double translateX = (svgCenterX - rect.getCenterX());
        double translateY = (svgCenterY - rect.getCenterY());
        
      //transform="translate( -centerX*(factor-1), -centerY*(factor-1) ) scale(factor)
        final double scale = Math.min(svgWidth/(double)rect.getWidth(), svgHeight/(double)rect.getHeight());
        SVGMatrix transform = svg.createSVGMatrix()
            .translate(translateX, translateY)
            .translate(-rect.getCenterX()*(scale-1), -rect.getCenterY()*(scale-1)) 
            .scale(scale)
            ;
                   
        String transformVal = matrixTransform(transform);
        
        final double strokeWidth = 2 * (1/scale);
        //D3.d3().selectAll("line").style("opacity", "1").transition().duration(2000).style("stroke-width", "" + strokeWidth);
        
        D3.d3().select(getSVGViewPort()).transition().duration(2000).attr("transform", transformVal).each("end", new AnonymousFunc() {
            
            @Override
            public void call() {
                setMapScaleNow(scale);
                D3.d3().selectAll("line").style("opacity", "1").transition().duration(2000).style("stroke-width", "" + strokeWidth);
            }
        });
        
    }

