    /**
     * Centers the view on a selection
     */
    public void centerSelection() {
        
        final D3 selection = D3.d3().selectAll(GWTVertex.SELECTED_VERTEX_CLASS_NAME);
        
        selection.each(new Handler<GWTVertex>() {

            @Override
            public void call(GWTVertex vertex, int index) {
                // TODO Auto-generated method stub
                consoleLog("showing selected vertex: " + vertex.getLabel());
                
                SVGGElement viewPort = m_svgViewPort.cast();
                SVGMatrix matrixTf = viewPort.getCTM();
                
                SVGGElement elem = D3.d3().getElement(selection, index).cast();
                SVGMatrix selectedVertexMatrix = elem.createSVGMatrix();
                
                
                ClientRect rect = getSVGElement().getBoundingClientRect();
                
                SVGPoint svgCenterPoint = getSVGElement().createSVGPoint();
                svgCenterPoint.setX(rect.getWidth()/2);
                svgCenterPoint.setY(rect.getHeight()/2);
                
                matrixTf.inverse().translate(svgCenterPoint.getX(), svgCenterPoint.getY());
                matrixTf.translate(matrixTf.getX() - selectedVertexMatrix.getX(), matrixTf.getY() - selectedVertexMatrix.getY());
                
                viewPort.setAttribute("transform", matrixTransform(matrixTf));
                
                makeGlobal("selectedVertexMatrix", selectedVertexMatrix);
                makeGlobal("svgCenterPoint", svgCenterPoint);
                makeGlobal("matrixTf", matrixTf);
            }
        });
    }

