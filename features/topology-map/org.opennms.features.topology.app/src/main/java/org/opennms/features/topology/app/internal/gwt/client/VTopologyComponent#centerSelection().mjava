    /**
     * Centers the view on a selection
     */
    public void centerSelection() {
        
        final D3 selection = D3.d3().select(GWTVertex.SELECTED_VERTEX_CLASS_NAME);
        final SVGGElement vertexElem = D3.d3().getElement(selection,0).cast();
        
        selection.each(new Handler<GWTVertex>() {

            @Override
            public void call(GWTVertex vertex, int index) {
                // TODO Auto-generated method stub
                SVGMatrix viewportMatrix = getSVGViewPort().getCTM();
                
                SVGMatrix vertexCTM = vertexElem.getCTM();
                ClientRect vertexClientRect = vertexElem.getBoundingClientRect();
                
                double vertexCenterX = vertexCTM.getE();
                double vertexCenterY = vertexCTM.getF();
                
                double svgCenterX = Math.abs(getSVGElement().getCTM().getE() - getSVGElement().getBoundingClientRect().getWidth()/2);
                double svgCenterY = Math.abs(getSVGElement().getCTM().getF() - getSVGElement().getBoundingClientRect().getHeight()/2);
                
                double scaleFactor = viewportMatrix.getA();
                double percent = 100 / (scaleFactor * 100);
                double translateX = (svgCenterX - vertexCenterX) * percent;
                double translateY = (svgCenterY - vertexCenterY) * percent;
                
                D3.d3().select(getSVGViewPort()).attr("transform", matrixTransform(viewportMatrix.translate(translateX, translateY)));
            }
        });
    }

