    public void setFocused(List<SearchSuggestion> focused) {
        m_focusedContainer.clear();
        log(focused);
        for(SearchSuggestion searchSuggestion : focused){
            SearchTokenField field = new SearchTokenField(searchSuggestion);
            field.setRemoveCallback(new SearchTokenField.RemoveCallback() {
                @Override
                public void onRemove(SearchSuggestion searchSuggestion) {
                    m_connector.removeFocused(searchSuggestion);
                }
            });
            field.setCenterOnCallback(new DefaultCenterOnCallback());
            if (searchSuggestion.isCollapsible()) {
                field.setCollapseCallback(new CollapseCallback() {
                    @Override
                    public void onCollapse(SearchSuggestion searchSuggestion) {
                        m_connector.toggleSuggestionCollapse(searchSuggestion);
                        // Update the state of the local object
                        searchSuggestion.setCollapsed(!searchSuggestion.isCollapsed());
                    }
                });
            }

            m_focusedContainer.add(field);
        }

        updateScrollPanelSize();

    }

