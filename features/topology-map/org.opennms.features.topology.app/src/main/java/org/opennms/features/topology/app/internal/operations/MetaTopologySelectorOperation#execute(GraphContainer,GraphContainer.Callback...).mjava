	/**
	 * Changes the base topology to {@link #m_metaTopologyProvider} and optionally executes callbacks (e.g. to reset criteria, set default SZL, etc.)
	 * @param container The GraphContainer.
	 * @param callbacks Define callbacks to execute AFTER the topology provider has changed.
     */
	private void execute(GraphContainer container, GraphContainer.Callback... callbacks) {
	    LOG.debug("Active provider is: {}", m_metaTopologyProvider);

        // only change if provider changed
	    final MetaTopologyProvider currentMetaTopologyProvider = container.getMetaTopologyProvider();
        if(currentMetaTopologyProvider == null || !currentMetaTopologyProvider.equals(m_metaTopologyProvider)) {
            container.setMetaTopologyProvider(m_metaTopologyProvider);
			container.selectTopologyProvider(m_metaTopologyProvider.getDefaultGraphProvider(), callbacks);
        }
    }

