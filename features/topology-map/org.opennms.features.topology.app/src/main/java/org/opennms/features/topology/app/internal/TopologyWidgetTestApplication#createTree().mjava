    private VertexSelectionTree createTree() {
	    //final FilterableHierarchicalContainer container = new FilterableHierarchicalContainer(m_graphContainer.getVertexContainer());
	    
		VertexSelectionTree tree = new VertexSelectionTree("Nodes", m_graphContainer);
		tree.addListener(new ValueChangeListener() {

            @Override
            public void valueChange(ValueChangeEvent event) {
                Collection<? extends VertexRef> refs = (Collection<? extends VertexRef>)event.getProperty().getValue();
                if(refs.size() > 0) {
                    m_topologyComponent.setPanToSelection(true);
                }
            }
        });
		tree.setMultiSelect(true);
		tree.setImmediate(true);
		tree.setItemCaptionPropertyId(LABEL_PROPERTY);

		for (Iterator<?> it = tree.rootItemIds().iterator(); it.hasNext();) {
			Object item = it.next();
			tree.expandItemsRecursively(item);
		}
		
		m_graphContainer.getSelectionManager().addSelectionListener(tree);

		return tree;
	}

