	private void updateScale(double oldScale, double newScale, SVGElement svg,int cx, int cy) {

		double zoomFactor = newScale/oldScale;
		SVGGElement g = m_topologyView.getSVGViewPort().cast();

		if(cx == 0 ) {
			cx = (int) (Math.ceil(svg.getParentElement().getOffsetWidth() / 2.0) - 1);
		}

		if(cy == 0) {
			cy = (int) (Math.ceil(svg.getParentElement().getOffsetHeight() / 2.0) -1);
		}

		SVGPoint p = svg.createSVGPoint();
		p.setX(cx);
		p.setY(cy);
		p = p.matrixTransform(g.getCTM().inverse());
		SVGMatrix m = svg.createSVGMatrix()
				.translate(p.getX(),p.getY())
				 .scale(zoomFactor)
				.translate(-p.getX(), -p.getY());
		SVGMatrix ctm = g.getCTM().multiply(m);
		D3.d3().select(m_topologyView.getSVGViewPort()).transition().duration(1000).attr("transform", matrixTransform(ctm));

	}

