    /**
     * @param cacheTimeout The cache timeout in seconds.
     *                     0 disables caching.
     */
    public DefaultTopologyService(long cacheTimeout) {
        graphProviderCache = CacheBuilder
                .newBuilder()
                .expireAfterWrite(Math.max(0, cacheTimeout), TimeUnit.SECONDS)
                // Due to graphml we may end up having a ton of graph providers.
                // Caching is limited to 50, which is still plenty
                .maximumSize(50)
                .build(new CacheLoader<GraphProviderKey, GraphProvider>() {
                    @Override
                    public GraphProvider load(GraphProviderKey key) throws Exception {
                        final MetaTopologyProvider metaTopologyProvider = getMetaTopologyProvider(key.getMetaTopologyId());
                        final GraphProvider graphProvider = Optional.ofNullable(metaTopologyProvider.getGraphProviderBy(key.getNamespace()))
                                                                .orElseThrow(() -> new NoSuchGraphProviderException(key.getMetaTopologyId(), key.getNamespace()));
                        graphProvider.refresh();
                        return graphProvider;
                    }
                });
    }

