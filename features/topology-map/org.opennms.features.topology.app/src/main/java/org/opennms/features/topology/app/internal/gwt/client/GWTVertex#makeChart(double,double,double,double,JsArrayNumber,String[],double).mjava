    //support for creating a node-chart
    //segmentWidth defines how thick the donut ring will be (in pixels)
    static final String makeChart(final double cx, final double cy, final double r, final double segmentWidth, final JsArrayNumber dataArray, final String[] classArray, final double total){
				
				String svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">";
				
			
				double innerR = r - segmentWidth;
				
				
				
				double startangle = 0;
				for (int i = 0; i < dataArray.length(); i++) {

					if (dataArray.get(i) > 0) {

						double endangle = startangle + (((dataArray.get(i)) / total) * Math.PI
								* 2.0);

						String path = "<path d=\"";

						double x1 = cx + (r * Math.sin(startangle));
						double y1 = cy - (r * Math.cos(startangle));
						double X1 = cx + (innerR * Math.sin(startangle));
						double Y1 = cy - (innerR * Math.cos(startangle));

						double x2 = cx + (r * Math.sin(endangle));
						double y2 = cy - (r * Math.cos(endangle));
						double X2 = cx + (innerR * Math.sin(endangle));
						double Y2 = cy - (innerR * Math.cos(endangle));

						int big = 0;
						if (endangle - startangle > Math.PI)
							big = 1;

						String d;
						// this branch is if one data value comprises 100% of the data
						if (dataArray.get(i) >= total) {

							d = "M " + X1 + "," + Y1 + " A " + innerR + "," + innerR
									+ " 0 " + "1" + " 0 " + X1 + ","
									+ (Y1 + (2 * innerR)) + " A " + innerR + ","
									+ innerR + " 0 " + big + " 0 " + X1 + "," + Y1
									+ " M " + x1 + "," + y1 + " A " + r + "," + r
									+ " 0 " + big + " 1 " + x1 + "," + (y1 + (2 * r))
									+ " A " + r + "," + r + " 0 " + big + " 1 " + x1
									+ "," + y1;

						} else {
							// path string
							d = "M " + X1 + "," + Y1 + " A " + innerR + "," + innerR
									+ " 0 " + big + " 1 " + X2 + "," + Y2 + " L " + x2
									+ "," + y2 + " A " + r + "," + r + " 0 " + big
									+ " 0 " + x1 + "," + y1 + " Z";
						}
						path = path.concat(d + "\"" + " class =");
			            
			            path = path.concat(classArray[i]);
//			            path = path.concat(" stroke= \"black\"");
			            path = path.concat(" stroke-width= \"0\"/>");
			            
			            svg = svg.concat(path);
			            startangle = endangle;

					}
					
					
				}
						
				svg = svg.concat("</svg>");
			    
			    return svg;
    		
    }

