	/**
	 * Finds a service registered with the OSGI Service Registry of type <code>clazz</code>.
	 * In addition the registered service must comply with the provided filter.
	 *
	 * If multiple services are found (and the filter criteria matches), only the first one is returned.
	 *
     * @return A object of type <code>clazz</code> or null.
     */
	private <T> T findSingleService(BundleContext bundleContext, Class<T> clazz, Predicate<T> filter) {
		List<T> providers = findServices(bundleContext, clazz);
		providers = providers.stream()
				.filter(filter)
				.collect(Collectors.toList());
		if (providers.size() > 1) {
			LOG.warn("Found more than one {}s. This is not supported. Using 1st one in list.", clazz.getSimpleName());
		}
		if (!providers.isEmpty()) {
			return providers.iterator().next();
		}
		return null;
	}

