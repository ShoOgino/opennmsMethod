	/**
	 * Changes the base topology to {@link #m_topologyProvider} and optionally resets all criteria and sets the szl to 1.
	 * @param container The GraphContainer.
	 * @param resetCriteriaAndSzl Defines if the criteria and szl is reset.
     */
	private void execute(GraphContainer container, boolean resetCriteriaAndSzl) {
       	LOG.debug("Active provider is: {}", m_topologyProvider);

        // only change if provider changed
        if(!container.getBaseTopology().equals(m_topologyProvider)) {
			// We automatically set status providers if there are any
			StatusProvider vertexStatusProvider = findVertexStatusProvider(m_topologyProvider);
			EdgeStatusProvider edgeStatusProvider = findEdgeStatusProvider(m_topologyProvider);
			LayoutAlgorithm layoutAlgorithm = findLayoutAlgorithm();

            // Refresh the topology provider, triggering the vertices to load  if they have not yet loaded
            m_topologyProvider.refresh();
			container.setEdgeStatusProvider(edgeStatusProvider);
			container.setVertexStatusProvider(vertexStatusProvider);
			if (layoutAlgorithm != null) {
				container.setLayoutAlgorithm(layoutAlgorithm);
			}
            container.setBaseTopology(m_topologyProvider);
			if (resetCriteriaAndSzl) {
				container.clearCriteria(); // remove all criteria
				container.setSemanticZoomLevel(1); // reset to 1
				container.addCriteria(container.getBaseTopology().getDefaultCriteria());
			}
            container.redoLayout();
        }
    }

