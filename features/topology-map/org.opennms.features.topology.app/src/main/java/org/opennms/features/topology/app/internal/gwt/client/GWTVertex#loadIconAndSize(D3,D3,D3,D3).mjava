    static Func<String, GWTVertex> loadIconAndSize(final D3 bgImage, final D3 imageSelection, final D3 circleSelection, final D3 textSelection){
        return new Func<String, GWTVertex>(){

            public String call(GWTVertex datum, final int index) {
                LoadTracker tracker = LoadTracker.get();
                tracker.trackImageLoad(datum.getIconUrl(), new LoadTrackerHandler() {

                    @Override
                    public void onImageLoad(Image img) {
                        double widthRatio = 48.0/img.getWidth();
                        double heightRatio = 48.0/img.getHeight();
                        double scaleFactor = Math.min(widthRatio, heightRatio);
                        int width = (int) (img.getWidth() * scaleFactor);
                        int height = (int) (img.getHeight() * scaleFactor);
                        
                        String strWidth = width + "px";
                        String strHeight = height + "px";
                        String x = "-" + width/2 + "px";
                        String y = "-" + height/2 + "px";
                        
                        Element imgElem = D3.getElement(imageSelection, index);
                        imgElem.setAttribute("width", strWidth);
                        imgElem.setAttribute("height", strHeight);
                        imgElem.setAttribute("x", x);
                        imgElem.setAttribute("y", y);
                        
                        Element bgImgElem = D3.getElement(bgImage, index);
                        int length = (Math.max(width, height) + 10);
                        bgImgElem.setAttribute("width", length +"px");
                        bgImgElem.setAttribute("height", length + "px");
                        bgImgElem.setAttribute("x", "-" + Math.round(length/2));
                        bgImgElem.setAttribute("y", "-" + Math.round(length/2));
                        
                        Element rectElem = D3.getElement(circleSelection, index);
                        rectElem.setAttribute("class", "highlight");
                        rectElem.setAttribute("fill", "yellow");
                        rectElem.setAttribute("x", -(width/2 + 2) + "px");
                        rectElem.setAttribute("y", -(height/2 + 2) + "px");
                        rectElem.setAttribute("r", ((Math.max(width, height) + 9)/2) + "px" );
                        rectElem.setAttribute("opacity", "0");
                        
                        textSelection.text(label());
                        Element textElem = D3.getElement(textSelection, index);
                        textElem.setAttribute("class", "vertex-label");
                        textElem.setAttribute("x", "0px");
                        textElem.setAttribute("y",  "" + (height/2 + 5) + "px");
                        textElem.setAttribute("text-anchor", "middle");
                        textElem.setAttribute("alignment-baseline", "text-before-edge");
                    }
                    
                });
                
                
                return datum.getIconUrl();
            }
        };
    }

