		/**
		 * This function is used to convert the {@link TopoContextMenuItem} into a {@link ContextMenuItem}
		 * and add it to the {@link TopoContextMenu}.
		 * 
		 * @param menu
		 * @param operationContext
		 */
		public void addItemToMenu(TopoContextMenu menu, OperationContext operationContext) {
			// Construct a new ContextMenuItem in the surrounding ContextMenu
            List<VertexRef> targets = asVertexList(menu.getTarget());
            if (m_operation == null || m_operation.display(targets, operationContext)) {
				ContextMenuItem item = menu.addItem(m_name);
				item.setEnabled(m_operation == null || m_operation.enabled(targets, operationContext));
				item.setSeparatorVisible(m_separatorVisible);
				if (m_operation != null) {
					item.addItemClickListener(new ContextMenuListener(operationContext, menu, item, m_operation));
				}

				// Add all children to the menu as well
				for (TopoContextMenuItem child : getChildren()) {
                    child.addSubItemToMenu(menu, item, operationContext);
                    //child.addItemToMenu(menu, operationContext);
                }
            }
		}

