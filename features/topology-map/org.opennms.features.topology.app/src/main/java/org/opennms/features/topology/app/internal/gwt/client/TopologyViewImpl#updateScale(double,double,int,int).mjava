    void updateScale(double oldScale, double newScale, int cx, int cy) {
        if(oldScale > 0) {
            double zoomFactor = newScale/oldScale;
        	
            SVGElement svg = getSVGElement();
            SVGGElement g = getSVGViewPort().cast();
        
        	if(cx == 0 ) {
        		cx = (int) (Math.ceil(svg.getParentElement().getOffsetWidth() / 2.0) - 1);
        	}
        
        	if(cy == 0) {
        		cy = (int) (Math.ceil(svg.getParentElement().getOffsetHeight() / 2.0) -1);
        	}
        
        	SVGPoint p = svg.createSVGPoint();
        	p.setX(cx);
        	p.setY(cy);
        	String gCTM = matrixTransform(g.getCTM());
        	String gCTMInverse = matrixTransform(g.getCTM().inverse());
        	p = p.matrixTransform(g.getCTM().inverse());
        	double x2 = p.getX();
        	double y2 = p.getY();
        	SVGMatrix m = svg.createSVGMatrix()
        			.translate(x2,y2)
        			 .scale(zoomFactor)
        			.translate(-x2, -y2);
        	SVGMatrix ctm = g.getCTM().multiply(m);
        	String tempM = matrixTransform(ctm);
        	D3.d3().select(getSVGViewPort()).transition().duration(1000).attr("transform", tempM);
        } else {
           m_isRefresh = true;
        }
    }

