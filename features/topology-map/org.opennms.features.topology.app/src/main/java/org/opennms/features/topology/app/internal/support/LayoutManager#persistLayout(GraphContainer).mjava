    public void persistLayout(GraphContainer graphContainer) {
        final List<VertexRef> vertexRefs = toVertexRef(graphContainer.getGraph().getDisplayVertices());
        final String id = calculateHash(vertexRefs);
        LayoutEntity layoutEntity = layoutDao.get(id);
        if (layoutEntity == null) {
            layoutEntity = new LayoutEntity();
            layoutEntity.setId(id);
            layoutEntity.setCreated(new Date());
            layoutEntity.setCreator(graphContainer.getApplicationContext().getUsername());
        }
        layoutEntity.setUpdated(new Date());
        layoutEntity.setUpdator(graphContainer.getApplicationContext().getUsername());

        final Layout layout = graphContainer.getGraph().getLayout();
        final List<VertexPositionEntity> vertexPositionEntities = vertexRefs.stream()
                .map(vertexRef -> {
                    final Point p = layout.getLocation(vertexRef);
                    PointEntity pointEntity = new PointEntity();
                    pointEntity.setX((int) p.getX());
                    pointEntity.setY((int) p.getY());

                    final VertexPositionEntity vertexEntity = new VertexPositionEntity();
                    vertexEntity.setVertexRef(toVertexRefEntity(vertexRef));
                    vertexEntity.setPosition(pointEntity);
                    return vertexEntity;
                })
                .collect(Collectors.toList());
        layoutEntity.getVertexPositions().clear();
        for (VertexPositionEntity eachVertexPosition : vertexPositionEntities) {
            layoutEntity.addVertexPosition(eachVertexPosition);
        }
        layoutDao.saveOrUpdate(layoutEntity);
    }

