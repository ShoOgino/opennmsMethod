    private static void loadVertexHopCriteria(VaadinRequest request, GraphContainer graphContainer) {
        String nodeIds = request.getParameter(PARAMETER_FOCUS_NODES);
        FocusNodeHopCriteria criteria = VertexHopGraphProvider.getFocusNodeHopCriteriaForContainer(graphContainer);

        if (nodeIds != null) {
            Collection<Integer> refs = new TreeSet<Integer>();
            for (String nodeId : nodeIds.split(",")) {
                try {
                    refs.add(Integer.parseInt(nodeId));
                } catch (NumberFormatException e) {
                    LOG.warn("Invalid node ID found in {} parameter: {}", PARAMETER_FOCUS_NODES, nodeId);
                }
            }
            // If we found valid node IDs in the list...
            if (refs.size() > 0) {
                if (criteria.size() == refs.size()) {
                    boolean criteriaChanged = false;
                    for (Integer ref : refs) {
                        if (!criteria.contains(new AbstractVertexRef("nodes", String.valueOf(ref)))) {
                            criteriaChanged = true;
                        }
                    }
                    // If all of the refs in the query string are already in the filter, then
                    // just return without altering it
                    if (!criteriaChanged) {
                        return;
                    }
                }

                // Clear the exiting focus node list
                criteria.clear();
                for (Integer ref : refs) {
                    // Add a new focus node reference to the VertexHopCriteria
                    criteria.add(new AbstractVertexRef("nodes", String.valueOf(ref)));
                }
                // Set the semantic zoom level to 1 by default
                graphContainer.setSemanticZoomLevel(1);
            } else {
                // Don't do anything... we didn't find any focus nodes in the parameter so don't alter
                // any existing VertexHopCriteria
            }
        }

        // check if we have a criteria set
        if (criteria.isEmpty() && noAdditionalFocusCriteria(graphContainer)) { // no criteria or nodes in focus, load defaults
            graphContainer.removeCriteria(criteria); // it is empty, so we don't need it
            graphContainer.addCriteria(graphContainer.getBaseTopology().getDefaultCriteria()); // set default
        }
    }

