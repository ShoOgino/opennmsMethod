    // we have to find out if each selected vertex/edge is still displayable, if not we deselect it.
    private static void unselectElementsWhichAreNotVisibleAnymore(Graph graph, SelectionManager selectionManager) {
        if (selectionManager == null) return;
        List<VertexRef> selectedVertexRefs = new ArrayList<>(selectionManager.getSelectedVertexRefs());
        List<VertexRef> newSelectedVertexRefs = new ArrayList<>();
        for (VertexRef eachSelectedVertex : selectedVertexRefs) {
            for (Vertex eachDisplayableVertex : graph.getDisplayVertices()) {
                if (eachDisplayableVertex.getNamespace().equals(eachSelectedVertex.getNamespace())
                    && eachDisplayableVertex.getId().equals(eachSelectedVertex.getId())) {
                    newSelectedVertexRefs.add(eachSelectedVertex);
                    break;
                }
            }
        }

        List<EdgeRef> selectedEdgeRefs = new ArrayList<>(selectionManager.getSelectedEdgeRefs());
        List<EdgeRef> newSelectedEdgeRefs = new ArrayList<>();
        for (EdgeRef eachSelectedEdgeRef : selectedEdgeRefs) {
            for (Edge eachDisplayableEdge : graph.getDisplayEdges()) {
                if (eachDisplayableEdge.getNamespace().equals(eachSelectedEdgeRef.getNamespace())
                        && eachDisplayableEdge.getId().equals(eachSelectedEdgeRef.getId())) {
                    newSelectedEdgeRefs.add(eachSelectedEdgeRef);
                    break;
                }
            }
        }

        // if the selection changed, inform selectionManager
        if (!newSelectedVertexRefs.equals(selectedVertexRefs)) {
            selectionManager.setSelectedVertexRefs(newSelectedVertexRefs);
        }
        if (!newSelectedEdgeRefs.equals(selectedEdgeRefs)) {
            selectionManager.setSelectedEdgeRefs(newSelectedEdgeRefs);
        }
    }

