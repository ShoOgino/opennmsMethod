    @Before
    public void setUp() throws MalformedURLException, JAXBException {
        GraphProvider provider = new AbstractTopologyProvider("test") {
            @Override
            public SelectionChangedListener.Selection getSelection(List<VertexRef> selectedVertices, ContentType type) {
                return SelectionChangedListener.Selection.EMPTY;
            }

            @Override
            public boolean contributesTo(ContentType container) {
                return false;
            }

            @Override public void save() { }
            @Override public void refresh() { }
            @Override public Criteria getDefaultCriteria() { return null; }

            @Override public void load(String filename) throws MalformedURLException, JAXBException {
                resetContainer();
                
                String vId1 = getNextVertexId();
                TestVertex v1 = new TestVertex(vId1, 0, 0);
                v1.setLabel("a leaf vertex");
                
                String vId2 = getNextVertexId();
                TestVertex v2 = new TestVertex(vId2, 0, 0);
                v2.setLabel("another leaf");
                
                addVertices(v1, v2);
            }
        };
        provider.load(null);
        graphContainer = new VEProviderGraphContainer(provider, new ProviderManager());
    }

