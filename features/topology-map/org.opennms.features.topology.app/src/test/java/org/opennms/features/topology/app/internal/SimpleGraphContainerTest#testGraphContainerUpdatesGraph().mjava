    @Test
    public void testGraphContainerUpdatesGraph() {
        final AtomicInteger eventsReceived = new AtomicInteger(0);
        
        GraphProvider topologyProvider = graphProvider();
        
        //Setup the graphcontainer
        SimpleGraphContainer graphContainer = new SimpleGraphContainer(topologyProvider);
        graphContainer.setLayoutAlgorithm(new SimpleLayoutAlgorithm());
        graphContainer.setSemanticZoomLevel(0);
        

        final TopoGraph graph = graphContainer.getCompleteGraph();
        
        graphContainer.addVertexListener(new ItemSetChangeListener() {
            
            @Override
            public void containerItemSetChange(ItemSetChangeEvent event) {
                graph.update();
            }
        });
        
        
        
        //Add another vertex to the TopologyProvider
        Vertex vertId = topologyProvider.addVertex();
        TopoVertex v = graph.getVertexByItemId(findByItemId(graphContainer, vertId));
        assertNotNull(v);
        
        Vertex vertId2 = topologyProvider.addVertex();
        TopoVertex v2 = graph.getVertexByItemId(findByItemId(graphContainer, vertId2));
        assertNotNull(v2);
        
        Vertex groupId = topologyProvider.addGroup(this.getClass().getSimpleName(), "iconofgroup.jpg");
        assertEquals(5, graphContainer.getVertexIds().size());
        TopoVertex g = graph.getVertexByItemId(findByItemId(graphContainer, groupId));
        assertNotNull(g);
        
        topologyProvider.setParent(vertId, groupId);
        v = graph.getVertexByItemId(findByItemId(graphContainer, vertId));
        assertEquals( g.getItemId(), graphContainer.getGroupId( v.getItemId() ));
        
        topologyProvider.setParent(vertId2, groupId);
        v2 = graph.getVertexByItemId(findByItemId(graphContainer, vertId2));
        assertEquals( g.getItemId(), graphContainer.getGroupId( v2.getItemId() ));
        
        Collection<Vertex> vertices = graphContainer.getBaseTopology().getVertices();
        for(Vertex vertex : vertices) {
            if(vertex.getId() == vertId.getId() || vertex.getId() == vertId2.getId()) {
                assertEquals(groupId, vertex.getGroupId());
                assertEquals(1, vertex.getSemanticZoomLevel());
            }else {
                assertEquals(0, vertex.getSemanticZoomLevel());
            }
        }
    }

