    @Test
    public void testCreateBreadcrumbs() {
        PathTree pathTree = new PathTree();
        pathTree.addPath(Lists.newArrayList(vertex("regions", "Central"), vertex("markets", "Minneapolis")));
        pathTree.addPath(Lists.newArrayList(vertex("regions", "Central"), vertex("markets", "Chicago")));
        Assert.assertEquals(1, pathTree.getNumberOfPaths());
        Assert.assertEquals("Regions > Central", toString(pathTree.toBreadcrumbs()));

        pathTree.clear();
        pathTree.addPath(Lists.newArrayList(vertex("regions", "Central"), vertex("markets", "Chicago"), vertex("site", "1")));
        pathTree.addPath(Lists.newArrayList(vertex("regions", "Central"), vertex("markets", "Chicago"), vertex("site", "2")));
        pathTree.addPath(Lists.newArrayList(vertex("regions", "Central"), vertex("markets", "Chicago"), vertex("site", "3")));
        Assert.assertEquals(1, pathTree.getNumberOfPaths());
        Assert.assertEquals("Regions > Central > Chicago", toString(pathTree.toBreadcrumbs()));

        pathTree.clear();
        pathTree.addPath(Lists.newArrayList(vertex("regions", "Central"), vertex("markets", "Minneapolis")));
        pathTree.addPath(Lists.newArrayList(vertex("regions", "East"), vertex("markets", "New York")));
        Assert.assertEquals(2, pathTree.getNumberOfPaths());
        Assert.assertEquals("Regions > Central, East", toString(pathTree.toBreadcrumbs()));

        pathTree.clear();
        pathTree.addPath(Lists.newArrayList(vertex("regions", "East"), vertex("markets", "New York"), vertex("sites", "'NY-Site1")));
        pathTree.addPath(Lists.newArrayList(vertex("regions", "Central"), vertex("markets", "Minneapolis"), vertex("sites", "MN-Site1")));
        Assert.assertEquals(2, pathTree.getNumberOfPaths());
        Assert.assertEquals("Regions > Central, East > Minneapolis, New York", toString(pathTree.toBreadcrumbs()));

    }

