    @Test
    @Ignore("Figure out how to verify mock paint calls")
    public void testTopologyComponentGraphUpdateGroup() throws PaintException {
        PaintTarget target = EasyMock.createMock(PaintTarget.class);
        
        // Initial set up has only the group vertex
        mockInitialSetup(target);
        
        mockGraphTagStart(target);
        
        mockVertex(target);
        
        mockGraphTagEnd(target);
        
        // the set the zoomlevel to 1 and we should see two vertices and an edge
        //mockGraphAttrs(target, 1, false);
        // semantic zoom level changes should trigger a fitToView
        mockGraphAttrs(target, 1, true);
        
        mockGraphTagStart(target);
        
        mockVertex(target);
        
        mockVertex(target);
        
        mockEdge(target);

        mockGraphTagEnd(target);

        SelectionManager selectionManager = EasyMock.createMock(SelectionManager.class);
        SelectionListener listener = EasyMock.anyObject();
        selectionManager.addSelectionListener(listener);
        EasyMock.expect(selectionManager.getSelectedVertexRefs()).andReturn(new ArrayList<VertexRef>()).anyTimes();
        EasyMock.expect(selectionManager.isVertexRefSelected(EasyMock.anyObject(VertexRef.class))).andReturn(false).anyTimes();
        EasyMock.expect(selectionManager.isEdgeRefSelected(EasyMock.anyObject(EdgeRef.class))).andReturn(false).anyTimes();

        EasyMock.replay(target, selectionManager);
        
        TestTopologyProvider topologyProvider = new TestTopologyProvider();
        GraphContainer graphContainer = new VEProviderGraphContainer(topologyProvider, new ProviderManager());
        graphContainer.setSelectionManager(selectionManager);
        TopologyComponent topoComponent = getTopologyComponent(graphContainer);
        
        Collection<Vertex> vertIds = topologyProvider.getVertices();
        assertEquals(2, vertIds.size());
        
        Vertex groupId = topologyProvider.addGroup(this.getClass().getSimpleName(), "GroupIcon.jpg");
        
        for(Vertex v : vertIds) {
            if(!v.isGroup()) {
                topologyProvider.setParent(v, groupId);
            }
        }
        
        assertEquals(3, topologyProvider.getVertices().size());
        assertEquals(1, topologyProvider.getEdges().size());
        
        /**
         * TODO This should not be necessary... the container should listen for vertex added events
         * and redo its own layout.
         */
        graphContainer.redoLayout();
        
        topoComponent.markAsDirty();
        
        graphContainer.setSemanticZoomLevel(1);
        
        topoComponent.markAsDirty();
        
        EasyMock.verify(target, selectionManager);
        
    }

