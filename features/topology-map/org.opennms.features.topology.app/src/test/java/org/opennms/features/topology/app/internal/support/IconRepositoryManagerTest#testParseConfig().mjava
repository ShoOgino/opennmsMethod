    @Test
    public void testParseConfig() {
        TestIconRepository iconRepository = new TestIconRepository()
                .withIconConfig("key1", "mx9600_external")
                .withIconConfig("linkd.group", "cloud")
                .withIconConfig("linkd.system", "generic")
                .withIconConfig("linkd.system.snmp.1.3.6.1.4.1.9.1.283", "router")
                .withIconConfig("linkd.system.snmp.1.3.6.1.4.1.9.1.485", "server1")
                .withIconConfig("linkd.system.snmp.1.3.6", "server2");

        IconRepositoryManager iconManager = new IconRepositoryManager();
        iconManager.onBind(iconRepository);

        // Verify direct key
        Assert.assertEquals("mx9600_external", iconManager.getSVGIconId("key1"));
        Assert.assertEquals("cloud", iconManager.getSVGIconId("linkd.group"));
        Assert.assertEquals("generic", iconManager.getSVGIconId("linkd.system"));
        Assert.assertEquals("router", iconManager.getSVGIconId("linkd.system.snmp.1.3.6.1.4.1.9.1.283"));
        Assert.assertEquals("server1", iconManager.getSVGIconId("linkd.system.snmp.1.3.6.1.4.1.9.1.485"));

        // verify path
        Assert.assertEquals("server2", iconManager.getSVGIconId("linkd.system.snmp.1.3.6.X"));
        Assert.assertEquals("generic", iconManager.getSVGIconId("linkd.system.DOES_NOT_EXIST"));
        Assert.assertEquals("server2", iconManager.getSVGIconId("linkd.system.snmp.1.3.6.1.4.1.5813.1.13"));
        Assert.assertEquals("server2", iconManager.getSVGIconId("linkd.system.snmp.1.3.6.1.4.1.9.1"));
        Assert.assertEquals("server2", iconManager.getSVGIconId("linkd.system.snmp.1.3.6.1.7"));
    }

