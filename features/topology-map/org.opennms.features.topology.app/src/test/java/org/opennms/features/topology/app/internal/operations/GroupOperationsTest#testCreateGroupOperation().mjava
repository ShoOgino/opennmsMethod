	@Test
	public void testCreateGroupOperation() {
		m_topologyProvider.resetContainer();

		Vertex vertex1 = m_topologyProvider.addVertex(0, 0);
		Vertex vertex2 = m_topologyProvider.addVertex(0, 0);

		GraphContainer graphContainer = EasyMock.createMock(GraphContainer.class);

		EasyMock.expect(graphContainer.getBaseTopology()).andReturn(m_topologyProvider).anyTimes();
		graphContainer.redoLayout();

		EasyMock.replay(graphContainer);

		CreateGroupOperation groupOperation = new CreateGroupOperation();
		OperationContext context = getOperationContext(graphContainer);
		groupOperation.execute(Arrays.asList((VertexRef)vertex1, vertex2), context);

		assertNull("Value should be null: " + vertex1.getParent(), vertex1.getParent());

		// Grab the window, put a value into the form field, and commit the form to complete
		// the operation.
		Window window = context.getMainWindow();
		assertEquals(1, window.getChildWindows().size());
		Window prompt = window.getChildWindows().iterator().next();

		for (Iterator<Component> itr = prompt.getComponentIterator(); itr.hasNext();) {
			Component component = itr.next();
			try {
				Form form = (Form)component;
				Field group = form.getField("Group Label");
				group.setValue("My New Awesome Group");
				// Make sure that the value was set
				assertEquals("My New Awesome Group", group.getValue());
				form.commit();
			} catch (ClassCastException e) {
				LoggerFactory.getLogger(this.getClass()).info("Not a Form: " + component.getClass());
			}
		}

		// Refresh the contents of the vertex
		vertex1 = m_topologyProvider.getVertex(vertex1);
		VertexRef parent = vertex1.getParent();
		assertNotNull("Value should not be null: " + parent, parent);
		assertEquals("My New Awesome Group", m_topologyProvider.getVertex(parent).getLabel());
		assertEquals(2, m_topologyProvider.getChildren(parent).size());

		EasyMock.verify(graphContainer);
	}

