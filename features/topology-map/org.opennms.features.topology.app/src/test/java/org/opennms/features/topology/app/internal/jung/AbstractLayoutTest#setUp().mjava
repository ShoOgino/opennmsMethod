    @Before
    public void setUp(){
        SimpleGraphBuilder bldr = new SimpleGraphBuilder("nodes");

        for(int i = 0; i < 100; i++) {
            bldr.vertex("v"+i).vLabel("vertex"+i).vIconKey("server").vTooltip("tooltip").vStyleName("vertex");
        }

        bldr.edge("e1", "v1", "v2").eStyleName("edge")
                .edge("e2", "v1", "v3").eStyleName("edge")
                .edge("e3", "v1", "v4").eStyleName("edge")
                .edge("e4", "v1", "v5").eStyleName("edge")
                .edge("e5", "v1", "v6").eStyleName("edge")
                .edge("e6", "v1", "v7").eStyleName("edge")
                .edge("e7", "v1", "v8").eStyleName("edge")
                .edge("e8", "v1", "v8").eStyleName("edge")
                .edge("e9", "v2", "v8").eStyleName("edge")
                .edge("e10", "v2", "v7").eStyleName("edge")
                .edge("e11", "v3", "v8").eStyleName("edge")
                .edge("e12", "v5", "v8").eStyleName("edge")
                .edge("e13", "v6", "v8").eStyleName("edge")
                .edge("e14", "v7", "v8").eStyleName("edge");



        final DefaultTopologyService topologyService = new DefaultTopologyService();
        final MetaTopologyProvider metaTopologyProvider = new SimpleMetaTopologyProvider(getGraphProvider());
        topologyService.setServiceLocator(new SimpleServiceLocator(metaTopologyProvider));
        topologyService.setTopologyEntityCache(EasyMock.niceMock(TopologyEntityCache.class));

        final VEProviderGraphContainer graphContainer = new VEProviderGraphContainer();
        graphContainer.setTopologyService(topologyService);
        graphContainer.setSelectedNamespace(metaTopologyProvider.getDefaultGraphProvider().getNamespace());
        graphContainer.setMetaTopologyId(metaTopologyProvider.getId());

        final VertexRef defaultFocus = getDefaultFocus();
        if (defaultFocus != null) {
            graphContainer.addCriteria(new DefaultVertexHopCriteria(defaultFocus));
        }

        m_graphContainer = graphContainer;
    }

