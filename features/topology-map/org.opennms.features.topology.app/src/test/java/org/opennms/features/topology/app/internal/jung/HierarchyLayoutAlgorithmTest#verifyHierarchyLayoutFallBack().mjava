    // NMS-8703
    @Test
    public void verifyHierarchyLayoutFallBack() {
        // Vertices
        final List<Vertex> vertices = new ArrayList<>();
        vertices.add(new TestVertex("root"));
        vertices.add(new TestVertex("v1"));
        vertices.add(new TestVertex("v2"));
        vertices.add(new TestVertex("v3"));

        // Edges
        final List<Edge> edges = new ArrayList<>();
        edges.add(new AbstractEdge("test", "rootEdge", vertices.get(0), vertices.get(1)));
        edges.add(new AbstractEdge("test","e1", vertices.get(1), vertices.get(2)));
        edges.add(new AbstractEdge("test","e2", vertices.get(2), vertices.get(3)));

        // Circle
        edges.add(new AbstractEdge("test","e3", vertices.get(3), vertices.get(1)));

        // Mock ALL the things
        final GraphContainer mockGraphContainer = Mockito.mock(GraphContainer.class);
        final DefaultLayout layout = new DefaultLayout();
        final TestGraph testGraph = new TestGraph(layout, vertices, edges);
        Mockito.when(mockGraphContainer.getGraph()).thenReturn(testGraph);

        // Update layouts and ensure no exception is thrown
        new HierarchyLayoutAlgorithm().updateLayout(testGraph);
    }

