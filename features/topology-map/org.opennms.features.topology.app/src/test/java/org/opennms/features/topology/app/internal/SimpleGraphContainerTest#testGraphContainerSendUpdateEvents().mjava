    @Test
    public void testGraphContainerSendUpdateEvents() {
        final AtomicInteger eventsReceived = new AtomicInteger(0);
        
        TestTopologyProvider topologyProvider = new TestTopologyProvider();
        
        //Setup the graphcontainer
        SimpleGraphContainer graphContainer = new SimpleGraphContainer(topologyProvider);
        graphContainer.setLayoutAlgorithm(new SimpleLayoutAlgorithm());
        graphContainer.setSemanticZoomLevel(0);
        
        graphContainer.getVertexContainer().addListener(new ItemSetChangeListener() {
            
            @Override
            public void containerItemSetChange(ItemSetChangeEvent event) {
                eventsReceived.incrementAndGet();
            }
        });
        
        
        
        //Add another vertex to the TopologyProvider
        Object vertId = topologyProvider.addVertex();
        assertEquals(2, eventsReceived.get());
        eventsReceived.set(0);
        
        Object vertId2 = topologyProvider.addVertex();
        assertEquals(2, eventsReceived.get());
        eventsReceived.set(0);
       
        Object groupId = topologyProvider.addGroup("iconofgroup.jpg");
        assertEquals(5, graphContainer.getVertexIds().size());
        assertEquals(2, eventsReceived.get());
        eventsReceived.set(0);
        
        topologyProvider.setParent(vertId, groupId);
        //assertEquals(2, eventsReceived.get());
        assertEquals(1, eventsReceived.get());
        eventsReceived.set(0);
        
        topologyProvider.setParent(vertId2, groupId);
        //assertEquals(2, eventsReceived.get());
        assertEquals(1, eventsReceived.get());
        eventsReceived.set(0);
        
        Collection<?> vertexKeys = graphContainer.getVertexIds();
        for(Object vertexKey : vertexKeys) {
            BeanItem<GVertex> vItem = (BeanItem<GVertex>) graphContainer.getVertexItem(vertexKey);
            GVertex gVert = vItem.getBean();
            if(gVert.getItemId() == vertId || gVert.getItemId() == vertId2) {
                assertEquals(groupId, gVert.getGroupId());
                assertEquals(1, gVert.getSemanticZoomLevel());
            }else {
                assertEquals(0, gVert.getSemanticZoomLevel());
            }
        }
        
        
    }

