    @Test
    public void testTopologyComponentSendCorrectEdgeIds() throws PaintException {
        TestTopologyProvider topoProvider = new TestTopologyProvider();
        GraphContainer dataSource = new SimpleGraphContainer(topoProvider);
        TestTopologyComponent topoComponent = new TestTopologyComponent(dataSource);
        Graph graph = topoComponent.getGraph();
        List<Edge> edges = graph.getEdges();
        assertEquals(1, edges.size());
        
        Edge edge = edges.get(0);
        
        PaintTarget target = EasyMock.createMock(PaintTarget.class);
        
        mockedDefaultToprData(target);
        
        EasyMock.replay(target);
        
        topoComponent.paintContent(target);
        
        EasyMock.verify(target);
        
        
        Collection<?> vertIds = topoProvider.getVertexIds();
        
        Object groupId = topoProvider.addGroup("GroupIcon.jpg");
        
        for(Object vertId : vertIds) {
            TestVertex v = (TestVertex) ((BeanItem<TestVertex>) topoProvider.getVertexItem(vertId)).getBean();
            if(v.isLeaf()) {
                topoProvider.setParent(vertId, groupId);
            }
            
        }
        
        PaintTarget target2 = EasyMock.createMock(PaintTarget.class);
        mockInitialSetup(target2);
        
        mockGraphTagStart(target2);
       
        for(Vertex g : graph.getVertices()) {
            if (!g.isLeaf()) {
                mockGroupWithKey(target2, g.getKey());
            }
        }
        
        for(Vertex v : graph.getVertices()) {
            if (v.isLeaf()) {
                mockVertexWithKey(target2, v.getKey());
            }
        }
        
        for(Edge e: graph.getEdges()) {
            mockEdgeWithKeys(target2, edge.getKey(), edge.getSource().getKey(), edge.getTarget().getKey());
        }
        mockGraphTagEnd(target2);
        
        mockActions(target2);
        EasyMock.replay(target2);
        
        topoComponent.paintContent(target2);
        
        EasyMock.verify(target2);
    }

