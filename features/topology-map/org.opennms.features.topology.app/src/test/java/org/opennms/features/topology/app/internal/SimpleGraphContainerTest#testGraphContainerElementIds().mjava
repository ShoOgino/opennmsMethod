    @Test
    public void testGraphContainerElementIds() {
        TestTopologyProvider topologyProvider = topoProvider();

        Object toprEdgeId = topologyProvider.getEdgeIds().iterator().next();
        
        TestEdge testEdge = (TestEdge) topologyProvider.getEdgeContainer().getItem(toprEdgeId).getBean();
        TestVertex sourceVertex = testEdge.getSource();
        TestVertex targetVertex = testEdge.getTarget();
        
        
        SimpleGraphContainer graphContainer = new SimpleGraphContainer(topologyProvider);
        
        GVertex sourceGVertex = findGVertexWithToprId(graphContainer, sourceVertex.getId());
        GVertex targetGVertex = findGVertexWithToprId(graphContainer, targetVertex.getId());
        
        GEdge gEdge = findGEdgeWithToprId(graphContainer, testEdge.getId());
        
        assertEquals(sourceGVertex.getItemId(), gEdge.getSource().getItemId());
        assertEquals(targetGVertex.getItemId(), gEdge.getTarget().getItemId());
        assertEquals(sourceGVertex.getKey(), gEdge.getSource().getKey());
        assertEquals(targetGVertex.getKey(), gEdge.getTarget().getKey());
        
        
        Object groupId = topologyProvider.addGroup(this.getClass().getSimpleName(), "iconGroup.png");
        topologyProvider.setParent(sourceVertex.getId(), groupId);
        topologyProvider.setParent(targetVertex.getId(), groupId);
        
        
        sourceGVertex = findGVertexWithToprId(graphContainer, sourceVertex.getId());
        targetGVertex = findGVertexWithToprId(graphContainer, targetVertex.getId());
        
        gEdge = findGEdgeWithToprId(graphContainer, testEdge.getId());
        
        assertEquals(sourceGVertex.getItemId(), gEdge.getSource().getItemId());
        assertEquals(targetGVertex.getItemId(), gEdge.getTarget().getItemId());
        assertEquals(sourceGVertex.getKey(), gEdge.getSource().getKey());
        assertEquals(targetGVertex.getKey(), gEdge.getTarget().getKey());
        
    }

