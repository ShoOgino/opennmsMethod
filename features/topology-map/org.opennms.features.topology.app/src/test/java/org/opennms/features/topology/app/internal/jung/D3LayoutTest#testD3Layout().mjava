    @Test
    public void testD3Layout(){
        Graph g = m_graphContainer.getGraph();

        List<Vertex> vertices = new ArrayList<Vertex>(g.getDisplayVertices());

        D3TopoLayout<VertexRef, EdgeRef> layout = runD3Layout(1, g, g.getLayout(), vertices);

        Vertex v1 = vertices.get(0);
        Vertex v2 = vertices.get(1);
        Vertex v3 = vertices.get(2);

        double distance = calcDistance(layout, v1, v2);
        double distance2 = calcDistance(layout, v2, v3);
        double distance3 = calcDistance(layout, v1, v3);
        System.out.println("distance: " + distance);
        System.out.println("distance2: " + distance2);
        System.out.println("distance3: " + distance3);

        D3TopoLayout<VertexRef, EdgeRef> layout2 = runD3Layout(2, g, g.getLayout(), vertices);

        distance = calcDistance(layout2, v1, v2);
        distance2 = calcDistance(layout2, v2, v3);
        distance3 = calcDistance(layout2, v1, v3);
        System.out.println("distance: " + distance);
        System.out.println("distance2: " + distance2);
        System.out.println("distance3: " + distance3);

        D3TopoLayout<VertexRef, EdgeRef> layout3 = runD3Layout(3, g, g.getLayout(), vertices);

        distance = calcDistance(layout3, v1, v2);
        distance2 = calcDistance(layout3, v2, v3);
        distance3 = calcDistance(layout3, v1, v3);
        System.out.println("distance: " + distance);
        System.out.println("distance2: " + distance2);
        System.out.println("distance3: " + distance3);
    }

