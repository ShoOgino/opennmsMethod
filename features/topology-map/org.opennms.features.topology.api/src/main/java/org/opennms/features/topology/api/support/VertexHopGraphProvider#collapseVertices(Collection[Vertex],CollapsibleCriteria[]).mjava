	public static Set<Vertex> collapseVertices(Collection<Vertex> vertices, CollapsibleCriteria[] criteria) {
		Set<Vertex> retval = new HashSet<Vertex>(vertices);
		Set<Vertex> addMe = new HashSet<Vertex>();

		for (Iterator<Vertex> itr = retval.iterator(); itr.hasNext();) {
			Vertex vertex = itr.next();

			nextVertex:
			for (CollapsibleCriteria criterium : criteria) {
				Set<VertexRef> criteriaVertices = new HashSet<VertexRef>(criterium.getVertices());
				for (Iterator<VertexRef> critItr = criteriaVertices.iterator(); critItr.hasNext();) {
					VertexRef criteriaVertex = critItr.next();
					if (new RefComparator().compare(vertex, criteriaVertex) == 0) {
						// Remove the vertex from the return value
						itr.remove();
						// Add the collapsed representation
						addMe.add(criterium.getCollapsedRepresentation());
						break nextVertex;
					}
				}
			}
		}

		retval.addAll(addMe);
		return retval;
	}

