    @Override
    public List<K> getItemIds(int startIndex, int numberOfItems) {
        // if we do not have all items in cache, we have to reload the cache
        boolean needsReload = !cache.containsIndex(startIndex) || !cache.containsIndex(startIndex + numberOfItems -1);
        if (needsReload) {
            page.updateOffset(startIndex);
            cache.reload(page);
            fireItemSetChangedEvent();
        }
        // now all items should be in the cache
        int endIndex = startIndex + numberOfItems;
        if (endIndex > size()) endIndex = size() - 1;
        List<K> itemIds = new ArrayList<K>();
        for (int i=startIndex; i<endIndex; i++) {
            itemIds.add(getIdByIndex(i));
        }
        // Ensure that the number of items expected matches with the actual ones. See issue NMS-8079 fore more details.
        if (itemIds.size() != numberOfItems) {
            LOG.warn("The container is supposed to carry {} but contains {} item. Expected itemIds: {}. Actual items: {}. Executed Criteria: {}. Bailing.",
                    numberOfItems, itemIds.size(), itemIds, getItemsForCache(m_datasource, getPage()), getCriteria(getPage(), true));
            throw new IllegalStateException("The container is supposed to carry " + numberOfItems + " but only contains " + itemIds.size() + " items.");
        }
        return itemIds;
    }

