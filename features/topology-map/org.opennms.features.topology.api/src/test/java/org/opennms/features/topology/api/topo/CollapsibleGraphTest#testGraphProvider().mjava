	@Test
	public void testGraphProvider() {
		DefaultVertexHopCriteria criteria = new DefaultVertexHopCriteria(new DefaultVertexRef("nodes", "g0"));
		collapsibleGraph.getVertices(criteria); // calculate szl

		assertEquals(0, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "g0")));
		assertEquals(1, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "g1")));
		assertEquals(1, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "g2")));
		assertEquals(2, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "v1")));
		assertEquals(2, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "v2")));
		assertEquals(2, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "v3")));
		assertEquals(2, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "v4")));

		criteria = new DefaultVertexHopCriteria(new DefaultVertexRef("nodes", "v1"));
		collapsibleGraph.getVertices(criteria); // re-calculate szl

		assertEquals(2, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "g0")));
		assertEquals(1, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "g1")));
		assertEquals(3, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "g2")));
		assertEquals(0, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "v1")));
		assertEquals(2, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "v2")));
		assertEquals(4, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "v3")));
		assertEquals(4, collapsibleGraph.getSemanticZoomLevel(new DefaultVertexRef("nodes", "v4")));
	}

