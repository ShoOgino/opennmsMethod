    @Test
    public void test() throws Exception {
        final BackendGraph simpleGraph = new SimpleGraph("test");
        assertEquals(0, simpleGraph.getVertices().size());

        final SimpleLeafVertex vertexA = new SimpleLeafVertex(simpleGraph.getNamespace(), "v0", 50, 100);
        vertexA.setIpAddress("10.0.0.4");
        simpleGraph.addVertices(vertexA);
        assertEquals(1, simpleGraph.getVertices().size());
        assertTrue(simpleGraph.containsVertexId(vertexA));
        assertTrue(simpleGraph.containsVertexId("v0"));
        assertFalse(simpleGraph.containsVertexId("v1"));
        final String namespace = simpleGraph.getNamespace();
        VertexRef ref0 = new DefaultVertexRef(namespace, "v0", namespace + ":v0");
        VertexRef ref1 = new DefaultVertexRef(namespace, "v1", namespace + ":v0");
        assertEquals(1, simpleGraph.getVertices(Collections.singletonList(ref0)).size());
        assertEquals(0, simpleGraph.getVertices(Collections.singletonList(ref1)).size());

        final Vertex vertexB = new SimpleLeafVertex(simpleGraph.getNamespace(), "v1", 100, 50);
        simpleGraph.addVertices(vertexB);
        assertTrue(simpleGraph.containsVertexId(vertexB));
        assertTrue(simpleGraph.containsVertexId("v1"));
        assertEquals(1, simpleGraph.getVertices(Collections.singletonList(ref1)).size());

        final Vertex vertexC = new SimpleLeafVertex(simpleGraph.getNamespace(), "v2", 100, 150);
        final Vertex vertexD = new SimpleLeafVertex(simpleGraph.getNamespace(), "v3", 150, 100);
        final Vertex vertexE = new SimpleLeafVertex(simpleGraph.getNamespace(), "v4", 200, 200);
        simpleGraph.addVertices(vertexC, vertexD, vertexE);
        assertEquals(5, simpleGraph.getVertices().size());

        simpleGraph.connectVertices("e0", vertexA, vertexB);
        simpleGraph.connectVertices("e1", vertexA, vertexC);
        simpleGraph.connectVertices("e2", vertexB, vertexC);
        simpleGraph.connectVertices("e3", vertexB, vertexD);
        simpleGraph.connectVertices("e4", vertexC, vertexD);
        simpleGraph.connectVertices("e5", vertexA, vertexE);
        simpleGraph.connectVertices("e6", vertexD, vertexE);

        assertEquals(1, simpleGraph.getVertices(Collections.singletonList(ref0)).size());
        assertEquals(1, simpleGraph.getVertices(Collections.singletonList(ref1)).size());
        assertEquals(5, simpleGraph.getVertices().size());
        assertEquals(3, simpleGraph.getEdgeIdsForVertex(simpleGraph.getVertex(ref0)).length);
        assertEquals(3, simpleGraph.getEdgeIdsForVertex(simpleGraph.getVertex(ref1)).length);

        simpleGraph.resetContainer();

        // Ensure that the topology provider has been erased
        assertEquals(0, simpleGraph.getVertices(Collections.singletonList(ref0)).size());
        assertEquals(0, simpleGraph.getVertices(Collections.singletonList(ref1)).size());
        assertEquals(0, simpleGraph.getVertices().size());
        assertEquals(0, simpleGraph.getEdgeIdsForVertex(simpleGraph.getVertex(ref0)).length);
        assertEquals(0, simpleGraph.getEdgeIdsForVertex(simpleGraph.getVertex(ref1)).length);
    }

