    private void addVertex(BusinessServiceGraph bsmGraph, GraphVertex graphVertex, AbstractBusinessServiceVertex topologyVertex) {
        if (topologyVertex == null) {
            // Create a topology vertex for the current vertex
            topologyVertex = createTopologyVertex(graphVertex);
            graph.addVertices(topologyVertex);
        }

        for (GraphEdge graphEdge : bsmGraph.getOutEdges(graphVertex)) {
            GraphVertex childVertex = bsmGraph.getOpposite(graphVertex, graphEdge);

            // Create a topology vertex for the child vertex

            AbstractBusinessServiceVertex childTopologyVertex = createTopologyVertex(childVertex);
            bsmGraph.getInEdges(childVertex).stream()
                    .map(GraphEdge::getFriendlyName)
                    .filter(s -> !Strings.isNullOrEmpty(s))
                    .findFirst()
                    .ifPresent(childTopologyVertex::setLabel);

            graph.addVertices(childTopologyVertex);

            // Connect the two
            childTopologyVertex.setParent(topologyVertex);
            Edge edge = new BusinessServiceEdge(graphEdge, topologyVertex, childTopologyVertex);
            graph.addEdges(edge);

            // Recurse
            addVertex(bsmGraph, childVertex, childTopologyVertex);
        }
    }

