    private static GraphVertex getGraphVertex(AbstractBusinessServiceVertex vertex, BusinessServiceGraph graph) {
        final AtomicReference<GraphVertex> graphVertex = new AtomicReference<>();
        vertex.accept(new BusinessServiceVertexVisitor<Void>() {
            @Override
            public Void visit(BusinessServiceVertex vertex) {
                graphVertex.set(graph.getVertexByBusinessServiceId(vertex.getServiceId()));
                return null;
            }

            @Override
            public Void visit(IpServiceVertex vertex) {
                graphVertex.set(graph.getVertexByIpServiceId(vertex.getIpServiceId()));
                return null;
            }

            @Override
            public Void visit(ReductionKeyVertex vertex) {
                graphVertex.set(graph.getVertexByReductionKey(vertex.getReductionKey()));
                return null;
            }

            @Override
            public Void visit(ApplicationVertex vertex) {
                graphVertex.set(graph.getVertexByApplicationId(vertex.getApplicationId()));
                return null;
            }
        });
        return graphVertex.get();
    }

