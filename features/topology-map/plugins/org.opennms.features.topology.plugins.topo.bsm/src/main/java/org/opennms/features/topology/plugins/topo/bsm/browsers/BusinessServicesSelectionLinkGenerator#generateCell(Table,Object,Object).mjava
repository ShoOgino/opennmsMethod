	@Override
	public Object generateCell(final Table source, final Object itemId, Object columnId) {
		// TODO MVR this is (almost) the same code as ApplicationSElectionLinkGenerator -> generalize
		@SuppressWarnings("unchecked")
		final Property<Long> idProperty = source.getContainerProperty(itemId, m_idPropertyName);
		Object cellValue = m_columnGenerator.generateCell(source, itemId, columnId);
		if (cellValue == null) {
			return null;
		} else {
			if (idProperty.getValue() == null) {
				return cellValue;
			} else {
				Button button = new Button(cellValue.toString());
				button.setStyleName(BaseTheme.BUTTON_LINK);
				button.setDescription(idProperty.getValue().toString());
				button.addClickListener(new Button.ClickListener() {
				private static final long serialVersionUID = 1L;

					@Override
					public void buttonClick(Button.ClickEvent event) {
					    // Retrieve the associated business service, we need it's name
					    // TODO: Can we get this directly from the table instead of issuing another DAO call?
					    String businessServiceId = String.valueOf(idProperty.getValue());
                        BusinessService businessService = m_businessServiceDao.get(Long.parseLong(businessServiceId));
                        if (businessService == null) {
                            LOG.warn("Could not find business service with id: {}", businessServiceId);
                        }

						// Retrieve the graph container associated with the current application context
						UI ui = UI.getCurrent();
						WidgetContext context = (WidgetContext)ui;
						GraphContainer graphContainer = context.getGraphContainer();

						// Add criteria use to filter for the selected application
						BusinessServiceCriteria businessServiceCriteria = new BusinessServiceCriteria(businessServiceId, businessService.getName());
						graphContainer.addCriteria(businessServiceCriteria);
                        graphContainer.setDirty(true);
                        graphContainer.redoLayout();
					}
				});
				return button;
			}
		}
	}

