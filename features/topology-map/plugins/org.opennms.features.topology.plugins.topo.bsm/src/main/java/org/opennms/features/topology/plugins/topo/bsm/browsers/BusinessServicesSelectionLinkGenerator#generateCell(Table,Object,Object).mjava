	@Override
	public Object generateCell(final Table source, final Object itemId, Object columnId) {
		// TODO MVR this is exactly the same code as ApplicationSElectionLinkGenerator -> generalize
		final Property<Long> idProperty = source.getContainerProperty(itemId, idPropertyName);
		Object cellValue = columnGenerator.generateCell(source, itemId, columnId);
		if (cellValue == null) {
			return null;
		} else {
			if (idProperty.getValue() == null) {
				return cellValue;
			} else {
				Button button = new Button(cellValue.toString());
				button.setStyleName(BaseTheme.BUTTON_LINK);
				button.setDescription(idProperty.getValue().toString());
				button.addClickListener(new Button.ClickListener() {
					@Override
					public void buttonClick(Button.ClickEvent event) {
						// Retrieve the graph container associated with the current application context
						UI ui = UI.getCurrent();
						WidgetContext context = (WidgetContext)ui;
						GraphContainer graphContainer = context.getGraphContainer();

						BusinessServiceCriteria businessServiceCriteria = graphContainer.findSingleCriteria(BusinessServiceCriteria.class);
						if (businessServiceCriteria == null) {
							businessServiceCriteria = new BusinessServiceCriteria();
						}

						String businessServiceId = String.valueOf(idProperty.getValue());
						if (!Objects.equals(businessServiceCriteria.getBusinessServiceId(), businessServiceId)) {
							businessServiceCriteria.setBusinessServiceId(businessServiceId);
							graphContainer.setDirty(true);
							graphContainer.redoLayout();
						}
					}
				});
				return button;
			}
		}
	}

