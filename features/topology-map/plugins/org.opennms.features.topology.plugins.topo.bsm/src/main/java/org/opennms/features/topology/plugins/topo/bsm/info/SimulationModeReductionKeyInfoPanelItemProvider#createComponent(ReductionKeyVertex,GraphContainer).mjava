    private Component createComponent(ReductionKeyVertex vertex, GraphContainer container) {
        final FormLayout formLayout = new FormLayout();
        formLayout.setSpacing(false);
        formLayout.setMargin(false);

        NativeSelect dropdown = new NativeSelect("Severity");
        dropdown.setMultiSelect(false);
        dropdown.setNewItemsAllowed(false);
        dropdown.setNullSelectionAllowed(true);
        dropdown.setImmediate(true);
        dropdown.setRequired(true);
        dropdown.addItems(Arrays.asList(Status.values()));

        SetStatusToCriteria setStatusTo = findCriteria(container, vertex);
        if (setStatusTo != null) {
            dropdown.setValue(setStatusTo.getStatus());
        } else {
            dropdown.setValue(null);
        }

        dropdown.addValueChangeListener(event -> {
            final SetStatusToCriteria currentSetStatusTo = findCriteria(container, vertex);
            final Status selectedStatus = (Status) dropdown.getValue();
            final SetStatusToCriteria newSetStatusTo = new SetStatusToCriteria(vertex.getReductionKey(), selectedStatus);
            if (currentSetStatusTo == null || !Objects.equals(selectedStatus, currentSetStatusTo.getStatus())) {
                if (currentSetStatusTo != null) {
                    container.removeCriteria(currentSetStatusTo);
                }
                container.addCriteria(newSetStatusTo);
            }
            container.getSelectionManager().setSelectedVertexRefs(Collections.emptyList());
            container.getSelectionManager().setSelectedEdgeRefs(Collections.emptyList());
            container.redoLayout();
        });
        formLayout.addComponent(dropdown);

        return formLayout;
    }

