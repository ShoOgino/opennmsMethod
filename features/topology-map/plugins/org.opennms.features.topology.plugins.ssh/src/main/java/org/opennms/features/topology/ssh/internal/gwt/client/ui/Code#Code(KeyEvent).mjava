	/**
	 * The Code(KeyEvent event) constructor takes a generic KeyEvent and decides whether
	 * it is a KeyPressEvent or KeyDownEvent. Any relevant information about the event
	 * is extracted and stored in class variables
	 * @param event generic KeyEvent
	 */
	@SuppressWarnings("rawtypes")
	public Code(KeyEvent event){
		if (event != null){
			if (event instanceof KeyPressEvent){
				kP_Event = (KeyPressEvent)event;
			} else if (event instanceof KeyDownEvent){
				kD_Event = (KeyDownEvent)event;
			}
			isCtrlDown = event.isControlKeyDown();
			isAltDown = event.isAltKeyDown();
			isShiftDown  = event.isShiftKeyDown();
		}
		
		if (kP_Event != null){
			charCode = kP_Event.getUnicodeCharCode();
		} else if (kD_Event != null){
			keyCode = kD_Event.getNativeKeyCode();
		} 
		
		isFunctionKey = false;
		for (int k : keyCodes){
			if (keyCode == k) {
				isFunctionKey = true;
				break;
			}
		}
	}

