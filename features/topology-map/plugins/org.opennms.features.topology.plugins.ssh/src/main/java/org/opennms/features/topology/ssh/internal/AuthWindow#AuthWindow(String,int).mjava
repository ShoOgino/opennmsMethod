    /**
     * This constructor method spawns a window to authorize the
     * username and password input by the user. If the authroization
     * is sucessful, the user will be connected to the host at the 
     * given port through SSH, and the terminal emulator this window
     * will be replaced by a terminal emulator. 
     * 
     * @param app - The current application
     * @param h - The host name to connect to 
     * @param p - The port number to connect to
     */
    public AuthWindow(String host, int port) {
        m_host = host;
        m_port = port;
        if ("".equals(m_host) || m_port == 0) {
            showOptions = true;
        }
        setName("Auth Window");
        setModal(true);
        setCaption("Login");
        setWidth("260px");
        setHeight("190px");
        if (showOptions) setHeight("260px");
        setResizable(false);

        Label hostLabel = new Label("Host: ");
        hostField = new TextField();
        hostField.setMaxLength(FIELD_BUFFER);

        Label portLabel = new Label("Port: ");
        portField = new TextField();
        portField.setMaxLength(FIELD_BUFFER);

        Label usernameLabel = new Label("Username: ");
        usernameField = new TextField();
        usernameField.setMaxLength(FIELD_BUFFER);

        Label passwordLabel = new Label("Password: ");
        passwordField = new PasswordField();
        passwordField.setMaxLength(FIELD_BUFFER);

        final Button loginButton = new Button("Login");
        loginButton.setClickShortcut(KeyCode.ENTER);
        client = SshClient.setUpDefaultClient();
        client.start();
        loginButton.addListener(this); 
        GridLayout grid = new GridLayout(2,2);
        if (showOptions) {
            grid = new GridLayout(2,4);
            grid.addComponent(hostLabel);
            grid.addComponent(hostField);
            grid.addComponent(portLabel);
            grid.addComponent(portField);
        }
        grid.addComponent(usernameLabel);
        grid.addComponent(usernameField);
        grid.addComponent(passwordLabel);
        grid.addComponent(passwordField);
        grid.setSpacing(true);
        grid.setMargin(false, false, true, false);
        VerticalLayout layout = new VerticalLayout();
        layout.addComponent(grid);
        layout.addComponent(loginButton);
        layout.setComponentAlignment(loginButton, Alignment.BOTTOM_RIGHT);
        addComponent(layout);
    }

