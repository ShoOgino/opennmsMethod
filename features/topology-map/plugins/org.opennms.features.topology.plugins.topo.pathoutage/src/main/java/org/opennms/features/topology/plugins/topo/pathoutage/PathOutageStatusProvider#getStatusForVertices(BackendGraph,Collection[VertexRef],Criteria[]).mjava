	@Override
	public Map<VertexRef, Status> getStatusForVertices(BackendGraph graph, Collection<VertexRef> vertices, Criteria[] criteria) {
		final List<Integer> nodeIds = vertices.stream().filter(v -> v.getNamespace().equals(getNamespace()))
													   .map(v -> (PathOutageVertex)v)
													   .map(v -> v.getNodeID())
													   .collect(Collectors.toList());
		if (nodeIds.isEmpty()) {
			return new HashMap<>();
		}

		// Preparing database request
		final StringBuilder hql = new StringBuilder();
		hql.append("SELECT node.id, max(event.eventSeverity) ");
		hql.append("FROM OnmsOutage as outage ");
		hql.append("LEFT JOIN outage.monitoredService as ifservice ");
		hql.append("LEFT JOIN ifservice.ipInterface as ipinterface ");
		hql.append("LEFT JOIN ipinterface.node as node ");
		hql.append("LEFT JOIN outage.serviceLostEvent as event ");
		hql.append("WHERE node.id in (:nodeIds) ");
		hql.append("AND outage.serviceRegainedEvent is null ");
		hql.append("GROUP BY node.id");

		final List<String> paramNames = Lists.newArrayList("nodeIds");
		final List<Object> paramValues = new ArrayList();
		paramValues.add(Lists.newArrayList(nodeIds));
		final List<Object[]> retvals = this.persistenceAccessor.findUsingNamedParameters(hql.toString(),
																						 paramNames.toArray(new String[paramNames.size()]),
																						 paramValues.toArray());
		// Generating alarms map
		final Map<Integer, OnmsSeverity> mappedAlarms = new HashedMap();
		for (int i = 0; i < retvals.size(); i++) {
			final Integer nodeId = (Integer) retvals.get(i)[0];
			final Integer severity = Optional.ofNullable((Integer) retvals.get(i)[1]).orElse(OnmsSeverity.NORMAL.ordinal());
			mappedAlarms.put(nodeId, OnmsSeverity.get(severity));
		}
		final Map<VertexRef, Status> status = vertices.stream()
				.map(v -> (PathOutageVertex)v)
				.collect(Collectors.toMap(v -> v, v -> {
					if (!mappedAlarms.containsKey(v.getNodeID())) {
						return new DefaultStatus(OnmsSeverity.NORMAL.getLabel(), 0);
					} else {
						return new DefaultStatus(mappedAlarms.get(v.getNodeID()).getLabel(), 0);
					}
				}));
		return status;
	}

