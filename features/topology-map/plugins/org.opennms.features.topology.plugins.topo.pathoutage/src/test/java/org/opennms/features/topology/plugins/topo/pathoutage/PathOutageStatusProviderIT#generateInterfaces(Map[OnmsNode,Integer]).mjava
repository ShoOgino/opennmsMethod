	/**
	 * In this method we create {@link OnmsIpInterface} objects for some of the {@link OnmsNode}s
	 * and save them to the {@link IpInterfaceDao}
	 * @param nodes List of nodes to use
	 */
	private void generateInterfaces(Map<OnmsNode, Integer> nodes) {
		Map<Integer, OnmsNode> nodesConverted = new HashMap<>();
		for (OnmsNode node : nodes.keySet()) {
			nodesConverted.put(node.getId(), node);
		}
		OnmsIpInterface interface_1 = new OnmsIpInterface(InetAddressUtils.getInetAddress(address_1), nodesConverted.get(1));
		OnmsIpInterface interface_2 = new OnmsIpInterface(InetAddressUtils.getInetAddress(address_2), nodesConverted.get(2));
		OnmsIpInterface interface_3 = new OnmsIpInterface(InetAddressUtils.getInetAddress(address_3), nodesConverted.get(3));
		OnmsIpInterface interface_4 = new OnmsIpInterface(InetAddressUtils.getInetAddress(address_4), nodesConverted.get(4));
		interfaceDao.save(interface_1);
		interfaceDao.save(interface_2);
		interfaceDao.save(interface_3);
		interfaceDao.save(interface_4);
		nodesConverted.get(1).addIpInterface(interface_1);
		nodesConverted.get(2).addIpInterface(interface_2);
		nodesConverted.get(3).addIpInterface(interface_3);
		nodesConverted.get(4).addIpInterface(interface_4);
	}

