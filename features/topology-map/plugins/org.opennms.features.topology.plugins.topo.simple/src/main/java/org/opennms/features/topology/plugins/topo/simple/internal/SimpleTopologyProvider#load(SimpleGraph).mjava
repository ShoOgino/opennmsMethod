    private void load(SimpleGraph graph) {
        String namespace = graph.m_namespace == null ? TOPOLOGY_NAMESPACE_SIMPLE : graph.m_namespace;
        if (getVertexNamespace() != namespace) { 
            m_vertexProvider = new SimpleVertexProvider(namespace);
        }
        if (getEdgeNamespace() != namespace) { 
            m_edgeProvider = new SimpleEdgeProvider(namespace);
        }

        clearVertices();
        for (Vertex vertex : graph.m_vertices) {
            if (vertex.getNamespace() == null || vertex.getId() == null) {
                LoggerFactory.getLogger(this.getClass()).warn("Invalid vertex unmarshalled from {}: {}", graph, vertex);
            } else if (vertex.getId().startsWith(SIMPLE_GROUP_ID_PREFIX)) {
                try {
                    // Find the highest index group number and start the index for new groups above it
                    int groupNumber = Integer.parseInt(vertex.getId().substring(SIMPLE_GROUP_ID_PREFIX.length()));
                    if (m_groupCounter <= groupNumber) {
                        m_groupCounter = groupNumber + 1;
                    }
                } catch (NumberFormatException e) {
                    continue;
                }
            }
        }
        addVertices(graph.m_vertices.toArray(new Vertex[0]));
        
        clearEdges();
        for (JaxbEdge edge : graph.m_edges) {
            if (edge.getNamespace() == null || edge.getId() == null) {
                LoggerFactory.getLogger(this.getClass()).warn("Invalid edge unmarshalled from {}: {}", graph, edge);
            } else if (edge.getId().startsWith(SIMPLE_EDGE_ID_PREFIX)) {
                try {
                    /*
                     * This code will be necessary if we allow edges to be created
                    
                    // Find the highest index group number and start the index for new groups above it
                    int edgeNumber = Integer.parseInt(edge.getId().substring(SIMPLE_EDGE_ID_PREFIX.length()));
                    
                    if (m_edgeCounter <= edgeNumber) {
                        m_edgeCounter = edgeNumber + 1;
                    }
                    */
                } catch (NumberFormatException e) {
                    continue;
                }
            }
            Edge newEdge = new AbstractEdge(edge.getNamespace(), edge.getId(), edge.getSource(), edge.getTarget());
            addEdges(newEdge);
        }
    }

