    private AbstractVertex createVirtualMachineVertex(String vertexId, String vertexName, String primaryInterface, int id, String powerState) {
        AbstractVertex vertex;
        if ("poweredOn".equals(powerState)) {
            vertex = createEntityVertex(vertexId, vertexName, Icons.VIRTUAL_MACHINE_ON);
        } else if ("poweredOff".equals(powerState)) {
            vertex = createEntityVertex(vertexId, vertexName, Icons.VIRTUAL_MACHINE_OFF);
        } else if ("suspended".equals(powerState)) {
            vertex = createEntityVertex(vertexId, vertexName, Icons.VIRTUAL_MACHINE_SUSPENDED);
        } else {
            vertex = createEntityVertex(vertexId, vertexName, Icons.VIRTUAL_MACHINE_UNKNOWN);
        }
        vertex.setIpAddress(primaryInterface);
        vertex.setNodeID(id);
        return vertex;
    }

