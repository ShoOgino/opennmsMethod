    private void addHostSystem(OnmsNode hostSystem) {
        String vmwareManagementServer = hostSystem.getAssetRecord().getVmwareManagementServer().trim();
        String vmwareManagedObjectId = hostSystem.getAssetRecord().getVmwareManagedObjectId().trim();
        String vmwareState = hostSystem.getAssetRecord().getVmwareState().trim();
        String primaryInterface = "unknown";
        OnmsIpInterface ipInterface = m_ipInterfaceDao.findPrimaryInterfaceByNodeId(hostSystem.getId());

        if (ipInterface != null) {
            primaryInterface = ipInterface.getIpHostName();
        }

        AbstractVertex hostSystemVertex = createHostSystemVertex(
                vmwareManagementServer + "/" + vmwareManagedObjectId,
                hostSystem.getLabel(),
                primaryInterface,
                hostSystem.getId(),
                vmwareState
        );

        addVertices(hostSystemVertex);

        Map<String, ParsedEntity> parsedEntities = parseNodeAssets(hostSystem);

        String datacenterName = parsedEntities.values().stream().filter(e -> "datacenter".equals(e.getEntityType())).findFirst().map(e -> parsedEntities.get(e.getEntityId()).getEntityName() + " (" + vmwareManagementServer + ")").orElse("Datacenter (" + vmwareManagementServer + ")");

        AbstractVertex datacenterVertex = createDatacenterVertex(vmwareManagementServer, datacenterName);
        addVertices(datacenterVertex);

        if (!hostSystemVertex.equals(datacenterVertex)) {
            connectVertices(hostSystemVertex, datacenterVertex);
        }

        parsedEntities.values().stream().filter(e -> "network".equals(e.getEntityType())).forEach(
                e -> {
                    AbstractVertex networkVertex = createNetworkVertex(vmwareManagementServer + "/" + e.getEntityId(), parsedEntities.get(e.getEntityId()).getEntityName());
                    addVertices(networkVertex);

                    connectVertices(
                            vmwareManagementServer + "/" + vmwareManagedObjectId + "->" + e.getEntityId(),
                            hostSystemVertex,
                            networkVertex,
                            getEdgeNamespace()
                    );
                }
        );

        parsedEntities.values().stream().filter(e -> "datastore".equals(e.getEntityType())).forEach(
                e -> {
                    AbstractVertex datastoreVertex = createDatastoreVertex(vmwareManagementServer + "/" + e.getEntityId(), parsedEntities.get(e.getEntityId()).getEntityName());
                    addVertices(datastoreVertex);

                    connectVertices(
                            vmwareManagementServer + "/" + vmwareManagedObjectId + "->" + e.getEntityId(),
                            hostSystemVertex,
                            datastoreVertex,
                            getEdgeNamespace()
                    );
                }
        );
    }

