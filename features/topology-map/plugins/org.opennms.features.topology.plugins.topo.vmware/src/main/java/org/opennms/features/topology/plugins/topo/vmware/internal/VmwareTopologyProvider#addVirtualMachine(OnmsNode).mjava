    private void addVirtualMachine(OnmsNode virtualMachine) {
        final String vmwareManagementServer = getManagementServer(virtualMachine);
        final String vmwareManagedObjectId = getManagedObjectId(virtualMachine);
        final String vmwareState = getState(virtualMachine);

        String primaryInterface = "unknown";
        OnmsIpInterface ipInterface = m_ipInterfaceDao.findPrimaryInterfaceByNodeId(virtualMachine.getId());

        if (ipInterface != null) {
            primaryInterface = ipInterface.getIpHostName();
        }

        Map<String, ParsedEntity> parsedEntities = parseNodeAssets(virtualMachine);

        String vmwareHostSystemId = parsedEntities.values().stream().filter(e -> "host".equals(e.getEntityType())).findFirst().map(ParsedEntity::getEntityId).orElse(null);

        if (vmwareHostSystemId == null) {
            LOG.warn("Cannot find host system id for virtual machine {}/{}", vmwareManagementServer, vmwareManagedObjectId);
        }

        AbstractVertex virtualMachineVertex = createVirtualMachineVertex(vmwareManagementServer + "/" + vmwareManagedObjectId, virtualMachine.getLabel(), primaryInterface, virtualMachine.getId(), vmwareState);
        graph.addVertices(virtualMachineVertex);

        if (!graph.containsVertexId(vmwareManagementServer + "/" + vmwareHostSystemId)) {
            LOG.warn("Cannot find associated vertex for host system {}/{}", vmwareManagementServer, vmwareHostSystemId);
        }

        graph.connectVertices(
                vmwareManagementServer + "/" + vmwareManagedObjectId + "->" + vmwareManagementServer + "/" + vmwareHostSystemId,
                virtualMachineVertex,
                graph.getVertex(getNamespace(), vmwareManagementServer + "/" + vmwareHostSystemId)
        );
    }

