	private void createERRandomTopology(Integer numberOfNodes, Integer averageNumberofNeighboors) {
		Map<Integer,SimpleLeafVertex> nodes = new HashMap<Integer, SimpleLeafVertex>();
		List<SimpleEdge> edges = new ArrayList<SimpleEdge>();
		for (Integer i=0; i< numberOfNodes ;i++) {
			SimpleLeafVertex vertex = new SimpleLeafVertex(Integer.toString(i),0,0);
			vertex.setIconKey("sfree:system");
			vertex.setLabel("ErdosReniyNode"+i);
			
			nodes.put(i,vertex);
		}

		Double z = 0.5*(numberOfNodes-1);
//		Double p = averageNumberofNeighboors/z;
		
		Random r = new Random((new Date()).getTime());
		
		for (Integer start=0; start < numberOfNodes; start++) {
			for (Integer end = start+1; end<numberOfNodes;end++) {
				if (z*r.nextDouble()<averageNumberofNeighboors)  {
					edges.add(new SimpleEdge("link:"+start+"-"+end, nodes.get(start), nodes.get(end)));
				}
			}
		}
		
		m_vertexContainer.addAll(nodes.values());
		m_edgeContainer.addAll(edges);
		
	}

