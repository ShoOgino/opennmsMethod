    @Test
    public void testLoadSimpleGraph() throws Exception {
		/*
        m_topologyProvider = new EnhancedLinkdTopologyProvider();
		m_topologyProvider.load("target/test-classes/simple-graph.xml");
        */

        assertEquals(8, m_topologyProvider.getVertices().size());
        assertEquals(9, m_topologyProvider.getEdges().size());

        Vertex v1 = m_topologyProvider.getVertex("nodes", "1");
        Vertex v2 = m_topologyProvider.getVertex("nodes", "2");
        Vertex v3 = m_topologyProvider.getVertex("nodes", "3");
        Vertex v4 = m_topologyProvider.getVertex("nodes", "4");
        Vertex v5 = m_topologyProvider.getVertex("nodes", "5");
        Vertex v6 = m_topologyProvider.getVertex("nodes", "6");
        assertEquals("node1", v1.getLabel());
        assertEquals("192.168.1.1", v1.getIpAddress());
        assertEquals(false, v1.isLocked());
        assertEquals((Object)new Integer(1), (Object)v1.getNodeID());
        assertEquals(false, v1.isSelected());
        assertEquals((Object)new Integer(0), (Object)v1.getX());
        assertEquals((Object)new Integer(0), (Object)v1.getY());
        //assertEquals(v5, v1.getParent());

        //assertEquals(2, m_topologyProvider.getChildren(v5).size());

        assertEquals(0, m_topologyProvider.getSemanticZoomLevel(v1));
        assertEquals(0, m_topologyProvider.getSemanticZoomLevel(v2));
        assertEquals(0, m_topologyProvider.getSemanticZoomLevel(v3));
        assertEquals(0, m_topologyProvider.getSemanticZoomLevel(v4));
        assertEquals(0, m_topologyProvider.getSemanticZoomLevel(v5));
        assertEquals(0, m_topologyProvider.getSemanticZoomLevel(v6));

        assertEquals(3, m_topologyProvider.getEdgeIdsForVertex(v1).length);
        assertEquals(3, m_topologyProvider.getEdgeIdsForVertex(v2).length);
        assertEquals(2, m_topologyProvider.getEdgeIdsForVertex(v3).length);
        assertEquals(2, m_topologyProvider.getEdgeIdsForVertex(v4).length);
        assertEquals(2, m_topologyProvider.getEdgeIdsForVertex(v5).length);
        assertEquals(2, m_topologyProvider.getEdgeIdsForVertex(v6).length);

        for (Vertex vertex : m_topologyProvider.getVertices()) {
            assertEquals("nodes", vertex.getNamespace());
            //assertTrue(vertex.getIpAddress(), "127.0.0.1".equals(vertex.getIpAddress()) || "64.146.64.214".equals(vertex.getIpAddress()));
        }

        int countLLDP = 0;
        int countOSPF = 0;
        for (Edge edge : m_topologyProvider.getEdges()) {
            if (edge.getNamespace().equals(EnhancedLinkdTopologyProvider.LLDP_EDGE_NAMESPACE)) {
                countLLDP++;
            } else if (edge.getNamespace().equals(EnhancedLinkdTopologyProvider.OSPF_EDGE_NAMESPACE)) {
                countOSPF++;
            }
        }
        assertEquals(8, countLLDP);
        assertEquals(1, countOSPF);
    }

