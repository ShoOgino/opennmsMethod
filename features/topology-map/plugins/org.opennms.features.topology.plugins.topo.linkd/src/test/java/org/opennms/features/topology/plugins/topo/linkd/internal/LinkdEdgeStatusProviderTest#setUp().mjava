    @Before
    public void setUp() throws OnmsTopologyException {
        OnmsMonitoringLocation location = new OnmsMonitoringLocation("default","default");
        m_node1 = new OnmsNode();
        m_node1.setId(1);
        m_node1.setLabel("source");
        m_node1.setLocation(location);

        m_node2 = new OnmsNode();
        m_node2.setId(2);
        m_node2.setLabel("target1");
        m_node2.setLocation(location);


        m_node3 = new OnmsNode();
        m_node3.setId(3);
        m_node3.setLabel("target2");
        m_node3.setLocation(location);

        m_node4 = new OnmsNode();
        m_node4.setId(4);
        m_node4.setLabel("source");
        m_node4.setLocation(location);

        m_node5 = new OnmsNode();
        m_node5.setId(5);
        m_node5.setLabel("target");
        m_node5.setLocation(location);

        m_nodeDehli = new OnmsNode();
        m_nodeDehli.setId(10);
        m_nodeDehli.setLabel("dehli");
        m_nodeDehli.setLocation(location);

        m_nodeChennai = new OnmsNode();
        m_nodeChennai.setId(14);
        m_nodeChennai.setLabel("chennai");
        m_nodeChennai.setLocation(location);


        m_edges = new ArrayList<>();
        //segment s:1:48
        LinkdVertex segmentVertex = new LinkdVertex("s:1:48");
        LinkdVertex node1Vertex = getVertexFromNode(m_node1);
        LinkdVertex node2Vertex = getVertexFromNode(m_node2);
        LinkdVertex node3Vertex = getVertexFromNode(m_node3);
        LinkdPort segmentPort = new LinkdPort(segmentVertex, -1);
        LinkdPort bpnode1port48 = new LinkdPort(node1Vertex,48);
        LinkdPort bpnode2port24 = new LinkdPort(node2Vertex,24);
        LinkdPort iptm3 = new LinkdPort(node3Vertex,-1);
        iptm3.setToolTipText("a8d0e5a0a467/[10.10.1.1]");
        m_edges.add(LinkdEdge.create("s:1:48|1:48", segmentPort, bpnode1port48, ProtocolSupported.BRIDGE));
        m_edges.add(LinkdEdge.create("s:1:48|2:24", segmentPort, bpnode2port24, ProtocolSupported.BRIDGE));
        m_edges.add(LinkdEdge.create("s:1:48|3",segmentPort,iptm3,ProtocolSupported.BRIDGE));

        
        // node4 and node5 connected via cdp isis ospf and lldp
        LinkdVertex node4Vertex = getVertexFromNode(m_node4);
        LinkdVertex node5Vertex = getVertexFromNode(m_node5);
        LinkdPort node4port599 = new LinkdPort(node4Vertex, 599);
        LinkdPort node5port578 = new LinkdPort(node5Vertex, 578);
        LinkdPort node4port1 = new LinkdPort(node4Vertex, 1);
        LinkdPort node5port21 = new LinkdPort(node5Vertex, 21);
        LinkdPort node4port10101 = new LinkdPort(node4Vertex, 10101);
        LinkdPort node5port10100 = new LinkdPort(node5Vertex, 10100);
        LinkdPort node4port101 = new LinkdPort(node4Vertex, 101);
        LinkdPort node5port100 = new LinkdPort(node5Vertex, 100);
        m_edges.add(LinkdEdge.create("104|105", node4port599, node5port578,ProtocolSupported.ISIS));
        m_edges.add(LinkdEdge.create("204|205", node4port1, node5port21,ProtocolSupported.LLDP));
        m_edges.add(LinkdEdge.create("404|405", node4port10101, node5port10100, ProtocolSupported.OSPF));
        m_edges.add(LinkdEdge.create("504|505", node4port101, node5port100, ProtocolSupported.CDP));

        // dehli and chennai connected via ospf
        LinkdVertex dehliVertex = getVertexFromNode(m_nodeDehli);
        LinkdVertex chennaiVertex = getVertexFromNode(m_nodeChennai);
        LinkdPort dehliport12 = new LinkdPort(dehliVertex, 12); 
        LinkdPort chennaiport13 = new LinkdPort(chennaiVertex, 13);
        m_edges.add(LinkdEdge.create("310|314", dehliport12, chennaiport13, ProtocolSupported.OSPF));

        m_alarmDao = EasyMock.createMock(AlarmDao.class);
        m_edgeProvider = EasyMock.createMock(EdgeProvider.class);
        m_statusProvider = new LinkdEdgeStatusProvider();
        m_statusProvider.setAlarmDao(m_alarmDao);

    }

