    @Test
    public void testConnectVertices() {
        m_topologyProvider.getCurrentGraph().resetContainer();

        Vertex vertexId = new SimpleLeafVertex(m_topologyProvider.getNamespace(), "v0", 0, 0);
        m_topologyProvider.getCurrentGraph().addVertices(vertexId);

        assertEquals(1, m_topologyProvider.getCurrentGraph().getVertices().size());
        Vertex vertex0 = m_topologyProvider.getCurrentGraph().getVertices().iterator().next();
        assertEquals("v0", vertex0.getId());

        Vertex vertex1 = new SimpleLeafVertex(m_topologyProvider.getNamespace(), "v1", 0, 0);
        m_topologyProvider.getCurrentGraph().addVertices(vertex1);
        assertEquals(2, m_topologyProvider.getCurrentGraph().getVertices().size());

        Edge edgeId = m_topologyProvider.getCurrentGraph().connectVertices("e0", vertex0, vertex1);
        assertEquals(1, m_topologyProvider.getCurrentGraph().getEdges().size());
        SimpleLeafVertex sourceLeafVert = (SimpleLeafVertex) edgeId.getSource().getVertex();
        SimpleLeafVertex targetLeafVert = (SimpleLeafVertex) edgeId.getTarget().getVertex();

        assertEquals("v0", sourceLeafVert.getId());
        assertEquals("v1", targetLeafVert.getId());

        EdgeRef[] edgeIds = m_topologyProvider.getCurrentGraph().getEdgeIdsForVertex(vertexId);
        assertEquals(1, edgeIds.length);
        assertEquals(edgeId, edgeIds[0]);
    }

