    private void verifyLinkingBetweenNodes(VertexRef left, VertexRef right) {

        // 1.) get the EdgeRef that connects the 2 vertices
        List<EdgeRef> leftRefs = Arrays.asList(linkdTopologyProvider.getCurrentGraph().getEdgeIdsForVertex(left));
        List<EdgeRef>  rightRefs = Arrays.asList(linkdTopologyProvider.getCurrentGraph().getEdgeIdsForVertex(right));
        Set<EdgeRef> intersection = intersect(leftRefs, rightRefs);
        assertEquals(1, intersection.size());
        EdgeRef ref = intersection.iterator().next();

        // 2.) get the Edge and check if it really connects the 2 Vertices
        Edge edge = linkdTopologyProvider.getCurrentGraph().getEdge(ref);
        // we don't know the direction it is connected so we have to test both ways:
        assertTrue(
                (edge.getSource().getVertex().equals(left) || edge.getSource().getVertex().equals(right)) // source side
                        && (edge.getTarget().getVertex().equals(left) || edge.getTarget().getVertex().equals(right)) // target side
                        && !edge.getSource().getVertex().equals(edge.getTarget().getVertex())); // make sure it doesn't connect the same node
    }

