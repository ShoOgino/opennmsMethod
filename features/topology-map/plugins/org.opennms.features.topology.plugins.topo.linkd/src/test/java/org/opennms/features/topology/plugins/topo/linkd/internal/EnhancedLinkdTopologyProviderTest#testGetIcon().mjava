    @Test
    public void testGetIcon() {
        m_topologyProvider.refresh();
        Vertex vertex1 = m_topologyProvider.getCurrentGraph().getVertex(OnmsTopology.TOPOLOGY_NAMESPACE_LINKD, "1");
        Vertex vertex2 = m_topologyProvider.getCurrentGraph().getVertex(OnmsTopology.TOPOLOGY_NAMESPACE_LINKD, "2");
        Vertex vertex3 = m_topologyProvider.getCurrentGraph().getVertex(OnmsTopology.TOPOLOGY_NAMESPACE_LINKD, "3");
        Vertex vertex4 = m_topologyProvider.getCurrentGraph().getVertex(OnmsTopology.TOPOLOGY_NAMESPACE_LINKD, "4");
        Vertex vertex5 = m_topologyProvider.getCurrentGraph().getVertex(OnmsTopology.TOPOLOGY_NAMESPACE_LINKD, "5");
        Vertex vertex6 = m_topologyProvider.getCurrentGraph().getVertex(OnmsTopology.TOPOLOGY_NAMESPACE_LINKD, "6");
        Vertex vertex7 = m_topologyProvider.getCurrentGraph().getVertex(OnmsTopology.TOPOLOGY_NAMESPACE_LINKD, "7");
        Vertex vertex8 = m_topologyProvider.getCurrentGraph().getVertex(OnmsTopology.TOPOLOGY_NAMESPACE_LINKD, "8");
        Assert.assertTrue("linkd.system.snmp.1.3.6.1.4.1.5813.1.25".equals(vertex1.getIconKey()));
        Assert.assertTrue("linkd.system".equals(vertex2.getIconKey()));
        Assert.assertTrue("linkd.system".equals(vertex3.getIconKey()));
        Assert.assertTrue("linkd.system".equals(vertex4.getIconKey()));
        Assert.assertTrue("linkd.system".equals(vertex5.getIconKey()));
        Assert.assertTrue("linkd.system".equals(vertex6.getIconKey()));
        Assert.assertTrue("linkd.system".equals(vertex7.getIconKey()));
        Assert.assertTrue("linkd.system".equals(vertex8.getIconKey()));
    }

