    private void getIsIsLinks(){
        List<Object[]> isislinks = m_isisLinkDao.getLinksForTopology();

        for (Object[] linkObj : isislinks) {
            Integer link1Id = (Integer) linkObj[1];
            Integer link1Nodeid = (Integer) linkObj[2];
            Integer link1IfIndex = (Integer) linkObj[3];
            Integer link2Id = (Integer) linkObj[4];
            Integer link2Nodeid = (Integer) linkObj[5];
            Integer link2IfIndex = (Integer) linkObj[6];
            IsIsLinkDetail linkDetail = new IsIsLinkDetail(
                    Math.min(link1Id, link2Id) + "|" + Math.max(link1Id, link2Id),
                    getVertex(m_nodeDao.get(link1Nodeid)),
                    link1Id,
                    link1IfIndex,
                    getVertex(m_nodeDao.get(link2Nodeid)),
                    link2Id,
                    link2IfIndex
            );

            AbstractEdge edge = connectVertices(linkDetail.getId(), linkDetail.getSource(), linkDetail.getTarget(), ISIS_EDGE_NAMESPACE);
            edge.setTooltipText(getEdgeTooltipText(linkDetail));
        }
    }

