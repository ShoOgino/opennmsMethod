    @Override
    protected List<EdgeAlarmStatusSummary> getEdgeAlarmSummaries(List<Integer> linkIds) {
        //Bridge Links are different, don't need the linkIds

        Multimap<String, EdgeAlarmStatusSummary> summaryMap = HashMultimap.create();
        for(BridgeMacTopologyLink link : m_multimapLinks.values()) {
            String key = link.getSrcNodeId() + ":" + link.getBridgePortIfIndex();

            if (!summaryMap.containsKey(key)){
                summaryMap.put(key, new EdgeAlarmStatusSummary(link.getSrcNodeId(), link.getBridgePort(), null));
            }

            if(link.getTargetNodeId() != null ){
                summaryMap.put(link.getTargetNodeId().toString(), new EdgeAlarmStatusSummary(link.getSrcNodeId(), link.getTargetNodeId(), null));
            }
        }

        List<OnmsAlarm> alarms = getLinkDownAlarms();
        for(OnmsAlarm alarm : alarms){
            String key = alarm.getNodeId() + ":" + alarm.getIfIndex();
            String cloudKey = alarm.getNodeId() + "|" + alarm.getIfIndex();
            if (summaryMap.containsKey(key)) {
                Collection<EdgeAlarmStatusSummary> summaries = summaryMap.get(key);

                if(m_multimapLinks.containsKey(cloudKey)){
                    for(BridgeMacTopologyLink link : m_multimapLinks.get(cloudKey)) {
                        String indexKey = link.getTargetNodeId().toString();
                        summaries.addAll(summaryMap.get(indexKey));
                    }
                }

                for (EdgeAlarmStatusSummary summary : summaries) {
                    summary.setEventUEI(alarm.getUei());
                }
            }
        }


        List<EdgeAlarmStatusSummary> ret_val = new ArrayList<EdgeAlarmStatusSummary>();
        for (String summaryMapKey : summaryMap.keySet()) {
            ret_val.addAll(summaryMap.get(summaryMapKey));
        }

        return ret_val;
    }

