    private void loadtopology() {
        log("loading topology");
        LinkdVertexContainer vertexContainer = new LinkdVertexContainer();
        BeanContainer<String, LinkdEdge> edgeContainer = new BeanContainer<String, LinkdEdge>(LinkdEdge.class);
        edgeContainer.setBeanIdProperty("id");
        for (DataLinkInterface link: m_dataLinkInterfaceDao.findAll()) {
            log("parsing link: " + link);
            OnmsNode node = link.getNode();
            log("found node: " + node);
            String sourceId = node.getNodeId();
            LinkdVertex source;
            BeanItem<LinkdVertex> item = vertexContainer.getItem(sourceId);
            if (item == null) {
                source = new LinkdNodeVertex(node.getNodeId(), 0, 0, getIconName(node), node.getLabel(), getAddress(node));
                vertexContainer.addBean( source);
            }
            else {
                source = item.getBean();
            }

            OnmsNode parentNode = m_nodeDao.get(link.getNodeParentId());
            log("found parentnode: " + parentNode);
                       String targetId = parentNode.getNodeId();
            LinkdVertex target;
            item = vertexContainer.getItem(targetId);
            if (item == null) {
                target = new LinkdNodeVertex(parentNode.getNodeId(), 0, 0, getIconName(parentNode), parentNode.getLabel(), getAddress(parentNode));
                vertexContainer.addBean(target);                    
            }
            else {
                target = item.getBean();
            }            
            edgeContainer.addBean(new LinkdEdge(link.getId().toString(),source,target));
        }
        
        if (isAddNodeWithoutLink()) {
            for (OnmsNode node: m_nodeDao.findAll()) {
                log("parsing node: " + node);
                String nodeId = node.getNodeId();
                LinkdVertex linklessnode;
                BeanItem<LinkdVertex> item = vertexContainer.getItem(nodeId);
                if (item == null) {
                    log("adding linklessnode: " + node);
                    linklessnode = new LinkdNodeVertex(node.getNodeId(), 0, 0, getIconName(node), node.getLabel(), getAddress(node));
                    vertexContainer.addBean(linklessnode);
                }                
            }
        }
        m_vertexContainer.removeAllItems();
        m_vertexContainer=vertexContainer;
        m_edgeContainer.removeAllItems();
        m_edgeContainer=edgeContainer;
    }

