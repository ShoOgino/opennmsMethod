    private void getCdpLinks() {
        List<CdpTopologyLink> cdpLinks = m_cdpLinkDao.findLinksForTopology();

        if (cdpLinks != null && cdpLinks.size() > 0) {
            for (CdpTopologyLink link : cdpLinks) {
                LOG.debug("loadtopology: adding cdp link: '{}'", link );
                String id = Math.min(link.getSourceId(), link.getTargetId()) + "|" + Math.max(link.getSourceId(), link.getTargetId());
                Vertex source = getVertex(getVertexNamespace(), link.getSrcNodeId().toString());
                if (source == null) {
                    source = getDefaultVertex(link.getSrcNodeId(),
                                              link.getSrcSysoid(),
                                              link.getSrcLabel(),
                                            link.getSrcLocation(),
                                        link.getSrcNodeType());
                    addVertices(source);
                }
                Vertex target = getVertex(getVertexNamespace(), link.getTargetNodeId().toString());
                if (target == null) {
                    target = getDefaultVertex(link.getTargetNodeId(),
                                              link.getTargetSysoid(),
                                              link.getTargetLabel(),
                                            link.getTargetLocation(),
                                            link.getTargetNodeType());
                    addVertices(target);
                }
                CdpLinkDetail linkDetail = new CdpLinkDetail(id,
                        source,
                        link.getSrcIfIndex(),
                        link.getSrcIfName(),
                        target,
                        link.getTargetIfName());

                AbstractEdge edge = connectVertices(linkDetail.getId(), linkDetail.getSource(), linkDetail.getTarget(), CDP_EDGE_NAMESPACE);
                edge.setTooltipText(getEdgeTooltipText(linkDetail));
            }
        }
    }

