    public static LinkdEdge create(String id,
            AbstractVertex sourceV, AbstractVertex targetV,  
            OnmsSnmpInterface sourceinterface, OnmsSnmpInterface targetInterface,
            String sourceAddr, String targetAddr,
            ProtocolSupported discoveredBy) {
        
        SimpleConnector source = new SimpleConnector(LinkdTopologyProvider.TOPOLOGY_NAMESPACE_LINKD, sourceV.getId()+"-"+id+"-connector", sourceV);
        SimpleConnector target = new SimpleConnector(LinkdTopologyProvider.TOPOLOGY_NAMESPACE_LINKD, targetV.getId()+"-"+id+"-connector", targetV);

        LinkdEdge edge = new LinkdEdge(id, source, target,discoveredBy);
        try {
            edge.setSourceNodeid(Integer.parseInt(sourceV.getId()));
        } catch (NumberFormatException e) {
            
        }
        try {
            edge.setTargetNodeid(Integer.parseInt(targetV.getId()));
        } catch (NumberFormatException e) {
            
        }
        edge.setSourceLabel(sourceV.getLabel());
        edge.setTargetLabel(targetV.getLabel());
        
        if (sourceinterface != null) {
            edge.setSourceIfIndex(sourceinterface.getIfIndex());
            edge.setSourceIfName(sourceinterface.getIfName());
            if (sourceinterface.getIfSpeed() != null) {
                edge.setSpeed(InetAddressUtils.getHumanReadableIfSpeed(sourceinterface.getIfSpeed()));
            }
        }
        if (targetInterface != null) {
            edge.setTargetIfIndex(targetInterface.getIfIndex());
            edge.setTargetIfName(targetInterface.getIfName());
            if (edge.getSpeed() == null && targetInterface.getIfSpeed() != null) {
                edge.setSpeed(InetAddressUtils.getHumanReadableIfSpeed(targetInterface.getIfSpeed()));
            }

        }
        
        edge.setSourceAddr(sourceAddr);
        edge.setTargetAddr(targetAddr);

        return edge;
    }

