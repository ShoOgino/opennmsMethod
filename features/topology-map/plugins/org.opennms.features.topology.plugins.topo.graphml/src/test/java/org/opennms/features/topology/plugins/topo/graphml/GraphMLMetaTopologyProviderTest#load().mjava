    @Test
    public void load() throws IOException {
        final File graphXml = tempFolder.newFile();
        Resources.asByteSource(Resources.getResource("test-graph.xml")).copyTo(Files.asByteSink(graphXml));

        // Initialize the meta topology provider
        final GraphMLMetaTopologyProvider metaTopoProvider = new GraphMLMetaTopologyProvider();
        metaTopoProvider.setTopologyLocation(graphXml.getAbsolutePath());
        metaTopoProvider.load();

        // We should have two graph providers (one for each graph)
        Collection<GraphProvider> graphProviders = metaTopoProvider.getGraphProviders();
        Iterator<GraphProvider> it = graphProviders.iterator();
        assertEquals(2, graphProviders.size());

        // The first graph should be 'regions'
        GraphProvider regionsGraphProvider = it.next();
        assertEquals("acme:regions", regionsGraphProvider.getVertexNamespace());
        assertEquals(4, regionsGraphProvider.getVertexTotalCount());
        for (String region : Lists.newArrayList("north", "south", "east", "west")) {
            // Every vertex should link to 4 other vertices
            Vertex vertex = regionsGraphProvider.getVertex("acme:regions", region);
            assertEquals(4, metaTopoProvider.getOppositeVertices(vertex).size());
        }

        // The second graph should be 'markets'
        GraphProvider marketsGraphProvider = it.next();
        assertEquals("acme:markets", marketsGraphProvider.getVertexNamespace());
        assertEquals(16, marketsGraphProvider.getVertexTotalCount());
    }

