    @Override
    public void refresh() {
        resetContainer();
        if (graphMLFile == null) {
            LOG.warn("No graph defined");
            return;
        }
        if (!graphMLFile.exists()) {
            LOG.warn("No graph found at location " + graphMLFile.toString());
            return;
        }
        try (InputStream input = new FileInputStream(graphMLFile)) {
            GraphML graphML = GraphMLReader.read(input);
            final String namespace = graphML.getNamespace();
            if (!getVertexNamespace().equals(namespace)) {
                LoggerFactory.getLogger(this.getClass()).info("Creating new vertex provider with namespace {}", namespace);
                m_vertexProvider = new SimpleVertexProvider(namespace);
            }
            if (!getEdgeNamespace().equals(namespace)) {
                LoggerFactory.getLogger(this.getClass()).info("Creating new edge provider with namespace {}", namespace);
                m_edgeProvider = new SimpleEdgeProvider(namespace);
            }

            // Add all Nodes to container
            for (GraphMLGraph eachGraph : graphML.getGraphs()) {
                for (GraphMLNode vertex : eachGraph.getNodes()) {
                    GraphMLVertex newVertex = new GraphMLVertex(
                            vertex.getNamespace(),
                            vertex.getId(),
                            vertex.getLabel());
                    newVertex.setIconKey(vertex.getIconKey());
                    newVertex.setIpAddress(vertex.getIpAddr());
                    newVertex.setLabel(vertex.getLabel());
                    newVertex.setLocked(vertex.isLocked());
                    if (vertex.getNodeID() != null) newVertex.setNodeID(vertex.getNodeID());
                    newVertex.setSelected(vertex.isSelected());
                    newVertex.setStyleName(vertex.getStyleName());
                    newVertex.setTooltipText(vertex.getTooltipText());
                    newVertex.setProperties(vertex.getProperties());
                    addVertices(newVertex);
                }
            }

            // Add all Edges to container
            for (GraphMLGraph eachGraph : graphML.getGraphs()) {
                for (org.opennms.features.topology.plugins.topo.graphml.model.GraphMLEdge eachEdge : eachGraph.getEdges()) {
                    GraphMLEdge newEdge = createGraphMLEdge(eachEdge.getNamespace(), eachEdge.getId(), eachEdge.getSource(), eachEdge.getTarget());
                    newEdge.setProperties(eachEdge.getProperties());
                    newEdge.setLabel(eachEdge.getLabel());
                    newEdge.setTooltipText(eachEdge.getTooltipText());
                }
            }
        } catch (InvalidGraphException | IOException e) {
            LOG.error(e.getMessage(), e);
        }
    }

