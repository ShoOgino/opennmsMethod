    @Override
    public void refresh() {
        resetContainer();
        if (graphMLFile == null) {
            LOG.warn("No graph defined");
            return;
        }
        if (!graphMLFile.exists()) {
            LOG.warn("No graph found at location " + graphMLFile.toString());
            return;
        }
        try (InputStream input = new FileInputStream(graphMLFile)) {
            final GraphML graphML = GraphMLReader.read(input);
            validate(graphML);

            final String namespace = graphML.getProperty(GraphMLProperties.NAMESPACE);
            if (!getVertexNamespace().equals(namespace)) {
                LoggerFactory.getLogger(this.getClass()).info("Creating new vertex provider with namespace {}", namespace);
                m_vertexProvider = new SimpleVertexProvider(namespace);
            }
            if (!getEdgeNamespace().equals(namespace)) {
                LoggerFactory.getLogger(this.getClass()).info("Creating new edge provider with namespace {}", namespace);
                m_edgeProvider = new SimpleEdgeProvider(namespace);
            }

            // Add all Nodes to container
            for (GraphMLGraph eachGraph : graphML.getGraphs()) {
                for (GraphMLNode graphMLNode : eachGraph.getNodes()) {
                    GraphMLVertex newVertex = new GraphMLVertex(graphMLNode);
                    addVertices(newVertex);
                }
            }

            // Add all Edges to container
            for (GraphMLGraph eachGraph : graphML.getGraphs()) {
                for (org.opennms.features.topology.plugins.topo.graphml.model.GraphMLEdge eachEdge : eachGraph.getEdges()) {
                    GraphMLVertex sourceVertex = (GraphMLVertex) getVertex(getVertexNamespace(), eachEdge.getSource().getId());
                    GraphMLVertex targetVertex = (GraphMLVertex) getVertex(getVertexNamespace(), eachEdge.getTarget().getId());
                    GraphMLEdge newEdge = new GraphMLEdge(eachEdge, sourceVertex, targetVertex);
                    addEdges(newEdge);
                }
            }
        } catch (InvalidGraphException | IOException e) {
            LOG.error(e.getMessage(), e);
        }
    }

