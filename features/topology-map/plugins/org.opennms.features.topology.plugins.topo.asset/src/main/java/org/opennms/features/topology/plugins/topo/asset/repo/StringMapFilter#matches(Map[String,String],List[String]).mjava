	private boolean matches(Map<String, String> peramaterMap,List<String> filter) {
		boolean matches = false;

		// check filter correctness and split comma separated values
		List<String>newFilter=new ArrayList<String>();
		for (String filterElement : filter) {
			String[] keyVal = filterElement.split("=");
			if (keyVal.length < 2)
				throw new RuntimeException(
						"filter element incorrectly formatted. (no '=' in filterElement '"
								+ filterElement + "')");
			if (keyVal.length != 2)
				throw new RuntimeException(
						"filter element incorrectly formatted. (too many '=' in  filterElement '"
								+ filterElement + "')");
			String key = keyVal[0];
			String value = keyVal[1];
			if (key.contains(","))
				throw new RuntimeException(
						"filter element incorrectly formatted. (',' in  key in filterElement '"
								+ filterElement + "')");
			// deal with case parameter=a,b,c
			// change to parameter=a,parameter=b,parameter=c
			String[] vals = value.split(",");
			for (String val : vals) {
				newFilter.add(key+"="+val);
			}
		}

		// deal with new filter without comma separated values
		for (String filterElement : newFilter) {
			String[] keyVal = filterElement.split("=");
			String key = keyVal[0];
			String value = keyVal[1];
			String paramValue = peramaterMap.get(key);
			if(value.equals("!")) throw new RuntimeException("filter element incorrectly formatted. (only'!' in  filterElement '"
					+ filterElement + "')");
			if (paramValue != null) {
				// deal with negation
				if (value.startsWith("!")) {
					if (value.substring(1).equals(paramValue)) return false;
				} else {
					if (value.equals(paramValue)) matches= true;
				}
			}
		}

		return matches;
	}

