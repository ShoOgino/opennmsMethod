	/**
	 * Initialises node info map from supplied opennms node list 
	 * @param requiredParameeters list of parameters to populate (named from constants in NodeParamLabels) 
	 *        if requiredParameters is null return entire parameter list
	 *        NODE_NODEID, NODE_NODELABEL,NODE_FOREIGNID and NODE_FOREIGNSOURCE are always added by default
	 * @param nodeList
	 */
	public synchronized void initialiseNodeInfoFromNodeList(List<OnmsNode> nodeList, List<String> requiredParameters) {
		if (nodeList==null) throw new RuntimeException("nodeList must note be null");

		// make sure nodeInfo is empty
		clearNodeInfo();

		// populate nodeinfo from supplied nodeList information
		for (OnmsNode node:nodeList){
			Map<String, String> nodeParameters = new LinkedHashMap<String, String>();
			populateNodeParametersWithNodeInfo(nodeParameters , node, requiredParameters);
			String nodeId = node.getNodeId();
			nodeInfo.put(nodeId, nodeParameters);
			if (LOG.isDebugEnabled()){
				LOG.debug("\nNodeInfoRepository added nodeId:"+nodeId+" parameters:"+nodeParamatersToString(nodeParameters));
			}
		}
	}

