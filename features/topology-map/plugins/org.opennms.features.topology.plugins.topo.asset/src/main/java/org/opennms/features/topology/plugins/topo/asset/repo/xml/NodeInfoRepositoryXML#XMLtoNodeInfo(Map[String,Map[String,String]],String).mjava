	/**
	 * Unmarshalls xmlStr string into a nodeInfo object
	 * @param nodeInfo nodeInfo nodeInfo map with values Map<nodeId, Map<nodeParamLabelKey, nodeParamValue>>
	 *        nodeParamLabelKey a node asset parameter key (from those defined in org.opennms.plugins.graphml.asset.NodeParamLabels)
	 *        nodeParamValue a node asset value ( e.g. key NodeParamLabels.ASSET_RACK ('asset-rack') value: rack1
	 * @param xmlStr xml string to marshall into nodeinfo
	 */
	public static void XMLtoNodeInfo(Map<String, Map<String, String>> nodeInfo, String xmlStr){
		try{

			nodeInfo.clear();

			JAXBContext jaxbContext = JAXBContext.newInstance(NodeInfoRepositoryXML.class);
			Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();

			Reader reader = new StringReader(xmlStr);
			NodeInfoRepositoryXML nodeInfoRepositoryXML = (NodeInfoRepositoryXML) jaxbUnmarshaller.unmarshal(reader);

			List<NodeInfoXML> nodeInfoListxml = nodeInfoRepositoryXML.getNodeInfoList();
			if (nodeInfoListxml!=null){
				for(NodeInfoXML nodeInfoXML:nodeInfoListxml){
					String nodeid = nodeInfoXML.getNodeId();
					if(nodeid!=null){
						Map<String, String> paramvalues = new LinkedHashMap<String, String>();
						for (NodeParameterXML nodeParameterxml:nodeInfoXML.getNodeParamList()){
							String key=nodeParameterxml.getParamKey();
							if(key!=null){
								String value=nodeParameterxml.getParamValue();
								paramvalues.put(key, value);
							}
						}
						nodeInfo.put(nodeid, paramvalues);
					}
				}
			}

		} catch (JAXBException e) {
			throw new RuntimeException("cannot unmarshal NodeInfoRepository. ",e);
		}
	}

