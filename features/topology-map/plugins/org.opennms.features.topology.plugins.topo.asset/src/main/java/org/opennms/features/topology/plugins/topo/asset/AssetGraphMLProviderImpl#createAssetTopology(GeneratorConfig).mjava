	/**
	 * Generates and installs a new AssetTopology defined by the config
	 * @param config if null the default config is used
	 */
	@Override
	public synchronized void createAssetTopology(GeneratorConfig config){
		try {
			GeneratorConfig localConfig= (config==null) ? defaultConfig : config;
			LOG.info("creating new asset topology providerid="+localConfig.getProviderId()+" label="+localConfig.getLabel()
					+ "from "+ ((config==null) ? "default ": "supplied ")+localConfig.toString() );

			if (graphmlRepository.exists("asset")) {
				throw new IllegalStateException("Provider providerid="+config.getProviderId()+" label="+localConfig.getLabel()
						+ "already exists");
			}
			GraphML graphML = new AssetGraphGenerator(nodeDao,transactionOperations).generateGraphs(localConfig);
			GraphmlType graphmlType = GraphMLWriter.convert(graphML);
			graphmlRepository.save(localConfig.getProviderId(), localConfig.getLabel(), graphmlType);
		} catch (Exception ex){
			LOG.error("problem creating asset topology ", ex);
			throw new RuntimeException(ex);
		}
	}

