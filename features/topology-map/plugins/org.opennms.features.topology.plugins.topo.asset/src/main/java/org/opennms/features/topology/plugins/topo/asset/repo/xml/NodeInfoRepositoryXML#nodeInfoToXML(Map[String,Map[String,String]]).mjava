	/**
	 * Marshalls nodeInfo object into an xml string
	 * @param nodeInfo nodeInfo nodeInfo map with values Map<nodeId, Map<nodeParamLabelKey, nodeParamValue>>
	 *        nodeParamLabelKey a node asset parameter key (from those defined in org.opennms.plugins.graphml.asset.NodeParamLabels)
	 *        nodeParamValue a node asset value ( e.g. key NodeParamLabels.ASSET_RACK ('asset-rack') value: rack1
	 */
	public static String nodeInfoToXML(Map<String, Map<String, String>> nodeInfo){
		try {

			NodeInfoRepositoryXML nodeInfoRepositoryxml= new NodeInfoRepositoryXML();

			List<NodeInfoXML> nodeinfoListxml = nodeInfoRepositoryxml.getNodeInfoList();

			for (String nodeId : nodeInfo.keySet()){
				NodeInfoXML nodeInfoXML= new NodeInfoXML();
				nodeInfoXML.setNodeId(nodeId);
				nodeinfoListxml.add(nodeInfoXML);

				List<NodeParameterXML> nodeParamListxml = nodeInfoXML.getNodeParamList();

				for( String paramkey : nodeInfo.get(nodeId).keySet()){
					NodeParameterXML nodeParamaterxml=new NodeParameterXML();
					nodeParamaterxml.setParamKey(paramkey);
					String paramValue = nodeInfo.get(nodeId).get(paramkey);
					nodeParamaterxml.setParamValue(paramValue );
					nodeParamListxml.add(nodeParamaterxml);
				}
			}

			// marshal to string and return
			StringWriter sw = new StringWriter();
			JAXBContext jaxbContext = JAXBContext.newInstance(NodeInfoRepositoryXML.class);
			Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
			jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
			jaxbMarshaller.marshal(nodeInfoRepositoryxml, sw);
			return sw.toString();
		} catch (JAXBException e) {
			throw new RuntimeException("cannot marshal NodeInfoRepository. ",e);
		}

	}

