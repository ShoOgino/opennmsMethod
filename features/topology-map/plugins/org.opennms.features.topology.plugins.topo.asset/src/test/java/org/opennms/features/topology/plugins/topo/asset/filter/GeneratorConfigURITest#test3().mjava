	@Test
	public void test3() {

		String label = "Asset Topology Provider";
		String breadcrumbStrategy = BreadcrumbStrategy.SHORTEST_PATH_TO_ROOT.name();
		String providerId = "asset1";
		String preferredLayout = "Grid Layout";
		String layers = NodeParamLabels.ASSET_COUNTRY+","+NodeParamLabels.ASSET_CITY+","+NodeParamLabels.ASSET_BUILDING;
		String filter=NodeParamLabels.ASSET_DISPLAYCATEGORY+"=!testDisplayCategory"
				+ ";"+NodeParamLabels.NODE_FOREIGNSOURCE+"=testForeignSource1,testForeignSource2";

		String uriString=UriParameters.LABEL+"="+label
				+"&"+UriParameters.BREADCRUMB_STRATEGY+"="+breadcrumbStrategy
				+"&"+UriParameters.PROVIDER_ID+"="+providerId
				+"&"+UriParameters.PREFFERED_LAYOUT+"="+preferredLayout
				+"&"+UriParameters.ASSET_LAYERS+"="+layers
				+"&"+UriParameters.FILTER+"="+filter;

		LOG.debug("    uriString="+uriString);

		boolean expectedException=false;
		try {

			//check config builds from uri string
			GeneratorConfig config = new GeneratorConfigBuilder()
			.withGraphDefinitionUri(uriString)
			.build();

			//check values
			assertEquals(label,config.getLabel());
			assertEquals(breadcrumbStrategy,config.getBreadcrumbStrategy());
			assertEquals(providerId,config.getProviderId());
			assertEquals(preferredLayout,config.getPreferredLayout());

			List<String> layerHeirarchies = Arrays.asList(NodeParamLabels.ASSET_COUNTRY,NodeParamLabels.ASSET_CITY,NodeParamLabels.ASSET_BUILDING);
			assertEquals(config.getLayerHierarchies(),layerHeirarchies );

			List<String> filters =  Arrays.asList(NodeParamLabels.ASSET_DISPLAYCATEGORY+"=!testDisplayCategory",
					NodeParamLabels.NODE_FOREIGNSOURCE+"=testForeignSource1,testForeignSource2");

			assertEquals(config.getFilters(),filters);

			// generate new uri string from config
			String uriOut=GeneratorConfigBuilder.toGraphDefinitionUriString(config);
			LOG.debug("    uriOut="+uriOut);

			GeneratorConfig config2 = new GeneratorConfigBuilder()
			.withGraphDefinitionUri(uriOut)
			.build();

			assertTrue(config.equals(config2));

		} catch ( IllegalArgumentException e){
			expectedException=true;
			LOG.debug("    IllegalArgumentException thrown="+e.getMessage());
		}
		assertEquals(false,expectedException);
	}

