	@Test
	public void verifyFilter() throws InvalidGraphException {
		final NodeProvider nodeProvider = new NodeProvider() {
			@Override
			public List<OnmsNode> getNodes(List<LayerDefinition> definitions) {
				List<OnmsNode> nodes = new ArrayList<>();
				nodes.add(new NodeBuilder().withId(1).withLabel("Node 1").withAssets().withRegion("Stuttgart").withBuilding("S1").done().getNode());
				nodes.add(new NodeBuilder().withId(2).withLabel("Node 2").withAssets().withRegion("Fulda").withBuilding("F1").done().getNode());
				return nodes;
			}
		};

		final GeneratorConfig config = new GeneratorConfig();
		config.setLayerHierarchies(Lists.newArrayList(NodeParamLabels.ASSET_REGION));
		config.setFilters(Lists.newArrayList(String.format("%s=Stuttgart", NodeParamLabels.ASSET_REGION)));

		final GraphML generatedGraphML = new AssetGraphGenerator(nodeProvider).generateGraphs(config);
		Assert.assertEquals(2, generatedGraphML.getGraphs().size());
		Assert.assertEquals(1, generatedGraphML.getGraphs().get(0).getNodes().size());
		Assert.assertEquals(1, generatedGraphML.getGraphs().get(1).getNodes().size());
	}

