    @Override
    public Map<EdgeRef, Status> getStatusForEdges(EdgeProvider edgeProvider, Collection<EdgeRef> edges, Criteria[] criteria) {
        List<EdgeRef> ncsEdges = new ArrayList<EdgeRef>(Collections2.filter(edges, new Predicate<EdgeRef>() {
            @Override
            public boolean apply(EdgeRef edgeRef) {
                return edgeRef.getNamespace().equals("ncs");
            }
        }));

        Set<String> alarms = getNCSImpactedAlarms();

        Map<EdgeRef, Status> statusMap = new HashMap<EdgeRef, Status>();
        for (EdgeRef edge : ncsEdges) {
            NCSEdgeProvider.NCSEdge e = (NCSEdgeProvider.NCSEdge) edge;
            e.setStatus("up");
            statusMap.put(edge, new NCSLinkStatus("up"));
            if (alarms.contains(e.getSourceElementName()) || alarms.contains(e.getTargetElementName())) {
                statusMap.put(edge, new NCSLinkStatus("down"));
                e.setStatus("down");
            }
        }

        return statusMap;
    }

