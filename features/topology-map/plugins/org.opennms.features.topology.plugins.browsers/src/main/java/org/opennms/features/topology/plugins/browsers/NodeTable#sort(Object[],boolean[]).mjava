	@Override
	public void sort(Object[] propertyId, boolean[] ascending) {
		if (propertyId.length > ascending.length) {
			throw new IllegalArgumentException("Property list and ascending list are different sizes");
		}

		// Remove "primaryInterface" from the list of sortable properties and rely on the 
		// HeaderClickListener to perform the sorting.
		List<Object> newIds = new ArrayList<Object>();
		List<Boolean> newAsc = new ArrayList<Boolean>();
		for(int i = 0; i < propertyId.length; i++) {
			if (!"primaryInterface".equals(propertyId[i])) {
				newIds.add(propertyId[i]);
				newAsc.add(ascending[i]);
			}
		}
		super.sort(newIds.toArray(new Object[0]), ArrayUtils.toPrimitive(newAsc.toArray(new Boolean[0])));
	}

