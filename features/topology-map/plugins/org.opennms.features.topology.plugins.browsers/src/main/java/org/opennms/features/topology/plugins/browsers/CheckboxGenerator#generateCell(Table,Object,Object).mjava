	@Override
	public Object generateCell(Table source, Object itemId, Object columnId) {
		final Property<Integer> property = source.getContainerProperty(itemId, m_valueProperty);
		if (property.getValue() == null) {
			return null;
		} else {
			if (SecurityContextHolder.getContext().toString().contains(Authentication.ROLE_READONLY)) {
				// Do not render the checkboxes for read-only users
				return null;
			} else {
				final CheckBox button = new CheckBox();
				button.setData(property.getValue());
				button.setValue(isSelected((Integer) property.getValue()));
				button.addValueChangeListener(new ValueChangeListener() {
	
					private static final long serialVersionUID = 2991986878904005830L;
	
					@Override
					public void valueChange(ValueChangeEvent event) {
						if (Boolean.TRUE.equals(event.getProperty().getValue())) {
							m_selectedCheckboxes.add(property.getValue());
							m_notSelectedCheckboxes.remove(property.getValue());
						} else {
							m_selectedCheckboxes.remove(property.getValue());
							m_notSelectedCheckboxes.add(property.getValue());
						}
					}
				});
				m_checkboxes.add(button);
				return button;
			}
		}
	}

