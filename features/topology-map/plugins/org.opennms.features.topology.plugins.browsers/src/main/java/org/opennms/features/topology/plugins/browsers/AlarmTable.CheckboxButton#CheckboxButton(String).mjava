		public CheckboxButton(String string) {
			super(string);
			setColumnCollapsingAllowed(false);
			addListener(new ClickListener() {

				private static final long serialVersionUID = 4351558084135658129L;

				// TODO Use the actual username
				@Override
				public void buttonClick(final ClickEvent event) {
					Set<Integer> selected = m_generator.getSelectedIds();
					if (selected.size() > 0) {
						String action = (String)m_ackCombo.getValue();
						if (ACTION_ACKNOWLEDGE.equals(action)) {
							m_alarmRepo.acknowledgeAlarms(
									ArrayUtils.toPrimitive(selected.toArray(new Integer[0])), 
									"admin",
									new Date()
							);
						} else if (ACTION_UNACKNOWLEDGE.equals(action)) {
							m_alarmRepo.unacknowledgeAlarms(
									ArrayUtils.toPrimitive(selected.toArray(new Integer[0])), 
									"admin"
							);
						} else if (ACTION_ESCALATE.equals(action)) {
							m_alarmRepo.escalateAlarms(
									ArrayUtils.toPrimitive(selected.toArray(new Integer[0])), 
									"admin",
									new Date()
							);
						} else if (ACTION_CLEAR.equals(action)) {
							m_alarmRepo.clearAlarms(
									ArrayUtils.toPrimitive(selected.toArray(new Integer[0])), 
									"admin",
									new Date()
							);
						}

						// Clear the checkboxes
						m_generator.clearSelectedIds();

						AlarmTable.this.containerItemSetChange(new ItemSetChangeEvent() {
							private static final long serialVersionUID = 7086486972418241175L;
							@Override
							public Container getContainer() {
								return AlarmTable.this.getContainerDataSource();
							}
						});
					}
				}
			});
		}

