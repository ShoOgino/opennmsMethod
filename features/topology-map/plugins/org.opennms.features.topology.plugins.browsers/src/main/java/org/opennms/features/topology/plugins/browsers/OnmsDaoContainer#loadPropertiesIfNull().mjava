    private synchronized void loadPropertiesIfNull() {
        if (m_properties == null) {
            m_properties = new TreeMap<Object,Class<?>>();
            BeanItem<T> item = null;
            try {
                item = new BeanItem<T>(m_itemClass.newInstance());
            } catch (InstantiationException e) {
                LoggerFactory.getLogger(getClass()).error("Class {} does not have a default constructor. Cannot create an instance.", getItemClass());
            } catch (IllegalAccessException e) {
                LoggerFactory.getLogger(getClass()).error("Class {} does not have a public default constructor. Cannot create an instance.", getItemClass());
            }
            for (Object key : item.getItemPropertyIds()) {
                m_properties.put(key, item.getItemProperty(key).getType());
            }
        }
    }

