	@Override
	public Object generateCell(final Table source, final Object itemId, Object columnId) {
		final Property<Integer> nodeIdProperty = source.getContainerProperty(itemId, m_nodeIdProperty);
		Object cellValue = m_generator.generateCell(source, itemId, columnId);
		if (cellValue == null) {
			return null;
		} else {
			if (nodeIdProperty.getValue() == null) {
				return cellValue;
			} else {
				Button button = new Button(cellValue.toString());
				button.setStyleName(BaseTheme.BUTTON_LINK);
				button.setDescription(nodeIdProperty.getValue().toString());
				button.addClickListener(new ClickListener() {
					@Override
					public void buttonClick(ClickEvent event) {
                        Integer nodeId = nodeIdProperty.getValue();
                        String nodeLabel = (String)source.getContainerProperty(itemId, m_nodeLabelProperty).getValue();
                        fireVertexUpdatedEvent(nodeId, nodeLabel);
                    }
                });
				return button;
			}
		}
	}

