	@Test
    public void testConvert() {
        NodeIdFocusToRestrictionsConverter converter = new NodeIdFocusToRestrictionsConverter() {
            @Override
            protected Restriction createRestriction(Integer nodeId) {
                return new EqRestriction("dummy", nodeId); // we do not actually need a restriction
            }
        };

        List<VertexRef> vertexRefList = new ArrayList<VertexRef>();
        AnyRestriction anyRestriction = (AnyRestriction)converter.getRestrictions(vertexRefList).get(0);
        Assert.assertFalse(anyRestriction.getRestrictions().isEmpty()); // there should at least be a false restriction
        
        // a Restriction which should always fail
        EqRestriction eqRestriction = (EqRestriction) anyRestriction.getRestrictions().iterator().next();
        Assert.assertEquals("dummy", eqRestriction.getAttribute());
        Assert.assertEquals(-1, eqRestriction.getValue());
        
        // no with a "real" node
        vertexRefList.add(new TestVertexRef(100));
        anyRestriction = (AnyRestriction)converter.getRestrictions(vertexRefList).get(0);
        eqRestriction = (EqRestriction) anyRestriction.getRestrictions().iterator().next();
        Assert.assertFalse(anyRestriction.getRestrictions().isEmpty()); // now a real restriction is there
        Assert.assertEquals("dummy", eqRestriction.getAttribute());
        Assert.assertEquals(100, eqRestriction.getValue());
        
        
    }

