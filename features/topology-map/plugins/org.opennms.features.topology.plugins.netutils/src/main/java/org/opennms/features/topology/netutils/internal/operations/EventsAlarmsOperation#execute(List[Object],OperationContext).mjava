    public Undoer execute(final List<Object> targets, final OperationContext operationContext) {
        String label = "";
        int nodeID = -1;

        try {
            if (targets != null) {
                for (final Object target : targets) {
                    final Item vertexItem = operationContext.getGraphContainer().getVertexItem(target);
                    if (vertexItem != null) {
                        final Property labelProperty = vertexItem.getItemProperty("label");
                        label = labelProperty == null ? "" : (String) labelProperty.getValue();
                        final Property nodeIDProperty = vertexItem.getItemProperty("nodeID");
                        nodeID = nodeIDProperty == null ? -1 : (Integer) nodeIDProperty.getValue();
                    }
                }
            }
            final Node node = new Node(nodeID, null, label);

            final URL baseURL = operationContext.getMainWindow().getURL();

            final URL eventsURL;
            final URL alarmsURL;
            if (node.getNodeID() >= 0) {
                eventsURL = new URL(baseURL, getEventsURL() + "?filter=node%3D" + node.getNodeID());
                alarmsURL = new URL(baseURL, getAlarmsURL() + "?sortby=id&amp;acktype=unacklimit=20&amp;filter=node%3D" + node.getNodeID());
            } else {
                eventsURL = new URL(baseURL, getEventsURL());
                alarmsURL = new URL(baseURL, getAlarmsURL());
            }

            operationContext.getMainWindow().addWindow(new EventsAlarmsWindow(node, eventsURL, alarmsURL));
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

