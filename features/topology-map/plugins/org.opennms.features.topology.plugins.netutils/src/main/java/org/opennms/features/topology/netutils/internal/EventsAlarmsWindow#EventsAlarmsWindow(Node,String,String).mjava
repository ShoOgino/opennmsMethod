	/**
	 * The EventsAlarmsWindow method constructs a sub-window instance which can be added to a
	 * main window. The sub-window contains two embedded browsers which are directed at the Events
	 * and Alarms page of the selected node
	 * @param node Selected node
	 * @param width Width of main window
	 * @param height Height of main window
	 * @throws MalformedURLException
	 */
	public EventsAlarmsWindow(Node n, String eventsURL, String alarmsURL) throws MalformedURLException {
		
		Node node = n;
		if (node == null) {
			node = new Node(-1, "", "");
		}
		/*Sets the URLs to the currently selected node that is passed in and initializes the browsers*/
		if (node.getNodeID() >= 0) {
			eventsURL += node.getNodeID();
			alarmsURL += node.getNodeID();
		}
		this.eventsURL = new URL(eventsURL);
		this.alarmsURL = new URL(alarmsURL);
		eventsBrowser = new Embedded("", new ExternalResource(this.eventsURL));
		alarmsBrowser = new Embedded("", new ExternalResource(this.alarmsURL));
		
		String label = node.getLabel();
		/*Sets up window settings*/
		if (label == null || label.equals("") || label.equalsIgnoreCase(noLabel)) {
			label = "";
		} else label = " - " + label;
		
		setCaption("Events & Alarms" + label);
		setImmediate(true);
		setResizable(false);
		
		/*Adds the two browsers to separate tabs in a tabsheet layout*/
		TabSheet tabsheet = new TabSheet();
		tabsheet.addTab(eventsBrowser, "Events");
		tabsheet.addTab(alarmsBrowser, "Alarms");
		
		/*Adds tabsheet component to the main layout of the sub-window*/
		VerticalLayout layout = new VerticalLayout();
		layout.addComponent(tabsheet);
		
		addComponent(layout);
	}

