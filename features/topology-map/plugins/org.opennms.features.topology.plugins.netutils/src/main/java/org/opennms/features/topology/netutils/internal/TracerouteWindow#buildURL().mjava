	/**
	 * The buildURL method takes the current values in the form and formats them into the
	 * URL string that is used to redirect the results browser to the Traceroute page.
	 * @return Web address for traceroute command with submitted parameters
	 * @throws MalformedURLException
	 */
	protected URL buildURL() {
		boolean validInput = false;
		try {
			validInput = validateInput();
		} catch (Exception e) {
			Notification.show(e.getMessage(), Notification.Type.WARNING_MESSAGE);
			return null;
		}
		if (validInput) {
			final StringBuilder options = new StringBuilder(tracerouteUrl);
			try {
				URL baseUrl = getUI().getPage().getLocation().toURL();

				options.append(tracerouteUrl.contains("?") ? "&" : "?");

				options.append("address=").append(ipDropdown.getValue());
				if (!("".equals(forcedHopField.getValue().toString()))) {
					options.append("&hopAddress=").append(forcedHopField.getValue());
				}
				if (numericalDataCheckBox.getValue().equals(true)) {
					options.append("&numericOutput=true");
				}

				return new URL(baseUrl, options.toString());
			} catch (final MalformedURLException e) {
				Notification.show("Could not build URL: " + options.toString(), Notification.Type.WARNING_MESSAGE);
				return null;
			}
		} else {
			Notification.show("Invalid IP addresss", Notification.Type.WARNING_MESSAGE);
			return null;
		}
	}

