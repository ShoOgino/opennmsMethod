	/**
	 * The buildURL method takes the current values in the form and formats them into the
	 * URL string that is used to redirect the results browser to the Traceroute page.
	 * @return Web address for traceroute command with submitted parameters
	 * @throws MalformedURLException
	 */
	protected URL buildURL() {
	    boolean validInput = false;
	    try {
	        validInput = validateInput();
	    } catch (Exception e) {
	        getApplication().getMainWindow().showNotification(e.getMessage(), Notification.TYPE_WARNING_MESSAGE);
	        return null;
	    }
	    if (validInput) {
	        final URL baseUrl = getApplication().getURL();

	        final StringBuilder options = new StringBuilder(tracerouteUrl);
	        options.append("&address=").append(ipDropdown.getValue());
	        if (!("".equals(forcedHopField.getValue().toString()))) {
	            options.append("&hopAddress=").append(forcedHopField.getValue());
	        }
	        if (numericalDataCheckBox.getValue().equals(true)) {
	            options.append("&numericOutput=true");
	        }
	        try {
	            return new URL(baseUrl, options.toString());
	        } catch (final MalformedURLException e) {
	            getApplication().getMainWindow().showNotification("Could not build URL: " + options.toString(), Notification.TYPE_WARNING_MESSAGE);
	            return null;
	        }
	    } else {
	        getApplication().getMainWindow().showNotification("Invalid IP addresss", Notification.TYPE_WARNING_MESSAGE);
	        return null;
	    }
	}

