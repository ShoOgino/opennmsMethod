	/**
	 * The buildURL method takes the current values in the form and formats them into the
	 * URL string that is used to redirect the results browser to the Ping page.
	 * @return Web address for ping command with submitted parameters
	 * @throws MalformedURLException
	 */
    protected URL buildURL() {
        boolean validInput = false;
        try {
            validInput = validateInput();
        } catch (NumberFormatException e) {
            getApplication().getMainWindow().showNotification("Inputs must be integers", Notification.TYPE_WARNING_MESSAGE);
            return null;
        }
        if (validInput) {
            final URL baseUrl = getApplication().getURL();
            
            final StringBuilder options = new StringBuilder(baseAddress);

            options.append("&address=").append(ipDropdown.getValue())
                .append("&timeout=").append(timeoutField.getValue())
                .append("&numberOfRequests=").append(requestsField.getValue())
                .append("&packetSize=").append(Integer.parseInt(packetSizeDropdown.getValue().toString()) - 8);
            if (numericalDataCheckBox.getValue().equals(true)) {
                options.append("&numericOutput=true");
            }
            try {
                return new URL(baseUrl, options.toString());
            } catch (final MalformedURLException e) {
                getApplication().getMainWindow().showNotification("Could not build URL: " + options.toString(), Notification.TYPE_WARNING_MESSAGE);
                return null;
            }
        } else {
            getApplication().getMainWindow().showNotification("Inputs must be between 0 and 9999", Notification.TYPE_WARNING_MESSAGE);
            return null;
        }
    }

