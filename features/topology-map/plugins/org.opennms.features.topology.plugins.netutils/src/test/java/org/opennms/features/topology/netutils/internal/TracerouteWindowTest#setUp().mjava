	@Before
	public void setUp() throws Exception {
		didNotify = false;
		Node testNode1 = new Node(9,"172.20.1.10","Cartman");
		traceWindow = new TracerouteWindow(testNode1, "http://localhost:8080/");
		traceWindow2 = new TracerouteWindow(null, "http://localhost:8080/");
		app = new UI() { //Empty Application
			private static final long serialVersionUID = -2169800806621592419L;
			@Override
			public void init(VaadinRequest request) {}

			@Override
			public Page getPage() {
				Page page = EasyMock.createMock(Page.class);
				try {
					EasyMock.expect(page.getLocation()).andReturn(new URI("http://localhost:8080/servlet/")).anyTimes();
					page.showNotification(EasyMock.anyObject(Notification.class));
					// If Notification.show() is called, then set didNotify to true
					EasyMock.expectLastCall().andAnswer(new IAnswer<Object>() {
						@Override
						public Object answer() throws Throwable {
							System.out.println("Notification was called: " + ((Notification)EasyMock.getCurrentArguments()[0]).getCaption());
							didNotify = true;
							return null;
						}
					}).anyTimes();
				} catch (URISyntaxException e) {
					// Should never be thrown
				}
				EasyMock.replay(page);
				return page;
			}
		};
		app.addWindow(traceWindow);
		app.addWindow(traceWindow2);
		UI.setCurrent(app);
	}

