	public AuthWindow(Window mainWindow, String h, int p) {
		this.mainWindow = mainWindow;
		host = h;
		port = p;
		setModal(true);
		setWidth("300px");
		setHeight("200px");
		setResizable(false);
		final Label usernameLabel = new Label("Username");
		final TextField usernameField = new TextField();
		final Label passwordLabel = new Label("Password");
		final PasswordField passwordField = new PasswordField();
		final Button loginButton = new Button("Login");
		final SshClient client = SshClient.setUpDefaultClient();
		client.start();
		loginButton.addListener(new Button.ClickListener() {
			public void buttonClick(ClickEvent event) {
				String login = (String)usernameField.getValue();
				String password = (String)passwordField.getValue();
				try {
//					session = client.connect(host, port).getSession();
//
//					int ret = ClientSession.WAIT_AUTH;
//					if (session != null){
//						while ((ret & ClientSession.WAIT_AUTH) != 0) {
//							session.authPassword(login, password);
//							ret = session.waitFor(ClientSession.WAIT_AUTH | ClientSession.CLOSED | ClientSession.AUTHED, 0);
//						}
//						if ((ret & ClientSession.CLOSED) != 0) {
//							getWindow().showNotification("Failed to Login");
//							return;
//						}
//					} else {
						getWindow().showNotification("Host and/or Port is incorrect");
					//}
					showSSHWindow();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		GridLayout grid = new GridLayout(2,2);
		grid.addComponent(usernameLabel);
		grid.addComponent(usernameField);
		grid.addComponent(passwordLabel);
		grid.addComponent(passwordField);
		grid.setMargin(true);
		VerticalLayout layout = new VerticalLayout();
		layout.addComponent(grid);
		layout.addComponent(loginButton);
		layout.setComponentAlignment(loginButton, Alignment.BOTTOM_RIGHT);
		addComponent(layout);
	}

