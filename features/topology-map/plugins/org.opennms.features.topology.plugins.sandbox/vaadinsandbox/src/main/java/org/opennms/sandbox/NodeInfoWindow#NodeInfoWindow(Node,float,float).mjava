    /**
     * The NodeInfoWindow method constructs a sub-window instance which can be added to a main window.
     * The sub-window contains an embedded browser which displays the Node Info page of the currently selected
     * node.
     * @param node Selected node
     * @param width Width of the main window
     * @param height Height of the main window
     * @throws MalformedURLException
     */
    public NodeInfoWindow (Node node, float width, float height) throws MalformedURLException{
        
    	/*Sets the web address to the Resource Graphs page of the selected node and initializes the browser*/
    	nodeInfoURL = new URL("http://demo.opennms.org/opennms/element/node.jsp?node=" + node.getNodeID());
        nodeInfoBrowser = new Embedded("", new ExternalResource(nodeInfoURL));

        /*Sets the browser and window sizes based on the main window*/
        int browserWidth = (int)(sizePercentage * width), browserHeight = (int)(sizePercentage * height);
        int windowWidth = browserWidth + widthCushion, windowHeight = browserHeight + heightCushion;

        /*Sets up the properties for the sub-window*/
        setCaption("Node Info - " + node.getName());
        setImmediate(true);
        setResizable(false);
        setWidth("" + windowWidth + "px");
        setHeight("" + windowHeight + "px");
        setPositionX((int)((1.0 - windowWidth/width)/2.0 * width));
        setPositionY((int)((1.0 - windowHeight/height)/2.0 * height));

        /*Sets the size of the browser to fit within the sub-window*/
        nodeInfoBrowser.setType(Embedded.TYPE_BROWSER);
        nodeInfoBrowser.setWidth("" + browserWidth + "px");
        nodeInfoBrowser.setHeight("" + browserHeight + "px");
        
        /*Adds the browser to the main layout*/
        VerticalLayout layout = new VerticalLayout();
        layout.addComponent(nodeInfoBrowser);

        addComponent(layout);
    }

