    /**
     * The createMenuBar method builds a simple Vaadin menu bar with File, View, and Node Options.
     * Listeners are also added for each option selected so that the corresponding window opens when clicked.
     * @return MenuBar component
     */
    private MenuBar createMenuBar() {
        final MenuBar menubar = new MenuBar();

        /*Sets up command for clicking on Node -> Events/Alarms option*/
        MenuBar.Command EA_Select = new MenuBar.Command() {
            public void menuSelected(MenuItem selectedItem) {
                try {
                    showEventsAlarmsWindow(testNode1);
                } catch (IllegalArgumentException e) {
                    e.printStackTrace();
                } catch (NullPointerException e) {
                    e.printStackTrace();
                } catch (MalformedURLException e) {
                    e.printStackTrace();
                }
            }
        };

        /*Sets up command for clicking on Node -> Resource Graphs option*/
        MenuBar.Command RG_Select = new MenuBar.Command() {
            public void menuSelected(MenuItem selectedItem) {
                try {
                    showResourceGraphsWindow(testNode1);
                } catch (IllegalArgumentException e) {
                    e.printStackTrace();
                } catch (NullPointerException e) {
                    e.printStackTrace();
                } catch (MalformedURLException e) {
                    e.printStackTrace();
                }
            }
        };

        /*Sets up command for clicking on Node -> Ping option*/
        MenuBar.Command Ping_Select = new MenuBar.Command() {
            public void menuSelected(MenuItem selectedItem) {
                showPingWindow(testNode1);
            }
        };

        /*Sets up command for clicking on Node -> Traceroute option*/
        MenuBar.Command Trace_Select = new MenuBar.Command() {
            public void menuSelected(MenuItem selectedItem) {
                showTracerouteWindow(testNode1);
            }
        };

        /*Sets up command for clicking on Node -> Node Info option*/
        MenuBar.Command NodeInfo_Select = new MenuBar.Command() {
            public void menuSelected(MenuItem selectedItem) {
                try {
                    showNodeInfoWindow(testNode1);
                } catch (IllegalArgumentException e) {
                    e.printStackTrace();
                } catch (NullPointerException e) {
                    e.printStackTrace();
                } catch (MalformedURLException e) {
                    e.printStackTrace();
                }
            }
        };
        
        MenuBar.Command SSH_Select = new MenuBar.Command() {
			
			public void menuSelected(MenuItem selectedItem) {
				showSSHWindow(testNode1);
			}
		};

        /*Creates menu item dropdowns*/
        MenuBar.MenuItem file = menubar.addItem("File", null);
        MenuBar.MenuItem view = menubar.addItem("View", null);
        MenuBar.MenuItem node = menubar.addItem("Node Options", null);

        /* Add options to the main Menu bar along with commands for each*/
        file.addItem("Open", null);
        file.addItem("Close", null);
        view.addItem("Layouts", null);
        node.addItem("SSH", SSH_Select);
        node.addItem("Node Info", NodeInfo_Select);
        node.addItem("Events/Alarms", EA_Select);
        node.addItem("Ping", Ping_Select);
        node.addItem("Traceroute", Trace_Select);
        node.addItem("Resource Graphs", RG_Select);
        menubar.setWidth("100%");

        return menubar;
    }

