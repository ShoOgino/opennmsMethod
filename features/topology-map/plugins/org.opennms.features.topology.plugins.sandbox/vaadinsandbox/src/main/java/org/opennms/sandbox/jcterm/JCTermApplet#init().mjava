  @SuppressWarnings("static-access")
public void init(){
    JCTermSwingFrame.resetCounter();
    String s;

    s = getParameter("jcterm.config.repository");
    if(s!=null){
      try{
        @SuppressWarnings("rawtypes")
		Class c = Class.forName(s);
        ConfigurationRepository cr =
          (ConfigurationRepository)(c.newInstance());
        JCTermSwing.setCR(cr);
      }
      catch(Exception e){
        System.err.println("invalid jcterm.config.repository: "+s);
      }
    }

    s = getParameter("jcterm.config.use_ssh_agent");
    if(s!=null&& s.equals("true"))
      JSchSession.useSSHAgent(true);

    s = getParameter("jcterm.config.name");
    if(s!=null){
      configName = s;
    }

    Configuration conf = JCTermSwing.getCR().load(configName);
    boolean conf_update = false;

    s = getParameter("jcterm.font_size");
    if(s!=null){
      try{
        int font_size = Integer.parseInt(s);
        if(conf.font_size == conf.FONT_SIZE){
          conf.font_size = font_size;
          conf_update = true;
        }
      }
      catch(NumberFormatException e){
        System.err.println("invalid jcterm.font_size: "+s);
      }
    }

    s = getParameter("jcterm.destinations");
    if(s!=null){
      String[] tmp = Configuration.parseDestinations(s);
      tmp = difference(tmp, conf.destinations);
      if(tmp.length>0){
        conf_update = true;
        for(int i=tmp.length-1; i>=0; i--){
          conf.addDestination(tmp[i]);
        }
      }
    }

    s = getParameter("jcterm.fg_bg");
    if(s!=null){
      String[]tmp = Configuration.parseFgBg(s);
      if(tmp!=null){
        tmp = difference(tmp, conf.fg_bg);
        if(tmp.length>0){
          conf_update = true;
          for(int i=tmp.length-1; i>=0; i--){
            conf.addFgBg(tmp[i]);
          }
        }
      }
      else
        System.err.println("invalid jcterm.fg_bg: "+s);
    }

    if(conf_update)
      JCTermSwing.getCR().save(conf);

    setVisible(true);

    if(Toolkit.getDefaultToolkit()
        .getDesktopProperty("win.mdi.backgroundColor")!=null)
      desktop.setBackground((Color)Toolkit.getDefaultToolkit()
          .getDesktopProperty("win.mdi.backgroundColor"));

    Container content=getContentPane();
    content.add(desktop, BorderLayout.CENTER);
    desktop.setVisible(true);

    JButton addButton = new JButton("New window");
    addButton.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        openFrame(Frame.SHELL, configName);
      }
    });
    content.add(addButton, BorderLayout.NORTH);
    addButton.setLocation(0, 0);
    addButton.setVisible(true);

    setFocusable(true);
  }

