  public void run(){
    while(thread!=null){
      try{

	try{
	  UserInfo ui=new MyUserInfo();
  	  jschsession=JSchSession.getSession(user, null, host, port, ui, proxy);
	  java.util.Properties config=new java.util.Properties();
	  if(compression==0){
	    config.put("compression.s2c", "none");
	    config.put("compression.c2s", "none");
	  }
	  else{
	    config.put("compression.s2c", "zlib,none");
	    config.put("compression.c2s", "zlib,none");
	  }
	  jschsession.getSession().setConfig(config);
	  jschsession.getSession().rekey();
	}
	catch(Exception e){
          //System.out.println(e);
          break;
	}

	Channel channel=null;
	OutputStream out=null;
	InputStream in=null;

	if(mode==SHELL){
          channel=jschsession.getSession().openChannel("shell");
	  if(xforwarding){
 	    jschsession.getSession().setX11Host(xhost);
	    jschsession.getSession().setX11Port(xport+6000);
 	    channel.setXForwarding(true);
	  }

	  out=channel.getOutputStream();
	  in=channel.getInputStream();
	  channel.connect();
	}
	else if(mode==SFTP){

	  out=new PipedOutputStream();
	  in=new PipedInputStream();

	  channel=jschsession.getSession().openChannel("sftp");

	  channel.connect();

	  (new Sftp((ChannelSftp)channel, 
		    (InputStream)(new PipedInputStream((PipedOutputStream)out)),
		    new PipedOutputStream((PipedInputStream)in))).kick();
	}

	final OutputStream fout=out;
	final InputStream fin=in;
	final Channel fchannel=channel;

	connection=new Connection(){
	    public InputStream getInputStream(){return fin;}
	    public OutputStream getOutputStream(){return fout;}
	    public void requestResize(Term term){
	      if(fchannel instanceof ChannelShell){
		int c=term.getColumnCount();
		int r=term.getRowCount();
		((ChannelShell)fchannel).setPtySize(c, r,
						    c*term.getCharWidth(),
						    r*term.getCharHeight());
	      }
	    }
	    public void close(){
	      fchannel.disconnect();
	    }
	  };

	setTitle(user+"@"+host+(port!=22 ? new Integer(port).toString() : ""));
        term.requestFocus();
	term.start(connection);
      }
      catch(Exception e){
	//e.printStackTrace();
      }
      break;
    }

    setTitle("JCTerm");
    thread=null;
  }

