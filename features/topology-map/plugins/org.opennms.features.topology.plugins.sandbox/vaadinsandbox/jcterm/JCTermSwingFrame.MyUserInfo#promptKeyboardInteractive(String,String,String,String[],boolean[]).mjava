    public String[] promptKeyboardInteractive(String destination, String name,
        String instruction, String[] prompt, boolean[] echo){
      panel=new JPanel();
      panel.setLayout(new GridBagLayout());

      gbc.weightx=1.0;
      gbc.gridwidth=GridBagConstraints.REMAINDER;
      gbc.gridx=0;
      panel.add(new JLabel(instruction), gbc);
      gbc.gridy++;

      gbc.gridwidth=GridBagConstraints.RELATIVE;

      JTextField[] texts=new JTextField[prompt.length];
      for(int i=0; i<prompt.length; i++){
        gbc.fill=GridBagConstraints.NONE;
        gbc.gridx=0;
        gbc.weightx=1;
        panel.add(new JLabel(prompt[i]), gbc);

        gbc.gridx=1;
        gbc.fill=GridBagConstraints.HORIZONTAL;
        gbc.weighty=1;
        if(echo[i]){
          texts[i]=new JTextField(20);
        }
        else{
          texts[i]=new JPasswordField(20);
          texts[i].requestFocusInWindow();
        }
        panel.add(texts[i], gbc);
        gbc.gridy++;
      }
      for(int i=prompt.length-1; i>0; i--){
        texts[i].requestFocusInWindow();
      }
      JOptionPane pane = new JOptionPane(panel,
                                         JOptionPane.QUESTION_MESSAGE,
                                         JOptionPane.OK_CANCEL_OPTION){
        public void selectInitialValue() {
        }
      };
      JDialog dialog = pane.createDialog(JCTermSwingFrame.this.term, 
                                         destination+": "+name);
      dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
      dialog.setVisible(true);
      Object o = pane.getValue();
      if(o != null && ((Integer)o).intValue()==JOptionPane.OK_OPTION){
        String[] response=new String[prompt.length];
        for(int i=0; i<prompt.length; i++){
          response[i]=texts[i].getText();
        }
        return response;
      }
      else{
        return null; // cancel
      }
    }

