  private Vector glob_local(String _path) throws Exception{
//System.err.println("glob_local: "+_path);
    Vector v=new Vector();
    byte[] path=Util.str2byte(_path, UTF8);
    int i=path.length-1;
    while(i>=0){
      if(path[i]!='*' && path[i]!='?'){
        i--;
        continue;
      }
      if(!fs_is_bs &&
         i>0 && path[i-1]=='\\'){
        i--;
        if(i>0 && path[i-1]=='\\'){
          i--;
          i--;
          continue;
        }
      }
      break;
    }

    if(i<0){ v.addElement(fs_is_bs ? _path : Util.unquote(_path)); return v;}

    while(i>=0){
      if(path[i]==file_separatorc ||
         (fs_is_bs && path[i]=='/')){ // On Windows, '/' is also the separator.
        break;
      }
      i--;
    }

    if(i<0){ v.addElement(fs_is_bs ? _path : Util.unquote(_path)); return v;}

    byte[] dir;
    if(i==0){dir=new byte[]{(byte)file_separatorc};}
    else{ 
      dir=new byte[i];
      System.arraycopy(path, 0, dir, 0, i);
    }

    byte[] pattern=new byte[path.length-i-1];
    System.arraycopy(path, i+1, pattern, 0, pattern.length);

//System.err.println("dir: "+new String(dir)+" pattern: "+new String(pattern));
    try{
      String[] children=(new File(Util.byte2str(dir, UTF8))).list();
      String pdir=Util.byte2str(dir)+file_separator;
      for(int j=0; j<children.length; j++){
//System.err.println("children: "+children[j]);
	if(Util.glob(pattern, Util.str2byte(children[j], UTF8))){
	  v.addElement(pdir+children[j]);
	}
      }
    }
    catch(Exception e){
    }
    return v;
  }

