    /*
     * TODO: We should have our own Piped[I/O]Stream implementation.
     * Before accepting data, JDK's PipedInputStream will check the existence of
     * reader thread, and if it is not alive, the stream will be closed.
     * That behavior may cause the problem if multiple threads make access to it.
     */
    public synchronized void updateReadSide() throws IOException {
      if(available() != 0){ // not empty
        return;
      }
      in = 0;
      out = 0;
      buffer[in++] = 0;
      read();
    }

