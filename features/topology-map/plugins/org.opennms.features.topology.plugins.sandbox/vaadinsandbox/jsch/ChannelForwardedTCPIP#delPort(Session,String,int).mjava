  static void delPort(Session session, String address_to_bind, int rport){
    synchronized(pool){
      Object[] foo=null;
      for(int i=0; i<pool.size(); i++){
        Object[] bar=(Object[])(pool.elementAt(i));
        if(bar[0]!=session) continue;
        if(((Integer)bar[1]).intValue()!=rport) continue;
        foo=bar;
        break;
      }
      if(foo==null)return;
      pool.removeElement(foo);
      if(address_to_bind==null){
        address_to_bind=(String)foo[4];
      }	
      if(address_to_bind==null){
        address_to_bind="0.0.0.0";
      }
    }

    Buffer buf=new Buffer(100); // ??
    Packet packet=new Packet(buf);

    try{
      // byte SSH_MSG_GLOBAL_REQUEST 80
      // string "cancel-tcpip-forward"
      // boolean want_reply
      // string  address_to_bind (e.g. "127.0.0.1")
      // uint32  port number to bind
      packet.reset();
      buf.putByte((byte) 80/*SSH_MSG_GLOBAL_REQUEST*/);
      buf.putString(Util.str2byte("cancel-tcpip-forward"));
      buf.putByte((byte)0);
      buf.putString(Util.str2byte(address_to_bind));
      buf.putInt(rport);
      session.write(packet);
    }
    catch(Exception e){
//    throw new JSchException(e.toString());
    }
  }

