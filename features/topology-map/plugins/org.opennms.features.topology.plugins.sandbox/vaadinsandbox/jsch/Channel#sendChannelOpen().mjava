  protected void sendChannelOpen() throws Exception {
    Session _session=getSession();
    if(!_session.isConnected()){
      throw new JSchException("session is down");
    }

    Packet packet = genChannelOpenPacket();
    _session.write(packet);

    int retry=10;
    long start=System.currentTimeMillis();
    long timeout=connectTimeout;
    if(timeout!=0L) retry = 1;
    synchronized(this){
      while(this.getRecipient()==-1 &&
            _session.isConnected() &&
             retry>0){
        if(timeout>0L){
          if((System.currentTimeMillis()-start)>timeout){
            retry=0;
            continue;
          }
        }
        try{
          long t = timeout==0L ? 5000L : timeout;
          this.notifyme=1;
          wait(t);
        }
        catch(java.lang.InterruptedException e){
        }
        finally{
          this.notifyme=0;
        }
        retry--;
      }
    }
    if(!_session.isConnected()){
      throw new JSchException("session is down");
    }
    if(this.getRecipient()==-1){  // timeout
      throw new JSchException("channel is not opened.");
    }
    if(this.open_confirmation==false){  // SSH_MSG_CHANNEL_OPEN_FAILURE
      throw new JSchException("channel is not opened.");
    }
    connected=true;
  }

