  public Random(){

    // We hope that 'new SecureRandom()' will use NativePRNG algorithm
    // on Sun's Java5 for GNU/Linux and Solaris.
    // It seems NativePRNG refers to /dev/urandom and it must not be blocked,
    // but NativePRNG is slower than SHA1PRNG ;-<
    // TIPS: By adding option '-Djava.security.egd=file:/dev/./urandom'
    //       SHA1PRNG will be used instead of NativePRNG.
    // On MacOSX, 'new SecureRandom()' will use NativePRNG algorithm and
    // it is also slower than SHA1PRNG.
    // On Windows, 'new SecureRandom()' will use SHA1PRNG algorithm.
    random=new SecureRandom();

    /*
    try{ 
      random=SecureRandom.getInstance("SHA1PRNG"); 
      return;
    }
    catch(java.security.NoSuchAlgorithmException e){ 
      // System.err.println(e); 
    }

    // The following code is for IBM's JCE
    try{ 
      random=SecureRandom.getInstance("IBMSecureRandom"); 
      return;
    }
    catch(java.security.NoSuchAlgorithmException ee){ 
      //System.err.println(ee); 
    }
    */
  }

