  byte[] getSignature_dss(byte[] data){
/*
    byte[] foo;
    int i;
    System.err.print("P ");
    foo=P_array;
    for(i=0;  i<foo.length; i++){
      System.err.print(Integer.toHexString(foo[i]&0xff)+":");
    }
    System.err.println("");
    System.err.print("Q ");
    foo=Q_array;
    for(i=0;  i<foo.length; i++){
      System.err.print(Integer.toHexString(foo[i]&0xff)+":");
    }
    System.err.println("");
    System.err.print("G ");
    foo=G_array;
    for(i=0;  i<foo.length; i++){
      System.err.print(Integer.toHexString(foo[i]&0xff)+":");
    }
    System.err.println("");
*/

    try{      
      Class c=Class.forName((String)jsch.getConfig("signature.dss"));
      SignatureDSA dsa=(SignatureDSA)(c.newInstance());
      dsa.init();
      dsa.setPrvKey(prv_array, P_array, Q_array, G_array);

      dsa.update(data);
      byte[] sig = dsa.sign();
      Buffer buf=new Buffer("ssh-dss".length()+4+
			    sig.length+4);
      buf.putString(Util.str2byte("ssh-dss"));
      buf.putString(sig);
      return buf.buffer;
    }
    catch(Exception e){
      //System.err.println("e "+e);
    }
    return null;
  }

