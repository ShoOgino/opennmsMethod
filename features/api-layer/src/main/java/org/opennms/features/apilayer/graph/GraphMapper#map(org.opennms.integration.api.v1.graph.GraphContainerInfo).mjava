    public GraphContainerInfo map(final org.opennms.integration.api.v1.graph.GraphContainerInfo extensionGraphContainerInfo) {
        Objects.requireNonNull(extensionGraphContainerInfo, "extensionGraphContainerInfo must not be null");
        return new GraphContainerInfo() {

            @Override
            public String getId() {
                return extensionGraphContainerInfo.getContainerId();
            }

            @Override
            public List<String> getNamespaces() {
                return extensionGraphContainerInfo.getGraphInfos().stream().map(gi -> gi.getNamespace()).collect(Collectors.toList());
            }

            @Override
            public String getDescription() {
                return extensionGraphContainerInfo.getDescription();
            }

            @Override
            public String getLabel() {
                return extensionGraphContainerInfo.getLabel();
            }

            @Override
            public GraphInfo getGraphInfo(String namespace) {
                final org.opennms.integration.api.v1.graph.GraphInfo extensionGraphInfo = extensionGraphContainerInfo.getGraphInfos().stream()
                        .filter(gi -> gi.getNamespace().equals(namespace)).findAny()
                        .orElseThrow(() -> new NoSuchElementException("GraphInfo with namespace '" + namespace + "' does not exist"));
                return map(extensionGraphInfo);
            }

            @Override
            public GraphInfo getPrimaryGraphInfo() {
                final org.opennms.integration.api.v1.graph.GraphInfo defaultGraphInfo = extensionGraphContainerInfo.getDefaultGraphInfo();
                return map(defaultGraphInfo);
            }

            @Override
            public List<GraphInfo> getGraphInfos() {
                return extensionGraphContainerInfo.getGraphInfos().stream()
                        .map(gi -> map(gi))
                        .collect(Collectors.toList());
            }
        };
    }

