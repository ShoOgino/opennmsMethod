    public static TopologyEdge toEdge(OnmsTopologyProtocol protocol, OnmsTopologyEdge edge) {
        ImmutableTopologyEdge.Builder topologyEdge = ImmutableTopologyEdge.newBuilder()
                .setId(edge.getId())
                .setProtocol(toTopologyProtocol(protocol))
                .setTooltipText(edge.getToolTipText())
                .setSource(ImmutableTopologyPort.newBuilder()
                        .setId(edge.getSource().getId())
                        .setTooltipText(edge.getSource().getToolTipText())
                        .setIfIndex(edge.getSource().getIfindex())
                        .setIfAddress(edge.getSource().getAddr())
                        .setIfName(edge.getSource().getIfname())
                        .setNodeCriteria(ImmutableNodeCriteria.newBuilder()
                                .setId(edge.getSource().getVertex().getNodeid())
                                .build())
                        .build());

        // If the node Id is null the target is a segment...
        if (edge.getTarget().getVertex().getNodeid() == null) {
            topologyEdge.setTargetSegment(ImmutableTopologySegment.newBuilder()
                    .setId(edge.getTarget().getVertex().getId())
                    .setTooltipText(edge.getTarget().getToolTipText())
                    .setProtocol(toTopologyProtocol(protocol))
                    .build());
        }
        // Otherwise the target is a port
        else {
            topologyEdge.setTargetPort(ImmutableTopologyPort.newBuilder()
                    .setId(edge.getTarget().getId())
                    .setTooltipText(edge.getTarget().getToolTipText())
                    .setIfIndex(edge.getTarget().getIfindex())
                    .setIfName(edge.getTarget().getIfname())
                    .setIfAddress(edge.getTarget().getAddr())
                    .setNodeCriteria(ImmutableNodeCriteria.newBuilder()
                            .setId(edge.getTarget().getVertex().getNodeid())
                            .build())
                    .build());
        }

        return topologyEdge.build();
    }

