    /**
     * Maps @{@link CollectionSet} from Integration API to @{@link org.opennms.netmgt.collection.api.CollectionSet} and builds it.
     */
    public static org.opennms.netmgt.collection.api.CollectionSet buildCollectionSet(org.opennms.netmgt.collection.support.builder.CollectionSetBuilder builder, CollectionSet collectionSet) {
        for (CollectionSetResource collectionSetResource : collectionSet.getCollectionSetResources()) {
            Resource resource = collectionSetResource.getResource();
            if (resource == null) {
                continue;
            }
            if (resource.getResourceType().equals(Resource.Type.NODE)) {
                NodeResource nodeResource = (NodeResource) resource;
                NodeLevelResource nodeLevelResource = new NodeLevelResource(nodeResource.getNodeId());
                addAttributes(collectionSetResource, builder, nodeLevelResource);
            } else if (resource.getResourceType().equals(Resource.Type.INTERFACE)) {
                IpInterfaceResource ipResource = (IpInterfaceResource) resource;
                NodeLevelResource nodeLevelResource = new NodeLevelResource(ipResource.getNodeResource().getNodeId());
                InterfaceLevelResource interfaceLevelResource = new InterfaceLevelResource(nodeLevelResource, ipResource.getInstance());
                addAttributes(collectionSetResource, builder, interfaceLevelResource);
            } else if (resource.getResourceType().equals(Resource.Type.GENERIC)) {
                GenericTypeResource genericTypeResource = (GenericTypeResource) resource;
                NodeLevelResource nodeLevelResource = new NodeLevelResource(genericTypeResource.getNodeResource().getNodeId());
                DeferredGenericTypeResource deferredGenericTypeResource = new DeferredGenericTypeResource(nodeLevelResource, genericTypeResource.getType(), genericTypeResource.getInstance());
                addAttributes(collectionSetResource, builder, deferredGenericTypeResource);
            }
        }
        builder.withTimestamp(new Date(collectionSet.getTimeStamp()));
        return builder.build();
    }

