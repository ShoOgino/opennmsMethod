    public GenericGraph map(final Graph extensionGraph, final GraphConfiguration graphConfiguration) {
        Objects.requireNonNull(extensionGraph, "extensionGraph must not be null");
        Objects.requireNonNull(graphConfiguration, "graphConfiguration must not be null");
        final List<GenericVertex> vertices = extensionGraph.getVertices().stream()
                .map(v -> GenericVertex.builder().properties(v.getProperties()).build())
                .collect(Collectors.toList());
        final List<GenericEdge> edges = extensionGraph.getEdges().stream()
                .map(e -> GenericEdge.builder()
                        .properties(e.getProperties())
                        .source(e.getSource().getNamespace(), e.getSource().getId())
                        .target(e.getTarget().getNamespace(), e.getTarget().getId())
                        .build())
                .collect(Collectors.toList());
        final GenericGraph.GenericGraphBuilder graphBuilder = GenericGraph.builder()
                .properties(extensionGraph.getProperties())
                .property(GenericProperties.Enrichment.RESOLVE_NODES, graphConfiguration.shouldEnrichNodeInfo())
                .property(GenericProperties.Enrichment.DEFAULT_STATUS, graphConfiguration.getGraphStatusStrategy() == GraphConfiguration.GraphStatusStrategy.Default)
                .addVertices(vertices)
                .addEdges(edges);
        final List<VertexRef> defaultFocus = extensionGraph.getDefaultFocus();
        if (defaultFocus != null) {
            final List<org.opennms.netmgt.graph.api.VertexRef> convertedDefaultFocus = defaultFocus.stream().map(vertexRef -> new org.opennms.netmgt.graph.api.VertexRef(vertexRef.getNamespace(), vertexRef.getId())).collect(Collectors.toList());
            graphBuilder.focus(new Focus(FocusStrategy.SELECTION, convertedDefaultFocus));
        }
        final GenericGraph convertedGraph = graphBuilder.build();
        return convertedGraph;
    }

