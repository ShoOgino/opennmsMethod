    @Test
    public void canMapSegmentToSegmentEdge() {
        OnmsTopologyEdge mockEdge = createEdge();
        EdgeMockUtil.addSegment(true, mockEdge);
        EdgeMockUtil.addSegment(false, mockEdge);
        TopologyEdge mappedEdge = edgeMapper.toEdge(OnmsTopologyProtocol.create(PROTOCOL), mockEdge);

        assertThat(mappedEdge.getId(), equalTo(EdgeMockUtil.EDGE_ID));
        assertThat(mappedEdge.getProtocol().name(), equalTo(PROTOCOL));

        AtomicBoolean visitedSourceSegment = new AtomicBoolean(false);
        AtomicBoolean visitedTargetSegment = new AtomicBoolean(false);
        mappedEdge.visitEndpoints(new TopologyEdge.EndpointVisitor() {
            @Override
            public void visitSource(TopologySegment segment) {
                assertThat(segment.getId(), equalTo(SOURCE_ID));
                assertThat(segment.getTooltipText(), equalTo(EdgeMockUtil.SOURCE_TOOLTIP));
                assertThat(segment.getSegmentCriteria(), equalTo(String.format("%s:%s", PROTOCOL, SOURCE_ID)));
                visitedSourceSegment.set(true);
            }

            @Override
            public void visitTarget(TopologySegment segment) {
                assertThat(segment.getId(), equalTo(EdgeMockUtil.TARGET_ID));
                assertThat(segment.getTooltipText(), equalTo(EdgeMockUtil.TARGET_TOOLTIP));
                assertThat(segment.getSegmentCriteria(), equalTo(String.format("%s:%s", PROTOCOL,
                        EdgeMockUtil.TARGET_ID)));
                visitedTargetSegment.set(true);
            }
        });
        assertThat(visitedSourceSegment.get(), equalTo(true));
        assertThat(visitedTargetSegment.get(), equalTo(true));
    }

