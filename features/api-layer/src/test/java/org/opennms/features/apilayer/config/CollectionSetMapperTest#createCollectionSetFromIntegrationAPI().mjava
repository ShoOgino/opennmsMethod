    @SuppressWarnings("unchecked")
    private CollectionSet createCollectionSetFromIntegrationAPI() {
        // Every resource needs a node resource.
        Node node = new NodeImpl();
        NodeResource nodeResource = new ResourceBuilder()
                .withNodeId(node.getId())
                .withNodeLabel(node.getLabel())
                .withForeignId(node.getForeignId())
                .withForeignSource(node.getForeignSource())
                .buildNodeResource();
        IpInterfaceResource ipInterfaceResource = new ResourceBuilder()
                .withInstance(IP_INSTANCE)
                .buildIpInterfaceResource(nodeResource);
        GenericTypeResource genericTypeResource = new ResourceBuilder()
                .withType(RESOURCE_NAME)
                .withInstance(GENERIC_INSTANCE)
                .buildGenericTypeResource(nodeResource);

        NumericAttribute numericAttribute1 = new AttributeBuilder()
                .withName("snmp")
                .withGroup("group")
                .withType(NumericAttribute.Type.GAUGE)
                .withNumericValue(5.89)
                .buildNumeric();
        NumericAttribute numericAttribute2 = new AttributeBuilder()
                .withName("jmx")
                .withGroup("group2")
                .withType(NumericAttribute.Type.GAUGE)
                .withNumericValue(GAUGE_VALUE)
                .buildNumeric();
        NumericAttribute numericAttribute3 = new AttributeBuilder()
                .withName("jdbc")
                .withGroup("group3")
                .withType(NumericAttribute.Type.COUNTER)
                .withNumericValue(COUNTER_VALUE)
                .buildNumeric();

        StringAttribute stringAttribute = new AttributeBuilder()
                .withName(STRING_VALUE)
                .withGroup("group4")
                .withStringValue("kafka")
                .buildString();

        CollectionSetResource<NodeResource> nodeCollectionSet = new CollectionSetResourceBuilder<NodeResource>()
                .withResource(nodeResource)
                .withNumericAttribute(numericAttribute1)
                .build();
        CollectionSetResource<IpInterfaceResource> ipInterfaceCollectionSet = new CollectionSetResourceBuilder<IpInterfaceResource>()
                .withResource(ipInterfaceResource)
                .withNumericAttribute(numericAttribute2)
                .build();
        CollectionSetResource<GenericTypeResource> genericTypeCollectionSet = new CollectionSetResourceBuilder<GenericTypeResource>()
                .withResource(genericTypeResource)
                .withNumericAttribute(numericAttribute3)
                .withStringAttribute(stringAttribute)
                .build();

        CollectionSet collectionSet = new CollectionSetBuilder().withCollectionSetResource(nodeCollectionSet)
                .withCollectionSetResource(ipInterfaceCollectionSet)
                .withCollectionSetResource(genericTypeCollectionSet)
                .withTimeStamp(System.currentTimeMillis())
                .withStatus(CollectionSet.Status.SUCCEEDED)
                .build();
        return collectionSet;
    }

