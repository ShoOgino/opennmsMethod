	@Transactional
	public GWTLatLng getLatLng(final OnmsMonitoringLocationDefinition def, boolean geocode) {
		GWTLatLng latLng = null;
		final String coordinateMatchString = "^\\s*[\\-\\d\\.]+\\s*,\\s*[\\-\\d\\.]+\\s*$";

		// first, see if we already have coordinates
		if (def.getCoordinates() != null && def.getCoordinates().matches(coordinateMatchString)) {
			final String[] coordinates = def.getCoordinates().split(",");
			latLng = new GWTLatLng(Double.valueOf(coordinates[0]), Double.valueOf(coordinates[1]));
		}

		// if not, see if geolocation is coordinates
		if (latLng == null) {
			LogUtils.debugf(this, "using geolocation: %s", def.getGeolocation());
			if (def.getGeolocation() != null && def.getGeolocation().matches(coordinateMatchString)) {
				final String[] coordinates = def.getGeolocation().split(",");
				latLng = new GWTLatLng(Double.valueOf(coordinates[0]), Double.valueOf(coordinates[1]));
			}
		}

		// otherwise, try to geocode it
		if (latLng == null && def.getGeolocation() != null && !def.getGeolocation().equals("")) {
			try {
				latLng = m_geocoder.geocode(def.getGeolocation());
				LogUtils.debugf(this, "got coordinates %s for geolocation %s", latLng.getCoordinates(), def.getGeolocation());
			} catch (GeocoderException e) {
				LogUtils.warnf(this, e, "unable to geocode %s", def.getGeolocation());
			}
		}

		return latLng;
	}

