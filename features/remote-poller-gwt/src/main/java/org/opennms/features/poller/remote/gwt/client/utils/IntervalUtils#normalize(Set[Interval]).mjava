    /**
     * <p>normalize</p>
     *
     * @param intervals a {@link java.util.Set} object.
     * @return a {@link java.util.Set} object.
     */
    public static Set<Interval> normalize(final Set<Interval> intervals) {
        Interval lastInterval = null;

        final Set<Interval> preIntervals = getIntervalSet();
        preIntervals.addAll(intervals);
        final Set<Interval> combinedIntervals = getIntervalSet();
        for (final Interval interval : preIntervals) {
            if (lastInterval == null) {
                lastInterval = interval;
            } else {
                if (interval.overlaps(lastInterval)) {
                    lastInterval = new Interval(
                        Math.min(lastInterval.getStartMillis(), interval.getStartMillis()),
                        Math.max(lastInterval.getEndMillis(), interval.getEndMillis())
                    );
                } else {
                    combinedIntervals.add(lastInterval);
                    lastInterval = interval;
                }
            }
        }
        if (lastInterval != null) {
            combinedIntervals.add(lastInterval);
        }
        return combinedIntervals;
    }

