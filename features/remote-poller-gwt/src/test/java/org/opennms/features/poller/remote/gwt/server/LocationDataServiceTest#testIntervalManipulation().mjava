    @Test
    public void testIntervalManipulation() {
        Set<Interval> intervals = IntervalUtils.getIntervalSet();
        intervals.add(new Interval(0, 1000));
        intervals.add(new Interval(1200, 2000));
        Set<Interval> inverted = IntervalUtils.invert(new Date(0), new Date(3000), intervals);
        Set<Interval> invertedMatch = IntervalUtils.getIntervalSet();
        invertedMatch.add(new Interval(1000, 1200));
        invertedMatch.add(new Interval(2000, 3000));
        assertEquals(invertedMatch, inverted);

        intervals = IntervalUtils.getIntervalSet();
        intervals.add(new Interval(100, 1000));
        intervals.add(new Interval(1500, 2000));
        inverted = IntervalUtils.invert(new Date(0), new Date(2000), intervals);
        invertedMatch = IntervalUtils.getIntervalSet();
        invertedMatch.add(new Interval(0, 100));
        invertedMatch.add(new Interval(1000, 1500));
        assertEquals(invertedMatch, inverted);

        intervals = IntervalUtils.getIntervalSet();
        intervals.add(new Interval(0, 1500));
        intervals.add(new Interval(1000, 3000));
        intervals.add(new Interval(4000, 5000));
        Set<Interval> normalized = IntervalUtils.normalize(intervals);
        Set<Interval> normalizedMatch = IntervalUtils.getIntervalSet();
        normalizedMatch.add(new Interval(0, 3000));
        normalizedMatch.add(new Interval(4000, 5000));
        assertEquals(normalizedMatch, normalized);

        intervals = IntervalUtils.getIntervalSet();
        intervals.add(new Interval(0, 1500));
        intervals.add(new Interval(1000, 3000));
        intervals.add(new Interval(4000, 5000));
        intervals.add(new Interval(2000, 4500));
        intervals.add(new Interval(3500, 4400));
        intervals.add(new Interval(2800, 5600));
        normalized = IntervalUtils.normalize(intervals);
        normalizedMatch = IntervalUtils.getIntervalSet();
        normalizedMatch.add(new Interval(0, 5600));
        assertEquals(normalizedMatch, normalized);
    }

