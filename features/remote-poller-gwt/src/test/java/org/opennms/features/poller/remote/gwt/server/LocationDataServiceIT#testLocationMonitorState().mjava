    @Test
    public void testLocationMonitorState() throws Exception {
        m_pollerBackEnd.reportResult(m_rduMonitor1.getId(), m_localhostHttpService.getId(), getAvailable(new Date(now() - days(20) - hours(3))));
        
        m_pollerBackEnd.reportResult(m_rduMonitor1.getId(), m_localhostHttpService.getId(), getDown(new Date(now() - days(20) - hours(2))));
        
        m_pollerBackEnd.reportResult(m_rduMonitor1.getId(), m_localhostHttpService.getId(), getAvailable(new Date(now() - days(20) - hours(1))));
        
        m_pollerBackEnd.reportResult(m_rduMonitor1.getId(), m_googleHttpService.getId(), getDown(new Date(now() - days(20) - hours(4))));
        
        LocationDetails ld = m_locationDataService.getLocationDetails("RDU");
        LocationMonitorState lms = ld.getLocationMonitorState();
        assertEquals(Status.DOWN, lms.getStatusDetails().getStatus());
        assertEquals(2, lms.getServices().size());
        assertEquals(1, lms.getServicesDown().size());
        assertEquals(1, lms.getMonitorsWithServicesDown().size());
        assertEquals(2, lms.getMonitorsStarted());
        assertEquals(0, lms.getMonitorsStopped());
        assertEquals(0, lms.getMonitorsDisconnected());
        
        
    }

