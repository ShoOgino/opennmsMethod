    @Test
    public void canRetrieveAppConfigurationsFromMultipleConfigs() throws InterruptedException {
        // Set a mock config.
        MockConfiguration mockConfig = new MockConfiguration();
        Configuration.setConfiguration(mockConfig);

        // Now instantiate the OpenNMS configuration
        OpenNMSConfiguration onmsConfig = new OpenNMSConfiguration();
        onmsConfig.init();

        Thread.sleep(500);

        // Now set another config. that will be detected as the Karaf config.
        KarafOsgiConfiguration karafConfig = new KarafOsgiConfiguration();
        Configuration.setConfiguration(karafConfig);

        Thread.sleep(500);

        // Requests for "opennms" should be handled by the OpenNMSConfiguration
        AppConfigurationEntry[] entries = Configuration.getConfiguration().getAppConfigurationEntry("opennms");
        assertEquals(1, entries.length);
        assertEquals(OpenNMSProxyLoginModule.class.getName(), entries[0].getLoginModuleName());

        // Other requests should be passed to both the original and the Karaf configs.
        entries = Configuration.getConfiguration().getAppConfigurationEntry("realm1");
        assertEquals(1, entries.length);
        assertEquals("realm1", entries[0].getLoginModuleName());

        entries = Configuration.getConfiguration().getAppConfigurationEntry("realm2");
        assertEquals(2, entries.length);
        assertEquals("realm2a", entries[0].getLoginModuleName());
        assertEquals("realm2b", entries[1].getLoginModuleName());

        entries = Configuration.getConfiguration().getAppConfigurationEntry("karaf");
        assertEquals(1, entries.length);
        assertEquals("karaf", entries[0].getLoginModuleName());

        entries = Configuration.getConfiguration().getAppConfigurationEntry("!");
        assertNull(entries);
    }

