    /**
     * Parses the groups.xml file into mapping roles to users of that role
     * through group membership.
     */
    private Map<String, LinkedList<String>> parseGroupRoles() throws DataRetrievalFailureException {
        long lastModified = new File(m_groupsConfigurationFile).lastModified();
        
        final Map<String, LinkedList<String>> roleMap = new HashMap<String, LinkedList<String>>();

        final Collection<Role> roles = m_groupManager.getRoles();
        for (final Role role : roles) {
            final String groupname = role.getMembershipGroup();
            final String securityRole = Authentication.getSpringSecurityRoleFromOldRoleName(role.getName());
            if (securityRole != null) {
                final List<String> users;
                try {
                    users = m_groupManager.getGroup(groupname).getUserCollection();
                } catch (Throwable e) {
                    throw new DataRetrievalFailureException("Error reading groups configuration file '" + m_groupsConfigurationFile + "': " + e.getMessage(), e);
                }

                for (final String user : users) {
                    if (roleMap.get(user) == null) {
                        roleMap.put(user, new LinkedList<String>());
                    }
                    final LinkedList<String> userRoleList = roleMap.get(user);
                    userRoleList.add(securityRole);
                }
            }
        }

        LOG.debug("Loaded roles from groups.xml file for {} users", roleMap.size());

        m_groupsLastModified = lastModified;

        return roleMap;
    }

