    @Before
    public void setUp() throws Exception {
        m_eventIpcManager = new MockEventIpcManager();
        EventIpcManagerFactory.setIpcManager(m_eventIpcManager);
        MockLogAppender.setupLogging();
        
        ResourceLoader loader = new DefaultResourceLoader();
        Resource resource = loader.getResource("classpath:/drools-ticketer-rules.drl");
        
        m_easyMockUtils = new EasyMockUtils();
        m_configDao = m_easyMockUtils.createMock(DroolsTicketerConfigDao.class);
        EasyMock.expect(m_configDao.getRulesFile()).andReturn(resource.getFile()).times(1);
        EasyMock.replay(m_configDao);
        
        m_alarmDao = m_easyMockUtils.createMock(AlarmDao.class);
        m_ticketerPlugin = m_easyMockUtils.createMock(Plugin.class);
        
        m_droolsTicketerServiceLayer = new DroolsTicketerServiceLayer(m_configDao);
        m_droolsTicketerServiceLayer.setAlarmDao(m_alarmDao);
        m_droolsTicketerServiceLayer.setTicketerPlugin(m_ticketerPlugin);
        
        EasyMock.reset(m_configDao);
        
        m_alarm = new OnmsAlarm();
        m_alarm.setId(1);
        m_alarm.setLogMsg("Test Logmsg");
        m_alarm.setDescription("Test Description");
        m_alarm.setUei("uei.opennms.org/nodes/nodeDown");
        
        m_ticket = new Ticket();
        m_ticket.setId("4");
    }

