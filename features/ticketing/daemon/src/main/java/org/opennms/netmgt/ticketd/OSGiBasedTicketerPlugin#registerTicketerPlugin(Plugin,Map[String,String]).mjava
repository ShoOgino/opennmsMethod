    /**
     * Registers the {@link Plugin} use. Only the first registered plugin will be used.
     *
     * This method is called by the OSGi Service Registry when a service implementing
     * the {@link Plugin} interface is registered.
     *
     * @param plugin the plugin
     * @param attributes service-level attributes for the plugin
     */
    public void registerTicketerPlugin(Plugin plugin, Map<String, String> attributes) {
        Logging.withPrefix(TroubleTicketer.getLoggingCategory(), new Runnable() {
            @Override
            public void run() {
                if (m_ticketerPlugin == null) {
                    LOG.info("Registering ticketer plugin {} with attributes {}", plugin, attributes);
                    m_ticketerPlugin = plugin;
                } else {
                    LOG.warn("Ticketer plugin {} will not be registered, since {} is already active.", plugin, m_ticketerPlugin);
                }
            }
        });
    }

