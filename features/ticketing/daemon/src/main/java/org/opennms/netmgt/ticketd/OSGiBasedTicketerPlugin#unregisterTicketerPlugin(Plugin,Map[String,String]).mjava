    /**
     * Unregisters a previously registered {@link Plugin} use.
     *
     * This method is called by the OSGi Service Registry when a service implementing
     * the {@link Plugin} interface is unregistered.
     *
     * @param plugin the plugin
     * @param attributes service-level attributes for the plugin
     * @return true if the plugin was previously in use, false otherwise
     * @throws Exception 
     */
    public boolean unregisterTicketerPlugin(Plugin plugin, Map<String, String> attributes) throws Exception {
       return Logging.withPrefix(TroubleTicketer.getLoggingCategory(), new Callable<Boolean>() {
            @Override
            public Boolean call() throws Exception {
                if (m_ticketerPlugin == plugin) {
                    LOG.info("Unregistering ticketer plugin {} with attributes {}", plugin, attributes);
                    m_ticketerPlugin = null;
                    return true;
                } else {
                    return false;
                }
            }
        });
    }

