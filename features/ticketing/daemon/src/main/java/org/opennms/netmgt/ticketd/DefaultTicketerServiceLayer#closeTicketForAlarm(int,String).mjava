    /*
     * (non-Javadoc)
     * @see org.opennms.netmgt.ticketd.TicketerServiceLayer#closeTicketForAlarm(int, java.lang.String)
     */
    /** {@inheritDoc} */
    @Override
    @Transactional
    public void closeTicketForAlarm(int alarmId, String ticketId) {
        OnmsAlarm alarm = m_alarmDao.get(alarmId);
        if (alarm == null) {
            LOG.error("No alarm with id {} was found. Ticket with id '{}' will not be closed.", alarmId, ticketId);
            return;
        }
        TroubleTicketState prevState = alarm.getTTicketState();
        if (SKIP_CLOSE_WHEN_NOT_CLEARED) {
            final OnmsSeverity currentSeverity = alarm.getSeverity();
            if (currentSeverity != null && !currentSeverity.equals(OnmsSeverity.CLEARED)) {
                LOG.info("Alarm with id {} is not currently cleared. Ticket with id '{}' will not be closed.", alarmId, ticketId);
                return;
            }
        }

        try {
            setTicketState(ticketId, State.CLOSED);
            alarm.setTTicketState(TroubleTicketState.CLOSED);
        } catch (PluginException e) {
            alarm.setTTicketState(TroubleTicketState.CLOSE_FAILED);
            LOG.error("Unable to close ticket for alarm: {}", e.getMessage(), e);
            m_eventIpcManager.sendNow(createEvent(e.getMessage()));
        }

        m_alarmDao.saveOrUpdate(alarm);

        updateNewTicketState(alarm, prevState);
    }

