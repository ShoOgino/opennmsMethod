    @Test
    public void testTicketsForSituations() throws PluginException {

        OnmsNode testNode = new OnmsNode();
        testNode.setLabel("TEST NODE");
        testNode.setCreateTime(new Date());
        testNode.setLocation(new OnmsMonitoringLocation("Default", "Default"));
        m_nodeDao.saveOrUpdate(testNode);

        // Create first alarm
        OnmsAlarm alarm1 = new OnmsAlarm();
        alarm1.setDistPoller(m_distPollerDao.whoami());
        alarm1.setCounter(1);
        alarm1.setUei("linkDown");
        alarm1.setNode(testNode);

        // Create second alarm
        OnmsAlarm alarm2 = new OnmsAlarm();
        alarm2.setDistPoller(m_distPollerDao.whoami());
        alarm2.setCounter(1);
        alarm2.setUei("linkDown");
        alarm2.setNode(testNode);

        m_alarmDao.save(alarm2);
        m_alarmDao.save(alarm1);

        // create a situation relating multiple alarms
        OnmsAlarm situation = new OnmsAlarm();
        situation.setDistPoller(m_distPollerDao.whoami());
        situation.setCounter(1);
        situation.setUei("cardDown");
        situation.setRelatedAlarms(new HashSet<>(Arrays.asList(alarm1, alarm2)));
        situation.setReductionKey("situation/reduction/key");

        m_alarmDao.saveOrUpdate(situation);
        OnmsAlarm retrieved = m_alarmDao.findByReductionKey("situation/reduction/key");
        TestTicketerPlugin ticketerPlugin = new TestTicketerPlugin();
        m_ticketerServiceLayer.setTicketerPlugin(ticketerPlugin);
        m_ticketerServiceLayer.createTicketForAlarm(retrieved.getId(), new HashMap<String, String>());

        OnmsAlarm alarm = m_alarmDao.get(retrieved.getId());
        assertEquals(TroubleTicketState.OPEN, alarm.getTTicketState());
        assertNotNull(alarm.getTTicketId());
        assertEquals("testId", alarm.getTTicketId());
        List<RelatedAlarmSummary> relatedAlarms = ticketerPlugin.get("testId").getRelatedAlarms();
        assertFalse(relatedAlarms.isEmpty());
        assertEquals(relatedAlarms.get(0).getNodeId(), testNode.getId());

    }

