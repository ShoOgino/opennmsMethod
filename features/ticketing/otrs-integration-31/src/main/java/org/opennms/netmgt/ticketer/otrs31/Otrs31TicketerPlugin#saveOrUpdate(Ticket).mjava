    /*
     * (non-Javadoc)
     * @see
     * org.opennms.api.integration.ticketing.Plugin#saveOrUpdate(org.opennms
     * .api.integration.ticketing.Ticket)
     */
    public void saveOrUpdate(Ticket newTicket) throws PluginException {
        
        Ticket currentTicket = null;
        
        if (newTicket.getId() == null ) {
            
           OTRSTicketCreateTicket otrsTicket = new OTRSTicketCreateTicket();
           otrsTicket.setCustomerUser(m_configDao.getDefaultUser());
           otrsTicket.setTitle(newTicket.getSummary());
           otrsTicket.setQueue(m_configDao.getQueue());
           otrsTicket.setState(m_configDao.getState());
           otrsTicket.setPriority(m_configDao.getPriority());
           
           OTRSArticle otrsArticle = new OTRSArticle();
           otrsArticle.setFrom(m_configDao.getArticleFrom());
           if (newTicket.getUser() != null) {
               otrsArticle.setFrom(newTicket.getUser());
           } else {
               otrsArticle.setFrom(m_configDao.getDefaultUser());
           }
           otrsArticle.setSubject(m_configDao.getArticleUpdateSubject());
           otrsArticle.setBody(m_configDao.getTicketOpenedMessage());
           otrsArticle.setArticleType(m_configDao.getArticleType());
           otrsArticle.setSenderType(m_configDao.getArticleSenderType());
           otrsArticle.setContentType(m_configDao.getArticleContentType());
           otrsArticle.setHistoryType(m_configDao.getArticleHistoryType());
           otrsArticle.setHistoryComment(m_configDao.getArticleHistoryComment());
           
           TicketCreate createRequest = new TicketCreate();
           createRequest.setUserLogin(m_configDao.getUserName());
           createRequest.setPassword(m_configDao.getPassword());
           createRequest.setTicket(otrsTicket);
           createRequest.setArticle(otrsArticle);
           
           TicketCreateResponse response = ticketConnector.ticketCreate(createRequest);
           
           if ( response.getTicketID() == null ) {
               throw new PluginException("null ticketID returned by OTRS");
           } else {
               LOG.debug("Created new ticket ID " + response.getTicketID().toString());
               System.out.println("Created new ticket ID " + response.getTicketID().toString());
               newTicket.setId(response.getTicketID().toString());
               System.out.println("Created new ticket ID " + newTicket.getId());
           }
            
        } else {
            
            currentTicket = get(newTicket.getId()); 
            LOG.debug("updating existing ticket : {}", currentTicket.getId());
            
            if (currentTicket.getState() != newTicket.getState()) {
                
                OTRSTicketUpdateTicket ticketUpdate = new OTRSTicketUpdateTicket();
                
                ticketUpdate.setStateID(openNMSToOTRSState(newTicket.getState()));
                
                OTRSArticle articleUpdate = new OTRSArticle();
                
                articleUpdate.setFrom(m_configDao.getArticleFrom());
                
                if (newTicket.getUser() != null) {
                    articleUpdate.setFrom(newTicket.getUser());
                } else {
                    articleUpdate.setFrom(m_configDao.getDefaultUser());
                }
                
                articleUpdate.setSubject(m_configDao.getArticleUpdateSubject());
                
                // All OTRS article fields from defaults
                
                articleUpdate.setArticleType(m_configDao.getArticleType());
                articleUpdate.setSenderType(m_configDao.getArticleSenderType());
                articleUpdate.setContentType(m_configDao.getArticleContentType());
                articleUpdate.setHistoryType(m_configDao.getArticleHistoryType());
                articleUpdate.setHistoryComment(m_configDao.getArticleHistoryComment());
                
                switch (newTicket.getState()) {
                
                case OPEN:
                    // ticket is new
                    articleUpdate.setBody(m_configDao.getTicketOpenedMessage());
                    break;
                case CANCELLED:
                    // not sure how often we see this
                    articleUpdate.setBody(m_configDao.getTicketCancelledMessage());
                    break;
                case CLOSED:
                    // closed successful
                    articleUpdate.setBody(m_configDao.getTicketClosedMessage());
                    break;
                default:
                    LOG.debug("No valid OpenNMS state on ticket");
                    articleUpdate.setBody(m_configDao.getTicketUpdatedMessage());
                }
                
                TicketUpdate update = new TicketUpdate();
                update.setUserLogin(m_configDao.getUserName());
                update.setPassword(m_configDao.getPassword());
                update.setTicketID(new BigInteger(currentTicket.getId()));
                update.setTicket(ticketUpdate);
                update.setArticle(articleUpdate);
                
                ticketConnector.ticketUpdate(update);
                
            } else {

                // There is no else at the moment
                // Tickets are _only_ updated with new state

            }
        }

    }

