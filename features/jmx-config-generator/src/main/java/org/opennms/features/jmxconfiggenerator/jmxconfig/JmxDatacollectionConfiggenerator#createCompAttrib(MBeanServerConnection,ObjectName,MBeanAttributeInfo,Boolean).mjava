    private CompAttrib createCompAttrib(
            MBeanServerConnection jmxServerConnection,
            ObjectName objectName,
            MBeanAttributeInfo jmxMBeanAttributeInfo,
            Boolean skipNonNumber) throws JMException, IOException {
        Boolean contentAdded = false;

        CompAttrib xmlCompAttrib = new CompAttrib();
        xmlCompAttrib.setName(jmxMBeanAttributeInfo.getName());
        xmlCompAttrib.setType("Composite");
        xmlCompAttrib.setAlias(jmxMBeanAttributeInfo.getName());

        CompositeData compositeData;
        compositeData = (CompositeData) jmxServerConnection.getAttribute(objectName, jmxMBeanAttributeInfo.getName());
        if (compositeData == null) {
            logger.warn("compositeData for jmxObjectInstance.getObjectName: '{}', jmxMBeanAttributeInfo.getName: '{}' not found. Ignoring.", objectName, jmxMBeanAttributeInfo.getName());
        }
        if (compositeData != null) {
            Set<String> keys = compositeData.getCompositeType().keySet();
            for (String key : keys) {
                Object compositeEntry = compositeData.get(key);
                if (skipNonNumber && !numbers.contains(compositeEntry.getClass().getName())) {
                    logger.warn("The type of composite member '{}/{}' is '{}' and '--skipNonNumber' is set. Ignoring.", jmxMBeanAttributeInfo.getName(), key, compositeEntry.getClass().getName());
                } else {
                    contentAdded = true;
                    CompMember xmlCompMember = new CompMember();
                    xmlCompMember.setName(key);

                    String alias = nameCutter.trimByDictionary(jmxMBeanAttributeInfo.getName() + capitalize(key));
                    alias = createAndRegisterUniqueAlias(alias);
                    xmlCompMember.setAlias(alias);
                    xmlCompMember.setType("gauge");
                    xmlCompAttrib.getCompMember().add(xmlCompMember);
                }
            }
        }

        if (contentAdded) {
            return xmlCompAttrib;
        }
        return null;
    }

