    @Override
    public CompletableFuture<Health> performAsyncHealthCheck(Context context, Consumer<HealthCheck> onStartConsumer, Consumer<Response> onFinishConsumer) {
        final CompletableFuture<Health> returnFuture = new CompletableFuture<>();
        final Health health = new Health();
        final Consumer<Response> consumer = response -> {
            health.withResponse(response);
            onFinishConsumer.accept(response);
        };
        try {
            final List<HealthCheck> checks = getHealthChecks();
            if (checks == null || checks.isEmpty()) {
                health.setError("No Health Checks available");
            } else {
                runChecks(context, checks, onStartConsumer, consumer);
            }
        } catch (InvalidSyntaxException ex) {
            health.setError("Error while performing health checks: " + ex.getMessage());
        } finally {
            returnFuture.complete(health);
        }
        return returnFuture;
    }

