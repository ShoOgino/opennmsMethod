    // Perform check asynchronously
    public void performAsyncHealthCheck(Context context, Consumer<HealthCheck> onStartConsumer, Consumer<Response> onFinishConsumer) throws InvalidSyntaxException {
        Future<Response> currentFuture = null;
        final List<HealthCheck> checks = getHealthChecks();
        for (HealthCheck check : checks) {
            try {
                if (onStartConsumer != null) {
                    onStartConsumer.accept(check);
                }
                currentFuture = executorService.submit(() -> {
                    try {
                        final Response response = check.perform(context);
                        if (response == null) {
                            return new Response(Status.Unknown);
                        }
                        return response;
                    } catch (Exception ex) {
                        return new Response(ex);
                    }
                });
                final Response response = currentFuture.get(context.getTimeout(), TimeUnit.MILLISECONDS);
                if (onFinishConsumer != null) {
                    onFinishConsumer.accept(response);
                }
            } catch (TimeoutException timeoutException) {
                if (currentFuture != null) {
                    currentFuture.cancel(true);
                }
                onFinishConsumer.accept(new Response(Status.Timeout, "Health Check did not finish within " + context.getTimeout() + " ms"));
            } catch (Exception ex) {
                if (currentFuture != null) {
                    currentFuture.cancel(true);
                }
                onFinishConsumer.accept(new Response(ex));
            }
        }
    }

