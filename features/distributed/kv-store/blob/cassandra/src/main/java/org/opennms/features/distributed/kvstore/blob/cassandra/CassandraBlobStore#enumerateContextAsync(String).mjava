    @Override
    public CompletableFuture<Map<String, byte[]>> enumerateContextAsync(String context) {
        Objects.requireNonNull(context);

        CompletableFuture<Map<String, byte[]>> enumerateFuture = new CompletableFuture<>();

        try {
            ResultSetFuture enumerateResult = session.executeAsync(enumerateStatement.bind(context));
            enumerateResult.addListener(() -> {
                Map<String, byte[]> resultMap = new HashMap<>();

                try {
                    enumerateResult.getUninterruptibly()
                            .forEach(row -> resultMap.put(row.getString(KEY_COLUMN),
                                    row.getBytes(VALUE_COLUMN).array()));
                    enumerateFuture.complete(Collections.unmodifiableMap(resultMap));
                } catch (Exception e) {
                    enumerateFuture.completeExceptionally(e);
                }
            }, MoreExecutors.directExecutor());
        } catch (Exception e) {
            enumerateFuture.completeExceptionally(e);
        }

        return enumerateFuture;
    }

