    /**
     * @param context   a context used to differentiate between keys with the same name (forms a compound key)
     * @param timestamp the timestamp of the last known state such that if an record with a more recent timestamp is
     *                  found the provided timestamp will be considered stale and the new record will be returned
     * @return a future containing an optional that will be empty if the key was not found or will contain another
     * optional that will be empty if not stale or contain the value if stale
     */
    CompletableFuture<Optional<Optional<byte[]>>> getIfStaleAsync(String key, String context, long timestamp);

