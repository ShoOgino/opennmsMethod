    @Override
    public long put(String key, T value, String context, Integer ttlInSeconds) {
        Objects.requireNonNull(key);
        Objects.requireNonNull(value);

        long now = System.currentTimeMillis();

        withStatement(this::getUpsertStatement, upsertStatement -> {
            // The below sets the prepared values for both the INSERT and UPDATE cases hence some values being 
            // repeated
            upsertStatement.setString(1, key);
            upsertStatement.setString(2, context);
            upsertStatement.setTimestamp(3, new java.sql.Timestamp(now));
            upsertStatement.setTimestamp(6, new java.sql.Timestamp(now));

            if (ttlInSeconds != null) {
                long expireTime = now + TimeUnit.MILLISECONDS.convert(ttlInSeconds, TimeUnit.SECONDS);
                upsertStatement.setTimestamp(4, new java.sql.Timestamp(expireTime));
                upsertStatement.setTimestamp(7, new java.sql.Timestamp(expireTime));
            } else {
                upsertStatement.setNull(4, Types.DATE);
                upsertStatement.setNull(7, Types.DATE);
            }

            upsertStatement.setObject(5, getSQLTypeFromValueType(value));
            upsertStatement.setObject(8, getSQLTypeFromValueType(value));
            return upsertStatement.execute();
        });

        return now;
    }

