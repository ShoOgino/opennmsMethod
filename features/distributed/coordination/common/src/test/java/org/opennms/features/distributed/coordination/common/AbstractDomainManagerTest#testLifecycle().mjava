    /**
     * Test a typical register-role change-deregister lifecycle.
     */
    @Test
    public void testLifecycle() {
        String testId = id;
        TestDomainManager manager = new TestDomainManager(domain);

        manager.register(testId, (role, domain) -> {
            if (role == Role.ACTIVE) {
                callbacksCalled.add(becomeActiveCallback);
            } else if (role == Role.STANDBY) {
                callbacksCalled.add(becomeStandbyCallback);
            }
        });

        assertThat(manager.isAnythingRegistered(), is(equalTo(true)));
        assertThat(manager.isRegistered(testId), is(equalTo(true)));

        manager.becomeActive();
        assertSame(Role.ACTIVE, manager.getCurrentRole());

        manager.becomeStandby();
        assertSame(Role.STANDBY, manager.getCurrentRole());

        manager.deregister(testId);
        assertThat(manager.isAnythingRegistered(), is(equalTo(false)));
        assertThat(manager.isRegistered(testId), is(equalTo(false)));
        assertEquals(Arrays.asList(onRegisterCallback, becomeActiveCallback, becomeStandbyCallback,
                onDeregisterCallback), callbacksCalled);
    }

