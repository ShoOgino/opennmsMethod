    @Override
    public final synchronized void register(String id, RoleChangeHandler roleChangeHandler) {
        Objects.requireNonNull(id);

        if (!isAnythingRegistered()) {
            LOG.debug("Joined election pool for domain {}", getDomain());
            onFirstRegister();
        } else if (this.roleChangeHandlers.containsKey(id)) {
            throw new IllegalArgumentException(id + " is already registered");
        }

        LOG.debug("Adding {} to domain {}", id, getDomain());
        this.roleChangeHandlers.put(id, Objects.requireNonNull(roleChangeHandler));

        // If we are already active we can go ahead and trigger the callback for the first time
        if (getCurrentRole() == Role.ACTIVE) {
            LOG.debug("Already ACTIVE, notifying registrant");
            roleChangeHandler.handleRoleChange(Role.ACTIVE, getDomain());
        }
    }

