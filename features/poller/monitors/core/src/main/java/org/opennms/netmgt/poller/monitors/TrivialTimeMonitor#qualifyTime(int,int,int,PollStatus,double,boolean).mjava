    private PollStatus qualifyTime(int remoteTime, int localTime, int allowedSkew, PollStatus serviceStatus, double responseTime, boolean persistSkew) {
        LOG.debug("qualifyTime: checking remote time {} against local time {} with max skew of {}", remoteTime, localTime, allowedSkew);
        if ((localTime - remoteTime > allowedSkew) || (remoteTime - localTime > allowedSkew)) {
            String reason = "Remote time is " + (localTime > remoteTime ? ""+(localTime-remoteTime)+" seconds slow" : ""+(remoteTime-localTime)+" seconds fast");
            LOG.debug(reason);
            serviceStatus = PollStatus.unavailable(reason);
        }
        if ((localTime > remoteTime) && (localTime - remoteTime > allowedSkew)) {
            String reason = "Remote time is " + (localTime - remoteTime) + " seconds behind local, more than the allowable " + allowedSkew;
            LOG.debug(reason);
            serviceStatus = PollStatus.unavailable(reason);
        } else if ((remoteTime > localTime) && (remoteTime - localTime > allowedSkew)) {
            String reason = "Remote time is " + (remoteTime - localTime) + " seconds ahead of local, more than the allowable " + allowedSkew;
            LOG.debug(reason);
            serviceStatus = PollStatus.unavailable(reason);
        } else {
            serviceStatus = PollStatus.available();
        }

        storeResult(serviceStatus, remoteTime - localTime, responseTime, persistSkew);

        return serviceStatus;
    }

