    /**
     * Reads a server response.
     *
     * @param in input reader
     * @return response from server
     * @throws java.io.IOException if any.
     */
    public static FtpResponse readResponse(BufferedReader in) throws IOException {
        int code;
        List<String> response = new ArrayList<>();

        String firstResponseLine = in.readLine();
        if (firstResponseLine == null) {
            throw new IOException("End of stream was reached before a response could be read");
            
        }
        
        // XXX this could use better error checking!
        String codeString = firstResponseLine.substring(0, 3);
        response.add(firstResponseLine.substring(4));

        try {
            code = Integer.parseInt(codeString);
        } catch (NumberFormatException e) {
            IOException newE = new IOException("First response line returned a non-numeric result code \"" + codeString + "\": " + firstResponseLine);
            newE.initCause(e);
            throw newE;
        }

        // Is the fourth character a hyphen (if so, it's a continuation)?
        if ("-".equals(firstResponseLine.substring(3, 4))) {
            // The multi-line response ends with a line that begins with this:
            String endMultiLine = code + " ";

            while (true) {
                String subsequentResponse = in.readLine();
                if (subsequentResponse == null) {
                    throw new IOException("End of stream was reached before the complete multi-line response could be read.  What was read: " + StringUtils.collectionToDelimitedString(response, "\n"));
                }
                
                if (subsequentResponse.startsWith(endMultiLine)) {
                    response.add(subsequentResponse.substring(4));
                    break;
                }
                
                response.add(subsequentResponse);
            }
        }

        return new FtpResponse(code, response.toArray(new String[response.size()]));
    }

