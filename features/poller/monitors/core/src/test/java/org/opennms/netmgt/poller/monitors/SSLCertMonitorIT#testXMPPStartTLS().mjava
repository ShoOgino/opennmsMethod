    @Test
    @Ignore // point at an XMPP server that supports STARTTLS to use this test
    public void testXMPPStartTLS() throws UnknownHostException {
        SSLCertMonitor monitor = new SSLCertMonitor();
        Map<String, Object> parameters = new ConcurrentSkipListMap<String, Object>();
        parameters.put("port", "5222");
        parameters.put("retry", "0");
        parameters.put("timeout", "500");
        parameters.put("verbose", "true");
        parameters.put("days", "5");
        parameters.put("starttls-preamble", "<stream:stream xmlns:stream='http://etherx.jabber.org/streams' xmlns='jabber:client' to='{ipAddr}' version='1.0'>");
        parameters.put("starttls-preamble-response", "^.*starttls.*$");
        parameters.put("starttls-start", "<starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>");
        parameters.put("starttls-start-response", "^.*proceed.*$");

        MonitoredService svc = MonitorTestUtils.getMonitoredService(3, "localhost", InetAddress.getByName("127.0.0.1"), "SSLCert");
        // this would normally happen in the poller request builder implementation
        Map<String, Object> subbedParams = monitor.getRuntimeAttributes(svc, parameters);
        subbedParams.forEach((k, v) -> {
            parameters.put(k, v);
        });
        PollStatus status = monitor.poll(svc, parameters);
        assertTrue(status.isAvailable());
    }

