    @Test
    @JUnitHttpServer(port=10342, https=true)
    public void testStartTLSFails() throws UnknownHostException {
        SSLCertMonitor monitor = new SSLCertMonitor() {
            @Override
            protected Calendar getCalendarInstance() {
                final Calendar cal = GregorianCalendar.getInstance();
                cal.setTimeInMillis(EXPIRE_DATE - 86400000 * 5);
                return cal;
            }
        };

        Map<String, Object> parameters = new ConcurrentSkipListMap<String, Object>();
        parameters.put("port", "10342");
        parameters.put("retry", "0");
        parameters.put("timeout", "500");
        parameters.put("verbose", "true");
        parameters.put("days", "5");
        parameters.put("starttls-preamble", "<stream:stream xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams' xmlns:tls='http://www.ietf.org/rfc/rfc2595.txt' to='jabber.org'>");
        parameters.put("starttls-preamble-response", "^.*rfc2595.*$");
        parameters.put("starttls-start", "<tls:starttls/>");
        parameters.put("starttls-start-response", "^.*stream:stream.*$");

        MonitoredService svc = MonitorTestUtils.getMonitoredService(3, "localhost", DnsUtils.resolveHostname("localhost", false), "SSLCert");
        PollStatus status = monitor.poll(svc, parameters);
        assertTrue(status.isUnavailable());

    }

