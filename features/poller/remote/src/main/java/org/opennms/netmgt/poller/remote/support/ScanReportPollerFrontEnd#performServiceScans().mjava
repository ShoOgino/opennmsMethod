    /**
     * TODO: Change this method so that instead of loading the config and firing configuration
     * changes to a {@link Poller}, we actually initiate the single scan.
     */
    private void performServiceScans() {

        ScanReport scanReport = new ScanReport();

        try {
            m_pollService.setServiceMonitorLocators(m_backEnd.getServiceMonitorLocators(DistributionContext.REMOTE_MONITOR));
            m_pollerConfiguration = retrieveLatestConfiguration();

            for (final PolledService service : getPolledServices()) {
                // Initialize the monitor for the service
                m_pollService.initialize(service);

                try {
                    final PollStatus result = doPoll(service);
                    if (result == null) {
                        LOG.warn("Null poll result for service {}", service.getServiceId());
                    } else {
                        LOG.info(
                            new ToStringBuilder(this)
                            .append("statusName", result.getStatusName())
                            .append("reason", result.getReason())
                            .toString()
                        );
                        scanReport.addPollStatus(result);
                    }
                } catch (Throwable e) {
                    LOG.error("Unexpected exception occurred while polling service ID {}", service.getServiceId(), e);
                    setState(new FatalExceptionOccurred(e));
                }
            }
        } catch (final Throwable e) {
            LOG.error("Error while performing scan", e);
        }
    }

