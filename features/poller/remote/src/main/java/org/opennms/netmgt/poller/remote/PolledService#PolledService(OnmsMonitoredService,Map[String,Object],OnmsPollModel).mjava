	/**
	 * <p>Constructor for PolledService.</p>
	 *
	 * @param monitoredService a {@link org.opennms.netmgt.model.OnmsMonitoredService} object.
	 * @param monitorConfiguration a {@link java.util.Map} object.
	 * @param pollModel a {@link org.opennms.netmgt.poller.remote.OnmsPollModel} object.
	 */
	public PolledService(final OnmsMonitoredService monitoredService, final Map<String,Object> monitorConfiguration, final OnmsPollModel pollModel) {
        m_serviceId = monitoredService.getId();
        m_nodeId = monitoredService.getNodeId();
        m_nodeLabel = monitoredService.getIpInterface().getNode().getLabel();
        m_nodeLocation = monitoredService.getIpInterface().getNode().getLocation().getLocationName();
        m_svcName = monitoredService.getServiceName();
        m_address = monitoredService.getIpInterface().getIpAddress();
		m_monitorConfiguration = monitorConfiguration;
		m_pollModel = pollModel;
		// Add all of the application names for the service to this object
		m_applications = monitoredService.getApplications().stream().map(OnmsApplication::getName).collect(Collectors.toSet());
	}

