    @Test
    public void testRegister() throws Exception {
        // Check preconditions
        assertFalse(m_frontEnd.isRegistered());
        assertEquals(new Integer(1), m_jdbcTemplate.queryForObject("select count(*) from monitoringsystems", Integer.class));
        assertEquals(new Integer(0), m_jdbcTemplate.queryForObject("select count(*) from monitoringsystemsproperties", Integer.class));
        assertTrue("There were unexpected poll results", 0 == m_jdbcTemplate.queryForObject("select count(*) from location_specific_status_changes", Integer.class));

        // Start up the remote poller
        m_frontEnd.register("RDU");
        assertTrue(m_frontEnd.isStarted());
        String monitorId = m_settings.getMonitoringSystemId();

        assertTrue(m_frontEnd.isRegistered());
        // Make sure there is a total of one remote poller
        assertEquals(new Integer(2), m_jdbcTemplate.queryForObject("select count(*) from monitoringsystems", Integer.class));
        assertEquals(new Integer(5), m_jdbcTemplate.queryForObject("select count(*) from monitoringsystemsproperties where monitoringsystemid = ?", new Object[] { monitorId }, Integer.class));
        // Make sure there is a total of one remote poller with the expected ID
        assertEquals(1, getMonitorCount(monitorId));

        assertEquals(System.getProperty("os.name"), m_jdbcTemplate.queryForObject("select propertyValue from monitoringsystemsproperties where monitoringsystemid = ? and property = ?", String.class, monitorId, "os.name"));

        long wait = 60000L;
        while (wait > 0) {
            Thread.sleep(1000L);
            wait -= 1000L;
            LOG.debug("wait = {}", wait);

            if (getMonitorCount(monitorId) == 1
                && getDisconnectedCount(monitorId) == 0
                && getSpecificChangesCount(monitorId) > 0) break;
        }

        assertEquals(1, getMonitorCount(monitorId));
        assertEquals(0, getDisconnectedCount(monitorId));

        final int changesCount = getSpecificChangesCount(monitorId);
        assertTrue("Could not find any pollResults (changes = " + changesCount + ")", changesCount > 0);

        m_frontEnd.stop();
    }

