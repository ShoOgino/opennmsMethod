    @Test
    @Transactional
    public void testReportResults() throws InterruptedException {
        final OnmsNode node = new OnmsNode(m_distPollerDao.findAll().get(0), "foo");
        final OnmsIpInterface iface = new OnmsIpInterface(InetAddressUtils.addr("192.168.1.1"), node);
        OnmsServiceType serviceType = m_serviceTypeDao.findByName("HTTP");
        if (serviceType == null) {
            serviceType = new OnmsServiceType("HTTP");
            m_serviceTypeDao.save(serviceType);
            m_serviceTypeDao.flush();
        }
        final OnmsMonitoredService service = new OnmsMonitoredService(iface, serviceType);
        iface.setMonitoredServices(Collections.singleton(service));
        m_nodeDao.save(node);
        m_nodeDao.flush();
        
        final int locationMonitorId = m_backEnd.registerLocationMonitor("RDU");
        final int serviceId = service.getId();

        // make sure there is no rrd data
        final File rrdFile = new File("target/test-data/distributed/"+locationMonitorId+"/"+ InetAddressUtils.str(iface.getIpAddress()) +"/http" + m_rrdStrategy.getDefaultFileExtension());
        if (rrdFile.exists()) {
            rrdFile.delete();
        }
        
        assertFalse(rrdFile.exists());

        m_backEnd.reportResult(locationMonitorId, serviceId, PollStatus.available(1234.0));
        Thread.sleep(1000);
        m_backEnd.reportResult(locationMonitorId, serviceId, PollStatus.unavailable());

        final Collection<OnmsLocationSpecificStatus> statuses = m_locationMonitorDao.getStatusChangesForLocationBetween(new Date(0L), new Date(), "RDU");
        assertEquals(2, statuses.size());

        final Iterator<OnmsLocationSpecificStatus> statusIterator = statuses.iterator();
        final OnmsLocationSpecificStatus status1 = statusIterator.next();
        final OnmsLocationSpecificStatus status2 = statusIterator.next();

        assertEquals(Double.valueOf(1234D), status1.getPollResult().getResponseTime());
        assertNull(status2.getPollResult().getResponseTime());

        assertTrue("rrd file doesn't exist at " + rrdFile.getAbsolutePath(), rrdFile.exists());
    }

