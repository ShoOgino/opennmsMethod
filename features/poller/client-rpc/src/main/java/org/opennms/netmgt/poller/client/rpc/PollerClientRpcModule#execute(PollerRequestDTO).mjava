    @Override
    public CompletableFuture<PollerResponseDTO> execute(PollerRequestDTO request) {
        final String className = request.getClassName();
        final ServiceMonitor monitor = serviceMonitorRegistry.getMonitorByClassName(className);
        if (monitor == null) {
            return CompletableFuture.completedFuture(new PollerResponseDTO(PollStatus.unknown("No monitor found with class name '" + className + "'.")));
        }

        return CompletableFuture.supplyAsync(new Supplier<PollerResponseDTO>() {
            @Override
            public PollerResponseDTO get() {
                PollStatus pollStatus;
                try {
                    final Map<String, Object> parameters = request.getMonitorParameters();
                    pollStatus = monitor.poll(request, parameters);
                } catch (RuntimeException e) {
                    pollStatus = PollStatus.unknown(e.getMessage());
                }
                return new PollerResponseDTO(pollStatus);
            }
        }, executor);
    }

