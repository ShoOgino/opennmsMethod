    @VisibleForTesting
    Optional<AlarmDocumentDTO> getDocumentIfNeedsIndexing(OnmsAlarm alarm) {
        final AlarmDocumentDTO existingAlarmDocument = alarmDocumentsById.get(alarm.getId());

        boolean needsIndexing = false;
        if (indexAllUpdates) {
            needsIndexing = true;
        } else if (existingAlarmDocument == null) {
            needsIndexing = true;
        } else if (getCurrentTimeMillis() - existingAlarmDocument.getUpdateTime() >= alarmReindexDurationMs) {
            needsIndexing = true;
        } else if (!interestingEquals(existingAlarmDocument, alarm)) {
            needsIndexing = true;
        }

        if (needsIndexing) {
            final AlarmDocumentDTO doc;
            try {
                doc = documentMapper.apply(alarm);
            } catch (Exception e) {
                // This may be triggered by Hibernate ObjectNotFoundExceptions if the event
                // attached to the alarm entity is already gone. In this case, we simply want to skip
                // the alarm for now.
                LOG.warn("Mapping alarm to DTO failed. Document will not be indexed.", e);
                return Optional.empty();
            }

            alarmDocumentsById.put(alarm.getId(), doc);
            return Optional.of(doc);
        }

        return Optional.empty();
    }

