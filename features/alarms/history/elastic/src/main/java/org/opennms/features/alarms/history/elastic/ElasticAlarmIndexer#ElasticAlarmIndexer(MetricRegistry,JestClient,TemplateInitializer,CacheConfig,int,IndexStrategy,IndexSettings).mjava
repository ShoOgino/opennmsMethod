    public ElasticAlarmIndexer(MetricRegistry metrics, JestClient client, TemplateInitializer templateInitializer, CacheConfig nodeCacheConfig, int taskQueueCapacity, IndexStrategy indexStrategy, IndexSettings indexSettings) {
        this.client = Objects.requireNonNull(client);
        this.templateInitializer = Objects.requireNonNull(templateInitializer);
        //noinspection unchecked
        Cache<Integer, Optional<NodeDocumentDTO>> nodeInfoCache = new CacheBuilder<>()
                .withConfig(nodeCacheConfig)
                .withCacheLoader(new CacheLoader<Integer, Optional<NodeDocumentDTO>>() {
                    @Override
                    public Optional<NodeDocumentDTO> load(@NotNull Integer nodeId) {
                        return Optional.empty();
                    }
                }).build();
        MapStructDocumentImpl documentImpl = new MapStructDocumentImpl(nodeInfoCache, this::getCurrentTimeMillis);
        documentMapper = documentImpl;
        documentFactory = documentImpl;
        taskQueue = new LinkedBlockingDeque<>(taskQueueCapacity);
        alarmsToESMetrics = new ElasticAlarmMetrics(metrics, taskQueue);
        this.indexStrategy = Objects.requireNonNull(indexStrategy);
        this.indexSettings = Objects.requireNonNull(indexSettings);
        this.indexSelector = new IndexSelector(indexSettings, INDEX_PREFIX, indexStrategy, 0);
    }

