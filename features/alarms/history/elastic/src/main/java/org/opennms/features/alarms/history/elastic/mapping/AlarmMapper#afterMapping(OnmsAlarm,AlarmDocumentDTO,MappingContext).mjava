    @AfterMapping
    default void afterMapping(OnmsAlarm alarm, @MappingTarget AlarmDocumentDTO alarmDocumentDTO,
                              @Context MappingContext mappingContext) {
        // Build and set the node document - cache these
        if (alarm.getNodeId() != null) {
            final Optional<NodeDocumentDTO> cachedNodeDoc =
                    mappingContext.getNodeInfoCache().getIfCached(alarm.getNodeId());
            if (cachedNodeDoc != null && cachedNodeDoc.isPresent()) {
                alarmDocumentDTO.setNode(cachedNodeDoc.get());
            } else {
                // We build the document here, rather than doing it in the call to the cache loader
                // since we have complete access to the node in this context, and don't want to overload the
                // cache key
                final NodeDocumentDTO nodeDoc = Mappers.getMapper(NodeMapper.class).map(alarm.getNode());
                mappingContext.getNodeInfoCache().put(alarm.getNodeId(), Optional.of(nodeDoc));
                alarmDocumentDTO.setNode(nodeDoc);
            }
        }

        // Set the updated time to now
        alarmDocumentDTO.setUpdateTime(mappingContext.getCurrentTime());
    }

