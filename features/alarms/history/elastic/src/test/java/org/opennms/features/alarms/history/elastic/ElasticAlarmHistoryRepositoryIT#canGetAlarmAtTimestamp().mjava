    @Test
    public void canGetAlarmAtTimestamp() {
        OnmsAlarm a1 = createAlarm(1, 1L);

        // An alarm that doesn't exist should return null
        assertThat(repo.getAlarmWithDbIdAt(a1.getId(), 0), nullValue());
        assertThat(repo.getAlarmWithReductionKeyIdAt(a1.getReductionKey(), 0), nullValue());

        // t=1
        PseudoClock.getInstance().advanceTime(1, TimeUnit.MILLISECONDS);

        // Index a1
        indexer.handleNewOrUpdatedAlarm(a1);

        // The alarm does exist at this time
        await().until(() -> repo.getAlarmWithDbIdAt(a1.getId(), 1), notNullValue());
        await().until(() -> repo.getAlarmWithReductionKeyIdAt(a1.getReductionKey(), 1), notNullValue());

        // The alarm didn't exist and this time
        assertThat(repo.getAlarmWithDbIdAt(a1.getId(), 0), nullValue());
        assertThat(repo.getAlarmWithReductionKeyIdAt(a1.getReductionKey(), 0), nullValue());

        // t=2
        PseudoClock.getInstance().advanceTime(1, TimeUnit.MILLISECONDS);

        // Update the alarm
        updateAlarmWithEvent(a1, 2L);
        indexer.handleNewOrUpdatedAlarm(a1);

        await().until(() -> repo.getAlarmWithDbIdAt(a1.getId(), 2).getCounter(), equalTo(2));
        assertThat(repo.getAlarmWithReductionKeyIdAt(a1.getReductionKey(), 2).getCounter(), equalTo(2));

        // t=3
        PseudoClock.getInstance().advanceTime(1, TimeUnit.MILLISECONDS);

        // Delete the alarm
        PseudoClock.getInstance().advanceTime(1, TimeUnit.MILLISECONDS);
        indexer.handleDeletedAlarm(a1.getId(), a1.getReductionKey());

        await().until(() -> repo.getAlarmWithDbIdAt(a1.getId(), 4).getDeletedTime(), notNullValue());
        assertThat(repo.getAlarmWithReductionKeyIdAt(a1.getReductionKey(), 4).getDeletedTime(), notNullValue());
    }

