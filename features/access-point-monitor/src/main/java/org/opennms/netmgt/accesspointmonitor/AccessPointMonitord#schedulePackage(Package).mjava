    /**
     * <p>
     * schedulePackage
     * </p>
     * Schedules packages without a wild-card in their name.
     */
    private void schedulePackage(Package pkg) {
        Service svc = pkg.getEffectiveService();

        // Create a new polling context
        PollingContext p = m_pollingContextFactory.getInstance();

        // Initialise the context
        p.setPackage(pkg);
        p.setPollerConfig(getPollerConfig());
        p.setIpInterfaceDao(getIpInterfaceDao());
        p.setNodeDao(getNodeDao());
        p.setAccessPointDao(getAccessPointDao());
        p.setEventManager(getEventManager());
        p.setScheduler(getScheduler());
        p.setInterval(svc.getInterval());
        p.setPropertyMap(svc.getParameterMap());
        p.init();

        // Schedule it
        LOG.debug("schedulePackages: Scheduling {} every {}", pkg.getName(), svc.getInterval());
        getScheduler().schedule(svc.getInterval(), p);

        // Store in the map
        synchronized (m_activePollers) {
            m_activePollers.put(pkg.getName(), p);
        }
    }

