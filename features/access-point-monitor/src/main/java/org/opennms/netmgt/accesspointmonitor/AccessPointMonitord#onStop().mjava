    /**
     * <p>
     * onStop
     * </p>
     */
    @Override
    protected void onStop() {

        if (getScheduler() != null) {
            log().debug("onStop: stopping scheduler");
            getScheduler().stop();
        }

        setScheduler(null);

        log().debug("onStop: releasing pollers");
        synchronized (m_activePollers) {
            if (m_activePollers != null) {
                for (PollingContext p : m_activePollers.values()) {
                    p.release();
                }
                m_activePollers.clear();
            }
        }
    }

