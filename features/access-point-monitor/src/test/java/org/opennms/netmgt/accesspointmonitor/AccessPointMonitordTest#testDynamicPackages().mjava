    @Test
    public void testDynamicPackages() throws Exception {
        // A package name that matches the mask
        addNewAccessPoint("ap1", AP1_MAC, "dynamic-pkg-1");

        initApmdWithConfig(getDynamicPackageConfig());
        m_apm.start();
        sleep(PACKAGE_WAIT_INTERVAL);
        assertEquals(1, m_apm.getActivePackageNames().size());

        // Another package name that matches the mask
        addNewAccessPoint("ap2", AP2_MAC, "dynamic-pkg-2");

        // A package name that does not match the mask
        addNewAccessPoint("ap3", AP3_MAC, "default");

        awaitPackageSize(2);

        // Change the package name for AP1 - the package should be unscheduled
        OnmsAccessPoint ap1 = m_accessPointDao.findByPhysAddr(AP1_MAC);
        ap1.setPollingPackage("default");
        m_accessPointDao.update(ap1);
        m_accessPointDao.flush();

        List<String> packageNames = m_accessPointDao.findDistinctPackagesLike("dynamic-pkg-%");
        assertEquals(1, packageNames.size());

        awaitPackageSize(1);

        // Change the package name for AP1 - the package should be unscheduled
        ap1.setPollingPackage("dynamic-pkg-2");
        m_accessPointDao.update(ap1);
        m_accessPointDao.flush();

        awaitPackageSize(1);

        // Reload the daemon
        updateConfigAndReloadDaemon(getDynamicPackageConfig(), true);

        awaitPackageSize(1);
    }

