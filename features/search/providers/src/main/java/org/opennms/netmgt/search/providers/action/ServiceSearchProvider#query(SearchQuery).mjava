    @Override
    public SearchResult query(final SearchQuery query) {
        final String input = query.getInput();
        final CriteriaBuilder builder = new CriteriaBuilder(OnmsServiceType.class)
                .ilike("name", QueryUtils.ilike(input))
                .orderBy("name")
                .distinct();
        final int totalCount = serviceTypeDao.countMatching(builder.toCriteria());;
        final List<OnmsServiceType> matchingResult = serviceTypeDao.findMatching(builder.limit(query.getMaxResults()).toCriteria());
        final List<SearchResultItem> searchResultItems = matchingResult.stream().map(service -> {
            final SearchResultItem searchResultItem = new SearchResultItem();
            searchResultItem.setIdentifier(service.getId().toString());
            searchResultItem.setLabel("Show nodes with service '" + service.getName() + "'");
            searchResultItem.setUrl("element/nodeList.htm?service=" + service.getId());
            return searchResultItem;
        }).collect(Collectors.toList());
        final SearchResult searchResult = new SearchResult(Contexts.Action).withMore(totalCount > searchResultItems.size()).withResults(searchResultItems);
        return searchResult;
    }

