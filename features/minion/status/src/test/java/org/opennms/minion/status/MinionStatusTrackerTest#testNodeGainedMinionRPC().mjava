    @Test
    public void testNodeGainedMinionRPC() throws Exception {
        final String foreignId = UUID.randomUUID().toString();
        final OnmsNode node = getNode(1, FOREIGN_SOURCE, foreignId, "MinionLocA");
        final OnmsMinion minion = getMinion(node);

        when(m_nodeDao.get(Integer.valueOf(1))).thenReturn(node);
        when(m_minionDao.findById(foreignId)).thenReturn(minion);

        final Event e = EventUtils.createNodeGainedServiceEvent(FOREIGN_SOURCE, 1, InetAddressUtils.addr("192.168.0.1"), MINION_RPC, "one", NodeLabelSource.HOSTNAME, null, null);
        m_tracker.onNodeGainedService(e);

        assertEquals("there should be one minion", 1, m_tracker.getMinions().size());
        assertEquals("it should match our minion", foreignId, m_tracker.getMinions().iterator().next().getId());
        final MinionStatus status = m_tracker.getStatus(foreignId);
        assertNotNull("we should get a default status for the minion", status);
        verify(m_minionDao, times(1)).findById(foreignId);
    }

