    @Test
    public void testMinionHeartbeatFails() throws Exception {
        final String foreignId = UUID.randomUUID().toString();
        final OnmsNode node = getNode(1, FOREIGN_SOURCE, foreignId, "MinionLocA");
        final OnmsMinion minion = getMinion(node);

        m_tracker.m_minions.put(foreignId, minion);
        m_tracker.m_minionNodes.put(1, minion);
        m_tracker.m_state.put(foreignId, AggregateMinionStatus.create(MinionServiceStatus.up(), MinionServiceStatus.up()));

        assertEquals("there should be one minion", 1, m_tracker.getMinions().size());
        assertTrue("we should get an up status for the minion", m_tracker.getStatus(minion).isUp());

        generateOutage(EventConstants.OUTAGE_CREATED_EVENT_UEI, node, MINION_HEARTBEAT, new Date());

        assertFalse("we should get a down status for the minion", m_tracker.getStatus(minion).isUp());
        verify(m_minionDao, times(1)).saveOrUpdate(minion);
    }

