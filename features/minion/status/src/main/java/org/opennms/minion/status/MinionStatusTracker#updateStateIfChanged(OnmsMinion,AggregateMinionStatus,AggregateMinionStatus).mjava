    private void updateStateIfChanged(final OnmsMinion minion, final AggregateMinionStatus current, final AggregateMinionStatus previous) {
        final String minionId = minion.getId();
        m_state.put(minionId, current);

        final String currentMinionStatus = minion.getStatus();
        final String newMinionStatus = current.isUp()? "up":"down";

        if (newMinionStatus.equals(currentMinionStatus)) {
            LOG.trace("Minion {} status did not change: {} = {}", minionId, currentMinionStatus, newMinionStatus);
            return;
        }

        minion.setStatus(newMinionStatus);
        m_minionDao.saveOrUpdate(minion);
        LOG.info("Minion {} status changed: {} -> {}", minionId, (previous == null? "Unknown":previous.getState()), current.getState());
        if (LOG.isDebugEnabled()) {
            LOG.debug("Minion {} status processed: Heartbeat: {} -> {}, RPC: {} -> {}", minionId, (previous == null? "Unknown" : previous.getHeartbeatStatus()), current.getHeartbeatStatus(), (previous == null? "Unknown" : previous.getRpcStatus()), current.getRpcStatus());
        }
    }

