  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ScvGetSupportedAliases",
      requestType = org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesRequest.class,
      responseType = org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesRequest,
      org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesResponse> getScvGetSupportedAliasesMethod() {
    io.grpc.MethodDescriptor<org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesRequest, org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesResponse> getScvGetSupportedAliasesMethod;
    if ((getScvGetSupportedAliasesMethod = SecureCredentialsVaultGrpc.getScvGetSupportedAliasesMethod) == null) {
      synchronized (SecureCredentialsVaultGrpc.class) {
        if ((getScvGetSupportedAliasesMethod = SecureCredentialsVaultGrpc.getScvGetSupportedAliasesMethod) == null) {
          SecureCredentialsVaultGrpc.getScvGetSupportedAliasesMethod = getScvGetSupportedAliasesMethod =
              io.grpc.MethodDescriptor.<org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesRequest, org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ScvGetSupportedAliases"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  org.opennms.dominion.local.rpc.grpc.DominionGrpc.ScvSupportedAliasesResponse.getDefaultInstance()))
              .setSchemaDescriptor(new SecureCredentialsVaultMethodDescriptorSupplier("ScvGetSupportedAliases"))
              .build();
        }
      }
    }
    return getScvGetSupportedAliasesMethod;
  }

