    public List<Repository> getRepositories() throws IOException {
        final List<Path> repositoryPaths = getFoldersIn(m_repositories);

        final List<Repository> repositories = Lists.newLinkedList();
        for (Path repositoryPath : repositoryPaths) {
            try {
                List<URI> featureUris = Lists.newLinkedList();
                Path featuresUriPath = repositoryPath.resolve(FEATURES_URI);
                if (featuresUriPath.toFile().isFile()) {
                    for (String line : getLinesIn(featuresUriPath)) {
                        featureUris.add(new URI(line));
                    }
                }

                List<Feature> featuresBoot;
                Path featuresBootPath = repositoryPath.resolve(FEATURES_BOOT);
                if (featuresBootPath.toFile().isFile()) {
                    featuresBoot = getFeaturesIn(featuresBootPath);
                } else {
                    featuresBoot = Collections.emptyList();
                }
                repositories.add(new Repository(repositoryPath, featureUris, featuresBoot));
            } catch (URISyntaxException e) {
                LOG.error("Failed to generate one or more feature URIs for repository {}. Skipping.",
                        repositoryPath, e);
            }
        }

        return repositories;
    }

