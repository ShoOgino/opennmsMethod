  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "cancelTelemetrySubscription",
      requestType = org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionRequest.class,
      responseType = org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionReply.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionRequest,
      org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionReply> getCancelTelemetrySubscriptionMethod() {
    io.grpc.MethodDescriptor<org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionRequest, org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionReply> getCancelTelemetrySubscriptionMethod;
    if ((getCancelTelemetrySubscriptionMethod = OpenConfigTelemetryGrpc.getCancelTelemetrySubscriptionMethod) == null) {
      synchronized (OpenConfigTelemetryGrpc.class) {
        if ((getCancelTelemetrySubscriptionMethod = OpenConfigTelemetryGrpc.getCancelTelemetrySubscriptionMethod) == null) {
          OpenConfigTelemetryGrpc.getCancelTelemetrySubscriptionMethod = getCancelTelemetrySubscriptionMethod =
              io.grpc.MethodDescriptor.<org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionRequest, org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionReply>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "cancelTelemetrySubscription"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  org.opennms.features.openconfig.proto.jti.Telemetry.CancelSubscriptionReply.getDefaultInstance()))
              .setSchemaDescriptor(new OpenConfigTelemetryMethodDescriptorSupplier("cancelTelemetrySubscription"))
              .build();
        }
      }
    }
    return getCancelTelemetrySubscriptionMethod;
  }

