    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (valueCase_) {
        case 1:
          hash = (37 * hash) + STRING_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getStringVal().hashCode();
          break;
        case 2:
          hash = (37 * hash) + INT_VAL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getIntVal());
          break;
        case 3:
          hash = (37 * hash) + UINT_VAL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getUintVal());
          break;
        case 4:
          hash = (37 * hash) + BOOL_VAL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBoolVal());
          break;
        case 5:
          hash = (37 * hash) + BYTES_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getBytesVal().hashCode();
          break;
        case 6:
          hash = (37 * hash) + FLOAT_VAL_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getFloatVal());
          break;
        case 7:
          hash = (37 * hash) + DECIMAL_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getDecimalVal().hashCode();
          break;
        case 8:
          hash = (37 * hash) + LEAFLIST_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getLeaflistVal().hashCode();
          break;
        case 9:
          hash = (37 * hash) + ANY_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getAnyVal().hashCode();
          break;
        case 10:
          hash = (37 * hash) + JSON_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getJsonVal().hashCode();
          break;
        case 11:
          hash = (37 * hash) + JSON_IETF_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getJsonIetfVal().hashCode();
          break;
        case 12:
          hash = (37 * hash) + ASCII_VAL_FIELD_NUMBER;
          hash = (53 * hash) + getAsciiVal().hashCode();
          break;
        case 13:
          hash = (37 * hash) + PROTO_BYTES_FIELD_NUMBER;
          hash = (53 * hash) + getProtoBytes().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

