    /**
     * Test loading the {@link PackageAgentList} based on a given collection package.
     */
    @Test
    public void testLoadServiceAgents() throws Exception
    {
        for ( RouteDefinition route : new ArrayList<RouteDefinition>( context.getRouteDefinitions() ) )
        {
            route.adviceWith( context, new AdviceWithRouteBuilder() {
                @Override
                public void configure() throws Exception
                {
                    mockEndpoints();
                }
            } );
        }
        context.start();

        // We should get 1 call to the scheduler endpoint
        MockEndpoint endpoint = getMockEndpoint( "mock:bean:eventWriter", false );
        endpoint.setExpectedMessageCount( 1 );

        // Create message
        // Service svc = new Service();
        // svc.setInterval( 1000L );
        // svc.setName( "SNMP" );
        // svc.setStatus( "on" );
        // svc.setUserDefined( "false" );
        // Package pkg = new Package();
        // pkg.setName( "example1" );
        // pkg.setServices( Collections.singletonList( svc ) );

        template.requestBody( "direct:submitDiscoveryJob", new DiscoveryConfiguration() ); // pass
                                                                                           // in
                                                                                           // message

        assertMockEndpointsSatisfied();

        // Make sure that we got one exchange to the scheduler
        assertEquals( 1, endpoint.getReceivedCounter() );

        // // That contains 3 SNMP agent instances
        // for ( Exchange exchange : endpoint.getReceivedExchanges() )
        // {
        // PackageAgentList agents = exchange.getIn().getBody( PackageAgentList.class );
        // assertNotNull( agents );
        // assertEquals( 3, agents.getAgents().size() );
        // }
    }

