    /**
     * Register a mock OSGi {@link SchedulerService} so that we can make sure that the scheduler
     * whiteboard is working properly.
     */
    @SuppressWarnings( "rawtypes" )
    @Override
    protected void addServicesOnStartup( Map<String, KeyValueHolder<Object, Dictionary>> services )
    {
        services.put( Pinger.class.getName(), new KeyValueHolder<Object, Dictionary>(new TestPinger(), new Properties()));

        services.put( EventForwarder.class.getName(),
                new KeyValueHolder<Object, Dictionary>( IPC_MANAGER_INSTANCE, new Properties() ) );

        services.put( EventIpcManager.class.getName(),
                new KeyValueHolder<Object, Dictionary>( IPC_MANAGER_INSTANCE, new Properties() ) );

        DistPollerDao distPollerDao = new DistPollerDaoMinion(
            DistPollerDao.DEFAULT_DIST_POLLER_ID,
            DistPollerDao.DEFAULT_DIST_POLLER_ID,
            LOCATION
        );

        services.put( DistPollerDao.class.getName(),
                new KeyValueHolder<Object, Dictionary>(distPollerDao, new Properties() ) );

        DiscoveryConfiguration config = new DiscoveryConfiguration();
        IncludeRange range = new IncludeRange();
        range.setBegin("127.0.1.1");
        range.setEnd("127.0.1.20");
        config.setChunkSize(1);
        config.setIncludeRange(new IncludeRange[] { range });
        config.setInitialSleepTime(30000);
        config.setRestartSleepTime(30000);
        DiscoveryConfigFactory configFactory = new DiscoveryConfigFactory(config);

        services.put( DiscoveryConfigurationFactory.class.getName(),
                new KeyValueHolder<Object, Dictionary>(configFactory, new Properties() ) );
    }

