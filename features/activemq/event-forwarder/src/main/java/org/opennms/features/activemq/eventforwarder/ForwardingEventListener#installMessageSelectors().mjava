	private void installMessageSelectors() {
		// Add the EventListeners for the UEIs in which this service is
		// interested
		List<String> ueiList = new ArrayList<String>();

		//node status events
		ueiList.add(EventConstants.DUP_NODE_DELETED_EVENT_UEI);
		ueiList.add(EventConstants.NODE_ADDED_EVENT_UEI);
		ueiList.add(EventConstants.NODE_CATEGORY_MEMBERSHIP_CHANGED_EVENT_UEI);
		ueiList.add(EventConstants.NODE_DOWN_EVENT_UEI);
		ueiList.add(EventConstants.NODE_DELETED_EVENT_UEI);
		ueiList.add(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI);
		ueiList.add(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI);
		ueiList.add(EventConstants.NODE_INFO_CHANGED_EVENT_UEI);
		ueiList.add(EventConstants.NODE_LABEL_CHANGED_EVENT_UEI);
		ueiList.add(EventConstants.NODE_LABEL_SOURCE_CHANGED_EVENT_UEI);
		ueiList.add(EventConstants.NODE_LOST_SERVICE_EVENT_UEI);
		ueiList.add(EventConstants.NODE_REGAINED_SERVICE_EVENT_UEI);
		ueiList.add(EventConstants.NODE_UP_EVENT_UEI);
		ueiList.add(EventConstants.NODE_UPDATED_EVENT_UEI);
		
		//interface status events
		ueiList.add(EventConstants.INTERFACE_DELETED_EVENT_UEI);
		ueiList.add(EventConstants.INTERFACE_DOWN_EVENT_UEI);
		ueiList.add(EventConstants.INTERFACE_REPARENTED_EVENT_UEI);
		ueiList.add(EventConstants.INTERFACE_UP_EVENT_UEI);
		
		//component provisioning events
		ueiList.add(EventConstants.COMPONENT_ADDED_UEI);
		ueiList.add(EventConstants.COMPONENT_DELETED_UEI);
		ueiList.add(EventConstants.COMPONENT_UPDATED_UEI);
		
		//threshold status events
		ueiList.add(EventConstants.HIGH_THRESHOLD_EVENT_UEI);
		ueiList.add(EventConstants.HIGH_THRESHOLD_REARM_EVENT_UEI);
		ueiList.add(EventConstants.LOW_THRESHOLD_EVENT_UEI);
		ueiList.add(EventConstants.LOW_THRESHOLD_REARM_EVENT_UEI);

		ueiList.add(EventConstants.PATH_OUTAGE_EVENT_UEI);
		
		ueiList.add(EventConstants.PRIMARY_SNMP_INTERFACE_CHANGED_EVENT_UEI);
		
		ueiList.add(EventConstants.SERVICE_DELETED_EVENT_UEI);
		ueiList.add(EventConstants.SERVICE_RESPONSIVE_EVENT_UEI);
		ueiList.add(EventConstants.SERVICE_STATUS_UNKNOWN);
		ueiList.add(EventConstants.SERVICE_UNMANAGED_EVENT_UEI);
		ueiList.add(EventConstants.SERVICE_UNRESPONSIVE_EVENT_UEI);
		
		ueiList.add(EventConstants.SNMP_INTERFACE_ADMIN_DOWN_EVENT_UEI);
		ueiList.add(EventConstants.SNMP_INTERFACE_ADMIN_UP_EVENT_UEI);
		ueiList.add(EventConstants.SNMP_INTERFACE_OPER_DOWN_EVENT_UEI);
		ueiList.add(EventConstants.SNMP_INTERFACE_OPER_UP_EVENT_UEI);
		
		ueiList.add(EventConstants.TOPOLOGY_LINK_DOWN_EVENT_UEI);
		ueiList.add(EventConstants.TOPOLOGY_LINK_UP_EVENT_UEI);
		
		ueiList.add(EventConstants.UPDATE_SERVER_EVENT_UEI);
		
		ueiList.add(EventConstants.UPDATE_SERVICE_EVENT_UEI);
		
		ueiList.add(EventConstants.XMLRPC_NOTIFICATION_EVENT_UEI);

        //Remote Poller Events
        ueiList.add(EventConstants.REMOTE_NODE_LOST_SERVICE_UEI);
        ueiList.add(EventConstants.REMOTE_NODE_REGAINED_SERVICE_UEI);
        ueiList.add(EventConstants.LOCATION_MONITOR_REGISTERED_UEI);
        ueiList.add(EventConstants.LOCATION_MONITOR_STARTED_UEI);
        ueiList.add(EventConstants.LOCATION_MONITOR_STOPPED_UEI);
        ueiList.add(EventConstants.LOCATION_MONITOR_PAUSED_UEI);
        ueiList.add(EventConstants.LOCATION_MONITOR_DISCONNECTED_UEI);
        ueiList.add(EventConstants.LOCATION_MONITOR_RECONNECTED_UEI);
        ueiList.add(EventConstants.LOCATION_MONITOR_CONFIG_CHANGE_DETECTED_UEI);
        ueiList.add(EventConstants.LOCATION_MONITOR_CONNECTION_ADDRESS_CHANGED_UEI);


		getEventIpcManager().addEventListener(this, ueiList);
	}

