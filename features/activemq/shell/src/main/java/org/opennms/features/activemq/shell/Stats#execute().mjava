    @Override
    public Object execute() {
        if (broker == null) {
            System.out.println("(No broker available.)");
            return null;
        }

        System.out.println("Broker statistics:");
        System.out.printf("\tConnections: %d\n", broker.getCurrentConnections());
        System.out.printf("\tMemory percent usage: %d%%\n", broker.getMemoryPercentUsage());
        System.out.printf("\tMemory usage: %s\n", StringUtils.getHumanReadableByteCount(broker.getMemoryUsage(), false));
        System.out.printf("\tMemory limit: %s\n", StringUtils.getHumanReadableByteCount(broker.getMemoryLimit(), false));

        System.out.print("Destination statistics ");
        Comparator<ManagedDestination> comparator;
        if (topNDests > 0) {
            System.out.printf("(top %d):\n", topNDests);
            comparator = Comparator.comparing(ManagedDestination::getMessageCount)
                    .thenComparing(d -> d.getEnqueueCount() + d.getDequeueCount())
                    .reversed()
                    .thenComparing(ManagedDestination::getName);
        } else {
            System.out.println("(All):");
            // Only sort by name
            comparator = Comparator.comparing(ManagedDestination::getName);
        }

        final List<ManagedDestination> dests = broker.getDestinations().stream()
                .filter(d -> !d.getName().startsWith("ActiveMQ.Advisory") || showAdvisoryTopics)
                .sorted(comparator)
                .limit(topNDests > 0 ? topNDests : Integer.MAX_VALUE)
                .collect(Collectors.toList());
        for (ManagedDestination dest : dests) {
            System.out.printf("\t%s (%s)\n", dest.getName(), getTypeName(dest));
            System.out.printf("\t\tMessage count: %d\n", dest.getMessageCount());
            System.out.printf("\t\tEnqueue count: %s\n", dest.getEnqueueCount());
            System.out.printf("\t\tDequeue count: %s\n", dest.getDequeueCount());
            System.out.printf("\t\tCursor full: %s\n", dest.isCursorFull());
        }
        return null;
    }

