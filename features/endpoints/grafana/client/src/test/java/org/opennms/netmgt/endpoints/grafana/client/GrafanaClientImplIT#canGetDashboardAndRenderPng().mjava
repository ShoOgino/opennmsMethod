    @Test
    public void canGetDashboardAndRenderPng() throws IOException, ExecutionException, InterruptedException {
        stubFor(get(urlEqualTo("/api/dashboards/uid/eWsVEL6zz"))
                .willReturn(aResponse()
                        .withHeader("Content-Type", "application/json")
                        .withBodyFile("dashboard.json")));

        GrafanaServerConfiguration config = new GrafanaServerConfiguration(wireMockRule.baseUrl(), "xxxx", 5, 5);
        GrafanaClientImpl client = new GrafanaClientImpl(config);
        Dashboard dashboard = client.getDashboardByUid("eWsVEL6zz");

        assertThat(dashboard.getMeta().getSlug(), equalTo("flows"));
        assertThat(dashboard.getMeta().isStarred(), equalTo(true));
        assertThat(dashboard.getMeta().getVersion(), equalTo(6));
        assertThat(dashboard.getTags(), contains("cool", "dude"));

        assertThat(panelTitles(dashboard), contains("Traffic (Flows)", "Traffic by Application",
                "Traffic by Application",
                "Traffic (SNMP via MIB-2)",
                "MIB-2 Traffic",
                "MIB-2 Errors and Discards",
                "Conversation (Flows)"));

        Panel row = dashboard.getPanels().get(6);
        assertThat(panelTitles(row), contains("Traffic by Conversation (Top N)", "Traffic by Conversation (Top N)"));

        Panel panel = dashboard.getPanels().get(1);
        assertThat(panel.getId(), equalTo(3));
        assertThat(panel.getDatasource(), equalTo("minion-dev (Flow)"));
        assertThat(panel.getDescription(), equalTo("igb0"));

        stubFor(get(urlEqualTo("/render/d-solo/eWsVEL6zz/flows?panelId=3&from=0&to=1&width=128&height=128&theme=light"))
                .willReturn(aResponse()
                        .withHeader("Content-Type", "image/png")
                        .withBodyFile("panel.png")));

        byte[] pngBytes = client.renderPngForPanel(dashboard, panel, 128, 128, 0L, 1L, null, Collections.emptyMap()).get();
        assertThat(pngBytes.length, equalTo(6401));
    }

