    @Test
    public void verifyCRUD() {
        // Verify empty
        assertThat(grafanaEndpointDao.findAll(), Matchers.hasSize(0));

        // Create endpoint
        final GrafanaEndpoint endpoint = new GrafanaEndpoint();
        endpoint.setConnectTimeout(5);
        endpoint.setReadTimeout(10);
        endpoint.setApiKey("MY_KEY");
        endpoint.setDescription("DUMMY DESCRIPTION");
        endpoint.setUid("aBcDEfG");
        endpoint.setUrl("http://opennms.org");

        grafanaEndpointDao.save(endpoint);

        // Verify Creation
        assertThat(grafanaEndpointDao.findAll(), Matchers.hasSize(1));

        final GrafanaEndpoint persistedEndpoint = grafanaEndpointDao.get(endpoint.getId());
        assertEquals(endpoint.getApiKey(), persistedEndpoint.getApiKey());
        assertEquals(endpoint.getConnectTimeout(), persistedEndpoint.getConnectTimeout());
        assertEquals(endpoint.getDescription(), persistedEndpoint.getDescription());
        assertEquals(endpoint.getId(), persistedEndpoint.getId());
        assertEquals(endpoint.getReadTimeout(), persistedEndpoint.getReadTimeout());
        assertEquals(endpoint.getUid(), persistedEndpoint.getUid());
        assertEquals(endpoint.getUrl(), persistedEndpoint.getUrl());

        // Update Endpoint
        final GrafanaEndpoint updatedEndpoint = new GrafanaEndpoint();
        updatedEndpoint.setUid("dummy Uid");
        updatedEndpoint.setUrl("dummy Url");
        updatedEndpoint.setDescription("dummy description");
        updatedEndpoint.setApiKey("dummy api key");
        updatedEndpoint.setReadTimeout(200);
        updatedEndpoint.setConnectTimeout(300);
        persistedEndpoint.merge(updatedEndpoint);

        grafanaEndpointDao.update(persistedEndpoint);

        // Verify Update
        updatedEndpoint.setId(persistedEndpoint.getId());
        Assert.assertEquals(updatedEndpoint, grafanaEndpointDao.get(persistedEndpoint.getId()));

        // Delete
        grafanaEndpointDao.delete(persistedEndpoint);
        assertThat(grafanaEndpointDao.findAll(), Matchers.hasSize(0));
    }

