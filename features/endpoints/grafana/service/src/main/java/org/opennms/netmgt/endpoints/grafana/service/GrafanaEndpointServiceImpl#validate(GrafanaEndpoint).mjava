    private void validate(GrafanaEndpoint endpoint) {
        if (Strings.isNullOrEmpty(endpoint.getUrl())) {
            throw new GrafanaEndpointException("url", PROVIDE_A_VALUE_TEXT);
        }
        try {
            new URL(endpoint.getUrl());
        } catch (MalformedURLException e) {
            throw new GrafanaEndpointException("url", URL_NOT_VALID_TEMPLATE, e.getMessage());
        }
        if (Strings.isNullOrEmpty(endpoint.getApiKey())) {
            throw new GrafanaEndpointException("apiKey", PROVIDE_A_VALUE_TEXT);
        }
        if (Strings.isNullOrEmpty(endpoint.getUid())) {
            throw new GrafanaEndpointException("uid", PROVIDE_A_VALUE_TEXT);
        }
        if (endpoint.getConnectTimeout() != null && endpoint.getConnectTimeout() < 0) {
            throw new GrafanaEndpointException("connectTimeout", PROVIDED_VALUE_GREATER_ZERO_TEXT);
        }
        if (endpoint.getReadTimeout() != null && endpoint.getReadTimeout() < 0) {
            throw new GrafanaEndpointException("readTimeout", PROVIDED_VALUE_GREATER_ZERO_TEXT);
        }
        // Verify that only one GrafanaEndpoint per UID exists.
        // If an endpoint already exists, ensure it is the same object
        final GrafanaEndpoint byUid = endpointDao.getByUid(endpoint.getUid());
        if (byUid != null && !(byUid.getId().equals(endpoint.getId()))) {
            throw new GrafanaEndpointException("uid", "An endpoint with uid ''{0}'' already exists.", endpoint.getUid());
        }
    }

