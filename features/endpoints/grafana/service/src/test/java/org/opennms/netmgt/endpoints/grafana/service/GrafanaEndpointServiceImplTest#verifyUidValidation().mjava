    @Test
    public void verifyUidValidation() {
        // Ensure null is working
        try {
            endpoint.setUid(null);
            endpointService.validate(endpoint);
            fail("Expected exception was not thrown");
        } catch (GrafanaEndpointException ex) {
            assertEquals("uid", ex.getContext());
            assertEquals(GrafanaEndpointServiceImpl.PROVIDE_A_VALUE_TEXT, ex.getRawMessage());
        }

        // Ensure empty is working
        try {
            endpoint.setUid("");
            endpointService.validate(endpoint);
            fail("Expected exception was not thrown");
        } catch (GrafanaEndpointException ex) {
            assertEquals("uid", ex.getContext());
            assertEquals(GrafanaEndpointServiceImpl.PROVIDE_A_VALUE_TEXT, ex.getRawMessage());
        }

        // Ensure it can not start with - or _
        try {
            endpoint.setUid("-");
            endpointService.validate(endpoint);
            fail("Expected exception was not thrown");
        } catch (GrafanaEndpointException ex) {
            assertEquals("uid", ex.getContext());
        }
        try {
            endpoint.setUid("_");
            endpointService.validate(endpoint);
            fail("Expected exception was not thrown");
        } catch (GrafanaEndpointException ex) {
            assertEquals("uid", ex.getContext());
            assertThat(ex.getMessage(), allOf(containsString("provided Grafana ID"),
                                                containsString("is not valid"),
                                                containsString(GrafanaEndpointServiceImpl.UID_PATTERN.pattern())));
        }

        // Ensure UUID works
        endpoint.setUid(UUID.randomUUID().toString());
        endpointService.validate(endpoint);
    }

