    @Override
    public Response verifyEndpoint(GrafanaEndpoint grafanaEndpoint) {
        GrafanaClient client;
        if (Strings.isNullOrEmpty(grafanaEndpoint.getUid())) {
            final GrafanaEndpoint endpointToUse = new GrafanaEndpoint();
            endpointToUse.setApiKey(grafanaEndpoint.getApiKey());
            endpointToUse.setUrl(grafanaEndpoint.getUrl());
            endpointToUse.setConnectTimeout(grafanaEndpoint.getConnectTimeout());
            endpointToUse.setReadTimeout(grafanaEndpoint.getReadTimeout());
            client = grafanaEndpointService.getClient(endpointToUse);
        } else {
            client = grafanaEndpointService.getClient(grafanaEndpoint.getUid());
        }
        try {
            client.getDashboards();
            return Response.ok().build();
        } catch (IOException ex) {
            return Response.status(Response.Status.BAD_REQUEST).entity(createErrorObject(ex).toString()).build();
        }
    }

