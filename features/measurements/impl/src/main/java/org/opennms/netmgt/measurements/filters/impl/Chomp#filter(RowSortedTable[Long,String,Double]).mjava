    @Override
    public void filter(RowSortedTable<Long, String, Double> qrAsTable)
            throws Exception {

        int numRowsInTable = qrAsTable.rowKeySet().size();
        long lastRowToKeep = numRowsInTable;
        long firstRowToKeep = lastRowToKeep;

        // Determine the index of the first row with a timestamp
        // on/after the cutoff date
        for (long k : qrAsTable.rowKeySet()) {
            if(qrAsTable.get(k, TIMESTAMP_COLUMN_NAME) >= m_cutoffDate) {
                firstRowToKeep = k;
                break;
            }
        }

        if (m_stripNaNs) {
            // Excluding the timestamp column, determine the
            // index of the first and last rows which don't contain
            // completely NaN values
            Set<String> columnNamesNoTs = Sets.newHashSet(qrAsTable.columnKeySet());
            columnNamesNoTs.remove(TIMESTAMP_COLUMN_NAME);
            TableLimits limits = Utils.getRowsWithValues(qrAsTable, columnNamesNoTs.toArray(new String[0]));
            firstRowToKeep = Math.max(firstRowToKeep, limits.firstRowWithValues);
            lastRowToKeep = Math.min(lastRowToKeep, limits.lastRowWithValues);
        }

        Set<String> columnNames = Sets.newHashSet(qrAsTable.columnKeySet());

        // Remove all of the trailing rows
        for (long i = lastRowToKeep+1; i < numRowsInTable; i++) {
            for (String columnName : columnNames) {
                qrAsTable.remove(i, columnName);
            }
        }

        // Remove all of the leading rows
        for (int i = 0; i < firstRowToKeep; i++) {
            for (String columnName : columnNames) {
                qrAsTable.remove(i, columnName);
            }
        }

        // Bump up the indices on the remaining rows
        if (firstRowToKeep > 0) {
            long j = 0;
            for (long i = firstRowToKeep; i <= lastRowToKeep; i++) {
                for (String columnName : columnNames) {
                    Double value = qrAsTable.get(i, columnName);
                    if (value != null) {
                        qrAsTable.put(j, columnName, value);
                    }
                    qrAsTable.remove(i, columnName);
                }
                j++;
            }
        }
    }

