    @Test
    public void canApplyFilters() {
        QueryRequest request = new QueryRequest();
        request.setStart(1414602000000L);
        request.setEnd(1418046400000L);
        request.setStep(1000L);
        request.setMaxRows(700);

        Source ifInOctets = new Source();
        ifInOctets.setResourceId("node[1].interfaceSnmp[eth0-04013f75f101]");
        ifInOctets.setAttribute("ifInOctets");
        ifInOctets.setAggregation("MAX");
        ifInOctets.setLabel("ifInOctets");
        request.setSources(Lists.newArrayList(ifInOctets));

        // Apply a chomp filter - cutting some of the first row off, and the trailing NaNs
        FilterDef chompFilter = new FilterDef("Chomp",
                "cutoffDate", "1414630000.0",
                "stripNaNs", "true");
        request.setFilters(Lists.newArrayList(chompFilter));
        LOG.debug(JaxbUtils.marshal(request));

        QueryResponse response = m_svc.query(request);

        // Verify the values for the first and last rows
        final Map<String, double[]> columns = response.columnsWithLabels();
        double ifInOctetsColumn[] = columns.get("ifInOctets");
        assertEquals(67872.22455490529, ifInOctetsColumn[0], 0.0001);
        assertEquals(1649961.9593111263, ifInOctetsColumn[ifInOctetsColumn.length-1], 0.0001);
    }

