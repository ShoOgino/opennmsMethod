    /**
     * Validates the query request, in order to avoid triggering
     * internal server errors for invalid input.
     *
     * @throws WebApplicationException if validation fails.
     */
    private static void validateQueryRequest(final QueryRequest request) {
        if (request.getEnd() < 0) {
            throw getException(Status.BAD_REQUEST, "Query end must be >= 0: {}", request.getEnd());
        }
        if (request.getStep() <= 0) {
            throw getException(Status.BAD_REQUEST, "Query step must be > 0: {}", request.getStep());
        }
        for (final Source source : request.getSources()) {
            if (source.getResourceId() == null
                    || source.getAttribute() == null
                    || source.getLabel() == null
                    || source.getAggregation() == null) {
                throw getException(Status.BAD_REQUEST, "Query source fields must be set: {}", source);
            }
        }
        for (final Expression expression : request.getExpressions()) {
            if (expression.getExpression() == null
                    || expression.getLabel() == null) {
                throw getException(Status.BAD_REQUEST, "Query expression fields must be set: {}", expression);
            }
        }
        List<AnalyticsCommand> analyticsCommands = request.getAnalyticsCommands();
        if (analyticsCommands.size() > 0) {
            for (AnalyticsCommand command : analyticsCommands) {
                if (
                    command.getModule() == null || 
                    command.getColumnNameOrPrefix() == null
                ) {
                    throw getException(Status.BAD_REQUEST, "Analytics command fields must be set: {}", analyticsCommands);
                }
            }
        }
    }

