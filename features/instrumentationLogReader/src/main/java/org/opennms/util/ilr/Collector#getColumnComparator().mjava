    public Comparator<ServiceCollector> getColumnComparator() {
        Comparator<ServiceCollector> c = null;
        switch(m_sortColumn) {
        case TOTALCOLLECTS:
        {    
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getCollectionCount();
                }                
            };
        }   
        case TOTALCOLLECTTIME: 
        { 
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getTotalCollectionTime();
                }               


            };
        }   
        case AVGCOLLECTTIME: 
        { 
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getAverageCollectionTime();
                }                      
            };

        }   
        case AVGTIMEBETWEENCOLLECTS: 
        {
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getAverageTimeBetweenCollections();
                }                  
            };

        }    
        case TOTALSUCCESSCOLLECTS: 
        {
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getSuccessfulCollectionCount();
                }               
            };

        }   
        case SUCCESSPERCENTAGE:
        {
            return new DoubleComparator() {
                @Override
                protected double getDouble(ServiceCollector sc) {
                    return sc.getSuccessPercentage();
                }         
            };

        }

        case AVGSUCCESSCOLLECTTIME: 
        {
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getAverageCollectionTime();
                }                
            };

        }

        case TOTALUNSUCCESSCOLLECTS: 
        {    
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getErrorCollectionCount();
                }                
            };

        }

        case UNSUCCESSPERCENTAGE:
        {    
            return new DoubleComparator() {
                @Override
                protected double getDouble(ServiceCollector sc) {
                    return sc.getErrorPercentage();
                }      
            };

        }

        case AVGUNSUCCESSCOLLECTTIME:
        {
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getAverageErrorCollectionTime();
                }                
            };      

        }
        case TOTALPERSISTTIME:
        {
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getTotalPersistTime();
                }               
            };
        }
        case AVERAGEPERSISTTIME:
        {
            return new LongComparator() {
                @Override
                protected long getLong(ServiceCollector sc) {
                    return sc.getAveragePersistTime();
                }               
            };
        }   
        }
        return c;
    }

