    @Test
    public void ifTttDaemonTest() throws Exception {
        final Map<String, List<ResultEntry>> resultEntries = runIfTttDaemonTest(4, 4);

        List<ResultEntry> foo = resultEntries.get("Foo / uei.opennms.org/nodes/nodeLost.*");
        List<ResultEntry> bar = resultEntries.get("Bar / uei.opennms.org/nodes/nodeLostService");
        List<ResultEntry> foobar = resultEntries.get("Foo|Bar / uei.opennms.org/nodes/node.*");
        List<ResultEntry> bsm1 = resultEntries.get("Foo|Bar / uei.opennms.org/bsm/serviceProblem");
        List<ResultEntry> bsm2 = resultEntries.get(" / uei.opennms.org/bsm/serviceProb.*");

        Assert.assertEquals(new ResultEntry("ON", "null", 0, "null", 0), foo.get(0));
        Assert.assertEquals(new ResultEntry("MINOR", "INDETERMINATE", 0, "MINOR", 5), foo.get(1));
        Assert.assertEquals(new ResultEntry("MAJOR", "MINOR", 5, "MAJOR", 6), foo.get(2));
        Assert.assertEquals(new ResultEntry("OFF", "null", 0, "null", 0), foo.get(3));

        Assert.assertEquals(new ResultEntry("ON", "null", 0, "null", 0), bar.get(0));
        Assert.assertEquals(new ResultEntry("CRITICAL", "INDETERMINATE", 0, "CRITICAL", 7), bar.get(1));
        Assert.assertEquals(new ResultEntry("CRITICAL", "CRITICAL", 7, "CRITICAL", 8), bar.get(2));
        Assert.assertEquals(new ResultEntry("OFF", "null", 0, "null", 0), bar.get(3));

        Assert.assertEquals(new ResultEntry("ON", "null", 0, "null", 0), foobar.get(0));
        Assert.assertEquals(new ResultEntry("MINOR", "INDETERMINATE", 0, "MINOR", 8), foobar.get(1));
        Assert.assertEquals(new ResultEntry("MAJOR", "MINOR", 8, "MAJOR", 9), foobar.get(2));
        Assert.assertEquals(new ResultEntry("OFF", "null", 0, "null", 0), foobar.get(3));

        Assert.assertEquals(new ResultEntry("ON", "null", 0, "null", 0), bsm1.get(0));
        Assert.assertEquals(new ResultEntry("NORMAL", "INDETERMINATE", 0, "NORMAL", 0), bsm1.get(1));
        Assert.assertEquals(new ResultEntry("MAJOR", "NORMAL", 0, "MAJOR", 1), bsm1.get(2));
        Assert.assertEquals(new ResultEntry("OFF", "null", 0, "null", 0), bsm1.get(3));

        Assert.assertEquals(new ResultEntry("ON", "null", 0, "null", 0), bsm2.get(0));
        Assert.assertEquals(new ResultEntry("CRITICAL", "INDETERMINATE", 0, "CRITICAL", 3), bsm2.get(1));
        Assert.assertEquals(new ResultEntry("CRITICAL", "CRITICAL", 3, "CRITICAL", 4), bsm2.get(2));
        Assert.assertEquals(new ResultEntry("OFF", "null", 0, "null", 0), bsm2.get(3));
    }

