    @Test
    public void testCanParseEifWithSemicolonsInSlotsAndGenerateEvents() throws Exception {
        // Register an event listener
        final List<Event> receivedEvents = Lists.newArrayList();
        eventIpcManager.addEventListener(new EventListener() {
            @Override
            public String getName() {
                return "test";
            }

            @Override
            public void onEvent(Event e) {
                receivedEvents.add(e);
            }
        });
        FileInputStream eifPacketCapture = new FileInputStream(new File("src/test/resources/eif_packets_semicolon_test.dat"));
        Socket clientSocket = new Socket(InetAddrUtils.getLocalHostAddress(), 1828);
        DataOutputStream outToServer = new DataOutputStream(clientSocket.getOutputStream());
        outToServer.write( IOUtils.toByteArray(eifPacketCapture) );
        outToServer.flush();
        clientSocket.close();

        await().atMost(15, SECONDS).until(() -> receivedEvents.size() == 6);
        for (Event event : receivedEvents) {
            assertTrue("UEI must match regex.", event.getUei().matches("^uei.opennms.org/vendor/IBM/EIF/EIF_TEST_EVENT_TYPE_\\w$"));
            assertTrue("situation_name must match regex.",event.getParm("situation_name").getValue().getContent().
                    matches("^Situation \\d{2}"));
        }
    }

