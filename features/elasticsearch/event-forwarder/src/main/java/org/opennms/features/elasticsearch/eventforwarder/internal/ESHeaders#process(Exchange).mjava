    public void process(Exchange exchange) {
        Message in = exchange.getIn();
        String indexName=null;
        final Map body=new HashMap();
        Event event;

        try {
            Object incoming=in.getBody();

            if(incoming instanceof BeanInvocation) {

                event = (Event) ((BeanInvocation)incoming).getArgs()[0];

                populateBodyFromEvent(body, event);

                if(event.getNodeid()!=null) {
                    try {
                        // if the event is a uei.opennms.org/nodes/*updated,changed,deleted then force a refresh
                        maybeRefreshCache(event);

                        // will cache on first access
                        body.putAll(cache.getEntry(event.getNodeid()));

                    } catch(Exception e) {
                        logger.error("error fetching nodeData categories: ", e);
                    }
                }
            } else if(incoming instanceof Map) {
                body.putAll((Map) incoming);
            }

            if(body.containsKey("@timestamp")) {
                logger.trace("Computing indexName from @timestamp: "+body.get("@timestamp"));
                indexName=idxName.apply(remainder, (Date) body.get("@timestamp"));
            } else {
                indexName = idxName.apply(remainder);
            }
        } catch(Exception e) {
            logger.error("Cannot compute index name, failing back to default: "+e.getMessage());
            indexName = idxName.apply(remainder);
        }
        logger.trace("Computing indexName from @timestamp: "+body.get("@timestamp")+" yelds "+indexName);
        in.setHeader(ElasticsearchConfiguration.PARAM_INDEX_NAME, indexName);
        exchange.getOut().setBody(body);
    }

