    @Override
    public void update(OnmsTopologyUpdater updater, OnmsTopologyMessage message) {
        final OnmsTopologyProtocol protocol = updater.getProtocol();
        if (!m_updatersMap.containsKey(protocol)) {
            throw new IllegalArgumentException(String.format("cannot update message with id: %s. Protocol %s not " +
                            "supported for message status %s", message.getMessagebody().getId(), protocol,
                    message.getMessagestatus()));
        }
        if (m_updatersMap.get(protocol) != updater) {
            throw new IllegalArgumentException(String.format("cannot update message with id: %s, protocol: %s and " +
                            "message status: %s. Updater not registered", message.getMessagebody().getId(), protocol,
                    message.getMessagestatus()));
        }
        synchronized (m_consumers) {
            m_consumers
                    .stream()
                    .filter(consumer -> {
                        if (consumer.getProtocols() == null) {
                            return false;
                        }
                        return consumer.getProtocols().contains(protocol);
                    })
                    .forEach(consumer -> consumer.consume(message));
        }
    }

