    @Test
    public void testAddService() throws Exception {
        final NetworkBuilder builder = new NetworkBuilder();

        // Add service with application
        final OnmsNode node1 = builder.addNode("node1")
                                      .setForeignSource("imported:")
                                      .setForeignId("23")
                                      .setType(OnmsNode.NodeType.ACTIVE)
                                      .getNode();
        final OnmsIpInterface iface1 = builder.addSnmpInterface(1)
                                              .setCollectionEnabled(true)
                                              .setIfOperStatus(1)
                                              .setIfSpeed(10000000)
                                              .setIfDescr("ATM0")
                                              .setIfAlias("Initial ifAlias value")
                                              .setIfType(37)
                                              .setPhysAddr("34E45604BB69")
                                              .addIpInterface("1.2.3.4")
                                              .setIsManaged("M")
                                              .setIsSnmpPrimary("P")
                                              .getInterface();
        final OnmsMonitoredService service1 = builder.addService(this.databasePopulator.getService("ICMP"));
        service1.addApplication(this.app1);

        this.app1.addMonitoredService(service1);

        this.databasePopulator.getTransactionTemplate().execute(tx -> {
            this.databasePopulator.getNodeDao().saveOrUpdate(node1);
            this.databasePopulator.getSnmpInterfaceDao().saveOrUpdate(iface1.getSnmpInterface());
            this.databasePopulator.getIpInterfaceDao().saveOrUpdate(iface1);
            this.databasePopulator.getServiceTypeDao().saveOrUpdate(service1.getServiceType());
            this.databasePopulator.getMonitoredServiceDao().saveOrUpdate(service1);
            this.databasePopulator.getApplicationDao().saveOrUpdate(this.app1);

            this.databasePopulator.getMonitoredServiceDao().flush();
            this.databasePopulator.getApplicationDao().flush();

            return null;
        });

        await().atMost(5, TimeUnit.SECONDS).until(() -> findRemotePolledService(service1, "RDU"), is(nullValue()));
        await().atMost(5, TimeUnit.SECONDS).until(() -> findRemotePolledService(service1, "Fulda"), is(nullValue()));

        this.eventIpcManager.sendNowSync(new EventBuilder(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI, "test")
                                                 .setNodeid(node1.getId())
                                                 .setInterface(iface1.getIpAddress())
                                                 .setService(service1.getServiceName())
                                                 .getEvent());

        await().atMost(5, TimeUnit.SECONDS).until(() -> findRemotePolledService(service1, "RDU"), is(notNullValue()));
        await().atMost(5, TimeUnit.SECONDS).until(() -> findRemotePolledService(service1, "Fulda"), is(notNullValue()));
    }

