    protected void reportResult(final String locationName, final RemotePolledService polledService, final PollStatus pollResult) {
        final OnmsMonitoringLocation location = this.monitoringLocationDao.get(locationName);

        final OnmsLocationSpecificStatus status = new OnmsLocationSpecificStatus();
        status.setLocation(location);
        status.setMonitoredService(polledService.getMonSvc());
        status.setPollResult(pollResult);

        this.locationSpecificStatusDao.saveStatusChange(status);

        try {
            if (pollResult.getResponseTime() != null) {
                saveResponseTimeData(locationName, polledService.getMonSvc(), pollResult.getResponseTime(), polledService.getPkg());
            }
        } catch (final Exception e) {
            LOG.error("Unable to save response time data for location {}, monitored service ID {}.", locationSpecificStatusDao, polledService.getMonSvc().getId(), e);
        }

        try {
            sendRegainedOrLostServiceEvent(locationName, polledService.getMonSvc(), pollResult);
        } catch (final Exception e) {
            LOG.error("Unable to save result for location {}, monitored service ID {}.", locationSpecificStatusDao, polledService.getMonSvc().getId(), e);
        }
    }

