    @Override
    public CollectionSet collect(CollectionAgent agent, EventProxy eproxy, Map<String, Object> parameters) throws CollectionException {
        LOG.debug("collect({}, {}, {})", agent, eproxy, parameters);

        final Object collectionNameParam = parameters.get("collection");
        if (collectionNameParam == null || !(collectionNameParam instanceof String)) {
            throw new CollectionException("Collector configuration does not include the required 'collection' parameter.");
        }

        final String collectionName = (String)collectionNameParam;

        final Collection collection = m_wsManDataCollectionConfigDao.getCollectionByName(collectionName);
        if (collection == null) {
            throw new CollectionException("No collection found with name: " + collectionName);
        }

        final OnmsNode node = m_nodeDao.get(agent.getNodeId());
        if (node == null) {
            throw new CollectionException("Could not find node with id: " + agent.getNodeId());
        }

        final WsmanAgentConfig config = m_wsManConfigDao.getConfig(agent.getAddress());
        final WSManEndpoint endpoint = m_wsManConfigDao.getEndpoint(config, agent.getAddress());
        final WSManClient client = m_factory.getClient(endpoint);
        final CollectionSetBuilder collectionSetBuilder = new CollectionSetBuilder(agent);
        final List<Group> groups = m_wsManDataCollectionConfigDao.getGroupsForAgent(collection, agent, config, node);

        if (LOG.isDebugEnabled()) {
            String groupNames = groups.stream().map(g -> g.getName()).collect(Collectors.joining(", "));
            LOG.debug("Collecting attributes on {} from groups: {}", agent, groupNames);
        }

        for (Group group : groups) {
            try {
                collectGroupUsing(group, agent, client, config.getRetry() != null ? config.getRetry() : 0, collectionSetBuilder);
            } catch (InvalidResourceURI e) {
                LOG.info("Resource URI {} in group named {} is not available on {}.", group.getResourceUri(), group.getName(), agent);
            } catch (WSManException e) {
                // If collecting any individual group fails, mark the collection set as
                // failed, and abort trying to collect any other groups
                LOG.warn("Collecting group named {} on {} failed.", group.getName(), agent);
                collectionSetBuilder.withStatus(CollectionStatus.FAILED);
                break;
            }
        }

        return collectionSetBuilder.build();
    }

