    /**
     * Stores the product vendor and product version in the node assets table
     * after the service was successfully detected.
     */
    @Override
    @Transactional
    public void afterDetect(DetectRequest request, DetectResults results, Integer nodeId) {
        if (!results.isServiceDetected() || nodeId == null) {
            return;
        }

        final boolean updateAssets = Boolean.parseBoolean(results.getServiceAttributes().getOrDefault(WsManDetector.UPDATE_ASSETS, "false"));
        final String productVendor = results.getServiceAttributes().get(WsManDetector.PRODUCT_VENDOR);
        final String productVersion = results.getServiceAttributes().get(WsManDetector.PRODUCT_VERSION);

        if (!updateAssets) {
            LOG.info("Asset updates disabled.");
            return;
        }

        final OnmsNode node = m_nodeDao.get(nodeId);
        if (node == null) {
            LOG.warn("No node was found with id: {}", nodeId);
            return;
        }

        LOG.debug("Updating vendor and modelNumber assets on node[{}] with '{}' and '{}'",
                nodeId, productVendor, productVersion);
        node.getAssetRecord().setVendor(productVendor);
        node.getAssetRecord().setModelNumber(productVersion);
        m_nodeDao.update(node);
    }

