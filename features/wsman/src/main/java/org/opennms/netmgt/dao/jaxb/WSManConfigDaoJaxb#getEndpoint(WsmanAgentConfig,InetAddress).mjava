    @Override
    public WSManEndpoint getEndpoint(WsmanAgentConfig agentConfig, InetAddress agentInetAddress) {
        Objects.requireNonNull(agentConfig, "agentConfig argument");
        Objects.requireNonNull(agentInetAddress, "agentInetAddress argument");
        URL url;
        try {
            String protocol = DEFAULT_PROTOCOL;
            if (agentConfig.isSsl()!= null) {
                protocol = agentConfig.isSsl() ? "https" : "http";
            }

            String port = "";
            if (agentConfig.getPort() != null) {
                port = String.format(":%d", agentConfig.getPort());
            }

            String path = DEFAULT_PATH;
            if (agentConfig.getPath() != null) {
                path = agentConfig.getPath();
            }
            // Prepend a forward slash if missing
            if (!path.startsWith("/")) {
                path = "/" + path;
            }

            String host = agentInetAddress.getHostAddress();
            if (agentConfig.isGssAuth()!=null && agentConfig.isGssAuth()) {
                // Always use the canonical host name when using GSS authentication
                host = agentInetAddress.getCanonicalHostName();
            }

            url = new URL(String.format("%s://%s%s%s", protocol, host, port, path));
        } catch (MalformedURLException e) {
            throw new RuntimeException("Invalid endpoint URL: " + e.getMessage());
        }

        final WSManEndpoint.Builder builder = new WSManEndpoint.Builder(url)
                .withServerVersion(WSManVersion.WSMAN_1_0);
        if (agentConfig.getUsername() != null && agentConfig.getPassword() != null) {
            builder.withBasicAuth(agentConfig.getUsername(), agentConfig.getPassword());
        }
        if (agentConfig.isGssAuth() != null && agentConfig.isGssAuth()) {
            builder.withGSSAuth();
        }
        if (agentConfig.getMaxElements() != null) {
            builder.withMaxElements(agentConfig.getMaxElements());
        }
        if (agentConfig.isStrictSsl() != null) {
            builder.withStrictSSL(false);
        }
        if (agentConfig.getTimeout() != null) {
            builder.withConnectionTimeout(agentConfig.getTimeout())
                   .withReceiveTimeout(agentConfig.getTimeout());
        }
        return builder.build();
    }

