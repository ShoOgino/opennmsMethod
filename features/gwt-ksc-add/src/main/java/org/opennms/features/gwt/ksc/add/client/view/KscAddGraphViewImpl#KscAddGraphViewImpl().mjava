    public KscAddGraphViewImpl() {
        initWidget(uiBinder.createAndBindUi(this));

        m_layoutPanel.setSize("100%", "75px");
        m_textBox.addKeyDownHandler(new KeyDownHandler() {
            @Override
            public void onKeyDown(final KeyDownEvent event) {
                if(m_presenter != null) {
                    m_presenter.onKeyCodeEvent(event, getSearchText());
                }
            }
        });
        m_textBox.addKeyUpHandler(new KeyUpHandler() {
            @Override
            public void onKeyUp(final KeyUpEvent event) {
                if(m_presenter != null) {
                    m_presenter.onKeyCodeEvent(event, getSearchText());
                }
            }
        });
        
        m_selectionModel = new SingleSelectionModel<KscReport>();
        m_selectionModel.addSelectionChangeHandler(new SelectionChangeEvent.Handler() {
            @Override
            public void onSelectionChange(final SelectionChangeEvent event) {
                if (getSelectedReport() != null) {
                    m_textBox.setValue(getSelectedReport().getLabel(), false);
                    m_popupPanel.hide();
                }
            }
        });

        m_titleLabel.getElement().getStyle().setFontSize(12, Unit.PX);
        m_reportLabel.getElement().getStyle().setFontSize(12, Unit.PX);
        
        m_reportList = new CellList<KscReport>(new KscReportCell());
        m_reportList.setPageSize(10);
        m_reportList.getElement().getStyle().setFontSize(12, Unit.PX);
        m_reportList.setSelectionModel(m_selectionModel);

        m_dataList = new ListDataProvider<KscReport>();
        m_dataList.addDataDisplay(m_reportList);
        
        m_pager = new SimplePager();
        m_pager.setStyleName("onms-table-no-borders-margin");
        m_pager.getElement().getStyle().setWidth(100, Unit.PCT);
        m_pager.setDisplay(m_reportList);
        
        final FlowPanel flowPanel = new FlowPanel();
        flowPanel.add(m_reportList);
        flowPanel.add(m_pager);
        m_popupPanel = new PopupPanel();
        m_popupPanel.add(flowPanel);
        m_popupPanel.setAutoHideEnabled(true);
        m_popupPanel.setAnimationEnabled(false);
        m_popupPanel.setModal(false);
        m_popupPanel.getElement().getStyle().setBorderWidth(1, Unit.PX);
        m_popupPanel.getElement().getStyle().setBorderColor("#B5B8C8");
        m_popupPanel.getElement().getStyle().setPadding(1, Unit.PX);
        
        m_repositionPopupPanel = new PositionCallback() {
            @Override
            public void setPosition(final int offsetWidth, final int offsetHeight) {
                m_popupPanel.setWidth((getOffsetWidth() - 5) + "px");
                m_popupPanel.setPopupPosition(getAbsoluteLeft(), getAbsoluteTop() + 74);
            }
        };
        
        Window.addResizeHandler(new ResizeHandler() {
            @Override
            public void onResize(final ResizeEvent event) {
                if (m_popupPanel.isShowing()) {
                    m_popupPanel.setPopupPositionAndShow(m_repositionPopupPanel);
                }
            }
        });
    }

