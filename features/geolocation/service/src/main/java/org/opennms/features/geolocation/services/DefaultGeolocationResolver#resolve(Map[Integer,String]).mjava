    @Override
    public Map<Integer, Coordinates> resolve(Map<Integer, String> nodeIdAddressMap) {
        if (nodeIdAddressMap == null || nodeIdAddressMap.isEmpty()) {
            return new HashMap<>(); // nothing to do
        }

        // 1st filter out invalid values
        nodeIdAddressMap = nodeIdAddressMap.entrySet().stream()
                .filter(e -> !Strings.isNullOrEmpty(e.getValue()) && e.getKey() != null)
                .collect(Collectors.toMap(e -> e.getKey(), e -> e.getValue()));

        // 2nd Resolve longitude/latitude coordinates from an address string
        final Map<Integer, Coordinates> resultMap = new HashMap<>();
        nodeIdAddressMap.entrySet().stream()
                .forEach(entry -> {
                    final String addressString = entry.getValue();
                    try {
                        org.opennms.features.geocoder.Coordinates coordinates = geocoderService.getCoordinates(addressString);
                        if (coordinates != null) {
                            resultMap.put(entry.getKey(), new Coordinates(coordinates.getLongitude(), coordinates.getLatitude()));
                        }
                    } catch (GeocoderException e) {
                        LOG.warn("Couldn't resolve address '%s'", addressString);
                    }
                });
        return resultMap;
    }

