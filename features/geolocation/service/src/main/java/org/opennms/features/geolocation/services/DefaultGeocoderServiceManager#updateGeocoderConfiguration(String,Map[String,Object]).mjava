    @Override
    public void updateGeocoderConfiguration(String geocoderId, Map<String, Object> newProperties) throws IOException, GeocoderConfigurationException {
        final GeocoderService geocoderService = getGeocoderService(geocoderId);
        final GeocoderConfiguration currentConfiguration = geocoderService.getConfiguration();

        // Only update if configuration has not yet changed
        if (!Objects.equals(currentConfiguration.asMap(), newProperties)) {
            geocoderService.validateConfiguration(newProperties);

            // Updating the configuration will result in a bundle reload to which the configuration belongs
            // Please keep in mind, that the config pid of the geocoder must be PID + geocoderId
            final String configPID = PID + "." + geocoderId;
            final Configuration configuration = configurationAdmin.getConfiguration(configPID, null);
            final Dictionary<String, Object> currentProperties = configuration.getProperties() != null ? configuration.getProperties() : new Hashtable<>();
            applyProperties(currentProperties, newProperties);

            // Ensure file will be created if it does not yet exist
            if (currentProperties.get("felix.fileinstall.filename") == null) {
                final Path configFile = Paths.get(System.getProperty("karaf.etc"), configPID + ".cfg");
                final Properties persistentProperties = new Properties();
                newProperties.entrySet().forEach(e -> persistentProperties.put(e.getKey(), e.getValue().toString()));
                persistentProperties.store(new FileOutputStream(configFile.toFile()), null);
            }
            configuration.update(currentProperties);
        }
    }

