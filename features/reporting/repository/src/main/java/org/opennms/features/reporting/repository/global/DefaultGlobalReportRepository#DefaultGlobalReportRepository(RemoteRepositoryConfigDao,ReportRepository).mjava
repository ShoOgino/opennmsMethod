    /**
     * Default constructor creates one local-repository and all configured remote-repositories.
     */
    public DefaultGlobalReportRepository(RemoteRepositoryConfigDao remoteRepositoryConfigDao, ReportRepository localReportRepository) {
        m_remoteRepositoryConfigDao = remoteRepositoryConfigDao;
        m_localReportRepository = localReportRepository;

        // Get the jasper report version from opennms.properties
        m_jasperReportVersion = System.getProperty("org.opennms.jasperReportsVersion");

        this.m_repositoryList = new ArrayList<>();

        try {
            logger.debug("Config resource is set to '{}'", m_remoteRepositoryConfigDao.toString());
            Assert.notNull(m_remoteRepositoryConfigDao, "remote repository config dao property configResource must be set to a non-null value");

            logger.debug("Local report repository is set to '{}'", m_localReportRepository.toString());
            Assert.notNull(m_localReportRepository, "local report repository property must be set to a non-null value");
        } catch (Exception e) {
            logger.error("Error during create a default global report repository. Error message: '{}'", e.getMessage());
        }

        try {
            logger.debug("JasperReports version is set to '{}'", m_jasperReportVersion);
            Assert.notNull(m_jasperReportVersion, "jasper report version must be set to a non-null value");
        } catch (Exception e) {
            logger.error("Jasper report version must be set in opennms.properties. Error message: '{}'", e.getMessage());
        }
        setRemoteRepositoryConfigDao(remoteRepositoryConfigDao);
    }

