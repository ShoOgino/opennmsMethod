    private List<BasicReportDefinition> mapSDOListToBasicReportList(List<RemoteReportSDO> remoteReportSDOList) {
        List<BasicReportDefinition> resultList = new ArrayList<BasicReportDefinition>();
        for (RemoteReportSDO report : remoteReportSDOList) {
            SimpleJasperReportDefinition result = new SimpleJasperReportDefinition();
            try {
                BeanUtils.copyProperties(result, report);
                result.setId(m_remoteRepositoryDefintion.getRepositoryId()
                        + "_" + result.getId());
            } catch (IllegalAccessException e) {
                logger.debug("SDO to BasicReport mapping IllegalAssessException while copyProperties from '{}' to '{}' with exception.", report, result);
                logger.error("SDO to BasicReport mapping IllegalAssessException while copyProperties '{}' RepositoryURI: '{}'", e, m_remoteRepositoryDefintion.getURI());
                e.printStackTrace();
            } catch (InvocationTargetException e) {
                logger.debug("SDO to BasicReport mapping InvocationTargetException while copyProperties from '{}' to '{}' with exception.", report, result);
                logger.error("SDO to BasicReport mapping InvocationTargetException while copyProperties '{}' RepositoryURI: '{}'", e, m_remoteRepositoryDefintion.getURI());
                e.printStackTrace();
            }

            logger.debug("SDO to BasicReport mapping got: '{}'", report.toString());
            resultList.add(result);
        }
        logger.debug("SDO to BasicReport mapping returns resultList: '{}'", resultList.toString());
        return resultList;
    }

