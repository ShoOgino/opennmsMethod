        public String getFormattedProblems() {
            StringBuilder problemBuilder = new StringBuilder();

            for (int u = 0; u < units.length; u++) {
                String sourceCode = units[u].getSourceCode();

                IProblem[] problems = unitResults[u].problems;

                if (problems != null && problems.length > 0) {
                    for (int i = 0; i < problems.length; i++) {
                        IProblem problem = problems[i];

                        problemBuilder.append(i + 1);
                        problemBuilder.append(". ");
                        problemBuilder.append(problem.getMessage());

                        if (problem.getSourceStart() >= 0 && problem.getSourceEnd() >= 0) {
                            int problemStartIndex = sourceCode.lastIndexOf("\n", problem.getSourceStart()) + 1;
                            int problemEndIndex = sourceCode.indexOf("\n", problem.getSourceEnd());
                            if (problemEndIndex < 0) {
                                problemEndIndex = sourceCode.length();
                            }

                            problemBuilder.append("\n");
                            problemBuilder.append(sourceCode.substring(problemStartIndex, problemEndIndex));
                            problemBuilder.append("\n");
                            for (int j = problemStartIndex; j < problem.getSourceStart(); j++) {
                                problemBuilder.append(" ");
                            }
                            if (problem.getSourceStart() == problem.getSourceEnd()) {
                                problemBuilder.append("^");
                            } else {
                                problemBuilder.append("<");
                                for (int j = problem.getSourceStart() + 1; j < problem.getSourceEnd(); j++) {
                                    problemBuilder.append("-");
                                }
                                problemBuilder.append(">");
                            }

                            problemBuilder.append("\n");
                        }
                    }

                    problemBuilder.append(problems.length);
                    problemBuilder.append(" errors\n");
                }
            }

            return problemBuilder.length() > 0 ? problemBuilder.toString() : null;
        }

