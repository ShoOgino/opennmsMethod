    private void render(final String id, final InputStream inputStream, final ReportFormat format, final OutputStream outputStream) {
        Logging.withPrefix(LOG4J_CATEGORY, new Runnable() {
            @Override
            public void run() {
                try {
                    Resource xsltResource;
                    ReportRenderer renderer;

                    switch (format) {
                    case HTML:
                        LOG.debug("rendering as HTML");
                        renderer = new HTMLReportRenderer();
                        xsltResource = new UrlResource(m_configDao.getHtmlStylesheetLocation(id));
                        break;
                    case PDF:
                        LOG.debug("rendering as PDF");
                        renderer = new PDFReportRenderer();
                        xsltResource = new UrlResource(m_configDao.getPdfStylesheetLocation(id));
                        break;
                    case SVG:
                        LOG.debug("rendering as PDF with embedded SVG");
                        renderer = new PDFReportRenderer();
                        xsltResource = new UrlResource(m_configDao.getSvgStylesheetLocation(id));
                        break;
                    default:
                        LOG.debug("rendering as HTML as no valid format found");
                        renderer = new HTMLReportRenderer();
                        xsltResource = new UrlResource(m_configDao.getHtmlStylesheetLocation(id));
                    }

                    final String baseDir = System.getProperty("opennms.report.dir");
                    renderer.setBaseDir(baseDir);
                    renderer.render(inputStream, outputStream, xsltResource);
                    outputStream.flush();

                } catch (final Exception e) {
                    LOG.error("An error occurred rendering to {} format.", format.name(), e);
                }
            }
            
        });
    }

