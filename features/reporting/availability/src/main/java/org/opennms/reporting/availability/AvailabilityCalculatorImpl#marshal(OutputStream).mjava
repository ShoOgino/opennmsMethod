    private void marshal(final OutputStream outputStream) throws AvailabilityCalculationException {
        try {
            Logging.withPrefix(LOG4J_CATEGORY, new Callable<Void>() {
                @Override
                public Void call() throws Exception {
                    try {
                        OutputStreamWriter writer = new OutputStreamWriter(outputStream, "UTF-8");
                        Marshaller marshaller = new Marshaller(writer);
                        marshaller.setSuppressNamespaces(true);
                        marshaller.marshal(m_report);
                        LOG.debug("The xml marshalled from the castor classes has been written to the output stream");
                        writer.flush();
                    } catch (final Exception e) {
                        LOG.error("Failed to write to output.", e);
                        throw e;
                    }
                    return null;
                }

            });
        } catch (final Exception e) {
            throw new AvailabilityCalculationException("Failed to write to output.", e);
        }
    }

