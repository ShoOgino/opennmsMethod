    /** {@inheritDoc} */
    @Override
    public void runAndRender(HashMap<String, Object> reportParms,
            String reportId, ReportFormat format, OutputStream outputStream) {
        
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        BufferedOutputStream bout = new BufferedOutputStream(out);
        
        AvailabilityCalculator calculator;

        LOG.debug("running OpenNMS database report {}", reportId);

        if (m_configDao.getType(reportId).equalsIgnoreCase(CAL_TYPE)) {
            calculator = m_calendarCalculator;
            LOG.debug("Calendar report format selected");
        } else {
            calculator = m_classicCalculator;
            LOG.debug("Classic report format selected");
        }

        calculator.setCategoryName((String) reportParms.get("reportCategory"));
        
        LOG.debug("set availability calculator report category to: {}", calculator.getCategoryName());


        calculator.setCalendar(new GregorianCalendar());
        calculator.setPeriodEndDate((Date) reportParms.get("endDate"));
        
        LOG.debug("set availability calculator end date to: {}", calculator.getPeriodEndDate());

        calculator.setLogoURL(m_configDao.getLogo(reportId));

        // have the calculator calculate everything to enable any of the
        // templates to work
        // This has changed since the last version
        // This will have some performance impact.

        calculator.setReportFormat("all");

        LOG.debug("Starting Availability Report Calculations");
        try {
            calculator.calculate();
            calculator.writeXML(bout);
            render(reportId,
                   new ByteArrayInputStream(out.toByteArray()),
                   format,
                   outputStream);
            outputStream.flush();
        } catch (AvailabilityCalculationException ce) {
            LOG.error("Unable to calculate report data ", ce);
        } catch (IOException e) {
            LOG.error("IO exception flushing output stream ", e);
        } 
        
    }

