    /**
     * This converts the outage report from xml to pdf format using fop.
     */
    public void generatePDF(FileReader xml, OutputStream pdfWriter, String fotFileName) throws MarshalException, ValidationException, IOException, Exception {
        ThreadCategory.setPrefix(LOG4J_CATEGORY);
		Logger avalonLogger = new Log4JLogger(log());
		
		try {
            if (log().isInfoEnabled()) {
                log().info("XSL File " + m_xslSource);
            }
            Reader xsl = new FileReader(m_xslSource);

            // create the SAX parser to supply to the FOP Driver to build the FO
            // tree.
            // File file = new File(ConfigFileConstants.getHome() +
            // "/share/reports/temp.fot");
            File file = new File(fotFileName);
            FileWriter fot = new FileWriter(file);

            // XSLTProcessor processor = XSLTProcessorFactory.getProcessor();
            // processor.process( new XSLTInputSource(xml), new
            // XSLTInputSource(xsl), new XSLTResultTarget(fot) );
            TransformerFactory tfact = TransformerFactory.newInstance();
            Transformer processor = tfact.newTransformer(new StreamSource(xsl));
            processor.transform(new StreamSource(xml), new StreamResult(fot));

            if (log().isInfoEnabled()) {
                log().info("FOT generated is saved in " + fotFileName);
            }

            xml = null;
            // initDriver();
			Logger nullLogger = new NullLogger();
			MessageHandler.setScreenLogger(nullLogger);
            MessageHandler.setOutputMethod(MessageHandler.NONE);

            fot.close();
            fot = null;
            Reader reader = new FileReader(file);
            InputSource dataSource = new InputSource(reader);

            m_driver = new org.apache.fop.apps.Driver(dataSource, pdfWriter);
			m_driver.setLogger(avalonLogger);
			m_driver.setRenderer(org.apache.fop.apps.Driver.RENDER_PDF);
            m_driver.run();

            /*
             * if(log.isInfoEnabled()) log.info("Build FO Tree");
             * m_driver.buildFOTree(xmlParser, dataSource);
             * 
             * if(log.isInfoEnabled()) log.info("Format"); m_driver.format();
             * 
             * m_driver.setOutputStream(pdfWriter);
             * 
             * if(log.isInfoEnabled()) log.info("Render"); m_driver.render();
             * 
             * if(log.isInfoEnabled()) { log.info("Rendered"); }
             */
            Runtime runn = Runtime.getRuntime();
            runn.exec("rm " + fotFileName);
        } catch (Exception e) {
            log().fatal("Exception: " + e, e);
            throw e;
        }
    }

