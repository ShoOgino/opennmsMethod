    /* (non-Javadoc)
     * @see org.opennms.reporting.availability.AvailabilityCalculator#calculate()
     */
    /**
     * <p>calculate</p>
     *
     * @throws org.opennms.reporting.availability.AvailabilityCalculationException if any.
     */
    @Override
    public void calculate() throws AvailabilityCalculationException {
        try {
            Logging.withPrefix(LOG4J_CATEGORY, new Callable<Void>() {
                @Override
                public Void call() throws Exception {
                    LOG.debug("Calculation Started");
                    LOG.debug("periodEndDate: {}", m_periodEndDate);

                    m_report.setLogo(m_logoURL);
                    LOG.debug("logoURL: {}", m_logoURL);
                    ViewInfo viewInfo = new ViewInfo();
                    m_report.setViewInfo(viewInfo);
                    org.opennms.reporting.availability.Categories categories = new org.opennms.reporting.availability.Categories();
                    m_report.setCategories(categories);
                    try {
                        LOG.debug("Populating datastructures and calculating availability");
                        LOG.debug("category: {}", m_categoryName);
                        LOG.debug("monthFormat: {}", m_monthFormat);
                        LOG.debug("reportFormat: {}", m_reportFormat);
                        m_availabilityData.fillReport(m_categoryName, m_report, m_reportFormat, m_monthFormat, m_periodEndDate);
                    } catch (final Exception e) {
                        LOG.error("An error occurred while calculating availability.", e);
                        throw e;
                    }
                    return null;
                }
            });
        } catch (final Exception e) {
            throw new AvailabilityCalculationException(e);
        }
    }

