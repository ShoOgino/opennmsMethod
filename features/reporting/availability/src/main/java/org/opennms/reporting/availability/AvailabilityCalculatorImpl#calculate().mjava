    /* (non-Javadoc)
     * @see org.opennms.reporting.availability.AvailabilityCalculator#calculate()
     */
    /**
     * <p>calculate</p>
     *
     * @throws org.opennms.reporting.availability.AvailabilityCalculationException if any.
     */
    public void calculate() throws AvailabilityCalculationException {

        log.debug("Calculation Started");
        log.debug("periodEndDate: " + m_periodEndDate);

        m_report.setLogo(m_logoURL);
        log.debug("logoURL: " + m_logoURL);
        ViewInfo viewInfo = new ViewInfo();
        m_report.setViewInfo(viewInfo);
        org.opennms.reporting.availability.Categories categories = new org.opennms.reporting.availability.Categories();
        m_report.setCategories(categories);
        try {
            log.debug("Populating datastructures and calculating availability");
            log.debug("category:     " + m_categoryName);
            log.debug("monthFormat:  " + m_monthFormat);
            log.debug("reportFormat: " + m_reportFormat);
            /* We just initialize this to make sure there are no exceptions, I guess?
             * AvailabilityData availData =
             */
            
            m_availabilityData.fillReport(m_categoryName,
                                                              m_report,
                                                              m_reportFormat,
                                                              m_monthFormat,
                                                              m_periodEndDate);
        } catch (MarshalException me) {
            log.fatal("MarshalException ", me);
            throw new AvailabilityCalculationException(me);
        } catch (ValidationException ve) {
            log.fatal("Validation Exception ", ve);
            throw new AvailabilityCalculationException(ve);
        } catch (IOException ioe) {
            log.fatal("Validation Exception ", ioe);
            throw new AvailabilityCalculationException(ioe);
        } catch (Exception e) {
            log.fatal("Exception ", e);
            throw new AvailabilityCalculationException(e);
        }

    }

