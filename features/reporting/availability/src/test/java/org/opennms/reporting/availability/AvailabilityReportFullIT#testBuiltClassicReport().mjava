    @Test
    @Ignore("Don't run this test (which has less coverage than the next) until I figure out why we're holding onto the previous test's dataSource.")
    public void testBuiltClassicReport() {
        
        try {
            classicAvailabilityCalculator.setPeriodEndDate(m_calendar.getTime());
            classicAvailabilityCalculator.setLogoURL("wahtever");
            classicAvailabilityCalculator.setReportFormat("PDF");
            classicAvailabilityCalculator.setMonthFormat("classic");
            classicAvailabilityCalculator.setCategoryName("Network Interfaces");

            classicAvailabilityCalculator.calculate();
            Report report = classicAvailabilityCalculator.getReport();
            
            Assert.assertNotNull("report", report);

            Assert.assertNotNull("report categories", report.getCategories());
            Categories categories = report.getCategories();

            Assert.assertEquals("category count", 1, categories.getCategoryCount());
            Category category = categories.getCategory(0);

            // basic test
            Assert.assertEquals("category node count", Integer.valueOf(2), category.getNodeCount());
            Assert.assertEquals("category ip address count", Integer.valueOf(3),
                         category.getIpaddrCount());
            Assert.assertEquals("category service count", Integer.valueOf(3), category.getServiceCount());

            Section section = getSectionByName(category,
                                               "LastMonthsDailyAvailability");
            Assert.assertNull("section calendar table", section.getCalendarTable());
            Created created = report.getCreated();
            Assert.assertNotNull("report created period", created.getPeriod());
            
        } catch (Throwable e) {
            throw new UndeclaredThrowableException(e);
        }

    }

