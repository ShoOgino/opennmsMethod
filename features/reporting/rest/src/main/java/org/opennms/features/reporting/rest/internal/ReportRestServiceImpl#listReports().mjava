    @Override
    public Response listReports() {
        final List<ReportRepositoryDescription> activeRepositories = databaseReportListService.getActiveRepositories();
        final List<DatabaseReportDescription> reportDescriptions = activeRepositories.stream()
                .flatMap(repositoryDescriptor -> databaseReportListService.getReportsByRepositoryId(repositoryDescriptor.getId()).stream())
                .collect(Collectors.toList());
        if (reportDescriptions.isEmpty()) {
            return Response.noContent().build();
        }
        final JSONArray jsonArray = new JSONArray();
        for (DatabaseReportDescription description : reportDescriptions) {
            final JSONObject json = new JSONObject();
            json.put("id", description.getId());
            json.put("name", description.getDisplayName());
            json.put("description", description.getDescription());
            json.put("allowAccess", description.getAllowAccess());
            json.put("online", description.getIsOnline());
            json.put("repositoryId", description.getRepositoryId());
            jsonArray.put(json);
        }
        return Response.ok(jsonArray.toString()).type(MediaType.APPLICATION_JSON_TYPE).build();
    }

