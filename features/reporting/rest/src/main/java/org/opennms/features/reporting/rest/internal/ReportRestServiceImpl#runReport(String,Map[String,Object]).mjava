    @Override
    public Response runReport(final String reportId, final Map<String, Object> inputParameters) {
        final ReportParameters parameters = convertParameters(inputParameters);
        parameters.setReportId(reportId);

        final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        try {
            reportWrapperService.runAndRender(parameters, ReportMode.IMMEDIATE, outputStream);
            if ((parameters.getFormat() == ReportFormat.PDF) || (parameters.getFormat() == ReportFormat.SVG) ) {
                return Response.ok().type("application/pdf;charset=UTF-8")
                    .header("Content-disposition", "inline; filename=report.pdf")
                    .header("Pragma", "public")
                    .header("Cache-Control", "cache")
                    .header("Cache-Control", "must-revalidate")
                    .entity(outputStream.toByteArray()).build();
            }
            if(parameters.getFormat() == ReportFormat.CSV) {
                return Response.ok().type("text/csv;charset=UTF-8")
                    .header("Content-disposition", "inline; filename=report.csv")
                    .header("Cache-Control", "cache")
                    .header("Cache-Control", "must-revalidate")
                    .entity(outputStream.toByteArray()).build();
            }
            return Response.status(Response.Status.BAD_REQUEST).build(); // TODO MVR unsupported format
        } catch (ReportException ex) {
            throw new RuntimeException(ex);
        } finally {
            IOUtils.closeQuietly(outputStream);
        }
    }

