    /** {@inheritDoc} */
    @Override
    public void run(final ReportParameters parameters, final ReportMode mode, final DeliveryOptions deliveryOptions, final String reportId) {
        Logging.withPrefix(LOG4J_CATEGORY, new Runnable() {
            @Override public void run() {
                ByteArrayOutputStream out = null;
                BufferedOutputStream bout = null;

                try {
                    out = new ByteArrayOutputStream();
                    bout = new BufferedOutputStream(out);
                    if (!deliveryOptions.isPersist()) {
                        try {
                            getReportService(reportId).runAndRender(parameters.getReportParms(mode), reportId, deliveryOptions.getFormat(), bout);
                        } catch (final ReportException reportException) {
                            logError(reportId, reportException);
                        }
                        mailReport(deliveryOptions, out);
                    } else {
                        final String outputPath = getReportService(reportId).run(parameters.getReportParms(mode), reportId);
                        final ReportCatalogEntry catalogEntry = new ReportCatalogEntry();
                        catalogEntry.setReportId(reportId);
                        catalogEntry.setTitle(deliveryOptions.getInstanceId());
                        catalogEntry.setLocation(outputPath);
                        catalogEntry.setDate(new Date());
                        m_reportStoreService.save(catalogEntry);
                        if (deliveryOptions.isSendMail() && deliveryOptions.getMailTo().length() != 0) {
                            getReportService(reportId).render(reportId, outputPath, deliveryOptions.getFormat(), bout);
                            mailReport(deliveryOptions, out);
                        }
                    }
                } catch (final Exception e) {
                    logError(reportId, e);
                } finally {
                    IOUtils.closeQuietly(bout);
                    IOUtils.closeQuietly(out);
                }
            }
        });
    }

