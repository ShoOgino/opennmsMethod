    private HashMap<String, Object> buildJRparameters(
            HashMap<String, Object> onmsReportParms, JRParameter[] reportParms)
            throws ReportException {

        HashMap<String, Object> jrReportParms = new HashMap<String, Object>();

        for (JRParameter reportParm : reportParms) {
            log.debug("found report parm " + reportParm.getName()
                    + " of class " + reportParm.getValueClassName());
            if (reportParm.isSystemDefined() == false) {

                String parmName = reportParm.getName();

                if (onmsReportParms.containsKey(parmName) == false)
                    throw new ReportException("Required parameter "
                            + parmName
                            + " not supplied to JasperReports by OpenNMS");

                if (reportParm.getValueClassName().equals("java.lang.String")) {
                    jrReportParms.put(
                                      parmName,
                                      new String(
                                                 (String) onmsReportParms.get(parmName)));
                    continue;
                }

                if (reportParm.getValueClassName().equals("java.lang.Integer")) {
                    jrReportParms.put(
                                      parmName,
                                      new Integer(
                                                  (Integer) onmsReportParms.get(parmName)));
                    continue;
                }

                if (reportParm.getValueClassName().equals("java.util.Date")) {
                    Date date = (Date) onmsReportParms.get(parmName);
                    jrReportParms.put(parmName, new Date(date.getTime()));
                    continue;
                }

                if (reportParm.getValueClassName().equals("java.sql.Date")) {
                    Date date = (Date) onmsReportParms.get(parmName);
                    jrReportParms.put(parmName,
                                      new java.sql.Date(date.getTime()));
                    continue;
                }

                throw new ReportException(
                                          "Unsupported report parameter type "
                                                  + reportParm.getValueClassName());

            }
        }

        return jrReportParms;

    }

