    /**
     * Iterates recursively over each subreport element in the given {@link JasperReport} and compiles the referenced
     * subreport if not already compiled.
     *
     * @param report The {@link JasperReport} to compile all subreports recursively if needed.
     */
    private void compileSubreportsRecursively(JasperReport report) {
        JRElementsVisitor.visitReport(report, new JRVisitorSupport() {
            @Override
            public void visitSubreport(JRSubreport subreport) {
                final String compiledSubreportName = evaluateToString(report, subreport.getExpression());
                final String sourceSubreportName = compiledSubreportName.replace(".jasper", ".jrxml");
                final File compiledSubreportFile = new File(compiledSubreportName);
                final File sourceSubreportFile = new File(sourceSubreportName);
                if(!compiledSubreportFile.exists() || compiledSubreportFile.lastModified() < sourceSubreportFile.lastModified()) {

                    LOG.debug("Compiling Subreport '{}' ...", compiledSubreportName);
                    try {
                        JasperDesign subreportDesign = JRXmlLoader.load(sourceSubreportName);
                        JasperReport subreportCompiled = compileReport(subreportDesign);
                        JRSaver.saveObject(subreportCompiled, compiledSubreportFile);
                        compileSubreportsRecursively(subreportCompiled); // Compile containing sub reports if needed
                    } catch (ReportException | JRException e) {
                        LOG.error("Could not compile Jasper Subreport. Expression: {}, Evaluated Expression: {}", subreport.getExpression(), compiledSubreportName, e);
                    }
                    LOG.debug("Subreport '{}' compiled", compiledSubreportName);
                } else {
                    // The report is already compiled, compile containing sub reports if needed
                    try {
                        compileSubreportsRecursively((JasperReport) JRLoader.loadObject(compiledSubreportFile));
                    } catch (JRException e) {
                        LOG.error("Could not load compiled Jasper Subreport. Expression: {}, Evaluated Expression: {}", subreport.getExpression(), compiledSubreportName, e);
                    }
                }
            }
        });
    }

