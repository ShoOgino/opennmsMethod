    /**
     * {@inheritDoc}
     */
    @Override
    public void runAndRender(HashMap<String, Object> reportParms,
                             String reportId, ReportFormat format, OutputStream outputStream)
            throws ReportException {

        JasperReport jasperReport = null;
        JasperPrint jasperPrint = null;
        HashMap<String, Object> jrReportParms;

        try {
            jasperReport = JasperCompileManager.compileReport(m_globalReportRepository.getTemplateStream(reportId));
        } catch (JRException e) {
            log.error("unable to compile jasper report", e);
            throw new ReportException("unable to compile jasperReport", e);
        }

        jrReportParms = buildJRparameters(reportParms,
                jasperReport.getParameters());
        jrReportParms.putAll(buildSubreport(reportId, jasperReport));

        if ("jdbc".equalsIgnoreCase(m_globalReportRepository.getEngine(reportId))) {
            Connection connection;
            try {
                connection = DataSourceFactory.getDataSource().getConnection();
                jasperPrint = JasperFillManager.fillReport(jasperReport,
                        jrReportParms,
                        connection);
                exportReport(format, jasperPrint, outputStream);
                connection.close();
            } catch (SQLException e) {
                log.error("sql exception getting or closing datasource ", e);
                throw new ReportException(
                        "sql exception getting or closing datasource",
                        e);
            } catch (JRException e) {
                log.error("jasper report exception ", e);
                throw new ReportException(
                        "unable to run or render jdbc jasperReport",
                        e);
            }
        } else if ("null".equalsIgnoreCase(m_globalReportRepository.getEngine(reportId))) {
            try {
                jasperPrint = JasperFillManager.fillReport(jasperReport,
                        jrReportParms,
                        new JREmptyDataSource());
                exportReport(format, jasperPrint, outputStream);
            } catch (JRException e) {
                log.error("jasper report exception ", e);
                throw new ReportException(
                        "unable to run or render emptyDataSource jasperReport",
                        e);
            }

        }

    }

