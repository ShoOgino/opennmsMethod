    /**
     * {@inheritDoc}
     */
    @Override
    public void render(final String reportId, final String location, final ReportFormat format, final OutputStream outputStream) throws ReportException {
        try {
            Logging.withPrefix(LOG4J_CATEGORY, new Callable<Void>() {
                @Override public Void call() throws Exception {
                    try {
                        final JasperPrint jasperPrint = getJasperPrint(location);

                        switch (format) {
                        case PDF:
                            LOG.debug("rendering as PDF");
                            exportReportToPdf(jasperPrint, outputStream);
                            break;

                        case CSV:
                            LOG.debug("rendering as CSV");
                            exportReportToCsv(jasperPrint, outputStream);
                            break;

                        default:
                            LOG.debug("rendering as PDF as no valid format found");
                            exportReportToPdf(jasperPrint, outputStream);
                        }
                    } catch (final Exception e) {
                        LOG.error("Unable to render report {}", reportId, e);
                        throw new ReportException("Unable to render report " + reportId, e);
                    }

                    return null;
                }
            });
        } catch (final Exception e) {
            if (e instanceof ReportException) throw (ReportException)e;
            throw new ReportException(e);
        }
    }

