    public void apply(final Map<String, Object> reportParameters) {
        Objects.requireNonNull(reportParameters);
        final Map<String, ReportParm> stringReportParmMap = asMap();

        reportParameters.entrySet().forEach(e -> {
            if (e.getValue() != null) {
                final String parameterName = e.getKey();
                final Object parameterValue = e.getValue();
                final ReportParm reportParm = stringReportParmMap.get(parameterName);
                if (reportParm != null) {
                    if (reportParm instanceof ReportStringParm && parameterValue instanceof String) {
                        ((ReportStringParm) reportParm).setValue((String) parameterValue);
                    } else if (reportParm instanceof ReportDateParm && parameterValue instanceof Date) {
                        ((ReportDateParm) reportParm).setDate((Date) parameterValue);
                    } else if (reportParm instanceof ReportFloatParm && parameterValue instanceof Float) {
                        ((ReportFloatParm) reportParm).setValue((Float) parameterValue);
                    } else if (reportParm instanceof ReportIntParm && parameterValue instanceof Integer) {
                        ((ReportIntParm) reportParm).setValue((Integer) parameterValue);
                    } else if (reportParm instanceof ReportDoubleParm && parameterValue instanceof Double) {
                        ((ReportDoubleParm) reportParm).setValue((Double) parameterValue);
                    } else {
                        throw new IllegalArgumentException("Cannot apply property of name " + parameterName + " and value of type " + parameterValue.getClass().getName());
                    }
                } else {
                    throw new IllegalArgumentException("Cannot apply property of name " + parameterName);
                }
            }
        });
    }

