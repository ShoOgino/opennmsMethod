    public void apply(ReportParameters parameters) {
        Objects.requireNonNull(parameters);
        final Map<String, ReportParm> reportParmMap = asMap();
        final Map<String, ReportParm> othersParmMap = parameters.asMap();
        othersParmMap.entrySet().forEach(e -> {
            if (!reportParmMap.containsKey(e.getKey())) {
                throw new IllegalArgumentException("Cannot apply property of name " + e.getKey());
            }
            if (reportParmMap.get(e.getKey()).getClass() != othersParmMap.get(e.getKey()).getClass()) {
                throw new IllegalArgumentException("Cannot apply property of name " + e.getKey() + " due to type mismatch. " +
                        "Expected: " + reportParmMap.get(e.getKey()).getClass() +
                        "Actual: " + othersParmMap.get(e.getKey()).getClass());
            }
            final ReportParm thisReportParm = reportParmMap.get(e.getKey());
            final ReportParm otherReportParm = e.getValue();
            if (thisReportParm instanceof ReportStringParm) {
                ((ReportStringParm) thisReportParm).setValue(((ReportStringParm) otherReportParm).getValue());
            } else if (thisReportParm instanceof ReportDoubleParm) {
                ((ReportDoubleParm) thisReportParm).setValue(((ReportDoubleParm) otherReportParm).getValue());
            } else if (thisReportParm instanceof ReportIntParm) {
                ((ReportIntParm) thisReportParm).setValue(((ReportIntParm) otherReportParm).getValue());
            } else if (thisReportParm instanceof ReportFloatParm) {
                ((ReportFloatParm) thisReportParm).setValue(((ReportFloatParm) otherReportParm).getValue());
            } else if (thisReportParm instanceof ReportDateParm) {
                final ReportDateParm thisReportDateParm = (ReportDateParm) thisReportParm;
                final ReportDateParm othersReportDateParm = (ReportDateParm) otherReportParm;
                thisReportDateParm.setUseAbsoluteDate(othersReportDateParm.getUseAbsoluteDate());
                thisReportDateParm.setDate(othersReportDateParm.getDate());
                thisReportDateParm.setHours(othersReportDateParm.getHours());
                thisReportDateParm.setMinutes(othersReportDateParm.getMinutes());
                thisReportDateParm.setCount(othersReportDateParm.getCount());
                thisReportDateParm.setInterval(othersReportDateParm.getInterval());
                thisReportDateParm.setIsAdjustedDate(othersReportDateParm.isAdjustedDate());
            } else if (thisReportParm instanceof ReportTimezoneParm) {
                ((ReportTimezoneParm) thisReportParm).setValue(((ReportTimezoneParm) otherReportParm).getValue());
            } else {
                throw new IllegalArgumentException("Unknown parameter type " + otherReportParm.getClass() + " of property with name " + e.getKey());
            }
        });
    }

