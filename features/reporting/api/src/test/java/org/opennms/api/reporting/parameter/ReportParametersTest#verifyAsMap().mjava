    @Test
    public void verifyAsMap() {
        final ReportParameters parameters = new ReportParameters();
        final Map<String, ReportParm> expectedMap = new HashMap<>();

        // Verify empty
        assertThat(parameters.asMap(), is(expectedMap));

        // Verify float parm
        final ReportFloatParm floatParm = new ReportFloatParm();
        floatParm.setValue(1.234f);
        floatParm.setName("float1");
        parameters.setFloatParms(Lists.newArrayList(floatParm));
        expectedMap.put("float1", floatParm);
        assertThat(parameters.asMap(), is(expectedMap));

        // Verify int parm
        final ReportIntParm intParm = new ReportIntParm();
        intParm.setName("int1");
        intParm.setValue(10002000);
        parameters.setIntParms(Lists.newArrayList(intParm));
        expectedMap.put("int1", intParm);
        assertThat(parameters.asMap(), is(expectedMap));

        // Verify string parm
        final ReportStringParm stringParm = new ReportStringParm();
        stringParm.setName("string1");
        stringParm.setValue("WIUWIU");
        parameters.setStringParms(Lists.newArrayList(stringParm));
        expectedMap.put("string1", stringParm);
        assertThat(parameters.asMap(), is(expectedMap));

        // Verify double parm
        final ReportDoubleParm doubleParm = new ReportDoubleParm();
        doubleParm.setName("double1");
        doubleParm.setValue(Math.PI);
        parameters.setDoubleParms((Lists.newArrayList(doubleParm)));
        expectedMap.put("double1", doubleParm);
        assertThat(parameters.asMap(), is(expectedMap));

        // Verify date parm

        final ReportDateParm dateParm = new ReportDateParm();
        dateParm.setName("date1");
        dateParm.setDate(DATE);
        parameters.setDateParms(Lists.newArrayList(dateParm));
        expectedMap.put("date1", dateParm);
        assertThat(parameters.asMap(), is(expectedMap));
    }

