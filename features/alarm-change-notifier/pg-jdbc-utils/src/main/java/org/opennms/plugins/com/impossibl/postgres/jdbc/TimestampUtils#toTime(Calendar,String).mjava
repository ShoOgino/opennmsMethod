  public Time toTime(Calendar calParameter, String s) throws SQLException {
    if (s == null)
      return null;

    int slen = s.length();

    // infinity cannot be represented as Time
    // so there's not much we can do here.
    if ((slen == 8 && s.equals("infinity")) || (slen == 9 && s.equals("-infinity"))) {
      throw new SQLException(GT.tr("Infinite value found for timestamp/date. This cannot be represented as time."));
    }

    Calendar cal = getLocalCalendar(calParameter);

    ParsedTimestamp ts = loadCalendar(cal, s, "time");

    Calendar useCal = (ts.tz == null ? cal : ts.tz);
    useCal.set(Calendar.HOUR_OF_DAY,  ts.hour);
    useCal.set(Calendar.MINUTE,       ts.minute);
    useCal.set(Calendar.SECOND,       ts.second);
    useCal.set(Calendar.MILLISECOND,  (ts.nanos + 500000) / 1000000);

    if (ts.hasDate) {
      // Rotate it into the requested timezone before we zero out the date
      useCal.set(Calendar.ERA,          ts.era);
      useCal.set(Calendar.YEAR,         ts.year);
      useCal.set(Calendar.MONTH,        ts.month - 1);
      useCal.set(Calendar.DAY_OF_MONTH, ts.day);
      cal.setTime(new Date(useCal.getTime().getTime()));
      useCal = cal;
    }

    useCal.set(Calendar.ERA,          GregorianCalendar.AD);
    useCal.set(Calendar.YEAR,         1970);
    useCal.set(Calendar.MONTH,        0);
    useCal.set(Calendar.DAY_OF_MONTH, 1);

    Time result = new Time(useCal.getTime().getTime());
    showParse("time", s, cal, result, useCal);
    return result;
  }

