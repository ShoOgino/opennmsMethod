  public Date toDate(Calendar calParameter, String s) throws SQLException {
    if (s == null)
      return null;

    int slen = s.length();

    // convert postgres's infinity values to internal infinity magic value
    if (slen == 8 && s.equals("infinity")) {
      return new Date(Long.MAX_VALUE);
    }

    if (slen == 9 && s.equals("-infinity")) {
      return new Date(Long.MIN_VALUE);
    }

    Calendar cal = getLocalCalendar(calParameter);

    ParsedTimestamp ts = loadCalendar(cal, s, "date");
    Calendar useCal = (ts.tz == null ? cal : ts.tz);

    useCal.set(Calendar.ERA,          ts.era);
    useCal.set(Calendar.YEAR,         ts.year);
    useCal.set(Calendar.MONTH,        ts.month - 1);
    useCal.set(Calendar.DAY_OF_MONTH, ts.day);

    if (ts.hasTime) {
      // Rotate it into the requested timezone before we zero out the time
      useCal.set(Calendar.HOUR_OF_DAY,  ts.hour);
      useCal.set(Calendar.MINUTE,       ts.minute);
      useCal.set(Calendar.SECOND,       ts.second);
      useCal.set(Calendar.MILLISECOND,  (ts.nanos + 500000) / 1000000);
      cal.setTime(new Date(useCal.getTime().getTime()));
      useCal = cal;
    }

    useCal.set(Calendar.HOUR_OF_DAY,  0);
    useCal.set(Calendar.MINUTE,       0);
    useCal.set(Calendar.SECOND,       0);
    useCal.set(Calendar.MILLISECOND,  0);

    Date result = new Date(useCal.getTime().getTime());
    showParse("date", s, cal, result, useCal);
    return result;
  }

