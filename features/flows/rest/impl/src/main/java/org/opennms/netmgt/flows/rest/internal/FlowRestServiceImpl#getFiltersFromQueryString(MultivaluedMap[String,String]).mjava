    protected static List<Filter> getFiltersFromQueryString(MultivaluedMap<String, String> queryParams) {
        final List<Filter> filters = new ArrayList<>();

        final String start = queryParams.getFirst("start");
        long startMs;
        if (start != null) {
            startMs = Long.parseLong(start);
        } else {
            // 4 hours ago
            startMs = -TimeUnit.HOURS.toMillis(4);
        }

        final String end = queryParams.getFirst("end");
        long endMs;
        if (end != null) {
            endMs = Long.parseLong(end);
        } else {
            // Now
            endMs = System.currentTimeMillis();
        }
        endMs = getEffectiveEnd(endMs);
        startMs = getEffectiveStart(startMs, endMs);
        filters.add(new TimeRangeFilter(startMs, endMs));

        final String ifIndexStr = queryParams.getFirst("ifIndex");
        if (ifIndexStr != null) {
            int ifIndex = Integer.parseInt(ifIndexStr);
            filters.add(new SnmpInterfaceIdFilter(ifIndex));
        }

        final String exporterNodeCriteria = queryParams.getFirst("exporterNode");
        if (exporterNodeCriteria != null) {
            try {
                filters.add(new ExporterNodeFilter(new NodeCriteria(exporterNodeCriteria)));
            } catch (IllegalArgumentException e) {
                throw new BadRequestException("Invalid node criteria: " + exporterNodeCriteria);
            }
        }

        final String tosStr = queryParams.getFirst("tos");
        if (tosStr != null) {
            int tos = Integer.parseInt(tosStr);
            filters.add(new TosFilter(tos));
        }

        final String dscpStr = queryParams.getFirst("dscp");
        if (dscpStr != null) {
            int dscp = Integer.parseInt(dscpStr);
            filters.add(new DscpFilter(dscp));
        }

        final String ecnStr = queryParams.getFirst("ecn");
        if (ecnStr != null) {
            int ecn = Integer.parseInt(ecnStr);
            filters.add(new EcnFilter(ecn));
        }

        return filters;
    }

