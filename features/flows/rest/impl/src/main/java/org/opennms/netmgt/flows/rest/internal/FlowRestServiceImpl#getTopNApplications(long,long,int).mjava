    @Override
    public FlowSummaryResponse getTopNApplications(long start, long end, int N) {
        final long effectiveEnd = getEffectiveEnd(end);
        final long effectiveStart = getEffectiveStart(start, effectiveEnd);

        final CompletableFuture<FlowSummaryResponse> future = flowRepository.getTopNApplications(N, effectiveStart, effectiveEnd).thenApply(res -> {
            final FlowSummaryResponse response = new FlowSummaryResponse();
            response.setStart(effectiveStart);
            response.setEnd(effectiveEnd);
            response.setHeaders(Lists.newArrayList("Application", "Bytes In", "Bytes Out"));
            response.setRows(res.stream()
                    .map(sum -> Arrays.asList((Object)sum.getEntity(), sum.getBytesIn(), sum.getBytesOut()))
                    .collect(Collectors.toList()));
            return response;
        });
        return waitForFuture(future);
    }

