    private static void validate(ClassificationRequestDTO requestDTO) {
        // Verify port
        try {
            int port = Integer.parseInt(requestDTO.getPort());
            if (port < 0 || port > 65535) throw new ClassificationException(Errors.RULE_PORT_VALUE_NOT_IN_RANGE, 0, 65535);
        } catch (NumberFormatException ex) {
            throw new ClassificationException(
                new ErrorTemplate(ErrorContext.Port, null, "The provided port {0} is not a valid number."),
                    requestDTO.getPort());
        }

        // Verify Protocol
        if (Strings.isNullOrEmpty(requestDTO.getProtocol())) {
            throw new ClassificationException(Errors.RULE_PROTOCOL_IS_REQUIRED);
        }
        if (Protocols.getProtocol(requestDTO.getProtocol()) == null) {
            throw new ClassificationException(Errors.RULE_PROTOCOL_DOES_NOT_EXIST, requestDTO.getProtocol());
        }
        // Verify ip Address
        try {
            InetAddressUtils.getInetAddress(requestDTO.getIpAddress());
        } catch (Exception ex) {
            throw new  ClassificationException(Errors.RULE_IP_ADDRESS_INVALID, requestDTO.getIpAddress());
        }
    }

