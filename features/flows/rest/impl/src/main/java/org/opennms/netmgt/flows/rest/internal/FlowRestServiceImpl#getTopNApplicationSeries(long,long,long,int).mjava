    @Override
    public FlowSeriesResponse getTopNApplicationSeries(long start, long end, long step, int N) {
        final long effectiveEnd = getEffectiveEnd(end);
        final long effectiveStart = getEffectiveStart(start, effectiveEnd);

        final CompletableFuture<FlowSeriesResponse> future = flowRepository.getTopNApplicationsSeries(N, effectiveStart,
                effectiveEnd, step).thenApply(res -> {
            final FlowSeriesResponse response = new FlowSeriesResponse();
            response.setStart(effectiveStart);
            response.setEnd(effectiveEnd);
            response.setLabels(res.rowKeySet().stream()
                    .map((d) -> String.format("%s (%s)", d.getValue(), d.isSource() ? "In" : "Out"))
                    .collect(Collectors.toList()));
            populateResponseFromTable(res, response);
            return response;
        });
        return waitForFuture(future);
    }

