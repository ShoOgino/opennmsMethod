    @PUT
    @Consumes(MediaType.APPLICATION_JSON)
    public Response saveFlows(String input) throws Exception {
        try {
            final JsonElement jsonElement = gson.fromJson(input, JsonElement.class);
            if (jsonElement.isJsonArray()) {
                final Type listType = new TypeToken<ArrayList<NetflowDocument>>() {
                }.getType();
                List<NetflowDocument> netflowDocuments = gson.fromJson(jsonElement, listType);
                getFlowRepository().save(netflowDocuments);
            } else {
                List<NetflowDocument> documents = new ArrayList<>();
                documents.add(gson.fromJson(jsonElement, NetflowDocument.class));
                getFlowRepository().save(documents);
            }
            return Response.accepted().build();
        } catch (FlowException e) {
            LOG.error("Error while persisting flow(s)", e);
            return Response.status(500)
                    .type(MediaType.TEXT_PLAIN)
                    .entity("Error while persisting flow(s): " + e.getMessage())
                    .build();
        }
    }

