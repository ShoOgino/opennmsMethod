    @Test(timeout = 60000)
    public void testKafkaPersistenceForFlows() throws Exception {
        // start ES
        elasticSearchRule.startServer();
        final RestClientFactory restClientFactory = new RestClientFactory(elasticSearchRule.getUrl());
        final MockDocumentEnricherFactory mockDocumentEnricherFactory = new MockDocumentEnricherFactory();
        final DocumentEnricher documentEnricher = mockDocumentEnricherFactory.getEnricher();
        final ClassificationEngine classificationEngine = mockDocumentEnricherFactory.getClassificationEngine();
        try (final JestClient jestClient = restClientFactory.createClient()) {
            final ElasticFlowRepository elasticFlowRepository = new ElasticFlowRepository(new MetricRegistry(),
                    jestClient, IndexStrategy.MONTHLY, documentEnricher, classificationEngine,
                    new MockSessionUtils(), new MockNodeDao(), new MockSnmpInterfaceDao(),
                    new MockIdentity(), new MockTracerRegistry(), flowForwarder, new IndexSettings(),
                    3, 12000);
            elasticFlowRepository.setEnableFlowForwarding(true);

            // It does not matter what we persist here, as the response is fixed.
            // We only have to ensure that the list is not empty
            elasticFlowRepository.persist(Lists.newArrayList(FlowDocumentTest.getMockFlow()), FlowDocumentTest.getMockFlowSource());
        }
        KafkaConsumerRunner kafkaConsumerRunner = new KafkaConsumerRunner(kafkaConfig, topicName);
        Executors.newSingleThreadExecutor().execute(kafkaConsumerRunner);
        await().atMost(30, TimeUnit.SECONDS).pollInterval(5, TimeUnit.SECONDS).until(() ->
                getFlowDocuments().size(), Matchers.greaterThan(0));
        getFlowDocuments().forEach(flowDocument -> {
            assertEquals(FlowDocumentTest.getMockFlow().getSrcAddr(), flowDocument.getSrcAddress());
            assertEquals(FlowDocumentTest.getMockFlow().getDstAddr(), flowDocument.getDstAddress());
        });
        elasticSearchRule.stopServer();
        kafkaConsumerRunner.destroy();
    }

