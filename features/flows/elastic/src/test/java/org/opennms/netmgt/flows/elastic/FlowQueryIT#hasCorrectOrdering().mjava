    @Test
    public void hasCorrectOrdering() throws Exception {
        this.loadFlows(new FlowBuilder()
                .withExporter("SomeFs", "SomeFid", 99)
                .withSnmpInterfaceId(98)
                .withDirection(Direction.INGRESS)

                // More documents - less data
                .withFlow(new Date(0), new Date(10), "192.168.0.1", 1234, "192.168.1.1", 1234, 100)
                .withFlow(new Date(0), new Date(10), "192.168.0.1", 1234, "192.168.1.1", 1234, 100)
                .withFlow(new Date(0), new Date(10), "192.168.0.1", 1234, "192.168.1.1", 1234, 100)
                .withFlow(new Date(0), new Date(10), "192.168.0.1", 1234, "192.168.1.1", 1234, 100)
                .withFlow(new Date(0), new Date(10), "192.168.0.1", 1234, "192.168.1.1", 1234, 100)


                .withFlow(new Date(0), new Date(10), "192.168.0.2", 1234, "192.168.1.2", 1234, 1000)
                .withFlow(new Date(0), new Date(10), "192.168.0.2", 1234, "192.168.1.2", 1234, 1000)
                .withFlow(new Date(0), new Date(10), "192.168.0.2", 1234, "192.168.1.2", 1234, 1000)

                // Less documents - more data
                .withFlow(new Date(0), new Date(10), "192.168.0.3", 1234, "192.168.1.3", 1234, 10000)

                .build());

        final List<TrafficSummary<Host>> summary = flowRepository.getTopNHostSummaries(10, false, getFilters()).get();
        assertThat(summary, contains(
                TrafficSummary.from(Host.from("192.168.0.3").build()).withBytes(10000, 0).build(),
                TrafficSummary.from(Host.from("192.168.1.3").build()).withBytes(10000, 0).build(),
                TrafficSummary.from(Host.from("192.168.0.2").build()).withBytes(3000, 0).build(),
                TrafficSummary.from(Host.from("192.168.1.2").build()).withBytes(3000, 0).build(),
                TrafficSummary.from(Host.from("192.168.0.1").build()).withBytes(500, 0).build(),
                TrafficSummary.from(Host.from("192.168.1.1").build()).withBytes(500, 0).build()
        ));

        final Table<Directional<Host>, Long, Double> series = flowRepository.getTopNHostSeries(10, 10, false, getFilters()).get();
        assertThat(series.rowKeySet(), contains(
                new Directional<>(Host.from("192.168.0.3").build(), true),
                new Directional<>(Host.from("192.168.1.3").build(), true),
                new Directional<>(Host.from("192.168.0.2").build(), true),
                new Directional<>(Host.from("192.168.1.2").build(), true),
                new Directional<>(Host.from("192.168.0.1").build(), true),
                new Directional<>(Host.from("192.168.1.1").build(), true)
        ));
    }

