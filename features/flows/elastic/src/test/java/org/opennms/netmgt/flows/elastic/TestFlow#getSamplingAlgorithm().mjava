    @Override
    public SamplingAlgorithm getSamplingAlgorithm() {
        if (flowDocument.getSamplingAlgorithm() == null) {
            return null;
        }

        switch (flowDocument.getSamplingAlgorithm()) {
            case Unassigned:
                return SamplingAlgorithm.Unassigned;
            case SystematicCountBasedSampling:
                return SamplingAlgorithm.SystematicCountBasedSampling;
            case SystematicTimeBasedSampling:
                return SamplingAlgorithm.SystematicTimeBasedSampling;
            case RandomNoutOfNSampling:
                return SamplingAlgorithm.RandomNoutOfNSampling;
            case UniformProbabilisticSampling:
                return SamplingAlgorithm.UniformProbabilisticSampling;
            case PropertyMatchFiltering:
                return SamplingAlgorithm.PropertyMatchFiltering;
            case HashBasedFiltering:
                return SamplingAlgorithm.HashBasedFiltering;
            case FlowStateDependentIntermediateFlowSelectionProcess:
                return SamplingAlgorithm.FlowStateDependentIntermediateFlowSelectionProcess;
            default:
                throw new IllegalArgumentException("Unknown sampling algorithm: " + flowDocument.getSamplingAlgorithm().name());
        }
    }

