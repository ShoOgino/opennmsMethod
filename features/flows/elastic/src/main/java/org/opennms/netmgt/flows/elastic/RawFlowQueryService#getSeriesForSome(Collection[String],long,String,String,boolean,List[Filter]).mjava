    private CompletableFuture<Table<Directional<String>, Long, Double>> getSeriesForSome(Collection<String> from, long step, String groupByTerm,
                                                                                          String keyForMissingTerm,
                                                                                          boolean includeOther, List<Filter> filters) {
        val fag = new FilterAndGroupBy(filters, groupByTerm, step);
        val addMissing = addSeriesForMissing(fag, from, keyForMissingTerm);
        val addOther = addSeriesForOther(fag, from, includeOther, keyForMissingTerm);
        return seriesForSome(fag, from)
                .thenCompose(addMissing)
                .thenCompose(addOther)
                .thenApply(builder -> builder.build());
    }

