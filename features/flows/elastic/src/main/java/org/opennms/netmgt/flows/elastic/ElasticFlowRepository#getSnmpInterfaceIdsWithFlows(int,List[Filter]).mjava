    @Override
    public CompletableFuture<Set<Integer>> getSnmpInterfaceIdsWithFlows(int limit, List<Filter> filters) {
        final String query = searchQueryProvider.getUniqueSnmpInterfaces(limit, filters);
        return searchAsync(query, extractTimeRangeFilter(filters))
                .thenApply(res -> {
            final Set<Integer> interfaces = Sets.newHashSet();
            final TermsAggregation inputSnmp = res.getAggregations().getTermsAggregation("input_snmp");
            if (inputSnmp != null) {
                inputSnmp.getBuckets()
                        .stream()
                        .map(TermsAggregation.Entry::getKey)
                        .map(Integer::valueOf)
                        .forEach(interfaces::add);
            }
            final TermsAggregation outputSnmp = res.getAggregations().getTermsAggregation("output_snmp");
            if (outputSnmp != null) {
                outputSnmp.getBuckets()
                        .stream()
                        .map(TermsAggregation.Entry::getKey)
                        .map(Integer::valueOf)
                        .forEach(interfaces::add);
            }
            return interfaces;
        });
    }

