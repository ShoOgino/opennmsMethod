    private Function<Map<String, TrafficSummary<String>>, CompletableFuture<Map<String, TrafficSummary<String>>>>
    addTotalBytesForMissing(FilterAndGroupBy fag, String keyForMissingTerm) {
        if (keyForMissingTerm != null) {
            // We also need to query for items with a missing term, this will require a separate query
            val bytesFromMissingQuery
                    = searchQueryProvider.getSeriesFromMissingQuery(fag.step, fag.start, fag.end, fag.groupByTerm, keyForMissingTerm, fag.filters);
            val missingFuture = searchAsync(bytesFromMissingQuery, fag.timeRangeFilter);
            return summaries -> missingFuture.thenApply(results -> {
                    summaries.putAll(toTrafficSummaries(results));
                    return summaries;
                });
        } else {
            return keepValue();
        }
    }

