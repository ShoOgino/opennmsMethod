    public DocumentEnricher(NodeDao nodeDao, InterfaceToNodeCache interfaceToNodeCache,
                            TransactionOperations transactionOperations, ClassificationEngine classificationEngine) {
        this.nodeDao = Objects.requireNonNull(nodeDao);
        this.interfaceToNodeCache = Objects.requireNonNull(interfaceToNodeCache);
        this.transactionOperations = Objects.requireNonNull(transactionOperations);
        this.classificationEngine = Objects.requireNonNull(classificationEngine);

        // TODO MVR make this configurable, when it is actually an osgi-module
        nodeInfoCache = CacheBuilder.newBuilder()
                .maximumSize(1000)
                .expireAfterWrite(300, TimeUnit.SECONDS) // 5 Minutes
                .build(new CacheLoader<NodeInfoKey, Optional<NodeDocument>>() {
                    @Override
                    public Optional<NodeDocument> load(NodeInfoKey key) {
                        return getNodeInfo(key.location, key.ipAddress);
                    }
                });
    }

