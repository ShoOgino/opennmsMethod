    /** use the convert the results of the proportional_sum aggregation (provided by our ES plugin) to a table */
    private static <T> CompletableFuture<Void> toTableFromBuckets(ImmutableTable.Builder<Directional<T>, Long, Double> builder, Function<String, CompletableFuture<T>> keyToEntity, SearchResult res) {
        final MetricAggregation aggs = res.getAggregations();
        if (aggs == null) {
            // No results
            return CompletableFuture.completedFuture(null);
        }
        final TermsAggregation byKeyAgg = aggs.getTermsAggregation("by_key");
        if (byKeyAgg == null) {
            // No results
            return CompletableFuture.completedFuture(null);
        }

        return transpose(Iterables.transform(byKeyAgg.getBuckets(),
                                    bucket -> keyToEntity.apply(bucket.getKey())
                                                         .thenApply(resolved -> Maps.immutableEntry(bucket, resolved))),
                         Collectors.toList())
                .thenApply(buckets -> {
                    for (final Map.Entry<TermsAggregation.Entry, T> bucket : buckets) {
                        final ProportionalSumAggregation bytesInAgg = bucket.getKey().getAggregation("bytes_in", ProportionalSumAggregation.class);
                        final ProportionalSumAggregation bytesOutAgg = bucket.getKey().getAggregation("bytes_out", ProportionalSumAggregation.class);

                        for (ProportionalSumAggregation.DateHistogram dateHistogram : bytesInAgg.getBuckets()) {
                            builder.put(new Directional<>(bucket.getValue(), true), dateHistogram.getTime(), dateHistogram.getValue());
                        }

                        for (ProportionalSumAggregation.DateHistogram dateHistogram : bytesOutAgg.getBuckets()) {
                            builder.put(new Directional<>(bucket.getValue(), false), dateHistogram.getTime(), dateHistogram.getValue());
                        }

                    }
                    return null;
                });
    }

