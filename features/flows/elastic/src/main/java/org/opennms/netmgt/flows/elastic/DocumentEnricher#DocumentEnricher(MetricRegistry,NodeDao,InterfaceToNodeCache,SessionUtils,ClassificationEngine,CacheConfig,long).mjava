    public DocumentEnricher(MetricRegistry metricRegistry, NodeDao nodeDao, InterfaceToNodeCache interfaceToNodeCache,
                            SessionUtils sessionUtils, ClassificationEngine classificationEngine,
                            CacheConfig cacheConfig,
                            final long clockSkewCorrectionThreshold) {
        this.nodeDao = Objects.requireNonNull(nodeDao);
        this.interfaceToNodeCache = Objects.requireNonNull(interfaceToNodeCache);
        this.sessionUtils = Objects.requireNonNull(sessionUtils);
        this.classificationEngine = Objects.requireNonNull(classificationEngine);

        this.nodeInfoCache = new CacheBuilder()
                .withConfig(cacheConfig)
                .withCacheLoader(new CacheLoader<Integer, Optional<NodeDocument>>() {
                    @Override
                    public Optional<NodeDocument> load(Integer nodeId) {
                        return getNodeInfo(nodeId);
                    }
                }).build();

       CacheConfig nodeMetadataCacheConfig = buildMetadataCacheConfig(cacheConfig);

       this.nodeMetadataCache = new CacheBuilder()
               .withConfig(nodeMetadataCacheConfig)
               .withCacheLoader(new CacheLoader<NodeMetadataKey, Optional<NodeDocument>>() {
                   @Override
                   public Optional<NodeDocument> load(NodeMetadataKey key) {
                       return getNodeInfoFromMetadataContext(key.contextKey, key.value);
                   }
               }).build();
        this.nodeLoadTimer = metricRegistry.timer("nodeLoadTime");

        this.clockSkewCorrectionThreshold = clockSkewCorrectionThreshold;
    }

