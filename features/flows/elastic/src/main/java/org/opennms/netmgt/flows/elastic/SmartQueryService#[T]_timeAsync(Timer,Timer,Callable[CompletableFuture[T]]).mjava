    /** adapted from a different version of metrics
     *     https://github.com/avast/metrics/blob/9641bceda1c4e07aed89ae092b8628d3b90e0cf8/dropwizard-common/src/main/java/com/avast/metrics/dropwizard/MetricsTimer.java#L73
     */
    private static <T> CompletableFuture<T> timeAsync(Timer successTimer, Timer failureTimer, Callable<CompletableFuture<T>> operation) {
        com.codahale.metrics.Timer.Context successContext = successTimer.time();
        com.codahale.metrics.Timer.Context failureContext = failureTimer.time();
        try {
            CompletableFuture<T> promise = new CompletableFuture<>();
            CompletableFuture<T> future = operation.call();
            future.handleAsync((success, failure) -> {
                if (failure == null) {
                    successContext.stop();
                    promise.complete(success);
                } else {
                    failureContext.stop();
                    promise.completeExceptionally(failure);
                }
                return null;
            });
            return promise;
        } catch (Exception ex) {
            failureContext.stop();
            throw new RuntimeException(ex);
        }
    }

