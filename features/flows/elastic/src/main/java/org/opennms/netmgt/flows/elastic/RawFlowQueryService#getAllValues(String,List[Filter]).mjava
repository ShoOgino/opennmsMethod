    @Override
    public CompletableFuture<List<String>> getAllValues(String field, List<Filter> filters) {
        final TimeRangeFilter timeRangeFilter = extractTimeRangeFilter(filters);
        return searchAsync(searchQueryProvider.getAllValues(field, filters), timeRangeFilter)
                .thenApply(res -> {
                    val buckets = res.getJsonObject().getAsJsonObject("aggregations").getAsJsonObject("my_buckets");
//                    res.getAggregations().getAggregation("my_buckets", null);
//                    res.getAggregations().getAggregation("my_buckets", TermsAggregation.class)
//                            .getBuckets().stream()
//                            .map(entry -> entry.getKey())
//                            .collect(Collectors.toList())
                    return Collections.emptyList();
                });
    }

