    private Function<ImmutableTable.Builder<Directional<String>, Long, Double>, CompletableFuture<ImmutableTable.Builder<Directional<String>, Long, Double>>>
    addSeriesForMissing(FilterAndGroupBy fag, String keyForMissingTerm) {
        if (keyForMissingTerm != null) {
            // We also need to query for items with a missing term, this will require a separate query
            final String seriesFromMissingQuery =
                    searchQueryProvider.getSeriesFromMissingQuery(fag.step, fag.start, fag.end, fag.groupByTerm, keyForMissingTerm, fag.filters);
            val missingFuture = searchAsync(seriesFromMissingQuery, fag.timeRangeFilter);
            return builder -> missingFuture.thenApply(searchResult -> toTable(builder, searchResult));
        } else {
            return keepValue();
        }
    }

