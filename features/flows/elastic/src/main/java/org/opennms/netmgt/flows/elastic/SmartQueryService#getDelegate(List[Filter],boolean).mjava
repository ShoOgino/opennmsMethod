    private QueryServiceType getDelegate(List<Filter> filters, boolean isQueryForSpecificEntities) {
        // If we're configured to use a specific query service, then always return that one
        if (alwaysUseRawForQueries) {
            return QueryServiceType.RAW;
        } else if (alwaysUseAggForQueries) {
            return QueryServiceType.AGG;
        }

        // We do not currently support queries for specific entities in the agg service - use the raw
        if (isQueryForSpecificEntities) {
            return QueryServiceType.RAW;
        }

        final Optional<TimeRangeFilter> timeRangeFilter = Filter.find(filters, TimeRangeFilter.class);
        // We currently require a time filter for aggregated queries
        if (!timeRangeFilter.isPresent()) {
            return QueryServiceType.RAW;
        }

        // If the duration exceeds the threshold, then use aggregated queries
        if (timeRangeFilter.get().getDurationMs() >= timeRangeDurationAggregateThresholdMs) {
            return QueryServiceType.AGG;
        }

        // If the endpoint is further back in time than the threshold, then use aggregated queries
        if ((System.currentTimeMillis() - timeRangeFilter.get().getEnd()) > timeRangeEndpointAggregateThresholdMs) {
            return QueryServiceType.AGG;
        }

        return QueryServiceType.RAW;
    }

