    private <T> CompletableFuture<T> runWithDelegate(List<Filter> filters, boolean isQueryForSpecificEntities,
                                                     Function<FlowQueryService, CompletableFuture<T>> query) {
        final QueryServiceType queryServiceType = getDelegate(filters, isQueryForSpecificEntities);
        switch(queryServiceType) {
            case AGG:
                return timeAsync(aggregatedQuerySuccessTimer, aggregatedQueryFailureTimer,
                        () -> query.apply(aggQueryService));
            case RAW:
            default:
                return timeAsync(rawQuerySuccessTimer, rawQueryFailureTimer,
                        () -> query.apply(rawQueryService));
        }
    }

