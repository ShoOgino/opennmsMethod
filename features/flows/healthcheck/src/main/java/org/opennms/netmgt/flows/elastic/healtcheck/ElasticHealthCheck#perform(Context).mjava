    @Override
    public Response perform(Context context) {
        final ServiceReference<JestClient> serviceReference = bundleContext.getServiceReference(JestClient.class);
        if (serviceReference != null) {
                final JestClient client = bundleContext.getService(serviceReference);
                final Ping ping = new Ping.Builder().build();
            try {
                final JestResult result = client.execute(ping);
                if (result.isSucceeded() && result.getErrorMessage() != null) {
                    return new Response(Status.Success);
                } else {
                    return new Response(Status.Failure, result.getErrorMessage() != null ? result.getErrorMessage() : "");
                }
            } catch (IOException e) {
                return new Response(e);
            }
        } else {
            return new Response(Status.Failure, "No service of type " + JestClient.class.getName() + " available");
        }
    }

