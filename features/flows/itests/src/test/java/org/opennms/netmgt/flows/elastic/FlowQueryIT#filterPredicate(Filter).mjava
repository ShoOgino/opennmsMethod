    private static Predicate<FlowDocument> filterPredicate(Filter filter) {
        return filter.visit(new FilterVisitor<Predicate<FlowDocument>>() {
            @Override
            public Predicate<FlowDocument> visit(ExporterNodeFilter exporterNodeFilter) {
                throw new RuntimeException("not yet implemented");
            }

            @Override
            public Predicate<FlowDocument> visit(TimeRangeFilter timeRangeFilter) {
                return fd -> fd.getLastSwitched() >= timeRangeFilter.getStart() && fd.getDeltaSwitched() <= timeRangeFilter.getEnd();
            }

            @Override
            public Predicate<FlowDocument> visit(SnmpInterfaceIdFilter snmpInterfaceIdFilter) {
                return fd -> snmpInterfaceIdFilter.getSnmpInterfaceId() == (fd.getDirection() == Direction.INGRESS ? fd.getInputSnmp() : fd.getOutputSnmp());
            }

            @Override
            public Predicate<FlowDocument> visit(DscpFilter dscpFilter) {
                return fd -> dscpFilter.getDscp().isEmpty() || dscpFilter.getDscp().contains(fd.getDscp());
            }

        });
    }

