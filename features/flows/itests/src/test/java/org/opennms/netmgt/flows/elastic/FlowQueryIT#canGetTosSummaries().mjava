    @Test
    public void canGetTosSummaries() throws Exception {
        loadDefaultFlows();

        val memoryResult = DEFAULT_FLOWS
                .stream()
                .map(fd -> FlowQueryIT.flowDoc2TrafficSummary(fd, fd.getTos().toString()))
                // collect the traffic summaries into a map
                // -> the map key is the traffic summary key and the map value is the merged traffic summary for that key
                .collect(Collectors.groupingBy(
                        TrafficSummary::getEntity,
                        Collectors.reducing(FlowQueryIT::mergeTrafficSummaries)
                ))
                .values()
                .stream()
                .map(o -> o.get())
                .sorted(Comparator.comparing(s -> new Integer(s.getEntity())))
                .toArray();

        val elasticResult = flowRepository.getTosSummaries(getFilters()).get();

        assertThat(elasticResult, contains(memoryResult));
    }

