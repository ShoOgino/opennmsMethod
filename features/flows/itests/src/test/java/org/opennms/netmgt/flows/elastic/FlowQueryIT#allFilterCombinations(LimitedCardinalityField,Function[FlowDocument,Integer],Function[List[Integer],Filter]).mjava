    private List<Filter> allFilterCombinations(
            LimitedCardinalityField field,
            Function<FlowDocument, Integer> fieldAccess,
            Function<List<Integer>, Filter> filterCreator
    ) {
        List<Filter> res = new ArrayList<>();
        Object[] values = defaultFlowsFieldValues(fieldAccess);

        // check all combinations of filter values
        // -> for each value decide if it is used in the filter or not
        // -> combinations correspond to binary numbers with up values.length digits
        // -> if a bit is set then the corresponding value is included

        int combinations = 1 << values.length;

        // start with 1 -> at least one bit is set
        for (int i = 1; i < combinations; i++) {
            List<Integer> filterValues = new ArrayList<>();
            for (int j = 0; j < values.length; j++) {
                if ((i >> j & 1) == 1) {
                    filterValues.add(Integer.parseInt((String) values[j]));
                }
            }
            res.add(filterCreator.apply(filterValues));
        }

        return res;
    }

