    @Test
    public void testSomething() {
        final ClassificationEngine classificationEngine = new DefaultClassificationEngine(() -> Collections.emptyList(), FilterService.NOOP);
        final DocumentEnricher documentEnricher = new DocumentEnricher(
                new MetricRegistry(), databasePopulator.getNodeDao(), interfaceToNodeCache, sessionUtils, classificationEngine,
                new CacheConfigBuilder()
                        .withName("flows.node")
                        .withMaximumSize(1000)
                        .withExpireAfterWrite(300)
                        .build());

        final FlowDocument flowDocument = new FlowDocument();
        flowDocument.setSrcAddr("1.1.1.1");
        flowDocument.setSrcPort(1);
        flowDocument.setDstAddr("2.2.2.2");
        flowDocument.setDstPort(2);
        flowDocument.setProtocol(6);
        flowDocument.setDirection(Direction.INGRESS);
        TestFlow testFlow = new TestFlow(flowDocument);

        List<FlowDocument> flowDocuments;

        flowDocuments = documentEnricher.enrich(Lists.newArrayList(testFlow), new FlowSource(MonitoringLocationDao.DEFAULT_MONITORING_LOCATION_ID, "192.168.99.99", null));
        Assert.assertThat(flowDocuments.get(0).getNodeExporter().getNodeId(), is(nodeAId));

        flowDocuments = documentEnricher.enrich(Lists.newArrayList(testFlow), new FlowSource(MonitoringLocationDao.DEFAULT_MONITORING_LOCATION_ID, "192.168.11.11", null));
        Assert.assertThat(flowDocuments.get(0).getNodeExporter().getNodeId(), is(nodeBId));

        testFlow.setNodeIdentifier("99099");
        flowDocuments = documentEnricher.enrich(Lists.newArrayList(testFlow), new FlowSource(MonitoringLocationDao.DEFAULT_MONITORING_LOCATION_ID, "192.168.22.22", new ContextKey("testContext","testKey")));
        Assert.assertThat(flowDocuments.get(0).getNodeExporter().getNodeId(), is(nodeAId));

        testFlow.setNodeIdentifier("11011");
        flowDocuments = documentEnricher.enrich(Lists.newArrayList(testFlow), new FlowSource(MonitoringLocationDao.DEFAULT_MONITORING_LOCATION_ID, "192.168.22.22", new ContextKey("testContext","testKey")));
        Assert.assertThat(flowDocuments.get(0).getNodeExporter().getNodeId(), is(nodeBId));

        testFlow.setNodeIdentifier("22022");
        flowDocuments = documentEnricher.enrich(Lists.newArrayList(testFlow), new FlowSource(MonitoringLocationDao.DEFAULT_MONITORING_LOCATION_ID, "192.168.22.22", new ContextKey("testContext","testKey")));
        Assert.assertThat(flowDocuments.get(0).getNodeExporter(), nullValue());
    }

