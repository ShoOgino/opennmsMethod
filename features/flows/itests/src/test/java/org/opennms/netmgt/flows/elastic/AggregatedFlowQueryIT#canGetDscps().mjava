    @Test
    public void canGetDscps() throws Exception {

        final List<FlowDocument> flows = new FlowBuilder()
                .withExporter("SomeFs", "SomeFid", 99)
                .withSnmpInterfaceId(98)
                // 192.168.1.100:43444 <-> 10.1.1.11:80 (110 bytes in [3,15])
                .withDirection(Direction.INGRESS)
                .withTos(0)
                .withFlow(new Date(3), new Date(15), "192.168.1.100", 43444, "10.1.1.11", 80, 10)
                .withDirection(Direction.EGRESS)
                .withTos(4)
                .withFlow(new Date(3), new Date(15), "10.1.1.11", 80, "192.168.1.100", 43444, 100)
                .withDirection(Direction.INGRESS)
                .withTos(8)
                .withFlow(new Date(20), new Date(45), "192.168.1.100", 43444, "10.1.1.11", 80, 10)
                .withDirection(Direction.EGRESS)
                .withTos(12)
                .withFlow(new Date(20), new Date(45), "10.1.1.11", 80, "192.168.1.100", 43444, 100)
                .build();

        // expect 15 flow summary documents
        // - 1 for exporter/interface (98/0)
        // - 4 for exporter/interface/tos (0, 4, 8, 12)
        // - 4 * 1 for exporter/interface/tos/application (http)
        // - 4 * 1 for exporter/interface/tos/conversation (10.1.1.11 <-> 192.168.1.100)
        // - 4 * 2 for exporter/interface/tos/host (10.1.1.11, 192.168.1.100)
        loadFlows(flows, 21);

        List<String> hosts = smartQueryService.getFieldValues(LimitedCardinalityField.DSCP, getFilters()).get();
        assertThat(hosts, equalTo(Arrays.asList("0", "1", "2", "3")));

    }

