    private static <K> Pair<Directional<K>, Map<Long, Double>> flowDoc2Pair(FlowDocument fd, long step, K key) {
        val firstSwitched = fd.getFirstSwitched();
        val lastSwitched = fd.getLastSwitched();
        val duration = lastSwitched - firstSwitched;
        double bytes = fd.getBytes();
        val firstIndex = firstSwitched / step;
        val lastIndex = (lastSwitched - 1) / step;
        val res = new HashMap<Long, Double>();
        for (long idx = firstIndex; idx <= lastIndex; idx++) {
            long from = Math.max(idx * step, firstSwitched);
            long to = Math.min((idx + 1) * step, lastSwitched);
            double value = bytes * (to - from) / duration;
            res.put(idx * step, value);
        }
        return Pair.of(new Directional(key, fd.getDirection() == Direction.INGRESS), res);
    }

