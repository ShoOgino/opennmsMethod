    private <L> void verifyHttpsSeriesAggregated(Table<Directional<L>, Long, Double> appTraffic, L label) {
        // Pull the values from the table into arrays for easy comparision and validate
        List<Long> timestamps = getTimestampsFrom(appTraffic);
        List<Double> httpsIngressValues = getValuesFor(new Directional<>(label, true), appTraffic);
        List<Double> httpsEgressValues = getValuesFor(new Directional<>(label, false), appTraffic);

        // In the range t=[10,20) there are 2 active flows with dstport=443:
        //   100 bytes from [13,26]
        //
        //   110 bytes from [14,45]
        //
        final double error = 1E-8;
        assertThat(timestamps, contains(0L, 60000L));
        // because of unaligned windows the flows are falling into two buckets
        // -> when aggregations have a stretch of their window start to their window end
        //    (i.e. they always span a complete window length)
        // -> because of the shift the complete window length falls into 2 buckets
        double httpsIngressSum = httpsIngressValues.stream().collect(Collectors.summingDouble(f -> f));
        assertThat(httpsIngressSum, closeTo(210.0, error));
        double httpsEgressSum = httpsEgressValues.stream().collect(Collectors.summingDouble(f -> f));
        assertThat(httpsEgressSum, closeTo(2100.0, error));
    }

