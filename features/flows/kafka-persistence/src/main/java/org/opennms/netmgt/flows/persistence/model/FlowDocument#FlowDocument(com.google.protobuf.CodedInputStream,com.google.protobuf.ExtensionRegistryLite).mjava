  private FlowDocument(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            timestamp_ = input.readUInt64();
            break;
          }
          case 18: {
            com.google.protobuf.UInt64Value.Builder subBuilder = null;
            if (numBytes_ != null) {
              subBuilder = numBytes_.toBuilder();
            }
            numBytes_ = input.readMessage(com.google.protobuf.UInt64Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(numBytes_);
              numBytes_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            direction_ = rawValue;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            dstAddress_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            dstHostname_ = s;
            break;
          }
          case 50: {
            com.google.protobuf.UInt64Value.Builder subBuilder = null;
            if (dstAs_ != null) {
              subBuilder = dstAs_.toBuilder();
            }
            dstAs_ = input.readMessage(com.google.protobuf.UInt64Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dstAs_);
              dstAs_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (dstMaskLen_ != null) {
              subBuilder = dstMaskLen_.toBuilder();
            }
            dstMaskLen_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dstMaskLen_);
              dstMaskLen_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (dstPort_ != null) {
              subBuilder = dstPort_.toBuilder();
            }
            dstPort_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dstPort_);
              dstPort_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (engineId_ != null) {
              subBuilder = engineId_.toBuilder();
            }
            engineId_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(engineId_);
              engineId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (engineType_ != null) {
              subBuilder = engineType_.toBuilder();
            }
            engineType_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(engineType_);
              engineType_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            com.google.protobuf.UInt64Value.Builder subBuilder = null;
            if (deltaSwitched_ != null) {
              subBuilder = deltaSwitched_.toBuilder();
            }
            deltaSwitched_ = input.readMessage(com.google.protobuf.UInt64Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(deltaSwitched_);
              deltaSwitched_ = subBuilder.buildPartial();
            }

            break;
          }
          case 98: {
            com.google.protobuf.UInt64Value.Builder subBuilder = null;
            if (firstSwitched_ != null) {
              subBuilder = firstSwitched_.toBuilder();
            }
            firstSwitched_ = input.readMessage(com.google.protobuf.UInt64Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(firstSwitched_);
              firstSwitched_ = subBuilder.buildPartial();
            }

            break;
          }
          case 106: {
            com.google.protobuf.UInt64Value.Builder subBuilder = null;
            if (lastSwitched_ != null) {
              subBuilder = lastSwitched_.toBuilder();
            }
            lastSwitched_ = input.readMessage(com.google.protobuf.UInt64Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(lastSwitched_);
              lastSwitched_ = subBuilder.buildPartial();
            }

            break;
          }
          case 114: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (numFlowRecords_ != null) {
              subBuilder = numFlowRecords_.toBuilder();
            }
            numFlowRecords_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(numFlowRecords_);
              numFlowRecords_ = subBuilder.buildPartial();
            }

            break;
          }
          case 122: {
            com.google.protobuf.UInt64Value.Builder subBuilder = null;
            if (numPackets_ != null) {
              subBuilder = numPackets_.toBuilder();
            }
            numPackets_ = input.readMessage(com.google.protobuf.UInt64Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(numPackets_);
              numPackets_ = subBuilder.buildPartial();
            }

            break;
          }
          case 130: {
            com.google.protobuf.UInt64Value.Builder subBuilder = null;
            if (flowSeqNum_ != null) {
              subBuilder = flowSeqNum_.toBuilder();
            }
            flowSeqNum_ = input.readMessage(com.google.protobuf.UInt64Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(flowSeqNum_);
              flowSeqNum_ = subBuilder.buildPartial();
            }

            break;
          }
          case 138: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (inputSnmpIfindex_ != null) {
              subBuilder = inputSnmpIfindex_.toBuilder();
            }
            inputSnmpIfindex_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(inputSnmpIfindex_);
              inputSnmpIfindex_ = subBuilder.buildPartial();
            }

            break;
          }
          case 146: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (outputSnmpIfindex_ != null) {
              subBuilder = outputSnmpIfindex_.toBuilder();
            }
            outputSnmpIfindex_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(outputSnmpIfindex_);
              outputSnmpIfindex_ = subBuilder.buildPartial();
            }

            break;
          }
          case 154: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (ipProtocolVersion_ != null) {
              subBuilder = ipProtocolVersion_.toBuilder();
            }
            ipProtocolVersion_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(ipProtocolVersion_);
              ipProtocolVersion_ = subBuilder.buildPartial();
            }

            break;
          }
          case 162: {
            java.lang.String s = input.readStringRequireUtf8();

            nextHopAddress_ = s;
            break;
          }
          case 170: {
            java.lang.String s = input.readStringRequireUtf8();

            nextHopHostname_ = s;
            break;
          }
          case 178: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (protocol_ != null) {
              subBuilder = protocol_.toBuilder();
            }
            protocol_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(protocol_);
              protocol_ = subBuilder.buildPartial();
            }

            break;
          }
          case 184: {
            int rawValue = input.readEnum();

            samplingAlgorithm_ = rawValue;
            break;
          }
          case 194: {
            com.google.protobuf.DoubleValue.Builder subBuilder = null;
            if (samplingInterval_ != null) {
              subBuilder = samplingInterval_.toBuilder();
            }
            samplingInterval_ = input.readMessage(com.google.protobuf.DoubleValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(samplingInterval_);
              samplingInterval_ = subBuilder.buildPartial();
            }

            break;
          }
          case 210: {
            java.lang.String s = input.readStringRequireUtf8();

            srcAddress_ = s;
            break;
          }
          case 218: {
            java.lang.String s = input.readStringRequireUtf8();

            srcHostname_ = s;
            break;
          }
          case 226: {
            com.google.protobuf.UInt64Value.Builder subBuilder = null;
            if (srcAs_ != null) {
              subBuilder = srcAs_.toBuilder();
            }
            srcAs_ = input.readMessage(com.google.protobuf.UInt64Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(srcAs_);
              srcAs_ = subBuilder.buildPartial();
            }

            break;
          }
          case 234: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (srcMaskLen_ != null) {
              subBuilder = srcMaskLen_.toBuilder();
            }
            srcMaskLen_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(srcMaskLen_);
              srcMaskLen_ = subBuilder.buildPartial();
            }

            break;
          }
          case 242: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (srcPort_ != null) {
              subBuilder = srcPort_.toBuilder();
            }
            srcPort_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(srcPort_);
              srcPort_ = subBuilder.buildPartial();
            }

            break;
          }
          case 250: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (tcpFlags_ != null) {
              subBuilder = tcpFlags_.toBuilder();
            }
            tcpFlags_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tcpFlags_);
              tcpFlags_ = subBuilder.buildPartial();
            }

            break;
          }
          case 258: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (tos_ != null) {
              subBuilder = tos_.toBuilder();
            }
            tos_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tos_);
              tos_ = subBuilder.buildPartial();
            }

            break;
          }
          case 264: {
            int rawValue = input.readEnum();

            netflowVersion_ = rawValue;
            break;
          }
          case 274: {
            java.lang.String s = input.readStringRequireUtf8();

            vlan_ = s;
            break;
          }
          case 282: {
            org.opennms.netmgt.flows.persistence.model.NodeInfo.Builder subBuilder = null;
            if (srcNode_ != null) {
              subBuilder = srcNode_.toBuilder();
            }
            srcNode_ = input.readMessage(org.opennms.netmgt.flows.persistence.model.NodeInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(srcNode_);
              srcNode_ = subBuilder.buildPartial();
            }

            break;
          }
          case 290: {
            org.opennms.netmgt.flows.persistence.model.NodeInfo.Builder subBuilder = null;
            if (exporterNode_ != null) {
              subBuilder = exporterNode_.toBuilder();
            }
            exporterNode_ = input.readMessage(org.opennms.netmgt.flows.persistence.model.NodeInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(exporterNode_);
              exporterNode_ = subBuilder.buildPartial();
            }

            break;
          }
          case 298: {
            org.opennms.netmgt.flows.persistence.model.NodeInfo.Builder subBuilder = null;
            if (destNode_ != null) {
              subBuilder = destNode_.toBuilder();
            }
            destNode_ = input.readMessage(org.opennms.netmgt.flows.persistence.model.NodeInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(destNode_);
              destNode_ = subBuilder.buildPartial();
            }

            break;
          }
          case 306: {
            java.lang.String s = input.readStringRequireUtf8();

            application_ = s;
            break;
          }
          case 314: {
            java.lang.String s = input.readStringRequireUtf8();

            host_ = s;
            break;
          }
          case 322: {
            java.lang.String s = input.readStringRequireUtf8();

            location_ = s;
            break;
          }
          case 328: {
            int rawValue = input.readEnum();

            srcLocality_ = rawValue;
            break;
          }
          case 336: {
            int rawValue = input.readEnum();

            dstLocality_ = rawValue;
            break;
          }
          case 344: {
            int rawValue = input.readEnum();

            flowLocality_ = rawValue;
            break;
          }
          case 354: {
            java.lang.String s = input.readStringRequireUtf8();

            convoKey_ = s;
            break;
          }
          case 360: {

            clockCorrection_ = input.readUInt64();
            break;
          }
          case 370: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (dscp_ != null) {
              subBuilder = dscp_.toBuilder();
            }
            dscp_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dscp_);
              dscp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 378: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (ecn_ != null) {
              subBuilder = ecn_.toBuilder();
            }
            ecn_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(ecn_);
              ecn_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

