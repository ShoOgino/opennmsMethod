  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.opennms.netmgt.flows.persistence.model.FlowDocument)) {
      return super.equals(obj);
    }
    org.opennms.netmgt.flows.persistence.model.FlowDocument other = (org.opennms.netmgt.flows.persistence.model.FlowDocument) obj;

    if (getTimestamp()
        != other.getTimestamp()) return false;
    if (hasNumBytes() != other.hasNumBytes()) return false;
    if (hasNumBytes()) {
      if (!getNumBytes()
          .equals(other.getNumBytes())) return false;
    }
    if (direction_ != other.direction_) return false;
    if (!getDstAddress()
        .equals(other.getDstAddress())) return false;
    if (!getDstHostname()
        .equals(other.getDstHostname())) return false;
    if (hasDstAs() != other.hasDstAs()) return false;
    if (hasDstAs()) {
      if (!getDstAs()
          .equals(other.getDstAs())) return false;
    }
    if (hasDstMaskLen() != other.hasDstMaskLen()) return false;
    if (hasDstMaskLen()) {
      if (!getDstMaskLen()
          .equals(other.getDstMaskLen())) return false;
    }
    if (hasDstPort() != other.hasDstPort()) return false;
    if (hasDstPort()) {
      if (!getDstPort()
          .equals(other.getDstPort())) return false;
    }
    if (hasEngineId() != other.hasEngineId()) return false;
    if (hasEngineId()) {
      if (!getEngineId()
          .equals(other.getEngineId())) return false;
    }
    if (hasEngineType() != other.hasEngineType()) return false;
    if (hasEngineType()) {
      if (!getEngineType()
          .equals(other.getEngineType())) return false;
    }
    if (hasDeltaSwitched() != other.hasDeltaSwitched()) return false;
    if (hasDeltaSwitched()) {
      if (!getDeltaSwitched()
          .equals(other.getDeltaSwitched())) return false;
    }
    if (hasFirstSwitched() != other.hasFirstSwitched()) return false;
    if (hasFirstSwitched()) {
      if (!getFirstSwitched()
          .equals(other.getFirstSwitched())) return false;
    }
    if (hasLastSwitched() != other.hasLastSwitched()) return false;
    if (hasLastSwitched()) {
      if (!getLastSwitched()
          .equals(other.getLastSwitched())) return false;
    }
    if (hasNumFlowRecords() != other.hasNumFlowRecords()) return false;
    if (hasNumFlowRecords()) {
      if (!getNumFlowRecords()
          .equals(other.getNumFlowRecords())) return false;
    }
    if (hasNumPackets() != other.hasNumPackets()) return false;
    if (hasNumPackets()) {
      if (!getNumPackets()
          .equals(other.getNumPackets())) return false;
    }
    if (hasFlowSeqNum() != other.hasFlowSeqNum()) return false;
    if (hasFlowSeqNum()) {
      if (!getFlowSeqNum()
          .equals(other.getFlowSeqNum())) return false;
    }
    if (hasInputSnmpIfindex() != other.hasInputSnmpIfindex()) return false;
    if (hasInputSnmpIfindex()) {
      if (!getInputSnmpIfindex()
          .equals(other.getInputSnmpIfindex())) return false;
    }
    if (hasOutputSnmpIfindex() != other.hasOutputSnmpIfindex()) return false;
    if (hasOutputSnmpIfindex()) {
      if (!getOutputSnmpIfindex()
          .equals(other.getOutputSnmpIfindex())) return false;
    }
    if (hasIpProtocolVersion() != other.hasIpProtocolVersion()) return false;
    if (hasIpProtocolVersion()) {
      if (!getIpProtocolVersion()
          .equals(other.getIpProtocolVersion())) return false;
    }
    if (!getNextHopAddress()
        .equals(other.getNextHopAddress())) return false;
    if (!getNextHopHostname()
        .equals(other.getNextHopHostname())) return false;
    if (hasProtocol() != other.hasProtocol()) return false;
    if (hasProtocol()) {
      if (!getProtocol()
          .equals(other.getProtocol())) return false;
    }
    if (samplingAlgorithm_ != other.samplingAlgorithm_) return false;
    if (hasSamplingInterval() != other.hasSamplingInterval()) return false;
    if (hasSamplingInterval()) {
      if (!getSamplingInterval()
          .equals(other.getSamplingInterval())) return false;
    }
    if (!getSrcAddress()
        .equals(other.getSrcAddress())) return false;
    if (!getSrcHostname()
        .equals(other.getSrcHostname())) return false;
    if (hasSrcAs() != other.hasSrcAs()) return false;
    if (hasSrcAs()) {
      if (!getSrcAs()
          .equals(other.getSrcAs())) return false;
    }
    if (hasSrcMaskLen() != other.hasSrcMaskLen()) return false;
    if (hasSrcMaskLen()) {
      if (!getSrcMaskLen()
          .equals(other.getSrcMaskLen())) return false;
    }
    if (hasSrcPort() != other.hasSrcPort()) return false;
    if (hasSrcPort()) {
      if (!getSrcPort()
          .equals(other.getSrcPort())) return false;
    }
    if (hasTcpFlags() != other.hasTcpFlags()) return false;
    if (hasTcpFlags()) {
      if (!getTcpFlags()
          .equals(other.getTcpFlags())) return false;
    }
    if (hasTos() != other.hasTos()) return false;
    if (hasTos()) {
      if (!getTos()
          .equals(other.getTos())) return false;
    }
    if (netflowVersion_ != other.netflowVersion_) return false;
    if (!getVlan()
        .equals(other.getVlan())) return false;
    if (hasSrcNode() != other.hasSrcNode()) return false;
    if (hasSrcNode()) {
      if (!getSrcNode()
          .equals(other.getSrcNode())) return false;
    }
    if (hasExporterNode() != other.hasExporterNode()) return false;
    if (hasExporterNode()) {
      if (!getExporterNode()
          .equals(other.getExporterNode())) return false;
    }
    if (hasDestNode() != other.hasDestNode()) return false;
    if (hasDestNode()) {
      if (!getDestNode()
          .equals(other.getDestNode())) return false;
    }
    if (!getApplication()
        .equals(other.getApplication())) return false;
    if (!getHost()
        .equals(other.getHost())) return false;
    if (!getLocation()
        .equals(other.getLocation())) return false;
    if (srcLocality_ != other.srcLocality_) return false;
    if (dstLocality_ != other.dstLocality_) return false;
    if (flowLocality_ != other.flowLocality_) return false;
    if (!getConvoKey()
        .equals(other.getConvoKey())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

