  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimestamp());
    if (hasNumBytes()) {
      hash = (37 * hash) + NUM_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getNumBytes().hashCode();
    }
    hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
    hash = (53 * hash) + direction_;
    hash = (37 * hash) + DST_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getDstAddress().hashCode();
    hash = (37 * hash) + DST_HOSTNAME_FIELD_NUMBER;
    hash = (53 * hash) + getDstHostname().hashCode();
    if (hasDstAs()) {
      hash = (37 * hash) + DST_AS_FIELD_NUMBER;
      hash = (53 * hash) + getDstAs().hashCode();
    }
    if (hasDstMaskLen()) {
      hash = (37 * hash) + DST_MASK_LEN_FIELD_NUMBER;
      hash = (53 * hash) + getDstMaskLen().hashCode();
    }
    if (hasDstPort()) {
      hash = (37 * hash) + DST_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getDstPort().hashCode();
    }
    if (hasEngineId()) {
      hash = (37 * hash) + ENGINE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getEngineId().hashCode();
    }
    if (hasEngineType()) {
      hash = (37 * hash) + ENGINE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getEngineType().hashCode();
    }
    if (hasDeltaSwitched()) {
      hash = (37 * hash) + DELTA_SWITCHED_FIELD_NUMBER;
      hash = (53 * hash) + getDeltaSwitched().hashCode();
    }
    if (hasFirstSwitched()) {
      hash = (37 * hash) + FIRST_SWITCHED_FIELD_NUMBER;
      hash = (53 * hash) + getFirstSwitched().hashCode();
    }
    if (hasLastSwitched()) {
      hash = (37 * hash) + LAST_SWITCHED_FIELD_NUMBER;
      hash = (53 * hash) + getLastSwitched().hashCode();
    }
    if (hasNumFlowRecords()) {
      hash = (37 * hash) + NUM_FLOW_RECORDS_FIELD_NUMBER;
      hash = (53 * hash) + getNumFlowRecords().hashCode();
    }
    if (hasNumPackets()) {
      hash = (37 * hash) + NUM_PACKETS_FIELD_NUMBER;
      hash = (53 * hash) + getNumPackets().hashCode();
    }
    if (hasFlowSeqNum()) {
      hash = (37 * hash) + FLOW_SEQ_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getFlowSeqNum().hashCode();
    }
    if (hasInputSnmpIfindex()) {
      hash = (37 * hash) + INPUT_SNMP_IFINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getInputSnmpIfindex().hashCode();
    }
    if (hasOutputSnmpIfindex()) {
      hash = (37 * hash) + OUTPUT_SNMP_IFINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getOutputSnmpIfindex().hashCode();
    }
    if (hasIpProtocolVersion()) {
      hash = (37 * hash) + IP_PROTOCOL_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getIpProtocolVersion().hashCode();
    }
    hash = (37 * hash) + NEXT_HOP_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getNextHopAddress().hashCode();
    hash = (37 * hash) + NEXT_HOP_HOSTNAME_FIELD_NUMBER;
    hash = (53 * hash) + getNextHopHostname().hashCode();
    if (hasProtocol()) {
      hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
      hash = (53 * hash) + getProtocol().hashCode();
    }
    hash = (37 * hash) + SAMPLING_ALGORITHM_FIELD_NUMBER;
    hash = (53 * hash) + samplingAlgorithm_;
    if (hasSamplingInterval()) {
      hash = (37 * hash) + SAMPLING_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getSamplingInterval().hashCode();
    }
    hash = (37 * hash) + SRC_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getSrcAddress().hashCode();
    hash = (37 * hash) + SRC_HOSTNAME_FIELD_NUMBER;
    hash = (53 * hash) + getSrcHostname().hashCode();
    if (hasSrcAs()) {
      hash = (37 * hash) + SRC_AS_FIELD_NUMBER;
      hash = (53 * hash) + getSrcAs().hashCode();
    }
    if (hasSrcMaskLen()) {
      hash = (37 * hash) + SRC_MASK_LEN_FIELD_NUMBER;
      hash = (53 * hash) + getSrcMaskLen().hashCode();
    }
    if (hasSrcPort()) {
      hash = (37 * hash) + SRC_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getSrcPort().hashCode();
    }
    if (hasTcpFlags()) {
      hash = (37 * hash) + TCP_FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getTcpFlags().hashCode();
    }
    if (hasTos()) {
      hash = (37 * hash) + TOS_FIELD_NUMBER;
      hash = (53 * hash) + getTos().hashCode();
    }
    hash = (37 * hash) + NETFLOW_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + netflowVersion_;
    hash = (37 * hash) + VLAN_FIELD_NUMBER;
    hash = (53 * hash) + getVlan().hashCode();
    if (hasSrcNode()) {
      hash = (37 * hash) + SRC_NODE_FIELD_NUMBER;
      hash = (53 * hash) + getSrcNode().hashCode();
    }
    if (hasExporterNode()) {
      hash = (37 * hash) + EXPORTER_NODE_FIELD_NUMBER;
      hash = (53 * hash) + getExporterNode().hashCode();
    }
    if (hasDestNode()) {
      hash = (37 * hash) + DEST_NODE_FIELD_NUMBER;
      hash = (53 * hash) + getDestNode().hashCode();
    }
    hash = (37 * hash) + APPLICATION_FIELD_NUMBER;
    hash = (53 * hash) + getApplication().hashCode();
    hash = (37 * hash) + HOST_FIELD_NUMBER;
    hash = (53 * hash) + getHost().hashCode();
    hash = (37 * hash) + LOCATION_FIELD_NUMBER;
    hash = (53 * hash) + getLocation().hashCode();
    hash = (37 * hash) + SRC_LOCALITY_FIELD_NUMBER;
    hash = (53 * hash) + srcLocality_;
    hash = (37 * hash) + DST_LOCALITY_FIELD_NUMBER;
    hash = (53 * hash) + dstLocality_;
    hash = (37 * hash) + FLOW_LOCALITY_FIELD_NUMBER;
    hash = (53 * hash) + flowLocality_;
    hash = (37 * hash) + CONVO_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getConvoKey().hashCode();
    hash = (37 * hash) + CLOCK_CORRECTION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getClockCorrection());
    if (hasDscp()) {
      hash = (37 * hash) + DSCP_FIELD_NUMBER;
      hash = (53 * hash) + getDscp().hashCode();
    }
    if (hasEcn()) {
      hash = (37 * hash) + ECN_FIELD_NUMBER;
      hash = (53 * hash) + getEcn().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

