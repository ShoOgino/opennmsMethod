    @Override
    public int compare(Rule r1, Rule r2) {
        Objects.requireNonNull(r1);
        Objects.requireNonNull(r2);

        // Sort by group priority (highest priority first)
        int groupPriority1 = r1.getGroup() != null ? r1.getGroup().getPriority() : 0;
        int groupPriority2 = r2.getGroup() != null ? r2.getGroup().getPriority() : 0;
        int result = -1 * Integer.compare(groupPriority1, groupPriority2);

        // If group priority is identical, sort by rule priority (highest priority first)
        if (result == 0) {
            if (r1.calculatePriority() == r2.calculatePriority()) {
                return -1 * Boolean.compare(r1.hasIpAddressDefinition(), r2.hasIpAddressDefinition());
            }
            return -1 * Integer.compare(r1.calculatePriority(), r2.calculatePriority() );
        }
        return result;
    }

