    @Override
    public Object execute() throws Exception {
        final Criteria criteria = new CriteriaBuilder(Rule.class)
                .alias("group", "group")
                .eq("group.name", group)
                .orderBy("position", true)
                .toCriteria();
        final List<Rule> rules = classificationService.findMatchingRules(criteria);
        final String TEMPLATE = "%4s   %-20s   %-15s   %10s   %-15s   %-10s   %-15s   %-10s   %-20s   %-15s   %s";
        if (!rules.isEmpty()) {
            System.out.println(String.format(TEMPLATE, "Pos", "Name", "Protocol", "ID", "Dest. Addr.", "Dest. Port", "Src. Addr.", "Src. Port", "Exporter Filter", "Bidirectional", "Group"));
            for (Rule rule : rules) {
                System.out.println(
                        String.format(
                                TEMPLATE,
                                rule.getPosition(),
                                rule.getName(),
                                rule.getProtocol() == null ? "" : rule.getProtocol(),
                                rule.getId(),
                                rule.getDstAddress() == null ? "" : rule.getDstAddress(),
                                rule.getDstPort() == null ? "" : rule.getDstPort(),
                                rule.getSrcAddress() == null ? "" : rule.getSrcAddress(),
                                rule.getSrcPort() == null ? "" : rule.getSrcPort(),
                                rule.getExporterFilter() == null ? "" : rule.getExporterFilter(),
                                rule.isOmnidirectional() ? "Y" : "N",
                                rule.getGroup().getName()
                        ));
            }
            System.out.println();
        }
        System.out.println("=> " + rules.size() + " rule(s) defined for group '" + group + "'");
        return null;
    }

