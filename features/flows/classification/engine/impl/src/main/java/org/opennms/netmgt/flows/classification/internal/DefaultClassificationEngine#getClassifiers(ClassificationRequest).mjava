    private Collection<Classifier> getClassifiers(ClassificationRequest request) {
        final List<Classifier> srcPortClassifiers = getClassifiers(request.getSrcPort());
        final List<Classifier> dstPortClassifiers = getClassifiers(request.getDstPort());

        // If rules for either src or dst ports are empty, use the opposite
        if (srcPortClassifiers.isEmpty()) {
            return dstPortClassifiers;
        }
        if (dstPortClassifiers.isEmpty()) {
            return srcPortClassifiers;
        }

        // If both are equal, nothing to do, just use either srcPortClassifiers or dstPortClassifiers
        if (Objects.equals(srcPortClassifiers, dstPortClassifiers)) {
            return dstPortClassifiers;
        }

        // If rules for src and dst port exist and they are not identical,
        // they must be deduped (merging and sorting the classifiers)
        // 1. Merge
        final List<Classifier> classifiers = new ArrayList<>();
        classifiers.addAll(srcPortClassifiers);

        // Only add not already added classifiers
        for (Classifier c : dstPortClassifiers) {
            if (!classifiers.contains(c)) {
                classifiers.add(c);
            }
        }

        // 2. Sort
        Collections.sort(classifiers);
        return classifiers;
    }

