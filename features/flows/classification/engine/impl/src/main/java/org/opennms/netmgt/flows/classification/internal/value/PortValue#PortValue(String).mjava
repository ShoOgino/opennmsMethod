    public PortValue(String input) {
        final StringValue portValue = new StringValue(input);
        if (portValue.hasWildcard()) {
            throw new IllegalArgumentException("Wildcards not supported");
        }
        final List<StringValue> portValues = portValue.splitBy(",");
        final List<StringValue> rangedPortValues = portValues.stream().filter(v -> v.isRanged()).collect(Collectors.toList());
        rangedPortValues.forEach(v -> portValues.remove(v));

        // Add the actual ports
        this.ports.addAll(portValues.stream().map(v -> new IntegerValue(v).getValue()).collect(Collectors.toList()));

        // Add ranged ports
        final Set<Integer> rangedPorts = rangedPortValues.stream()
                .flatMap(v -> {
                    final RangedValue rangedValue = new RangedValue(v);
                    return IntStream.range(rangedValue.getStart(), rangedValue.getEnd()).boxed();
                })
                .collect(Collectors.toSet());
        this.ports.addAll(rangedPorts);
    }

