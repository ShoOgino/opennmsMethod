    private int[] verifyInput(StringValue input) {
        // Ensure we actually have a value
        if (input.isNullOrEmpty()) throw new IllegalArgumentException("Range must not be null or empty");

        final List<StringValue> range = input.splitBy("-");
        if (range.size() > 2) {
            LOG.warn("Received multiple ranges {}. Will only use {}", range, range.subList(0, 2));
        }

        // Verify each value is a number value
        for (int i=0; i<Math.min(range.size(), 2); i++) {
            try {
                Integer.parseInt(range.get(i).getValue());
            } catch (NumberFormatException ex) {
                throw new IllegalArgumentException("Value '" + range.get(i) + "' is not a valid number", ex);
            }
        }
        // Check bounds
        int lowerBound = Integer.parseInt(range.get(0).getValue());
        int higherBound = range.size() == 1 ? lowerBound : Integer.parseInt(range.get(1).getValue());
        verifyBounds(lowerBound, higherBound);
        return new int[]{lowerBound, higherBound};
    }

