    /** Sorts the groups by its position. The given group gets the lower position as another group with the same position
     * => the given group will be evaluated before another group with the same position. */
    static List<Group> sortGroupPositions(Group group, List<Group> groups) {
        groups.sort(Comparator
                .comparing(Group::isReadOnly)
                .thenComparing(Group::getPosition)
                .thenComparing(g -> !g.getId().equals(group.getId()))); // "our group" will have the lower position move other groups away
        return groups;
    }

