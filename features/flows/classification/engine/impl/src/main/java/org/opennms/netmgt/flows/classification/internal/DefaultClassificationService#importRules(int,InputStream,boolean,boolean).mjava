    @Override
    public void importRules(int groupId, InputStream inputStream, boolean hasHeader, boolean deleteExistingRules) throws CSVImportException {
        runInTransaction(status -> {

            // Get and check group
            Group group = classificationGroupDao.get(groupId);
            if(group == null) {
                throw new ClassificationException(ErrorContext.Name, Errors.GROUP_NOT_FOUND, groupId);
            }
            if(group.isReadOnly()) {
                throw new ClassificationException(ErrorContext.Name, Errors.GROUP_READ_ONLY, groupId);
            }

            // Parse and validate the rules
            final CsvImportResult result = csvService.parseCSV(group, inputStream, hasHeader);
            if (!result.isSuccess()) {
                throw new CSVImportException(result);
            }

            // Remove existing rules and afterwards add new rules
            if (deleteExistingRules) {
                for (Rule eachRule : group.getRules()) {
                    classificationRuleDao.delete(eachRule);
                }
                group.getRules().clear();
            }

            // Add new rules
            final List<Rule> rules = result.getRules();
            for (int i=0; i<rules.size(); i++) {
                final Rule rule = rules.get(i);
                try {
                    groupValidator.validate(group, rule);
                    group.addRule(rule);
                } catch (ClassificationException ex) {
                    result.markError(i, ex.getError());
                }
            }

            // before continuing, verify everything is okay, otherwise bail
            if (!result.isSuccess()) {
                throw new CSVImportException(result);
            }

            updateRulePositionsAndReloadEngine(PositionUtil.sortRulePositions(group.getRules()));
            classificationGroupDao.saveOrUpdate(group);

            return null;
        });
    }

