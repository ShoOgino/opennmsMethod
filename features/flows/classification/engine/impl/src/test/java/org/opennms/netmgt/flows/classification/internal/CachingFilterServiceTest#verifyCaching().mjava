    @Test
    public void verifyCaching() {
        // Create caching engine and spy o original engine
        final FilterService originalFilterService = new FilterService() {
            @Override
            public void validate(String filterExpression) throws InvalidFilterException {

            }

            @Override
            public boolean matches(String address, String filterExpression) {
                return false;
            }
        };
        final FilterService filterService = Mockito.spy(originalFilterService);
        final FilterService cachingService = new CachingFilterService(filterService, new CacheConfigBuilder().withName("classificationFilter").withExpireAfterRead(5).withMaximumSize(1000).build());


        // Invoke filter
        cachingService.matches("8.8.8.8", "categoryName == 'Routers");
        cachingService.matches("8.8.8.8", "categoryName == 'Routers");

        // Should only be invoked once
        Mockito.verify(filterService, Mockito.times(1)).matches(Mockito.anyString(), Mockito.anyString());
    }

