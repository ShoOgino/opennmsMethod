    @Test
    public void verifyPort() {
        // Note: The errorContext can either be srcPort or dstPort.

        // Fail
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "*"), Errors.RULE_PORT_NO_WILDCARD);
        verify (() -> RuleValidator.validatePort(ErrorContext.SrcPort, ""), Errors.RULE_PORT_IS_REQUIRED);
        verify (() -> RuleValidator.validatePort(ErrorContext.SrcPort, null), Errors.RULE_PORT_IS_REQUIRED);
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "80-a"), Errors.RULE_PORT_DEFINITION_NOT_VALID);
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "80,a"), Errors.RULE_PORT_DEFINITION_NOT_VALID);
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "100-80"), Errors.RULE_PORT_RANGE_BOUNDS_NOT_VALID);
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "0-70000"), Errors.RULE_PORT_VALUE_NOT_IN_RANGE);
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "65536"), Errors.RULE_PORT_VALUE_NOT_IN_RANGE);
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "0-65536"), Errors.RULE_PORT_VALUE_NOT_IN_RANGE);

        // Succeed
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "80"));
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "80,8080"));
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, "80-8080"));
        verify(() -> RuleValidator.validatePort(ErrorContext.SrcPort, String.format("%d-%d", Rule.MIN_PORT_VALUE, Rule.MAX_PORT_VALUE)));
    }

