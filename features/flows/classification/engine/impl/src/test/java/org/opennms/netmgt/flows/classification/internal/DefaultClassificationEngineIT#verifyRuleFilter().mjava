    @Test
    public void verifyRuleFilter() {
        final ClassificationEngine classificationEngine = new DefaultClassificationEngine(() -> ruleDao.findAllEnabledRules(), new DefaultFilterService(filterDao));

        // Create request, that matches rule1
        final ClassificationRequest classificationRequest = new ClassificationRequestBuilder()
                .withExporterAddress("10.0.0.1")
                .withDstAddress("5.5.5.5").withDstPort(80)
                .withSrcAddress("192.168.0.1").withSrcPort(55557)
                .withProtocol(ProtocolType.TCP).build();
        assertThat(classificationEngine.classify(classificationRequest), is("rule1"));

        // update request to match rule 2
        classificationRequest.setDstPort(100);
        classificationRequest.setExporterAddress("192.168.1.1");
        assertThat(classificationEngine.classify(classificationRequest), is("rule2"));

        // update request to match rule 3
        classificationRequest.setDstPort(200);
        classificationRequest.setExporterAddress("192.168.1.1");
        assertThat(classificationEngine.classify(classificationRequest), is("rule3"));

        // update request to match rule 4
        classificationRequest.setDstPort(300);
        classificationRequest.setExporterAddress("192.168.1.1");
        assertThat(classificationEngine.classify(classificationRequest), is("rule4"));

        // Update no rule matches
        classificationRequest.setDstPort(0);
        assertThat(classificationEngine.classify(classificationRequest), is(nullValue()));
    }

