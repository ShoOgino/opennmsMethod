    public void handleInputEvent(final NativeEvent event) {
        final String eventType = event.getType();
        VConsole.log("handleInputEvent: received " + eventType + " (keyCode = " + event.getKeyCode() + ")");

        if ("keydown".equals(eventType)) {
            switch(event.getKeyCode()) {
                case KeyCodes.KEY_ESCAPE:
                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                        @Override public void execute() {
                            m_state = m_state.cancelSearching(SearchStateManager.this);
                        }
                    });
                    break;
                case KeyCodes.KEY_DOWN:
                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                        @Override public void execute() {
                            m_state = m_state.autocompleteStartNavigation(SearchStateManager.this);
                        }
                    });
                    break;
                case KeyCodes.KEY_ENTER:
                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                        @Override public void execute() {
                            m_state = m_state.finishedSearching(SearchStateManager.this);
                        }
                    });
                    break;
                default:
                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                        @Override public void execute() {
                            final String value = m_valueItem.getValue();
                            if (value == null || "".equals(value)) {
                                m_state = m_state.cancelSearching(SearchStateManager.this);
                            } else {
                                m_state = m_state.searchInputReceived(SearchStateManager.this);
                            }
                        }
                    });
                    break;
            }
        } else if ("search".equals(eventType)) {
            final String searchString = m_valueItem.getValue();
            if ("".equals(searchString)) {
                Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                    @Override public void execute() {
                        m_state = m_state.cancelSearching(SearchStateManager.this);
                    }
                });
            }
        } else {
            VConsole.log("handleInputEvent: unhandled event: " + eventType);
        }
    }

