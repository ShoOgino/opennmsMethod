    public Element doOnAdd(final JavaScriptObject map) {
        VConsole.log("onAdd() called");
        
        m_container = HTMLPanel.wrap(SearchControlImpl.createElement("leaflet-control-search"));
        m_container.addStyleName("leaflet-control");

        m_inputBox = new TextBox();
        m_inputBox.addStyleName("search-input");
        m_inputBox.getElement().setAttribute("placeholder", "Search...");
        m_inputBox.getElement().setAttribute("type", "search");
        m_inputBox.setMaxLength(40);
        m_inputBox.setVisibleLength(40);

        DomEvent.stopEventPropagation(m_inputBox);

        m_changeCallback = new SearchEventCallback(new String[] { "keydown", "change", "cut", "paste", "search" }, m_inputBox, m_searchConsumer) {
            @Override protected void onEvent(final NativeEvent event) {
                handleSearchEvent(event);
            }
        };
        DomEvent.addListener(m_changeCallback);

        m_container.add(m_inputBox);

        m_submitAnchor = new Anchor();
        m_submitAnchor.addStyleName("search-button");
        m_submitAnchor.setTitle("Search locations...");
        m_submitAnchor.setHref("#");
        m_submitAnchor.setTabIndex(-1);

        DomEvent.stopEventPropagation(m_submitAnchor);
        DomEvent.addListener(new DomEventCallback("click", m_submitAnchor) {
            @Override
            protected void onEvent(final NativeEvent event) {
                handleSearchEvent(event);
            }
        });

        m_container.add(m_submitAnchor);

        m_autocomplete = new HTML("No matches.");
        m_autocomplete.setVisible(false);
        m_autocomplete.addStyleName("search-autocomplete");
        updateAutocompleteStyle();

        m_container.add(m_autocomplete);

        return m_container.getElement();
    }

