    @Override
    public boolean matches(final NodeMarker marker) {
        if (marker.getSeverity() != null && marker.getSeverity() < m_minimumSeverity) return false;
        if (m_searchString == null || "".equals(m_searchString)) return true;

        final String searchProperty;
        final MatchType matchType;
        final List<String> searchFor = new ArrayList<String>();

        final MatchResult m = m_searchPattern.exec(m_searchString);
        if (m != null) {
            searchProperty = m.getGroup(1);
            matchType = MatchType.fromToken(m.getGroup(2));

            if (matchType == MatchType.IN) {
                for (final String s : m.getGroup(3).split("\\s*,\\s*")) {
                    searchFor.add(s);
                }
            } else {
                searchFor.add(m.getGroup(3));
            }
        } else {
            searchProperty = null;
            matchType = MatchType.SUBSTRING;
            searchFor.add(m_searchString);
        }

        final Map<String, String> markerProperties = marker.getProperties();

        if (searchProperty != null) {
            return matchProperty(matchType, searchProperty, searchFor, markerProperties);
        } else {
            for (final String key : markerProperties.keySet()) {
                if (matchProperty(matchType, key, searchFor, markerProperties)) {
                    return true;
                }
            }
        }

        return false;
    }

