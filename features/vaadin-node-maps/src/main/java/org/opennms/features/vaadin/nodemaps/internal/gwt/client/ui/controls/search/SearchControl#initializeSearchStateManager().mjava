    private void initializeSearchStateManager() {
        m_stateManager = new SearchStateManager(m_inputBox) {
            @Override
            public void refresh() {
                m_searchConsumer.setSearchString(m_inputBox.getValue());
                // it's the search consumer's job to trigger an update in any UI elements
                m_searchConsumer.refresh();
            }

            @Override
            public void clearSearchInput() {
                m_inputBox.setValue("");
                m_inputBox.setFocus(true);
            }

            @Override
            public void focusAutocomplete() {
                m_autoComplete.setFocus(true);
                if (m_selectionModel.getSelectedObject() == null) {
                    final List<NodeMarker> markers = m_markerContainer.getMarkers();
                    if (markers.size() > 0) {
                        m_selectionModel.setSelected(markers.get(0), true);
                    }
                }
            }

            @Override
            public void showAutocomplete() {
                m_autoComplete.setVisible(true);
                updateAutocompleteStyle(m_autoComplete);
            }

            @Override
            public void hideAutocomplete() {
                m_autoComplete.setVisible(false);
                m_selectionModel.setSelected(m_selectionModel.getSelectedObject(), false);
            }

            @Override
            public void entrySelected() {
                VConsole.log("entry selected");
            }
            
        };
    }

