    public boolean handleAutocompleteEvent(final NativeEvent event) {
        final String eventType = event.getType();
        final int eventKeyCode = event.getKeyCode();
        logger.log(Level.INFO, "handleAutocompleteEvent(" + m_state + "): received " + eventType + " (keyCode = " + eventKeyCode + ")");

        if ("keydown".equals(eventType)) {
            switch (eventKeyCode) {
            case KeyCodes.KEY_ESCAPE:
                Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                    @Override
                    public void execute() {
                        m_state = m_state.cancelSearching(SearchStateManager.this);
                    }
                });
                break;
            case KeyCodes.KEY_ENTER:
                Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                    @Override
                    public void execute() {
                        m_state = m_state.currentEntrySelected(SearchStateManager.this);
                    }
                });
                break;
            }
        } else if ("click".equals(eventType) || "touchstart".equals(eventType)) {
            // someone clicked on an entry
            Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                @Override
                public void execute() {
                    m_state = m_state.currentEntrySelected(SearchStateManager.this);
                }
            });
            return true;
        } else {
            logger.log(Level.INFO, "handleAutocompleteEvent(" + m_state + "): unhandled event: " + eventType);
            return true;
        }
        return false;
    }

