    @Override
    public void updateFromUIDL(final UIDL uidl, final ApplicationConnection client) {
        if (client.updateComponent(this, uidl, true)) return;
        m_client = client;
        m_uidlId = uidl.getId();

        final List<GeoJSONFeature> features = new ArrayList<GeoJSONFeature>();

        // debugUIDL(uidl, 0);

        final UIDL nodeUIDL = uidl.getChildByTagName("nodes");

        for (final Iterator<?> iterator = nodeUIDL.getChildIterator(); iterator.hasNext();) {
            final UIDL node = (UIDL) iterator.next();

            final float longitude = node.getFloatAttribute("longitude");
            final float latitude = node.getFloatAttribute("latitude");

            final String[] stringKeys = new String[] { "severityLabel", "nodeLabel", "foreignSource", "foreignId", "ipAddress" };
            final String[] intKeys = new String[] { "severity", "nodeId", "unackedCount" };

            final Map<String, String> stringAttributes = new HashMap<String, String>();
            final Map<String, Integer> intAttributes = new HashMap<String, Integer>();
            for (final String key : stringKeys) {
                if (node.hasAttribute(key)) stringAttributes.put(key, node.getStringAttribute(key));
            }
            for (final String key : intKeys) {
                if (node.hasAttribute(key)) intAttributes.put(key, node.getIntAttribute(key));
            }

            final GeoJSONFeature feature = GeoJSONFeature.create(longitude, latitude, stringAttributes, intAttributes);
            features.add(feature);
        }

        setFeatureCollection(FeatureCollection.create(features));
        updateFeatureLayer();
    }

