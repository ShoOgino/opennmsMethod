    public boolean containsText(final String text) {
        if (text == null) return false;
        if ("".equals(text)) return true;

        final String searchString = text.toLowerCase();

        ///// handle foo: style search strings for text properties
        for (final String propertyName : m_textProperties) {
            final String lowerPropertyName = propertyName.toLowerCase();
            if (searchString.startsWith(lowerPropertyName + ":")) {
                final String searchStringWithoutPrefix = searchString.replaceFirst(lowerPropertyName + ":\\s*", "");
                final String value = getProperty(propertyName);
                if (value != null && value.toLowerCase().contains(searchStringWithoutPrefix)) {
                    return true;
                } else {
                    return false;
                }
            }
        }

        ///// special case: categories: -> category: search
        if (searchString.startsWith("category:")) {
            final String searchStringWithoutPrefix = searchString.replaceFirst("category:\\s*", "");
            return matchCategories(searchStringWithoutPrefix);
        }

        ///// if no foo: style search strings, first search all text properties for a match
        for (final String propertyName : m_textProperties) {
            if (matchProperty(propertyName, text)) {
                return true;
            }
        }

        ///// otherwise, search categories
        return matchCategories(searchString);
    }

