    public Element doOnAdd(final JavaScriptObject map) {
        logger.info("AlarmControl.doOnAdd()");
        final AlarmControlCss css = AlarmControlBundle.INSTANCE.css();
        css.ensureInjected();

        final Element element = AlarmControlImpl.createElement("leaflet-control-alarm");
        element.addClassName("leaflet-control");

        final Label label = new Label("Show Severity >=");
        label.getElement().setAttribute("for", "alarmControl");
        label.addStyleName(css.label());
        element.appendChild(label.getElement());

        m_severityBox = new ListBox(false);
        m_severityBox.getElement().setId("alarmControl");
        m_severityBox.addItem("Normal", "0");
        m_severityBox.addItem("Warning", "4");
        m_severityBox.addItem("Minor", "5");
        m_severityBox.addItem("Major", "6");
        m_severityBox.addItem("Critical", "7");

        m_severityBox.addChangeHandler(new ChangeHandler() {
            @Override public void onChange(final ChangeEvent event) {
                final int selected = m_severityBox.getSelectedIndex();
                logger.info("new selection index = " + selected);
                final String value = m_severityBox.getValue(selected);
                logger.info("new severity = " + value);
                final int intValue = value == null? 0 : Integer.valueOf(value).intValue();
                m_eventManager.fireEvent(new AlarmSeverityUpdatedEvent(intValue));
                event.stopPropagation();
            }
        });
        /*
        m_severityBox.addClickHandler(new ClickHandler() {
            @Override public void onClick(final ClickEvent event) {
                logger.info("AlarmControl.severityBox.onClick()");
                m_severityBox.fireEvent(event);
                event.stopPropagation();
            }
        });
        */

        DomEvent.addListener(new AbstractDomEventCallback(new String[] {"keydown", "keyup", "keypress", "input", "cut", "paste", "click", "dblclick", "mousedown", "mouseup", "touchstart", "touchend", "scrollstart", "scrollstop"}, m_severityBox) {
            @Override
            public void onEvent(final NativeEvent event) {
                if (!m_listenerInitialized) {
                    logger.info("Reinitializing event listening for severityBox");
                    DOM.setEventListener(m_severityBox.getElement(), m_severityBox);
                    m_listenerInitialized = true;
                }

                logger.info("Rethrowing event to severity box: " + event.getType());
                com.google.gwt.event.dom.client.DomEvent.fireNativeEvent(event, m_severityBox);
                // event.stopPropagation();
            }
        });

        m_severityBox.addStyleName(css.label());
        element.appendChild(m_severityBox.getElement());

        logger.info("AlarmControl.doOnAdd(): finished, returning: " + element);
        
        m_eventManager.fireEvent(new ComponentInitializedEvent(AlarmControl.class.getName()));
        return element;
    }

