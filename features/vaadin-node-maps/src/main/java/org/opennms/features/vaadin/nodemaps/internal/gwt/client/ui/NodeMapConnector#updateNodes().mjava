    private void updateNodes() {
        if (getState().nodes.isEmpty()) {
            return;
        }

        final List<NodeMarker> featureCollection = new ArrayList<NodeMarker>();

        for (MapNode node : getState().nodes) {
            final NodeMarker marker = new NodeMarker(new LatLng(node.getLatitude(), node.getLongitude()));
            marker.putProperty(NodeMarker.Property.NODE_ID, node.getNodeId());
            marker.putProperty(NodeMarker.Property.NODE_LABEL, node.getNodeLabel());
            marker.putProperty(NodeMarker.Property.FOREIGN_SOURCE, node.getForeignSource());
            marker.putProperty(NodeMarker.Property.FOREIGN_ID, node.getForeignId());
            marker.putProperty(NodeMarker.Property.DESCRIPTION, node.getDescription());
            marker.putProperty(NodeMarker.Property.MAINTCONTRACT, node.getMaintcontract());
            marker.putProperty(NodeMarker.Property.IP_ADDRESS, node.getIpAddress());
            marker.putProperty(NodeMarker.Property.SEVERITY, node.getSeverity());
            marker.putProperty(NodeMarker.Property.SEVERITY_LABEL, node.getSeverityLabel());

            List<String> categories = node.getCategories();
            if (categories != null) {
                marker.setCategories(categories.toArray(new String[]{}));
            }

            // TODO: Icon handling should be moved to the Widget
            if (m_icons.containsKey(marker.getSeverityLabel())) {
                marker.setIcon(m_icons.get(marker.getSeverityLabel()));
            } else {
                marker.setIcon(m_icons.get("Normal"));
            }

            // TODO: This should be moved to the Widget
            marker.bindPopup(NodeMarkerClusterCallback.getPopupTextForMarker(marker));

            featureCollection.add(marker);
        }
        getWidget().setMarkers(featureCollection);
    }

