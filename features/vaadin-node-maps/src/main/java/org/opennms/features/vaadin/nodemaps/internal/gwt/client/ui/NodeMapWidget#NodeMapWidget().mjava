    public NodeMapWidget() {
        m_eventManager = new OpenNMSEventManager();
        m_eventManager.addHandler(FilteredMarkersUpdatedEvent.TYPE, this);

        m_mapPanel.setWidth("100%");
        m_mapPanel.setHeight("100%");
        final Style mapStyle = m_mapPanel.getElement().getStyle();
        mapStyle.setPosition(Position.ABSOLUTE);
        mapStyle.setTop(0, Unit.PX);
        mapStyle.setLeft(0, Unit.PX);

        this.setWidth("100%");
        this.setHeight("100%");

        m_overlayPanel.setWidth("100%");
        m_overlayPanel.setHeight("100%");
        m_overlayPanel.getElement().getStyle().setZIndex(2000);
        this.add(m_overlayPanel);

        this.add(m_mapPanel);
        m_div = m_mapPanel.getElement().cast();
        m_div.setId("gwt-map");

        setStyleName("v-openlayers");
        LOG.info("NodeMapWidget(): div ID = " + m_div.getId());

        addAttachHandler(new Handler() {
            @Override
            public void onAttachOrDetach(final AttachEvent event) {
                if (event.isAttached()) {
                    LOG.info("NodeMapWidget.onAttach()");

                    m_filter = new MarkerFilterImpl("", 0, m_eventManager);
                    m_markerContainer = new MarkerContainer(m_filter, m_eventManager);

                    m_filter.onLoad();
                    m_markerContainer.onLoad();

                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                        @Override public void execute() {
                            initializeMap(m_div.getId());
                        }
                    });
                } else {
                    LOG.info("NodeMapwidget.onDetach()");
                    if (m_markerContainer != null) m_markerContainer.onUnload();
                    if (m_filter != null) m_filter.onUnload();
                    destroyMap();
                }
            }
        });
        LOG.info("NodeMapWidget(): initialized");
    }

