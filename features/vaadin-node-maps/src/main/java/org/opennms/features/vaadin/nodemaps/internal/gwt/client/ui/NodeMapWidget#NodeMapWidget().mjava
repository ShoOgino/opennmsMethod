    public NodeMapWidget() {
        m_handlerManager = new HandlerManager(this);

        m_div = Document.get().createDivElement();
        m_div.setId("gwt-map");
        m_div.getStyle().setWidth(100, Unit.PCT);
        m_div.getStyle().setHeight(100, Unit.PCT);
        setElement(m_div);

        setStyleName("v-openlayers");
        logger.log(Level.INFO, "NodeMapWidget(): div ID = " + getElement().getId());

        m_filter = new MarkerFilterImpl("", 0);
        m_markerContainer = new MarkerContainer(m_filter);

        addAttachHandler(new Handler() {
            @Override
            public void onAttachOrDetach(final AttachEvent event) {
                if (event.isAttached()) {
                    logger.log(Level.INFO, "NodeMapWidget.onAttach()");

                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {
                        @Override public void execute() {
                            initializeMap(m_div.getId());
                        }
                    });

                    m_markerContainer.onLoad();

                    updateMarkerClusterLayer();
                    m_filteredMarkersUpdatedHandler = new FilteredMarkersUpdatedEventHandler() {
                        @Override
                        public void onEvent(final NativeEvent nativeEvent) {
                            logger.log(Level.INFO, "NodeMapWidget.onFilteredMarkersUpdated(), refreshing node map widgets");
                            updateMarkerClusterLayer();
                        }
                    };
                    DomEvent.addListener(m_filteredMarkersUpdatedHandler);
                } else {
                    logger.log(Level.INFO, "NodeMapwidget.onDetach()");

                    if (m_filteredMarkersUpdatedHandler != null) DomEvent.removeListener(m_filteredMarkersUpdatedHandler);

                    m_markerContainer.onUnload();
                    destroyMap();
                }
            }
        });
        logger.log(Level.INFO, "NodeMapWidget(): initialized");
    }

