    @Test
    public void testSubstringMatch() {
        final MarkerFilterImpl filter = new WrappedMarkerFilterImpl("blah", 0, m_eventManager);

        final SimpleNodeMarker marker = new SimpleNodeMarker();

        marker.setNodeLabel("this has the string blah in it");
        assertTrue(filter.matches(marker));

        marker.setNodeLabel("bla");
        assertFalse(filter.matches(marker));

        marker.setNodeLabel("blah");
        assertTrue(filter.matches(marker));

        filter.setSearchString("nodeLabel: blah");

        marker.setNodeLabel("this has the string blah in it");
        assertTrue(filter.matches(marker));

        marker.setNodeLabel("bla");
        assertFalse(filter.matches(marker));

        marker.setNodeLabel("blah");
        assertTrue(filter.matches(marker));

        // now try categories
        filter.setSearchString("blah");
        marker.setNodeLabel("notMatching");
        marker.addCategory("bla");
        assertFalse(filter.matches(marker));

        marker.addCategory("blah");
        assertTrue(filter.matches(marker));

        marker.setCategoryList(new ArrayList<String>());
        assertFalse(filter.matches(marker));

        marker.addCategory("this has the string 'blah' in it too!");
        assertTrue(filter.matches(marker));

        filter.setSearchString("category: blah");
        marker.setNodeLabel("notMatching");
        marker.setCategoryList(new ArrayList<String>());
        marker.addCategory("bla");
        assertFalse(marker.getCategoryList() + " should contain blah", filter.matches(marker));

        marker.addCategory("blah");
        assertTrue(filter.matches(marker));

        marker.setCategoryList(new ArrayList<String>());
        assertFalse(filter.matches(marker));

        marker.addCategory("this has the string 'blah' in it too!");
        assertTrue(filter.matches(marker));
    }

