    @Test
    public void testAutocompleteKeyboardNavigation() throws Exception {
        // autocomplete shouldn't do anything even if we down-arrow, since we haven't started searching yet
        typeCharacter(m_searchManager, (char)KeyCodes.KEY_DOWN);
        m_searchManager.updateMatchCount(100);
        assertEquals(State.NOT_SEARCHING, m_searchManager.getState());
        assertEquals(false, m_searchManager.isAutocompleteVisible());
        assertEquals(false, m_searchManager.isAutocompleteFocused());
        assertEquals(true, m_searchManager.isInputFocused());

        // start typing
        typeCharacter(m_searchManager, 'a');
        m_searchManager.updateMatchCount(15);
        assertEquals(State.SEARCHING_AUTOCOMPLETE_VISIBLE, m_searchManager.getState());
        assertEquals(true, m_searchManager.isAutocompleteVisible());
        assertEquals(false, m_searchManager.isAutocompleteFocused());
        assertEquals(true, m_searchManager.isInputFocused());

        // hit down-arrow
        typeCharacter(m_searchManager, (char)KeyCodes.KEY_DOWN);
        m_searchManager.updateMatchCount(15);
        assertEquals(State.SEARCHING_AUTOCOMPLETE_ACTIVE, m_searchManager.getState());
        assertEquals(true, m_searchManager.isAutocompleteVisible());
        assertEquals(true, m_searchManager.isAutocompleteFocused());
        assertEquals(false, m_searchManager.isInputFocused());

        // hit enter
        hitEnterInInput(m_searchManager);
        m_searchManager.updateMatchCount(15);
        assertEquals(State.SEARCHING_FINISHED, m_searchManager.getState());
        assertEquals(false, m_searchManager.isAutocompleteVisible());
        assertEquals(false, m_searchManager.isAutocompleteFocused());
        assertEquals(true, m_searchManager.isInputFocused());
    }

