    @Test
    public void testBackspace() throws Exception {
        typeCharacter(m_searchManager, 'a');
        m_searchManager.updateMatchCount(20);
        typeCharacter(m_searchManager, 'b');
        m_searchManager.updateMatchCount(15);
        typeCharacter(m_searchManager, 'c');
        m_searchManager.updateMatchCount(12);
        typeCharacter(m_searchManager, 'd');
        m_searchManager.updateMatchCount(10);
        typeCharacter(m_searchManager, 'e');
        m_searchManager.updateMatchCount(1);
        typeCharacter(m_searchManager, (char)KeyCodes.KEY_BACKSPACE);
        m_searchManager.updateMatchCount(10);
        assertEquals(4, m_valueItem.getValue().length());
        assertEquals(State.SEARCHING_AUTOCOMPLETE_VISIBLE, m_searchManager.getState());
        assertEquals(true, m_searchManager.isAutocompleteVisible());
        assertEquals(false, m_searchManager.isAutocompleteFocused());
        assertEquals(true, m_searchManager.isInputFocused());
        
        typeCharacter(m_searchManager, (char)KeyCodes.KEY_BACKSPACE);
        m_searchManager.updateMatchCount(12);
        typeCharacter(m_searchManager, (char)KeyCodes.KEY_BACKSPACE);
        m_searchManager.updateMatchCount(15);
        typeCharacter(m_searchManager, (char)KeyCodes.KEY_BACKSPACE);
        m_searchManager.updateMatchCount(20);
        typeCharacter(m_searchManager, (char)KeyCodes.KEY_BACKSPACE);
        m_searchManager.updateMatchCount(100);
        assertEquals(0, m_valueItem.getValue().length());
        assertEquals(State.NOT_SEARCHING, m_searchManager.getState());
        assertEquals(false, m_searchManager.isAutocompleteVisible());
        assertEquals(false, m_searchManager.isAutocompleteFocused());
        assertEquals(true, m_searchManager.isInputFocused());
    }

