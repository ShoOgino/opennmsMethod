        public synchronized void update(final boolean dirty) {
            // Mark as dirty if requested
            this.dirty |= dirty;

            // If still not marked as dirty, there is nothing to do
            if (!this.dirty) {
                return;
            }

            // Check if it's time to refresh
            final Instant now = Instant.now();
            if (this.lastRefresh.isAfter(now.minusMillis(PerspectiveServiceTracker.REFRESH_RATE_LIMIT_MS))) {
                return;
            }

            // Refresh the service list
            PerspectiveServiceTracker.this.sessionUtils.withTransaction(() -> {
                final Map<ServicePerspectiveRef, ServicePerspective> candidates = PerspectiveServiceTracker.this.applicationDao.getServicePerspectives().stream()
                                                                                                                               .collect(Collectors.toMap(ServicePerspectiveRef::from, Function.identity()));

                final Set<ServicePerspectiveRef> current = Sets.newHashSet(this.active);
                final Set<ServicePerspectiveRef> additions = Sets.difference(candidates.keySet(), current);
                final Set<ServicePerspectiveRef> removals = Sets.difference(current, candidates.keySet());

                for (final ServicePerspectiveRef servicePerspective : additions) {
                    try {
                        this.listener.onServicePerspectiveAdded(servicePerspective, candidates.get(servicePerspective));
                        this.active.add(servicePerspective);
                    } catch (final Exception e) {
                        LOG.error("Adding service failed", e);
                    }
                }

                for (final ServicePerspectiveRef servicePerspective : removals) {
                    try {
                        this.listener.onServicePerspectiveRemoved(servicePerspective);
                        this.active.remove(servicePerspective);
                    } catch (final Exception e) {
                        LOG.error("Adding service failed", e);
                    }
                }
            });

            // Not dirty anymore after a successful refresh
            this.lastRefresh = now;
            this.dirty = false;
        }

