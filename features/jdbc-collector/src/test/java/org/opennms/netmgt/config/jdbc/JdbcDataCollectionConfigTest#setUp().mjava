    @Before
    public void setUp() throws Exception {
        fa = new FileAnticipator();
        
        // Mock up a JdbcDataCollectionConfig class.      
        JdbcRrd jdbcRrd = new JdbcRrd();
        jdbcRrd.addRra("RRA:AVERAGE:0.5:1:2016");
        jdbcRrd.addRra("RRA:AVERAGE:0.5:12:1488");
        jdbcRrd.addRra("RRA:AVERAGE:0.5:288:366");
        jdbcRrd.addRra("RRA:MAX:0.5:288:366");
        jdbcRrd.addRra("RRA:MIN:0.5:288:366");
        jdbcRrd.setStep(300);
        
        JdbcStatement jdbcStatement = new JdbcStatement();
        jdbcStatement.setJdbcQuery(
        "SELECT COUNT(eventid) as EventCount\n"+
        "FROM events\n"+
        "WHERE eventtime\n"+ 
        "BETWEEN (CURRENT_TIMESTAMP - INTERVAL '1 day')\n"+ 
        "AND CURRENT_TIMESTAMP;");
        
        JdbcColumn column = new JdbcColumn();
        column.setColumnName("eventCount");
        column.setDataSourceName("EventCount");
        column.setDataType("GAUGE");
        column.setAlias("eventCount");
        
        JdbcQuery jdbcQuery = new JdbcQuery();
        jdbcQuery.setQueryName("opennmsQuery");
        jdbcQuery.setJdbcStatement(jdbcStatement);
        jdbcQuery.addJdbcColumn(column);
        jdbcQuery.setRecheckInterval(3600000);
        jdbcQuery.setIfType("all");
        jdbcQuery.setResourceType("node");
        
        JdbcDataCollection jdbcDataCollection = new JdbcDataCollection();
        jdbcDataCollection.setJdbcRrd(jdbcRrd);
        jdbcDataCollection.addQuery(jdbcQuery);
        jdbcDataCollection.setName("default");
        
        jdcc = new JdbcDataCollectionConfig();
        jdcc.addDataCollection(jdbcDataCollection);
        jdcc.setRrdRepository("/opt/opennms/share/rrd/snmp/");
        
        XMLUnit.setIgnoreWhitespace(true);
        XMLUnit.setIgnoreAttributeOrder(true);
        XMLUnit.setNormalize(true);
    }

