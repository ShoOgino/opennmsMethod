    public static <T> T unmarshalWithTranslatedExceptions(Class<T> clazz, Resource resource) {
        // TODO It might be useful to add code to test for readability on real files; the code below is from DefaultManualProvisioningDao - dj@opennms.org 
//        if (!importFile.canRead()) {
//            throw new PermissionDeniedDataAccessException("Unable to read file "+importFile, null);
//        }

        InputStream in;
        try {
            in = resource.getInputStream();
        } catch (IOException e) {
            throw JAXB_EXCEPTION_TRANSLATOR.translate("opening XML configuration file for resource '" + resource + "'", e);
        }
    
        try {
            InputSource source = new InputSource(in);
            try {
                source.setSystemId(resource.getURL().toString());
            } catch (Throwable t) {
                /*
                 * resource.getURL() might throw an IOException
                 * (or maybe a DataAccessException, since it's a
                 * RuntimeException), indicating that the resource can't be
                 * represented as a URL.  We don't really care so much--we'll
                 * only lose the ability for Castor to include the resource URL
                 * in error messages and for it to directly resolve relative
                 * URLs (which we don't currently use), so we just ignore it.
                 */
            }
            return unmarshal(clazz, source);
        } catch (JAXBException e) {
            throw JAXB_EXCEPTION_TRANSLATOR.translate("unmarshalling XML file for resource '" + resource + "'", e);
        } finally {
            IOUtils.closeQuietly(in);
        }
    }

