    private Version getServerVersion() throws IOException {
        final Ping ping = new Ping.Builder().build();
        final JestResult result = client.execute(ping);
        if (!result.isSucceeded()) {
            throw new IllegalStateException("Ping failed. Template '" + templateName + "' will not be persisted. Reason: " + result.getErrorMessage());
        }

        final JsonObject responseJson = result.getJsonObject();
        final JsonObject versionDetails = responseJson.getAsJsonObject("version");
        if (versionDetails == null) {
            throw new IllegalStateException("Ping response does not contain version: " + responseJson);
        }
        final JsonElement versionEl = versionDetails.get("number");
        if (versionEl == null) {
            throw new IllegalStateException("Ping response does not contain version number: " + responseJson);
        }
        final String versionNumber = versionEl.getAsString();
        return Version.fromVersionString(versionNumber);
    }

