    public JsonObject merge(final JsonObject template, final IndexSettings indexSettings) {
        if (indexSettings != null && !indexSettings.isEmpty()) {
            addMissingProperties(template);

            // Prepend the index prefix to the template pattern
            if (!Strings.isNullOrEmpty(indexSettings.getIndexPrefix())) {
                JsonArray indexPatterns = template.getAsJsonArray("index_patterns");
                if (indexPatterns == null) {
                    indexPatterns = new JsonArray();
                    indexPatterns.add(indexSettings.getIndexPrefix()+ "*");
                    template.add("index_patterns", indexPatterns);
                } else {
                    for (int i = 0; i < indexPatterns.size(); i++) {
                        final String newPattern = indexSettings.getIndexPrefix() + indexPatterns.get(i).getAsString();
                        indexPatterns.set(i, new JsonPrimitive(newPattern));
                    }
                }
                template.add("index_patterns", indexPatterns);
            }

            final JsonObject indexObject = template.get(SETTINGS_KEY).getAsJsonObject().get(INDEX_KEY).getAsJsonObject();
            if (indexSettings.getNumberOfShards() != null) {
                indexObject.addProperty("number_of_shards", indexSettings.getNumberOfShards());
            }
            if (indexSettings.getNumberOfReplicas() != null) {
                indexObject.addProperty("number_of_replicas", indexSettings.getNumberOfReplicas());
            }
            if (indexSettings.getRefreshInterval() != null) {
                indexObject.addProperty("refresh_interval", indexSettings.getRefreshInterval());
            }
            if (indexSettings.getRoutingPartitionSize() != null) {
                indexObject.addProperty("routing_partition_size", indexSettings.getRoutingPartitionSize());
            }
        }
        return template;
    }

