    @Test
    public void verifyParsing() {
        final Hashtable<String, Object> table = new Hashtable<>();
        // Valid
        table.put("192.168.0.1:9200", "ulf:ulf");
        table.put("http://192.168.0.2:9200", "ulf:ulf2");
        table.put("https://192.168.0.3:9300", "ulf:ulf3");

        // Invalid
        table.put("http://192.168.0.1:x", "ulf:ulf");
        table.put("192.168.0.1", "ulf");

        // Parse
        final CredentialsParser parser = new CredentialsParser();
        final List<CredentialsDTO> credentials = parser.parse(table);

        // Verify
        assertThat(credentials.size(), is(3));
        assertThat(credentials, hasItems(
                new CredentialsDTO(new AuthScope("192.168.0.1", 9200), new UsernamePasswordCredentials("ulf", "ulf")),
                new CredentialsDTO(new AuthScope("192.168.0.2", 9200), new UsernamePasswordCredentials("ulf", "ulf2")),
                new CredentialsDTO(new AuthScope("192.168.0.3", 9300), new UsernamePasswordCredentials("ulf", "ulf3"))
        ));
    }

