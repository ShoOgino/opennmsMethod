    @Test
    public void indexesForTimeRangeThatBordersYears() throws ParseException {

        Check.strategy(IndexStrategy.HOURLY)
                .from("2018-01-01 00:03").to("2018-01-01 02:03")
                .expected("prefix-2018-01-01-00"
                        , "prefix-2018-01-01-01"
                        , "prefix-2018-01-01-02")
                .check();

        Check.strategy(IndexStrategy.HOURLY)
                .from("2018-12-31 20:03").to("2018-12-31 23:03")
                .expected("prefix-2018-12-31-20"
                        , "prefix-2018-12-31-21"
                        , "prefix-2018-12-31-22"
                        , "prefix-2018-12-31-23")
                .check();

        Check.strategy(IndexStrategy.DAILY)
                .from("2018-01-01 01:00").to("2018-01-03 02:03")
                .expected("prefix-2018-01-01"
                        , "prefix-2018-01-02"
                        , "prefix-2018-01-03")
                .check();

        Check.strategy(IndexStrategy.DAILY)
                .from("2018-12-30 21:00").to("2018-12-31 22:03")
                .expected("prefix-2018-12-30"
                        , "prefix-2018-12-31")
                .check();

        Check.strategy(IndexStrategy.MONTHLY)
                .from("2018-01-01 01:00").to("2018-03-03 02:03")
                .expected("prefix-2018-01"
                        , "prefix-2018-02"
                        , "prefix-2018-03")
                .check();

        Check.strategy(IndexStrategy.MONTHLY)
                .from("2018-11-29 21:00").to("2018-12-30 22:03")
                .expected("prefix-2018-11"
                        , "prefix-2018-12")
                .check();

        Check.strategy(IndexStrategy.YEARLY)
                .from("2016-02-03 12:00").to("2018-02-04 15:00")
                .expected("prefix-2016"
                        , "prefix-2017"
                        , "prefix-2018")
                .check();
    }

