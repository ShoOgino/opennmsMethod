	private static PollerFrontEnd getPollerFrontEnd(AbstractApplicationContext context) {
		PollerFrontEnd frontEnd = (PollerFrontEnd) context.getBean("pollerFrontEnd");

		frontEnd.addPropertyChangeListener(new PropertyChangeListener() {

			private boolean shouldExit(PropertyChangeEvent e) {
				LOG.info("shouldExit: received property change event for property: {}; oldvalue: {}; newvalue: {}", e.getPropertyName(), e.getOldValue(), e.getNewValue());
				String propName = e.getPropertyName();
				Object newValue = e.getNewValue();

				// if exitNecessary becomes true.. then return true
				if ("exitNecessary".equals(propName) && Boolean.TRUE.equals(newValue)) {
					LOG.info("shouldExit: Exiting because exitNecessary is TRUE");
					return true;
				}

				// if started becomes false the we should exit
				if ("started".equals(propName) && Boolean.FALSE.equals(newValue)) {
					LOG.info("shouldExit: Exiting because started is now false");
					return true;
				}

				LOG.info("shouldExit: not exiting");
				return false;
			}

			@Override
			public void propertyChange(PropertyChangeEvent e) {
				if (!m_shuttingDown && shouldExit(e)) {
					System.exit(10);
				}
			}
		});

		return frontEnd;
	}

