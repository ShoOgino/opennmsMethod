    @Parameters
    public static Collection<Object[]> data() throws ParseException {
        CollectionAgent collectionAgent = mock(CollectionAgent.class);
        NodeLevelResource nodeLevelResource = new NodeLevelResource(1);
        InterfaceLevelResource interfaceLevelResource = new InterfaceLevelResource(nodeLevelResource, "eth0");

        ResourceType rt = mock(ResourceType.class, RETURNS_DEEP_STUBS);
        when(rt.getName()).thenReturn("Charles");
        when(rt.getStorageStrategy().getClazz()).thenReturn(MockStorageStrategy.class.getCanonicalName());
        when(rt.getPersistenceSelectorStrategy().getClazz()).thenReturn(MockPersistenceSelectorStrategy.class.getCanonicalName());

        GenericTypeResource genericTypeResource = new GenericTypeResource(nodeLevelResource, rt, "idx");
        ResourceTypeMapper.getInstance().setResourceTypeMapper((name) -> rt);

        // For complete coverage make sure that there is at least one attribute
        // for every different resource type, and that every different type
        // of attribute is represented at least once
        CollectionSet collectionSet = new CollectionSetBuilder(collectionAgent)
                .withTimestamp(new Date(0))
                .withNumericAttribute(nodeLevelResource, "ucd-sysstat", "CpuRawIdle", 99, AttributeType.GAUGE)
                .withNumericAttribute(interfaceLevelResource, "mib2-X-interfaces", "ifHCInOctets", 1001, AttributeType.COUNTER)
                .withStringAttribute(interfaceLevelResource, "mib2-X-interfaces", "ifDescr", "LAN")
                .withIdentifiedNumericAttribute(genericTypeResource, "net-snmp-disk", "ns-dskTotal", 1024, AttributeType.GAUGE, "some-oid")
                .build();

        return Arrays.asList(new Object[][] {
            {
                collectionSet,
                "<collection-set status=\"SUCCEEDED\" timestamp=\"" + StringUtils.iso8601OffsetString(new Date(0), ZoneId.systemDefault(), ChronoUnit.SECONDS) + "\">\n" + 
                "   <agent type=\"0\" store-by-fs=\"false\" node-id=\"0\" sys-up-time=\"0\"/>\n" +
                "   <collection-resource>\n" +
                "      <node-level-resource node-id=\"1\"/>\n" +
                "      <numeric-attribute group=\"ucd-sysstat\" name=\"CpuRawIdle\" type=\"gauge\" value=\"99\"/>\n" +
                "   </collection-resource>\n" +
                "   <collection-resource>\n" +
                "      <interface-level-resource if-name=\"eth0\">\n" +
                "         <node-level-resource node-id=\"1\"/>\n" +
                "      </interface-level-resource>\n" +
                "      <numeric-attribute group=\"mib2-X-interfaces\" name=\"ifHCInOctets\" type=\"counter\" value=\"1001\"/>\n" +
                "      <string-attribute group=\"mib2-X-interfaces\" name=\"ifDescr\" type=\"string\" value=\"LAN\"/>\n" +
                "   </collection-resource>\n" +
                "   <collection-resource>\n" +
                "      <generic-type-resource name=\"Charles\" instance=\"idx\">\n" +
                "         <node-level-resource node-id=\"1\"/>\n" +
                "      </generic-type-resource>\n" +
                "      <numeric-attribute group=\"net-snmp-disk\" name=\"ns-dskTotal\" type=\"gauge\" identifier=\"some-oid\" value=\"1024\"/>\n" +
                "   </collection-resource>\n" +
                "</collection-set>"
            }
        });
    }

