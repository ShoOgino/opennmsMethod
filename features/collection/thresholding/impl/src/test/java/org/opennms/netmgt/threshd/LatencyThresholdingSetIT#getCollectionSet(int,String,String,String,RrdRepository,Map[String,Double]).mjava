    private CollectionSet getCollectionSet(int nodeId, String ipAddr, String svcName, String location, RrdRepository rrdRepository, Map<String, Double> attributes) {
        String ifLabel = "";
        Map<String, String> ifInfo = new HashMap<>();
        if (m_ifLabelDao != null) {
            ifLabel = m_ifLabelDao.getIfLabel(nodeId, InetAddressUtils.addr(ipAddr));
            if (ifLabel != null) {
                ifInfo.putAll(m_ifLabelDao.getInterfaceInfoFromIfLabel(nodeId, ifLabel));
            }
        }
        LatencyCollectionResource latencyResource = new LatencyCollectionResource(svcName, ipAddr, location);
        for (final Entry<String, Double> entry : attributes.entrySet()) {
            final String ds = entry.getKey();
            final Number value = entry.getValue() != null ? entry.getValue() : Double.NaN;
            LatencyCollectionAttributeType latencyType = new LatencyCollectionAttributeType(rrdRepository.getRrdBaseDir().getName(), ds);
            latencyResource.addAttribute(new LatencyCollectionAttribute(latencyResource, latencyType, ds, value.doubleValue()));
        }

        SingleResourceCollectionSet collectionSet = new SingleResourceCollectionSet(latencyResource, new Date());
        collectionSet.setStatus(CollectionStatus.SUCCEEDED);

        return collectionSet;
    }

