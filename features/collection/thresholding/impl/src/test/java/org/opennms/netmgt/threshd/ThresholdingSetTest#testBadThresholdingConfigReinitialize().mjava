    @Test
    public void testBadThresholdingConfigReinitialize() throws Exception {
        final URL resourceUri = getClass().getResource("testBadThresholdingConfigReinitialize");
        String opennmsHome = new File(resourceUri.getPath()).toPath().toString();
        final Path goodXml = Paths.get(opennmsHome, "etc", "good-thresholds.xml");
        final Path badXml = Paths.get(opennmsHome, "etc", "bad-thresholds.xml");
        final Path targetXml = Paths.get(opennmsHome,  "etc", "thresholds.xml");

        if (targetXml.toFile().exists()) {
            Files.delete(targetXml);
        }
        Files.copy(goodXml, targetXml);

        System.setProperty("opennms.home", opennmsHome);
        PollOutagesConfigFactory.init();
        final ThresholdingSetImpl set = new ThresholdingSetImpl(1, "127.0.0.1", "SNMP", new RrdRepository(), null, null, null, MockSession.getSession());

        LoggingEvent[] events = MockLogAppender.getEventsGreaterOrEqual(Level.WARN);
        assertEquals("There should be no warnings or higher after initializing with a good config.", 0, events.length);

        // there are no outages configured for the node
        assertFalse(set.isNodeInOutage());
        // the config is not empty
        assertTrue(set.hasThresholds());

        /* thresholding config has changed, reinitialize */
        Files.delete(targetXml);
        Files.copy(badXml, targetXml);
        set.reinitialize(true);

        // there is no information about the node, so it should say it does not have an outage
        assertFalse(set.isNodeInOutage());
        // the config is not empty
        assertTrue(set.hasThresholds());

        events = MockLogAppender.getEventsGreaterOrEqual(Level.WARN);
        assertEquals("There should be one error after reinitializing with a bad config.", 1, events.length);
        assertEquals("It should have an error-level log message.", Level.ERROR, events[0].getLevel());
        assertTrue("It should say it is reverting to previous configuration.", events[0].getMessage().contains("Reverting to previous"));
    }

