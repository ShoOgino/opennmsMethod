    public void testThresholdEntityRequiredDataSources() throws Exception {
        ThresholdEntity entity=new ThresholdEntity(mock(EntityScopeProvider.class));
        expression.setExpression("(hrStorageSize-hrStorageUsed)*hrStorageAllocationUnits");
        BaseThresholdDefConfigWrapper wrapper=BaseThresholdDefConfigWrapper.getConfigWrapper(expression);
        assertEquals(3, wrapper.getRequiredDatasources().size());
        for (String ds : new String[] { "hrStorageSize", "hrStorageUsed", "hrStorageAllocationUnits" }) {
            assertTrue("Could not find expected variable: " + ds, wrapper.getRequiredDatasources().contains(ds));
        }

        entity.addThreshold(wrapper, MockSession.getSession());
        Collection<String> dataSources=entity.getRequiredDatasources();
        final StringBuilder dsStringBuffer = new StringBuilder();
        for (String dataSource : dataSources) {
            dsStringBuffer.append(dataSource).append(" ");
        }
        String dsString = dsStringBuffer.toString().trim();
        
        assertTrue("Required data sources should contain hrStorageSize: " + dsString, dataSources.contains("hrStorageSize"));
        assertTrue("Required data sources should contain hrStorageUsed: " + dsString, dataSources.contains("hrStorageUsed"));
        assertTrue("Required data sources should contain hrStorageAllocationUnits: " + dsString, dataSources.contains("hrStorageAllocationUnits"));
    }

