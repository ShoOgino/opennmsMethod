    @SuppressWarnings("unchecked")
    private void fetchState() {
        // Fetch the state to make sure we have the latest if we are thresholding in a distributed environment or if
        // this is the first time we are evaluating this evaluator
        //
        // If both of those conditions are false, then we must be on a standalone instance of OpenNMS and have the state
        // already in memory so there is no need to fetch it
        if (!isDistributed() && !firstEvaluation) {
            return;
        }

        try {
            Long lastKnownUpdate = lastUpdatedCache.get(key);

            // If we don't have a record of when this was last updated locally, get it from the store
            if (lastKnownUpdate == null) {
                kvStore.get(key, THRESHOLDING_KV_CONTEXT).ifPresent(v -> state = v);
            } else {
                // Otherwise get it from the store only if our record is stale
                kvStore.getIfStale(key, THRESHOLDING_KV_CONTEXT, lastKnownUpdate)
                        .ifPresent(o -> o.ifPresent(v -> state = v));
            }
        } catch (RuntimeException e) {
            RATE_LIMITED_LOGGER.warn("Failed to retrieve state for threshold {}", key, e);
        }
    }

