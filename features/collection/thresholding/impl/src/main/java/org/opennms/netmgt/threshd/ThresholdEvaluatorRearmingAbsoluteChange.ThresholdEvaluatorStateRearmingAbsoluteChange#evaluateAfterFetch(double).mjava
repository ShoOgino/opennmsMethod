        @Override
        public Status evaluateAfterFetch(double dsValue) {
            try {
                if (!Double.valueOf(getPreviousTriggeringSample()).isNaN()) {
                    setTriggerCount(getTriggerCount() + 1);
                    if (!wasTriggered(dsValue) && (getTriggerCount() >= getThresholdConfig().getTrigger())) {
                        setPreviousTriggeringSample(Double.NaN);
                        setTriggerCount(0);
                        LOG.debug("{} threshold rearmed, sample value={}", TYPE, dsValue);
                        return Status.RE_ARMED;
                    }
                } else if (wasTriggered(dsValue)) {
                    setPreviousTriggeringSample(getLastSample());
                    setTriggerCount(0);
                    LOG.debug("{} threshold triggered, sample value={}", TYPE, dsValue);
                    return Status.TRIGGERED;
                }
            } finally {
                setLastSample(dsValue);
            }

            return Status.NO_CHANGE;
        }

