        @Override
        public Status evaluateAfterFetch(double dsValue, ThresholdValues thresholdValues) {
            if(!Double.isNaN(getLastSample())) {
                Double change = thresholdValues != null && thresholdValues.getThresholdValue() != null ?
                        thresholdValues.getThresholdValue() : m_thresholdConfig.getValue();
                if(change == null) {
                    return Status.NO_CHANGE;
                }
                double threshold = getLastSample()+ change;

                if (change < 0.0) {
                    //Negative change; care if the value is *below* the threshold
                    if (dsValue <= threshold) {
                        setPreviousTriggeringSample(getLastSample());
                        setLastSample(dsValue);
                        LOG.debug("evaluate: absolute negative change threshold triggered");
                        return Status.TRIGGERED;
                    }
                } else {
                    //Positive change; care if the current value is *above* the threshold
                    if (dsValue >= threshold) {
                        setPreviousTriggeringSample(getLastSample());
                        setLastSample(dsValue);
                        LOG.debug("evaluate: absolute positive change threshold triggered");
                        return Status.TRIGGERED;
                    }
                }
            }
            setLastSample(dsValue);
            return Status.NO_CHANGE;
        }

