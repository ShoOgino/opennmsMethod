    private ThresholdGroup get(String name, ThresholdGroup group, ThresholdingSession thresholdingSession) {
        boolean merge = group != null;
        ThresholdGroup newGroup = new ThresholdGroup(name);

        File rrdRepository = new File(m_thresholdingDao.getRrdRepository(name));
        newGroup.setRrdRepository(rrdRepository);

        ThresholdResourceType nodeType = getThresholdResourceType(name, "node", merge ? group.getNodeResourceType() : null, thresholdingSession);
        newGroup.setNodeResourceType(nodeType);

        ThresholdResourceType ifType = getThresholdResourceType(name, "if", merge ? group.getIfResourceType() : null, thresholdingSession);
        newGroup.setIfResourceType(ifType);

        for (Basethresholddef thresh : m_thresholdingDao.getThresholds(name)) {
            final String id = thresh.getDsType();
            if (!(id.equals("if") || id.equals("node") || newGroup.getGenericResourceTypeMap().containsKey(id))) {
                ThresholdResourceType genericType = getThresholdResourceType(name, id, merge ? group.getGenericResourceTypeMap().get(id) : null, thresholdingSession);
                if (genericType.getThresholdMap().size() > 0) {
                    LOG.info("Adding {}::{} with {} elements", name, id, genericType.getThresholdMap().size());
                    newGroup.getGenericResourceTypeMap().put(id, genericType);
                }
            }
        }

        return newGroup;
    }

