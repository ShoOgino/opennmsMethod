        @Override
        public void run() {
            try {
                while (true) {
                    boolean drain = false;
                    long sentReadings = 0;
                    Collection<PerformanceDataReading> sendMe = new ArrayList<>();
                    if (m_myQueue.drainTo(sendMe) > 0) {
                        drain = true;
                        sentReadings = sendMe.size();
                        RrdOutputSocket socket = new RrdOutputSocket(m_strategy.getHost(), m_strategy.getPort());
                        for (PerformanceDataReading reading : sendMe) {
                            socket.addData(reading.getFilename(), reading.getOwner(), reading.getTimestamp(), reading.getDblValues(), reading.getStrValues());
                        }
                        socket.writeData();
                    } else {
                        Thread.sleep(SLEEP_TIME);
                    }
                    if (LOGGING) {
                        countDrainStats(drain, sentReadings);
                    }
                }
            } catch (InterruptedException e) {
                LOG.warn("InterruptedException caught in QueuingTcpOutputStrategy$ConsumerThread, closing thread");
            } catch (Throwable e) {
                LOG.error("Unexpected exception caught in QueuingTcpOutputStrategy$ConsumerThread, closing thread", e);
            }
        }

