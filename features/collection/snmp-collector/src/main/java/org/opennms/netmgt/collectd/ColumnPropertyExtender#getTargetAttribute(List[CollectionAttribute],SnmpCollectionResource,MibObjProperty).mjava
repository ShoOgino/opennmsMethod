    @Override
    public SnmpAttribute getTargetAttribute(List<CollectionAttribute> sourceAttributes, SnmpCollectionResource targetResource, MibObjProperty property) {
        final String sourceType = property.getParameterValue(SOURCE_TYPE);
        if (StringUtils.isBlank(sourceType)) {
            LOG.warn("Cannot execute the Column property extender because: missing parameter {}", SOURCE_TYPE);
            return null;
        }

        final String sourceAlias = property.getParameterValue(SOURCE_ALIAS);
        if (StringUtils.isBlank(sourceAlias)) {
            LOG.warn("Cannot execute the Column property extender because: missing parameter {}", SOURCE_ALIAS);
            return null;
        }

        final String indexColumn = property.getParameterValue(INDEX_COLUMN);
        if (StringUtils.isBlank(indexColumn)) {
            LOG.warn("Cannot execute the Column property extender because: missing parameter {}", INDEX_COLUMN);
            return null;
        }

        String targetIndex = null;
        Optional<CollectionAttribute> target = null;

        for(AttributeGroup group:targetResource.getGroups()) {
            for (CollectionAttribute attribute : group.getAttributes()) {
                try {
                    if (indexColumn.equals(attribute.getName())) {
                        targetIndex = attribute.getStringValue();
                    }
                } catch (Exception e) {
                    LOG.error("Error: " + e, e);
                }
            }
        }

        if (targetIndex != null) {
            final String index = targetIndex;
            target = sourceAttributes.stream().filter(a -> matches(sourceType, sourceAlias, index, a)).findFirst();
        }
        if (target != null && target.isPresent()) {
            AttributeGroupType groupType = targetResource.getGroupType(property.getGroupName());
            if (groupType != null) {
                MibPropertyAttributeType type = new MibPropertyAttributeType(targetResource.getResourceType(), property, groupType);
                SnmpValue value = SnmpUtils.getValueFactory().getOctetString(target.get().getStringValue().getBytes());
                return new SnmpAttribute(targetResource, type, value);
            }
        }

        return null;
    }

