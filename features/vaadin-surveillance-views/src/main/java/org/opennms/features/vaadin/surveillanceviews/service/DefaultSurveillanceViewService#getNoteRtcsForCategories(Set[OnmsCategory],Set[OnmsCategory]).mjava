    @Override
    public List<NodeRtc> getNoteRtcsForCategories(Set<OnmsCategory> rowCategories, Set<OnmsCategory> colCategories) {
        List<OnmsNode> nodes = retrieveNodesForCategories(rowCategories, colCategories);

        CriteriaBuilder outageCriteriaBuilder = new CriteriaBuilder(OnmsOutage.class);

        outageCriteriaBuilder.alias("monitoredService", "monitoredService", Alias.JoinType.INNER_JOIN);
        outageCriteriaBuilder.alias("monitoredService.ipInterface", "ipInterface", Alias.JoinType.INNER_JOIN);
        outageCriteriaBuilder.alias("monitoredService.ipInterface.node", "node", Alias.JoinType.INNER_JOIN);
        outageCriteriaBuilder.eq("monitoredService.status", "A");
        outageCriteriaBuilder.ne("ipInterface.isManaged", "D");
        outageCriteriaBuilder.ne("node.type", "D");

        CriteriaBuilder serviceCriteriaBuilder = new CriteriaBuilder(OnmsMonitoredService.class);

        serviceCriteriaBuilder.alias("ipInterface", "ipInterface", Alias.JoinType.INNER_JOIN);
        serviceCriteriaBuilder.alias("ipInterface.node", "node", Alias.JoinType.INNER_JOIN);
        serviceCriteriaBuilder.alias("serviceType", "serviceType", Alias.JoinType.INNER_JOIN);
        serviceCriteriaBuilder.alias("currentOutages", "currentOutages", Alias.JoinType.INNER_JOIN);
        serviceCriteriaBuilder.eq("status", "A");
        serviceCriteriaBuilder.ne("ipInterface.isManaged", "D");
        serviceCriteriaBuilder.ne("node.type", "D");

        if (nodes == null || nodes.isEmpty()) {
            return new ArrayList<>();
        } else {
            serviceCriteriaBuilder.in("ipInterface.node", nodes);
            return getNodeListForCriteria(serviceCriteriaBuilder.toCriteria(), outageCriteriaBuilder.toCriteria());
        }
    }

