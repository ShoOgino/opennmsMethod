    @Override
    public List<OnmsNotification> getNotificationsForCategories(final Set<OnmsCategory> rowCategories, final Set<OnmsCategory> colCategories, final Map<OnmsNotification, String> customSeverity) {
        return m_transactionOperations.execute(new TransactionCallback<List<OnmsNotification>>() {
            @Override
            public List<OnmsNotification> doInTransaction(TransactionStatus transactionStatus) {
                List<OnmsNode> nodes = getNodesForCategories(rowCategories, colCategories);

                Date fifteenMinutesAgo = new Date(System.currentTimeMillis() - (15 * 60 * 1000));
                Date oneWeekAgo = new Date(System.currentTimeMillis() - (7 * 24 * 60 * 60 * 1000));

                customSeverity.clear();

                if (nodes != null && nodes.size() > 0) {
                    List<OnmsNotification> notifications = new ArrayList<OnmsNotification>();
                    notifications.addAll(getNotificationsWithCriterias(customSeverity, nodes, "Critical", Restrictions.isNull("respondTime"), Restrictions.le("pageTime", fifteenMinutesAgo)));
                    notifications.addAll(getNotificationsWithCriterias(customSeverity, nodes, "Minor", Restrictions.isNull("respondTime"), Restrictions.gt("pageTime", fifteenMinutesAgo)));
                    notifications.addAll(getNotificationsWithCriterias(customSeverity, nodes, "Normal", Restrictions.isNotNull("respondTime"), Restrictions.gt("pageTime", oneWeekAgo)));
                    return notifications;
                }

                return new ArrayList<>();
            }
        });
    }

