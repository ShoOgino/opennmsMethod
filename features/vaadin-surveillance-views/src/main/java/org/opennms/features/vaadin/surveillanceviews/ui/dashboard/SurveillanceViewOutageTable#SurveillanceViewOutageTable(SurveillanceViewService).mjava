    public SurveillanceViewOutageTable(SurveillanceViewService surveillanceViewService) {
        super("Outages", surveillanceViewService);

        setContainerDataSource(m_beanItemContainer);

        addStyleName("surveillance-view");

/*
        addGeneratedColumn("node", new ColumnGenerator() {
            @Override
            public Object generateCell(Table table, final Object itemId, Object columnId) {
                Label label = new Label(((NodeRtc) itemId).getNode().getLabel());
                label.setSizeFull();
                label.setPrimaryStyleName("white");
                return label;
            }
        });
*/

        addGeneratedColumn("node", new ColumnGenerator() {
            @Override
            public Object generateCell(Table table, Object itemId, Object propertyId) {
                NodeRtc nodeRtc = (NodeRtc) itemId;
                Link link = new Link(nodeRtc.getNode().getLabel(), new ExternalResource("/opennms/element/node.jsp?node=" + nodeRtc.getNode().getNodeId()));
                link.setPrimaryStyleName("surveillance-view");
                link.addStyleName("white");
                return link;
            }
        });


        addGeneratedColumn("currentOutages", new ColumnGenerator() {
            @Override
            public Object generateCell(Table table, final Object itemId, Object columnId) {
                NodeRtc nodeRtc = (NodeRtc) itemId;
                return nodeRtc.getDownServiceCount() + " of " + nodeRtc.getDownServiceCount();
            }
        });

        addGeneratedColumn("availability", new ColumnGenerator() {
            @Override
            public Object generateCell(Table table, final Object itemId, Object columnId) {
                return ((NodeRtc) itemId).getAvailabilityAsString();
            }
        });


        setCellStyleGenerator(new CellStyleGenerator() {
            @Override
            public String getStyle(Table table, Object itemId, Object propertyId) {
                String style = null;
                NodeRtc nodeRtc = (NodeRtc) itemId;
                if (!"node".equals(propertyId)) {
                    if (nodeRtc.getAvailability() == 1.0) {
                        style = "normal-image";
                    } else {
                        style = "critical-image";
                    }
                } else {
                    //style = "white";
                }
                return style;
            }
        });

        setColumnHeader("node", "Node");
        setColumnHeader("currentOutages", "Current Outages");
        setColumnHeader("availability", "24 Hour Availability");

        setVisibleColumns(new Object[]{"node", "currentOutages", "availability"});
    }

