    public SurveillanceViewNotificationTable(SurveillanceViewService surveillanceViewService, boolean enabled) {
        super("Notifications", surveillanceViewService, enabled);

        setContainerDataSource(m_beanItemContainer);

        addStyleName("surveillance-view");

        addGeneratedColumn("node", new ColumnGenerator() {
            @Override
            public Object generateCell(Table table, Object itemId, Object propertyId) {
                OnmsNotification onmsNotification = (OnmsNotification) itemId;
                if (m_enabled) {
                    Link link = new Link(onmsNotification.getNodeLabel(), new ExternalResource("/opennms/element/node.jsp?node=" + onmsNotification.getNodeId()));
                    link.setTargetName("_top");
                    link.setPrimaryStyleName("surveillance-view");
                    link.setEnabled(m_enabled);
                    return link;
                } else {
                    return new Label(onmsNotification.getNodeLabel());
                }
            }
        });

        setCellStyleGenerator(new CellStyleGenerator() {
            @Override
            public String getStyle(final Table source, final Object itemId, final Object propertyId) {
                OnmsNotification onmsNotification = ((OnmsNotification) itemId);
                return m_customSeverity.get(onmsNotification).toLowerCase();
            }
        });

        addGeneratedColumn("icon", new ColumnGenerator() {
            @Override
            public Object generateCell(Table table, Object itemId, Object propertyId) {
                return getClickableIcon("glyphicon glyphicon-bell", new Button.ClickListener() {
                    @Override
                    public void buttonClick(Button.ClickEvent clickEvent) {
                        Notification.show("Notification");
                    }
                });
            }
        });

        setColumnHeader("icon", "");
        setColumnHeader("node", "Node");
        setColumnHeader("serviceType", "Service");
        setColumnHeader("textMsg", "Message");
        setColumnHeader("pageTime", "Sent Time");
        setColumnHeader("answeredBy", "Responder");
        setColumnHeader("respondTime", "Respond Time");

        setVisibleColumns("icon", "node", "serviceType", "textMsg", "pageTime", "answeredBy", "respondTime");
    }

