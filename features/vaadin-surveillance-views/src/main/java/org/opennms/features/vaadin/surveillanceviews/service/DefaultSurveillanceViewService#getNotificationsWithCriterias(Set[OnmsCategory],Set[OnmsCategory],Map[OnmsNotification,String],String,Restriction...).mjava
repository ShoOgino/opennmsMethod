    /**
     * Returns a list of notifications for a given list of nodes.
     *
     * @param rowCategories  the row catgories
     * @param colCategories  the column categories
     * @param customSeverity the custom severity mapping for notifications
     * @param severity       the severity for these nodes
     * @param criterias      the restrictions to use
     * @return the list of notifications
     */
    private List<OnmsNotification> getNotificationsWithCriterias(final Set<OnmsCategory> rowCategories, final Set<OnmsCategory> colCategories, final Map<OnmsNotification, String> customSeverity, final String severity, final Restriction... criterias) {
        CriteriaBuilder criteriaBuilder = new CriteriaBuilder(OnmsNotification.class);

        criteriaBuilder.alias("node", "node");
        criteriaBuilder.sql(createQuery(rowCategories, colCategories));
        criteriaBuilder.ne("node.type", "D");
        criteriaBuilder.orderBy("pageTime", false);

        Criteria myCriteria = criteriaBuilder.toCriteria();

        for (Restriction criteria : criterias) {
            myCriteria.addRestriction(criteria);
        }

        List<OnmsNotification> notifications = m_notificationDao.findMatching(myCriteria);

        for (OnmsNotification onmsNotification : notifications) {
            customSeverity.put(onmsNotification, severity);
        }

        return notifications;
    }

