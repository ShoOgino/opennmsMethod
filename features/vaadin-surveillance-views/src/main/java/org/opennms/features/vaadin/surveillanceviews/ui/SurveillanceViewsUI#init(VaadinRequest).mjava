    /**
     * {@inheritDoc}
     */
    @Override
    protected void init(VaadinRequest request) {
        /**
         * Force the reload of the configuration
         */
        SurveillanceViewProvider.getInstance().load();

        /**
         * create a layout
         */
        VerticalLayout rootLayout = new VerticalLayout();
        rootLayout.setSpacing(true);

        /**
         * check query parameters for viewName, dashboard
         */
        String viewName = request.getParameter("viewName");
        boolean dashboard = request.getParameter("dashboard") != null && "true".equals(request.getParameter("dashboard"));

        /**
         * retrieve the username
         */
        String username = request.getRemoteUser();

        /**
         * now select the right view
         */
        View view;

        if (viewName == null) {
            view = m_surveillanceViewService.selectDefaultViewForUsername(username);
        } else {
            view = SurveillanceViewProvider.getInstance().getView(viewName);
        }

        /**
         * set the poll interval
         */
        setPollInterval(1000);

        /**
         * check for dashboard role
         */
        boolean isDashboardRole = true;

        SecurityContext context = SecurityContextHolder.getContext();

        if ((context != null) && !(context.toString().contains(org.opennms.web.api.Authentication.ROLE_DASHBOARD))) {
            isDashboardRole = false;
        }

        LOG.debug("User {} is in dashboard role? {}", username, isDashboardRole);

        /**
         * now construct the surveillance view/dashboard
         */
        rootLayout.addComponent(new SurveillanceView(view, m_surveillanceViewService, dashboard, !isDashboardRole));

        setContent(rootLayout);

        getUI().getPage().getJavaScript().execute("function receiveMessage(event){\n" +
                "if(event.origin !== window.location.origin){ return; }\n" +
                "\n" +
                "event.source.postMessage( (document.getElementById('surveillance-window').offsetHeight + 17) + 'px', window.location.origin )\n" +
                "}\n" +
                "window.addEventListener(\"message\", receiveMessage, false);");
    }

