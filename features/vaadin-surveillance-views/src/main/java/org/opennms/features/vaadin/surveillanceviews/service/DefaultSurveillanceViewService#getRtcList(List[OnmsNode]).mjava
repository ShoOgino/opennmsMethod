    public List<NodeRtc> getRtcList(List<OnmsNode> nodes) {
        CriteriaBuilder outageCb = new CriteriaBuilder(OnmsOutage.class);

        outageCb.alias("monitoredService", "monitoredService", Alias.JoinType.INNER_JOIN);
        outageCb.alias("monitoredService.ipInterface", "ipInterface", Alias.JoinType.INNER_JOIN);
        outageCb.alias("monitoredService.ipInterface.node", "node", Alias.JoinType.INNER_JOIN);
        outageCb.eq("monitoredService.status", "A");
        outageCb.ne("ipInterface.isManaged", "D");
        outageCb.ne("node.type", "D");

        /*

        System.out.println("--- IN ---");

        for (OnmsNode onmsNode : nodes) {
            System.out.println(onmsNode.getLabel());
        }

        System.out.println(outageCb.toCriteria());

        */

        CriteriaBuilder serviceCb = new CriteriaBuilder(OnmsMonitoredService.class);

        serviceCb.alias("ipInterface", "ipInterface", Alias.JoinType.INNER_JOIN);
        serviceCb.alias("ipInterface.node", "node", Alias.JoinType.INNER_JOIN);
        serviceCb.alias("serviceType", "serviceType", Alias.JoinType.INNER_JOIN);
        serviceCb.alias("currentOutages", "currentOutages", Alias.JoinType.INNER_JOIN);
        // serviceCb.eq("monitoredService.status", "A");
        serviceCb.eq("status", "A");
        serviceCb.ne("ipInterface.isManaged", "D");
        serviceCb.ne("node.type", "D");

        if (nodes == null || nodes.isEmpty()) {
            return new ArrayList<>();
        }

        serviceCb.in("ipInterface.node", nodes);

        return getNodeListForCriteria(serviceCb.toCriteria(), outageCb.toCriteria());
    }

