    /**
     * {@inheritDoc}
     */
    @Override
    public List<OnmsAlarm> getAlarmsForCategories(final Set<OnmsCategory> rowCategories, final Set<OnmsCategory> colCategories) {
        return m_transactionOperations.execute(new TransactionCallback<List<OnmsAlarm>>() {
            @Override
            public List<OnmsAlarm> doInTransaction(TransactionStatus transactionStatus) {
                List<OnmsNode> nodes = getNodesForCategories(rowCategories, colCategories);

                final CriteriaBuilder criteriaBuilder = new CriteriaBuilder(OnmsAlarm.class);

                criteriaBuilder.alias("node", "node");
                criteriaBuilder.alias("lastEvent", "event");
                criteriaBuilder.ne("node.type", "D");
                criteriaBuilder.limit(100);
                criteriaBuilder.distinct();

                if (nodes != null && nodes.size() > 0) {
                    criteriaBuilder.in("node", nodes);
                    return m_alarmDao.findMatching(criteriaBuilder.toCriteria());
                }

                return new ArrayList<>();
            }
        });
    }

