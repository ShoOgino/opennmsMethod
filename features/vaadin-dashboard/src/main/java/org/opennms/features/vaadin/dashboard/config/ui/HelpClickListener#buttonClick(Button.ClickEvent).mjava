    @Override
    public void buttonClick(Button.ClickEvent clickEvent) {
        final Window window = new Window("Help");

        window.setModal(true);
        window.setClosable(false);
        window.setResizable(false);

        window.setWidth("55%");
        window.setHeight("80%");

        m_component.getUI().addWindow(window);

        window.setContent(new VerticalLayout() {
            {
                setMargin(true);
                setSpacing(true);
                setSizeFull();

                HorizontalLayout horizontalLayout = new HorizontalLayout();
                horizontalLayout.setSizeFull();
                horizontalLayout.setSpacing(true);

                Tree tree = new Tree();
                tree.setNullSelectionAllowed(false);
                tree.setMultiSelect(false);
                tree.setImmediate(true);

                tree.addItem("Overview");
                tree.setChildrenAllowed("Overview", false);

                tree.addItem("Installed Dashlets");
                tree.setChildrenAllowed("Installed Dashlets", true);

                final List<DashletFactory> factories = m_dashletSelector.getDashletFactoryList();

                for (DashletFactory dashletFactory : factories) {
                    tree.addItem(dashletFactory.getName());
                    tree.setParent(dashletFactory.getName(), "Installed Dashlets");
                    tree.setChildrenAllowed(dashletFactory.getName(), false);
                }
                horizontalLayout.addComponent(tree);

                for (final Object id : tree.rootItemIds()) {
                    tree.expandItemsRecursively(id);
                }

                final Panel panel = new Panel();
                panel.setSizeFull();

                horizontalLayout.addComponent(panel);
                horizontalLayout.setExpandRatio(panel, 1.0f);

                addComponent(horizontalLayout);
                setExpandRatio(horizontalLayout, 1.0f);

                tree.addValueChangeListener(new Property.ValueChangeListener() {
                    @Override
                    public void valueChange(Property.ValueChangeEvent valueChangeEvent) {
                        String itemId = String.valueOf(valueChangeEvent.getProperty().getValue());

                        if ("Installed Dashlets".equals(itemId)) {
                            return;
                        }

                        if ("Overview".equals(itemId)) {
                            VerticalLayout verticalLayout = new VerticalLayout();
                            verticalLayout.setSpacing(true);
                            verticalLayout.setMargin(true);

                            verticalLayout.addComponent(new Label(getOverviewHelpHTML(), ContentMode.HTML));

                            panel.setContent(verticalLayout);
                        } else {
                            DashletFactory dashletFactory = m_dashletSelector.getDashletFactoryForName(itemId);

                            if (dashletFactory != null) {
                                if (dashletFactory.providesHelpComponent()) {
                                    VerticalLayout verticalLayout = new VerticalLayout();
                                    verticalLayout.setSpacing(true);
                                    verticalLayout.setMargin(true);

                                    Label helpTitle = new Label("Help for Dashlet '" + dashletFactory.getName() + "'");
                                    helpTitle.addStyleName("help-title");

                                    verticalLayout.addComponent(helpTitle);
                                    verticalLayout.addComponent(dashletFactory.getHelpComponent());

                                    panel.setContent(verticalLayout);
                                }
                            }
                        }
                    }
                });

                tree.select("Overview");

                addComponent(new HorizontalLayout() {
                    {
                        setMargin(true);
                        setSpacing(true);
                        setWidth("100%");

                        Button closeButton = new Button("Close");

                        addComponent(closeButton);
                        setComponentAlignment(closeButton, Alignment.MIDDLE_RIGHT);
                        closeButton.addClickListener(new Button.ClickListener() {
                            @Override
                            public void buttonClick(Button.ClickEvent clickEvent) {
                                window.close();
                            }
                        });
                    }
                });
            }
        });
    }

