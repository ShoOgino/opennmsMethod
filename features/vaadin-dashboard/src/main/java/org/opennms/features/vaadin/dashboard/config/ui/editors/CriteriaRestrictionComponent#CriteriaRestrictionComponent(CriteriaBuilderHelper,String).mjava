    /**
     * Constructor for creating ne instances of this class.
     *
     * @param criteriaBuilderHelper the {@link CriteriaBuilderHelper} to be used
     * @param restriction           the criteria string
     */
    public CriteriaRestrictionComponent(CriteriaBuilderHelper criteriaBuilderHelper, String restriction) {
        /**
         * Setting the member fields
         */
        m_criteriaBuilderHelper = criteriaBuilderHelper;

        /**
         * Setting up this component
         */
        setWidth(100, Unit.PERCENTAGE);

        m_rightLayout = new HorizontalLayout();
        m_leftLayout = new HorizontalLayout();

        setSpacing(true);
        setMargin(true);

        Page.getCurrent().getStyles().add(".criteriaBackground { background:#dddddd; }");

        addStyleName("criteriaBackground");

        /**
         * Adding the restriction's select box
         */
        m_restrictionSelect = new NativeSelect();
        m_restrictionSelect.setCaption("Restriction");
        m_restrictionSelect.setNullSelectionAllowed(false);
        m_restrictionSelect.setMultiSelect(false);
        m_restrictionSelect.setNewItemsAllowed(false);
        m_restrictionSelect.setImmediate(true);

        for (CriteriaRestriction criteriaRestriction : CriteriaRestriction.values()) {
            m_restrictionSelect.addItem(criteriaRestriction.name());
        }

        /**
         * Parsing the criteria
         */
        final String arr[] = restriction.split("[(),]+");

        CriteriaRestriction criteriaRestriction = CriteriaRestriction.valueOf(arr[0]);

        m_restrictionSelect.select(criteriaRestriction.toString());

        m_restrictionSelect.addValueChangeListener(new com.vaadin.data.Property.ValueChangeListener() {
            @Override
            public void valueChange(com.vaadin.data.Property.ValueChangeEvent valueChangeEvent) {
                CriteriaRestriction newCriteriaRestriction = CriteriaRestriction.valueOf(String.valueOf(valueChangeEvent.getProperty().getValue()));
                refreshComponents(newCriteriaRestriction); //, Arrays.copyOfRange(arr, 1, arr.length));
            }
        });

        setDefaultComponentAlignment(Alignment.MIDDLE_LEFT);
        m_leftLayout.addComponent(m_restrictionSelect);
        m_leftLayout.setSpacing(true);

        refreshComponents(criteriaRestriction, Arrays.copyOfRange(arr, 1, arr.length));

        /**
         * Adding the layouts
         */
        addComponent(m_leftLayout);
        addComponent(m_rightLayout);

        setExpandRatio(m_leftLayout, 3.0f);
        setExpandRatio(m_rightLayout, 1.0f);

        setComponentAlignment(m_leftLayout, Alignment.MIDDLE_LEFT);
        setComponentAlignment(m_rightLayout, Alignment.MIDDLE_RIGHT);
    }

