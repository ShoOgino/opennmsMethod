    /**
     * This method updates the criteria components.
     */
    private void renderComponents() {
        m_criteriaLayout.removeAllComponents();

        boolean isFirst = true;

        for (final CriteriaRestrictionComponent criteriaRestrictionComponent : m_criteriaRestrictionComponents) {
            criteriaRestrictionComponent.getRightLayout().removeAllComponents();

            if (!isFirst) {
                Button minusButton = new Button("-");
                minusButton.setStyleName("small");

                minusButton.addClickListener(new Button.ClickListener() {
                    public void buttonClick(Button.ClickEvent clickEvent) {
                        m_criteriaRestrictionComponents.remove(criteriaRestrictionComponent);
                        renderComponents();
                    }
                });

                criteriaRestrictionComponent.getRightLayout().addComponent(minusButton);
                criteriaRestrictionComponent.getRightLayout().setComponentAlignment(minusButton, Alignment.MIDDLE_RIGHT);
            } else {
                Button plusButton = new Button("+");
                plusButton.setStyleName("small");

                plusButton.addClickListener(new Button.ClickListener() {
                    public void buttonClick(Button.ClickEvent clickEvent) {
                        m_criteriaRestrictionComponents.add(new CriteriaRestrictionComponent(m_criteriaBuilderHelper, "Limit(10)"));
                        renderComponents();
                    }
                });

                criteriaRestrictionComponent.getRightLayout().addComponent(plusButton);
                criteriaRestrictionComponent.getRightLayout().setComponentAlignment(plusButton, Alignment.MIDDLE_RIGHT);

                isFirst = false;
            }

            m_criteriaLayout.addComponent(criteriaRestrictionComponent);
        }
    }

