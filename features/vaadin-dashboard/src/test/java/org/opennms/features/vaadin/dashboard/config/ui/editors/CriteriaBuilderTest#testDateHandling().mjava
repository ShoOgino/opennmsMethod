    @Test
    public void testDateHandling() {
        final ZonedDateTime currentTime = ZonedDateTime.now();
        final ZonedDateTime currentTimeMinusFive = currentTime.minus(5, ChronoUnit.MINUTES);
        final ZonedDateTime currentTimeMinusTen = currentTime.minus(10, ChronoUnit.MINUTES);
        final ZonedDateTime currentTimePlusFive = currentTime.plus(5, ChronoUnit.MINUTES);
        final ZonedDateTime currentTimePlusTen = currentTime.plus(10, ChronoUnit.MINUTES);

        // check relative values
        testDateRestriction("Lt(lastEventTime,-300)", currentTimeMinusFive, false);
        testDateRestriction("Lt(lastEventTime,-600)", currentTimeMinusTen, false);
        testDateRestriction("Lt(lastEventTime,%2B300)", currentTimePlusFive, false);
        testDateRestriction("Lt(lastEventTime,%2B600)", currentTimePlusTen, false);
        testDateRestriction("Lt(lastEventTime,%2B0)", currentTime, false);
        testDateRestriction("Lt(lastEventTime,-0)", currentTime, false);
        testDateRestriction("Lt(lastEventTime,0)", currentTime, false);

        // check absolute value (UTC)
        final ZonedDateTime customDate1 = ZonedDateTime.of(2019,6,20,20,45,15,0, ZoneId.of("UTC"));
        testDateRestriction("Lt(lastEventTime,2019-06-20T20:45:15.123Z)", customDate1, true);

        // check absolute value (EST -05:00)
        final ZonedDateTime customDate2 = ZonedDateTime.of(2019,6,20,20,45,15,0, TimeZone.getTimeZone("EST").toZoneId());
        testDateRestriction("Lt(lastEventTime,2019-06-20T20:45:15.123-05:00)", customDate2, true);

        // check absolute value (JST +09:00)
        final ZonedDateTime customDate3 = ZonedDateTime.of(2019,6,20,20,45,15,0, TimeZone.getTimeZone("JST").toZoneId());
        testDateRestriction("Lt(lastEventTime,2019-06-20T20:45:15.123%2B09:00)", customDate3, true);
    }

