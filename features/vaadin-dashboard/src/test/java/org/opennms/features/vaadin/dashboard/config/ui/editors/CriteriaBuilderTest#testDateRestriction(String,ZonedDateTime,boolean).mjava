    public void testDateRestriction(final String criteria, final ZonedDateTime zonedDateTime, final boolean strict) {
        final Set<String> validRestrictions = new TreeSet<>();
        validRestrictions.add(new LtRestriction("lastEventTime", Date.from(zonedDateTime.toInstant())).toString());

        // add a second restriction one second after the original one...
        if (!strict) {
            validRestrictions.add(new LtRestriction("lastEventTime", Date.from(zonedDateTime.plus(1, ChronoUnit.SECONDS).toInstant())).toString());
        }

        final CriteriaBuilder criteriaBuilder = new CriteriaBuilder(OnmsAlarm.class);
        final CriteriaBuilderHelper criteriaBuilderHelper = new CriteriaBuilderHelper(OnmsAlarm.class, OnmsNode.class, OnmsCategory.class, OnmsEvent.class);
        criteriaBuilderHelper.parseConfiguration(criteriaBuilder, criteria);
        final Collection<Restriction> restrictions = criteriaBuilder.toCriteria().getRestrictions();
        Assert.assertThat(validRestrictions, hasItem(restrictions.iterator().next().toString()));
    }

