	/**
	 * <p>_rxtxOpen</p>
	 *
	 * @param intp a {@link org.eclipse.osgi.framework.console.CommandInterpreter} object.
	 * @return a {@link java.lang.Object} object.
	 */
	public Object _rxtxOpen(CommandInterpreter intp) {
		String id = intp.nextArgument();
		String port = intp.nextArgument();
		
		if( id == null || port == null )
		{
			intp.println("usage: rxtxOpen <id> <port>");
			return null;
		}
		
		if ( m_openPorts.containsKey( id ) )
		{
			intp.println("there is already a port with id " + id );
			return null;
		}

		CommPortIdentifier portId;
		try 
		{
			portId = CommPortIdentifier.getPortIdentifier(port);
			if ( portId.getPortType() != CommPortIdentifier.PORT_SERIAL )
			{
				intp.println( "Only Serial Ports are currently supported." );
				return null;
			}
		
		} 
		catch ( NoSuchPortException e )
		{
			intp.println( "port not found: " + e.getMessage() );
			return null;
		}
		
		try
		{

			SerialPort commPort = (SerialPort)portId.open("rxtx-test", 4000);
			
			m_openPorts.put( id, commPort );
			
			intp.println( "Port " + commPort.getName() + " assigned to id " + id );
			
			return null;
			
		} 
		catch (PortInUseException e) 
		{

			intp.println( "exception opening port: " + e.getMessage() );
			return null;
		}
		

	}

