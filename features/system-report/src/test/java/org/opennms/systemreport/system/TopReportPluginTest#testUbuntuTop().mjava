    @Test
    public void testUbuntuTop() {
        final String topHOutput = "  procps-ng version 3.3.9\n" + 
                "Usage:\n" + 
                "  top -hv | -bcHiOSs -d secs -n max -u|U user -p pid(s) -o field -w [cols]\n";

        final String topOutput = "top - 11:29:59 up 10 days, 21:35,  1 user,  load average: 0.11, 0.10, 0.07\n" + 
                "Tasks: 156 total,   1 running, 155 sleeping,   0 stopped,   0 zombie\n" + 
                "%Cpu(s):  0.8 us,  0.9 sy,  8.8 ni, 89.1 id,  0.3 wa,  0.1 hi,  0.0 si,  0.0 st\n" + 
                "KiB Mem:   6093300 total,  3234980 used,  2858320 free,        8 buffers\n" + 
                "KiB Swap:  6270972 total,    94704 used,  6176268 free.  2383044 cached Mem\n" + 
                "\n" + 
                "  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n" + 
                "18382 bamboo    20   0   29012   1460   1052 R  12.5  0.0   0:00.02 top\n" + 
                "    1 root      20   0   33904   2684   1352 S   0.0  0.0   0:05.51 init\n";

        Mockito.when(m_resourceLocator.findBinary("top")).thenReturn("/usr/bin/top");
        Mockito.when(m_resourceLocator.slurpOutput("/usr/bin/top -h", true)).thenReturn(topHOutput);
        Mockito.when(m_resourceLocator.slurpOutput("/usr/bin/top -n 1 -b", false)).thenReturn(topOutput);
        assertEquals(1, m_reportPlugin.getEntries().size());
        assertEquals("Output", m_reportPlugin.getEntries().firstKey());
        assertEquals(FileSystemResource.class, m_reportPlugin.getEntries().firstEntry().getValue().getClass());
    }

