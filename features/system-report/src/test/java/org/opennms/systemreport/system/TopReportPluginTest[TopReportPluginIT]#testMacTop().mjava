    @Test
    public void testMacTop() {
        final String topHOutput = "/usr/bin/top usage: /usr/bin/top\n" + 
                "                [-a | -d | -e | -c <mode>]\n" + 
                "                [-F | -f]\n" + 
                "                [-h]\n" + 
                "                [-i <interval>]\n" + 
                "                [-l <samples>]\n" + 
                "                [-ncols <columns>]\n" + 
                "                [-o <key>] [-O <secondaryKey>]\n" + 
                "                [-R | -r]\n" + 
                "                [-S]\n" + 
                "                [-s <delay>]\n" + 
                "                [-n <nprocs>]\n" + 
                "                [-stats <key(s)>]\n" + 
                "                [-pid <processid>]\n" + 
                "                [-user <username>]\n" + 
                "                [-U <username>]\n" + 
                "                [-u]\n" + 
                "\n";

        final String topOutput = "Processes: 257 total, 2 running, 5 stuck, 250 sleeping, 1423 threads \n" + 
                "2014/09/09 11:22:40\n" + 
                "Load Avg: 1.89, 1.78, 1.78 \n" + 
                "CPU usage: 6.19% user, 12.38% sys, 81.41% idle \n" + 
                "SharedLibs: 11M resident, 7176K data, 0B linkedit.\n" + 
                "MemRegions: 82604 total, 6142M resident, 129M private, 1243M shared.\n" + 
                "PhysMem: 13G used (1795M wired), 1996M unused.\n" + 
                "VM: 657G vsize, 1066M framework vsize, 0(0) swapins, 0(0) swapouts.\n" + 
                "Networks: packets: 42430011/29G in, 50045953/38G out.\n" + 
                "Disks: 2822463/53G read, 3289984/149G written.\n" + 
                "\n" + 
                "PID    COMMAND          %CPU TIME     #TH   #WQ #PORTS #MREGS MEM    RPRVT  PURG   CMPRS  VPRVT  VSIZE  PGRP  PPID  STATE    UID FAULTS    COW      MSGSENT    MSGRECV    SYSBSD     SYSMACH    CSW        PAGEINS  KPRVT  KSHRD  IDLEW    POWER USER           \n" + 
                "99811  Google Chrome He 0.0  00:03.15 10    0   98+    495+   71M+   71M+   2448K+ 0B     242M+  3373M+ 539   539   sleeping 501 55392+    1527+    5872+      2961+      36003+     310748+    10365+     3800+    1536K+ 32K+   402      0.0   ranger         \n" + 
                "99187  Google Chrome He 0.0  00:10.22 10    0   98+    598+   146M+  145M+  72K+   0B     322M+  3427M+ 539   539   sleeping 501 127168+   1523+    11244+     6630+      84945+     369104+    25889+     8198+    2166K+ 73K+   2317     0.0   ranger         \n" + 
                "99150  Google Chrome He 0.0  00:01.91 10    0   98+    452+   64M+   62M+   376K+  0B     212M+  3338M+ 539   539   sleeping 501 39301+    1522+    3340+      1408+      26671+     288536+    7425+      1821+    1410K+ -6K+   294      0.0   ranger         \n";
        Mockito.when(m_resourceLocator.findBinary("top")).thenReturn("/usr/bin/top");
        Mockito.when(m_resourceLocator.slurpOutput("/usr/bin/top -h", true)).thenReturn(topHOutput);
        Mockito.when(m_resourceLocator.slurpOutput("/usr/bin/top -l 1", false)).thenReturn(topOutput);
        assertEquals(1, m_reportPlugin.getEntries().size());
        assertEquals("Output", m_reportPlugin.getEntries().keySet().iterator().next());
        assertEquals(FileSystemResource.class, m_reportPlugin.getEntries().entrySet().iterator().next().getValue().getClass());
    }

