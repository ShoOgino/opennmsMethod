    public TreeMap<String, Resource> getEntries() {
        final TreeMap<String, Resource> map = new TreeMap<String, Resource>();
        map.put("Name", getResourceFromProperty("os.name"));
        map.put("Architecture", getResourceFromProperty("os.arch"));
        map.put("Version", getResourceFromProperty("os.version"));
        map.put("Distribution", map.get("Name"));

        OperatingSystemMXBean osBean = getBean(ManagementFactory.OPERATING_SYSTEM_MXBEAN_NAME, OperatingSystemMXBean.class);
        if (osBean == null) {
            LogUtils.infof(this, "falling back to local VM OperatingSystemMXBean");
            osBean = ManagementFactory.getOperatingSystemMXBean();
        }

        LogUtils.tracef(this, "bean = %s", osBean.toString());
        addGetters(osBean, map);

        File lsb = new File("/bin/lsb_release");
        File solaris = new File("/var/sadm/softinfo/INST_RELEASE");
        if (lsb.exists()) {
            final String text = slurpCommand(new String[] { "/bin/lsb_release", "-a" });
            final Map<String,String> distMap = splitMultilineString(": +", text);
            for (final Map.Entry<String,String> entry : distMap.entrySet()) {
                map.put("Distribution " + entry.getKey(), getResource(entry.getValue()));
            }
        } else if (solaris.exists()) {
            map.put("Distribution OS", getResource("Solaris"));
            final String solarisText = slurp(solaris);
            final Map<String,String> distMap = splitMultilineString("=", solarisText);
            for (final Map.Entry<String,String> entry : distMap.entrySet()) {
                map.put("Distribution " + entry.getKey().toLowerCase().replaceFirst("^.", entry.getKey().substring(0, 1).toUpperCase()), getResource(entry.getValue()));
            }
            if (map.containsKey("Distribution OS")) {
                map.put("Distribution", map.remove("Distribution OS"));
            }
            File isainfo = new File("/usr/bin/isainfo");
            if (isainfo.exists()) {
                final String arch = slurpCommand(new String[] { "/usr/bin/isainfo", "-n" });
                if (arch != null) {
                    map.put("Instruction Set", getResource(arch));
                }
            }
        } else {
            for (final Map.Entry<String, String> entry : m_oses.entrySet()) {
                final String description = slurp(new File(entry.getKey()));
                if (description != null) {
                    map.put("Distribution", getResource(entry.getValue()));
                    map.put("Description", getResource(description.trim()));
                }
            }
        }

        if (map.containsKey("Distribution Distributor ID")) {
            map.put("Distribution", map.remove("Distribution Distributor ID"));
        }
        if (map.containsKey("Distribution Description")) {
            map.put("Description", map.remove("Distribution Description"));
        }

        return map;
    }

