    @Override
    public void write(final SystemReportPlugin plugin) {
        if (!hasDisplayable(plugin)) return;
        
        if (m_handler == null) {
            try {
                StreamResult streamResult = new StreamResult(getOutputStream());
                SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
                m_handler = tf.newTransformerHandler();
                Transformer serializer = m_handler.getTransformer();
                serializer.setOutputProperty(OutputKeys.CDATA_SECTION_ELEMENTS, "entry");
                m_handler.setResult(streamResult);
            } catch (final Exception e) {
                LOG.error("Unable to create XML stream writer.", e);
                m_handler = null;
            }

            try {
                m_handler.startDocument();
                m_handler.startElement("", "", "systemReportPlugins", null);
            } catch (final Exception e) {
                LOG.warn("Unable to start document.", e);
                m_handler = null;
            }
        }

        if (m_handler == null) {
            LOG.warn("Unable to write, no handler defined!");
            return;
        }
        try {
            AttributesImpl atts = new AttributesImpl();
            atts.addAttribute("", "", "name", "CDATA", plugin.getName());
            atts.addAttribute("", "", "description", "CDATA", plugin.getDescription());
            m_handler.startElement("", "", "plugin", atts);
            for (final Map.Entry<String,Resource> entry : plugin.getEntries().entrySet()) {
                final boolean displayable = isDisplayable(entry.getValue());

                atts = new AttributesImpl();
                atts.addAttribute("", "", "key", "CDATA", entry.getKey());

                if (!displayable) {
                    atts.addAttribute("", "", "skipped", "CDATA", "true");
                }

                m_handler.startElement("", "", "entry", atts);
                if (displayable) {
                    final String value = getResourceText(entry.getValue());
                    if (value != null) {
                        m_handler.startCDATA();
                        m_handler.characters(value.toCharArray(), 0, value.length());
                        m_handler.endCDATA();
                    }
                }
                m_handler.endElement("", "", "entry");
            }
            m_handler.endElement("", "", "plugin");
        } catch (final Exception e) {
            LOG.warn("An error occurred while attempting to write XML data.", e);
        }
    }

