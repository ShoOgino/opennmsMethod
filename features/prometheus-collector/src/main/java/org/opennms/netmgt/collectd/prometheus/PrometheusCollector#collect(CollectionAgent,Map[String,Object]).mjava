    @Override
    public CollectionSet collect(CollectionAgent agent, Map<String, Object> map) throws CollectionException {
        // Pull the URL from the the request
        final PrometheusCollectionRequest request = (PrometheusCollectionRequest)map.get(COLLECTION_REQUEST_KEY);
        String url = ParameterMap.getKeyedString(map, "url", null);
        if (Strings.isNullOrEmpty(url)) {
            throw new IllegalArgumentException("url parameter is required.");
        }

        // Replace the IP address placeholder
        url = url.replace(INTERFACE_ADDRESS_PLACEHOLDER, agent.getHostAddress());
        final URI parsedUri;
        try {
            parsedUri = URI.create(url);
        } catch (IllegalArgumentException e) {
            throw new CollectionException("Invalid URL: " + url, e);
        }

        final MetricCollectingWalker walker = new MetricCollectingWalker();
        try {
            PrometheusScraper.scrape(parsedUri, map, walker);
        } catch (IOException e) {
            throw new CollectionException("Failed to scrape metrics for: " + parsedUri, e);
        }

        return toCollectionSet(agent, request, walker.getMetrics());
    }

