    private static List<Metric> filterMetrics(String filterExpression, List<Metric> metrics) {
        if (filterExpression == null) {
            return metrics;
        }

        final ExpressionParser parser = new SpelExpressionParser();
        final Expression exp = parser.parseExpression(filterExpression);
        final List<Metric> filteredMetrics = new ArrayList<>();
        for (Metric metric : metrics) {
            StandardEvaluationContext context = new StandardEvaluationContext(metric);

            boolean passed = false;
            try {
                passed = exp.getValue(context, Boolean.class);
            } catch (Exception e) {
                LOG.warn("Failed to evaluate expression '{}'. The metric will not be included.",
                        filterExpression, e);
            }
            LOG.trace("Rule '{}' on {} passed? {}", filterExpression, metric, passed);

            if (passed) {
                filteredMetrics.add(metric);
            }
        }
        return filteredMetrics;
    }

