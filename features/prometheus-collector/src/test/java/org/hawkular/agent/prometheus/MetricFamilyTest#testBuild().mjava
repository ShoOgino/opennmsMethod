    @Test
    public void testBuild() {
        Counter counter = new Counter.Builder().setName("foo").setValue(0.1).build();
        Gauge gauge = new Gauge.Builder().setName("foo").setValue(0.1).build();
        new Summary.Builder().setName("foo").setSampleCount(123).setSampleSum(0.5)
                .addQuantile(0.25, 100.1).addQuantile(0.75, 200.2).build();
        new Histogram.Builder().setName("foo").setSampleCount(123).setSampleSum(0.5)
                .addBucket(0.25, 100).addBucket(1.0, 200).build();

        try {
            new MetricFamily.Builder().build();
            Assert.fail("Should have thrown exception because name is not set");
        } catch (IllegalArgumentException expected) {
        }

        try {
            new MetricFamily.Builder().setName("foo").build();
            Assert.fail("Should have thrown exception because type is not set");
        } catch (IllegalArgumentException expected) {
        }

        try {
            new MetricFamily.Builder().setName("foo").setType(MetricType.COUNTER).addMetric(gauge).build();
            Assert.fail("Should have thrown exception because type did not match the metrics");
        } catch (IllegalArgumentException expected) {
        }

        try {
            new MetricFamily.Builder().setName("foo").setType(MetricType.GAUGE).addMetric(counter).build();
            Assert.fail("Should have thrown exception because type did not match the metrics");
        } catch (IllegalArgumentException expected) {
        }

        try {
            new MetricFamily.Builder().setName("foo").setType(MetricType.SUMMARY).addMetric(counter).build();
            Assert.fail("Should have thrown exception because type did not match the metrics");
        } catch (IllegalArgumentException expected) {
        }

        try {
            new MetricFamily.Builder().setName("foo").setType(MetricType.HISTOGRAM).addMetric(counter)
                    .build();
            Assert.fail("Should have thrown exception because type did not match the metrics");
        } catch (IllegalArgumentException expected) {
        }

        try {
            new MetricFamily.Builder().setName("foo").setType(MetricType.COUNTER)
                    .addMetric(counter).addMetric(counter).addMetric(gauge).build(); // last one isn't the right type
            Assert.fail("Should have thrown exception because type did not match the metrics");
        } catch (IllegalArgumentException expected) {
        }

        MetricFamily family = new MetricFamily.Builder().setName("foo").setType(MetricType.SUMMARY).build();
        Assert.assertEquals("foo", family.getName());
        Assert.assertNull(family.getHelp());
        Assert.assertEquals(MetricType.SUMMARY, family.getType());
        Assert.assertNotNull(family.getMetrics());
        Assert.assertTrue(family.getMetrics().isEmpty());

        family = new MetricFamily.Builder().setName("foo").setHelp("foo help").setType(MetricType.COUNTER)
                .addMetric(counter).addMetric(counter).build();
        Assert.assertEquals("foo", family.getName());
        Assert.assertEquals("foo help", family.getHelp());
        Assert.assertEquals(MetricType.COUNTER, family.getType());
        Assert.assertEquals(2, family.getMetrics().size());
    }

