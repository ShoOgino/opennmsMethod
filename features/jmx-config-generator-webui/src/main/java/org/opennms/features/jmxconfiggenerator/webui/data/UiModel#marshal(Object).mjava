	/**
	 * Creates a CollectdConfiguration snippet depending on the data saved here.
	 * 
	 * @return The CollecdConfiguration snippet depending on the data saved in
	 *         this model.
	 */
	// public CollectdConfiguration getCollectdConfiguration() {
	// CollectdConfiguration config = new CollectdConfiguration();
	//
	// // set default package
	// Package defaultPackage = new Package();
	// defaultPackage.setName("DUMMY-Default-Package-Name");
	//
	// // set service
	// Service service = new Service();
	// service.setName(getServiceName());
	// service.setInterval(30000); // TODO set default
	// service.setUserDefined(Boolean.TRUE.toString());
	// service.setStatus("on");
	//
	// // add parameters to service
	// service.addParameter(createParameter("port", "17199")); // TODO define
	// // dynamically
	// service.addParameter(createParameter("retry", "1"));
	// service.addParameter(createParameter("timeout", "3000"));
	// service.addParameter(createParameter("protocol", "rmi"));
	// service.addParameter(createParameter("urlPath", "/jmxrmi"));
	// service.addParameter(createParameter("rrd-base-name", "java"));
	// service.addParameter(createParameter("ds-name", getServiceName()));
	// service.addParameter(createParameter("friendly-name", getServiceName()));
	// service.addParameter(createParameter("collection", getServiceName()));
	// service.addParameter(createParameter("thresholding-enabled",
	// Boolean.TRUE.toString()));
	//
	// // create Collector
	// Collector collector = new Collector();
	// collector.setService(getServiceName());
	// collector.setClassName("abc"); // TODO define dynamically
	// // collector.setClassName(Jsr160Collector.class.getName());
	//
	// // register service, package and collector to configuration
	// config.addPackage(defaultPackage);
	// config.addCollector(collector);
	// defaultPackage.addService(service);
	//
	// return config;
	// }

	// /**
	// * Creates a Parameter object and sets the key and value.
	// *
	// * @param key
	// * The key for the Parameter object. Should not be null.
	// * @param value
	// * The value for the Parameter object. Should not be null.
	// * @return The Parameter object with key value according to method
	// * arguments.
	// */
	// private static Parameter createParameter(final String key, final String
	// value) {
	// Parameter parameter = new Parameter();
	// parameter.setKey(key);
	// parameter.setValue(value);
	// return parameter;
	// }

	public static String marshal(Object anyObject) {
		StringWriter stringWriter = new StringWriter();
		JAXB.marshal(anyObject, stringWriter);
		return stringWriter.getBuffer().toString();
	}

