	public NameEditForm(MBeansController controller, final FormParameter parameter) {
		this.controller = controller;
		this.parameter = parameter;
		setFormFieldFactory(new FormFieldFactory() {
			@Override
			public Field<?> createField(Item item, Object propertyId, Component uiContext) {
				if (propertyId.toString().equals(MetaMBeanItem.SELECTED)) {
					CheckBox c = new CheckBox(MetaMBeanItem.SELECTED);
					return c;
				}
				if (propertyId.toString().equals(parameter.getNonEditablePropertyName())) {
					final TextField tf = new TextField(parameter.getNonEditablePropertyName()) {
						@Override
						public void setReadOnly(boolean readOnly) {
							super.setReadOnly(true); // never ever edit me
						}
					};
					tf.setWidth(100, UNITS_PERCENTAGE);
					return tf;
				}
				if (propertyId.toString().equals(parameter.getEditablePropertyName())) {
					TextField tf = new TextField(parameter.getEditablePropertyName());
					tf.setWidth(100, UNITS_PERCENTAGE);
					tf.setValidationVisible(true);
					tf.setRequired(true);
					tf.setRequiredError("You must provide a name.");
					tf.addValidator(nameValidator);
					return tf;
				}
				return null;
			}
		});
		setWidth(100, Unit.PERCENTAGE);
		setHeight(Config.NAME_EDIT_FORM_HEIGHT + (parameter.hasFooter() ? 0 : -60), Unit.PIXELS);
		setReadOnly(true);
		setImmediate(true);
		setBuffered(true);
		if (parameter.hasFooter()) setFooter(footer);
		addFooterHooks();
		setCaption(parameter.getCaption());
		setVisibleItemProperties(parameter.getVisiblePropertieNames());
	}

