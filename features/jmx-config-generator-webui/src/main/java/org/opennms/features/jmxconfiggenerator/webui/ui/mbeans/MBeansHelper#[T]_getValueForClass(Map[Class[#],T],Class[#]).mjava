	/**
	 * Builds the class hierarchy of the given <code>clazz</code> and returns
	 * the value of the given map if any class in the hierarchy of
	 * <code>clazz</code> is registered as a key to the map.
	 * 
	 * @param <T>
	 *            type of the value in the map
	 * @param map
	 *            a map to lookup for any class in <code>clazz</code> hierarchy.
	 * @param clazz
	 *            the class to look up any value in <code>map</code>
	 * @return T if a key is found in <code>map</code>, otherwise null.
	 */
	public static <T> T getValueForClass(Map<Class<?>, T> map, Class<?> clazz) {
		List<Class> classes = Reflections.buildClassHierarchy(clazz);
		for (int i = classes.size() - 1; i >= 0; i--) {
			if (map.get(classes.get(i)) != null) return map.get(classes.get(i));
		}
		return null;
	}

