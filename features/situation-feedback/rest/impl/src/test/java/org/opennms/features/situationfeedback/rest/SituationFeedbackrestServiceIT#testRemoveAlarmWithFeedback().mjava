    @Test
    @Transactional
    public void testRemoveAlarmWithFeedback() {
        SituationFeedbackRestServiceImpl sut = new SituationFeedbackRestServiceImpl(alarmDao, alarmEntityNotifier, mockFeebackRepository, transactionTemplate);
        AlarmFeedback falsePositive = new AlarmFeedback(situation.getReductionKey(), "fingerprint", linkDownAlarmOnR1.getReductionKey(),
                                                        FeedbackType.FALSE_POSITIVE, "not related", "user", System.currentTimeMillis());
        List<AlarmFeedback> feedback = Collections.singletonList(falsePositive);

        OnmsAlarm prior = alarmDao.findByReductionKey(situation.getReductionKey());
        assertThat(prior.getRelatedAlarmsForSituation().size(), is(2));

        int situationId = prior.getId();

        sut.setFeedback(situationId, feedback);

        OnmsAlarm restrieved = alarmDao.findByReductionKey(situation.getReductionKey());
        assertThat(restrieved.getRelatedAlarmsForSituation().size(), is(1));
        assertThat(restrieved.getRelatedAlarmsForSituation().stream().findFirst(), is(Optional.of(linkDownAlarmOnR2)));
    }

