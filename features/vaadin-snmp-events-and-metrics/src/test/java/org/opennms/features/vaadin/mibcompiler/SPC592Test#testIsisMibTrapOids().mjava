    /**
     * Test trap-OIDs in events from ISIS-MIB notifications.
     *
     * @throws Exception the exception
     */
    @Test
    public void testIsisMibTrapOids() throws Exception {
        if (! parser.parseMib(new File(MIB_DIR, "ISIS-MIB.mib"))) {
            Assert.fail("The ISIS-MIB.mib must parse successfully");
        } else {
            Assert.assertTrue(parser.getMissingDependencies().isEmpty());
        }
        Events isisEvents = parser.getEvents("uei.opennms.org/issues/SPC592/");
        assertEquals(isisEvents.getEventCollection().size(), 18);
        assertEquals("uei.opennms.org/issues/SPC592/isisAdjacencyChange", isisEvents.getEvent(16).getUei());
        
        boolean foundId = false;
        for (Maskelement me : isisEvents.getEvent(16).getMask().getMaskelementCollection()) {
            if ("id".equals(me.getMename())) {
                foundId = true;
            }
            if (foundId) {
                assertEquals("Only one me-value should be present for trap OID", 1, me.getMevalueCount());
                assertFalse("The 'id' mask-element value for the isisAdjacencyChange event must not end in .0", me.getMevalue()[0].endsWith(".0"));
                assertEquals("The 'id' mask-element value for the isisAdjacencyChange event is incorrect", me.getMevalue()[0], ".1.3.6.1.2.1.138");
                break;
            }
        }
        if (! foundId) {
            Assert.fail("Never found the 'id' mask-element in the isisAdjacencyChange event");
        }
        
        boolean foundSpecific = false;
        for (Maskelement me : isisEvents.getEvent(16).getMask().getMaskelementCollection()) {
            if ("specific".equals(me.getMename())) {
                foundSpecific = true;
            }
            if (foundSpecific) {
                assertEquals("Only one me-value should be present for the specific-type", 1, me.getMevalueCount());
                assertEquals("The 'specific' mask-element value for the isisAdjacencyChange event must be 17", me.getMevalue()[0], "17");
            }
        }
        if (! foundSpecific) {
            Assert.fail("Never found the 'specific' mask-element in the isisAdjacencyChange event");
        }
    }

