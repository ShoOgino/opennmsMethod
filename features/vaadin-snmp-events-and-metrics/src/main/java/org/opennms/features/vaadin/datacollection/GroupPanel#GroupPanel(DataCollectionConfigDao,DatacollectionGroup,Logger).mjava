    /**
     * Instantiates a new group panel.
     *
     * @param dataCollectionConfigDao the OpenNMS Data Collection Configuration DAO
     * @param source the OpenNMS Data Collection Group object
     * @param logger the logger object
     */
    public GroupPanel(final DataCollectionConfigDao dataCollectionConfigDao, final DatacollectionGroup source, final Logger logger) {

        if (dataCollectionConfigDao == null) {
            throw new RuntimeException("dataCollectionConfigDao cannot be null.");
        }

        if (source == null) {
            throw new RuntimeException("source cannot be null.");
        }

        addStyleName("light");

        // Adding all resource types already defined on this source
        final List<String> resourceTypes = new ArrayList<String>();
        for (ResourceType type : source.getResourceTypes()) {
            resourceTypes.add(type.getName());
        }

        // Adding all defined resource types
        resourceTypes.addAll(dataCollectionConfigDao.getConfiguredResourceTypes().keySet());

        groupTable = new GroupTable(source.getGroups());

        final GroupForm groupForm = new GroupForm(resourceTypes);
        groupForm.setVisible(false);

        final EditorToolbar bottomToolbar = new EditorToolbar() {
            @Override
            public void save() {
                Group group = groupForm.getGroup();
                logger.info("SNMP Group " + group.getName() + " has been " + (isNew ? "created." : "updated."));
                try {
                    groupForm.commit();
                    groupForm.setReadOnly(true);
                    groupTable.refreshRowCache();
                } catch (CommitException e) {
                    String msg = "Can't save the changes: " + e.getMessage();
                    logger.error(msg);
                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);
                }
            }
            @Override
            public void delete() {
                Object groupId = groupTable.getValue();
                if (groupId != null) {
                    Group group = groupTable.getGroup(groupId);
                    logger.info("SNMP Group " + group.getName() + " has been removed.");
                    groupTable.select(null);
                    groupTable.removeItem(groupId);
                    groupTable.refreshRowCache();
                }
            }
            @Override
            public void edit() {
                groupForm.setReadOnly(false);
            }
            @Override
            public void cancel() {
                groupForm.discard();
                groupForm.setReadOnly(true);
            }
        };
        bottomToolbar.setVisible(false);

        groupTable.addValueChangeListener(new Property.ValueChangeListener() {
            @Override
            public void valueChange(ValueChangeEvent event) {
                Object groupId = groupTable.getValue();
                if (groupId != null) {
                    groupForm.setGroup(groupTable.getGroup(groupId));
                }
                groupForm.setReadOnly(true);
                groupForm.setVisible(groupId != null);
                bottomToolbar.setReadOnly(true);
                bottomToolbar.setVisible(groupId != null);
            }
        });   

        final Button add = new Button("Add SNMP Group", new Button.ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
                groupTable.addGroup(groupForm.createBasicGroup());
                groupForm.setReadOnly(false);
                bottomToolbar.setReadOnly(false);
                setIsNew(true);
            }
        });

        final VerticalLayout mainLayout = new VerticalLayout();
        mainLayout.setSpacing(true);
        mainLayout.setMargin(true);
        mainLayout.addComponent(groupTable);
        mainLayout.addComponent(add);
        mainLayout.addComponent(groupForm);
        mainLayout.addComponent(bottomToolbar);
        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);
        setContent(mainLayout);
    }

