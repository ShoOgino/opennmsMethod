    /**
     * Adds the dependency to the queue.
     *
     * @param queue the queue
     * @return true, if successful
     */
    private boolean addDependencyToQueue(List<URL> queue) {
        final List<String> dependencies = new ArrayList<String>(missingDependencies);
        for (String dependency : dependencies) {
            boolean found = false;
            for (String suffix : MIB_SUFFIXES) {
                File f = new File(mibDirectory, dependency + suffix);
                LogUtils.debugf(this, "Checking dependency file %s", f.getAbsolutePath());
                if (f.exists()) {
                    LogUtils.infof(this, "Adding dependency file %s", f.getAbsolutePath());
                    addFileToQueue(queue, f);
                    missingDependencies.remove(dependency);
                    found = true;
                    break;
                } else {
                    LogUtils.debugf(this, "Dependency file %s doesn't exist", f.getAbsolutePath());
                }
            }
            if (!found) {
                LogUtils.warnf(this, "Couldn't find dependency %s on %s", dependency, mibDirectory);
                return false;
            }
        }
        return true;
    }

