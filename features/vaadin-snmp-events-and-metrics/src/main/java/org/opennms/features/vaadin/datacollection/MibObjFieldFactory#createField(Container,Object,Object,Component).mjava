    @Override
    public Field createField(Container container, Object itemId, Object propertyId, Component uiContext) {
        if (propertyId.equals("oid")) {
            final TextField field = new TextField();
            field.setSizeFull();
            field.setRequired(true);
            field.setImmediate(true);
            field.addValidator(new RegexpValidator("^\\.[.\\d]+$", "Invalid OID {0}"));
            return new ProxyField(field);
        }
        if (propertyId.equals("instance")) {
            final ComboBox field = new ComboBox();
            field.setSizeFull();
            field.setRequired(true);
            field.setImmediate(true);
            field.setNullSelectionAllowed(false);
            field.setNewItemsAllowed(true);
            field.setNewItemHandler(new NewItemHandler() {
                public void addNewItem(String newItemCaption) {
                    if (!field.containsId(newItemCaption)) {
                        field.addItem(newItemCaption);
                        field.setValue(newItemCaption);
                    }
                }
            });
            field.addItem("0");
            field.addItem("ifIndex");
            for (String rt : resourceTypes) {
                field.addItem(rt);
            }
            return field;
        }
        if (propertyId.equals("alias")) {
            final TextField field = new TextField();
            field.setSizeFull();
            field.setRequired(true);
            field.setImmediate(true);
            field.addValidator(new StringLengthValidator("Invalid alias. It should not contain more than 19 characters.", 1, 19, false));
            return new ProxyField(field);
        }
        if (propertyId.equals("type")) {
            final TextField field = new TextField();
            field.setSizeFull();
            field.setRequired(true);
            field.setImmediate(true);
            field.addValidator(new RegexpValidator("^(gauge|counter|integer|string)?\\d*$",
                    "Invalid type {0}. Valid types are: gauge, integer, counter, string"));
            return new ProxyField(field);
        }
        return null;
    }

