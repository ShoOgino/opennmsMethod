    /**
     * Save file.
     *
     * @param file the file
     * @param events the events
     * @param logger the logger
     */
    private void saveFile(final File file, final Events events, final Logger logger) {
        try {
            // Normalize the Event Content (required to avoid marshaling problems)
            // TODO Are other normalizations required ?
            for (org.opennms.netmgt.xml.eventconf.Event event : events.getEventCollection()) {
                logger.debug("Normalizing event " + event.getUei());
                AlarmData ad = event.getAlarmData();
                if (ad != null && (ad.getReductionKey() == null || ad.getReductionKey().trim().isEmpty()))
                    event.setAlarmData(null);
            }
            // Save the XML of the new events
            logger.info("Saving XML data into " + file.getAbsolutePath());
            FileWriter writer = new FileWriter(file);
            JaxbUtils.marshal(events, writer);
            writer.close();
            // Add a reference to the new file into eventconf.xml
            String fileName = "events/" + file.getName();
            if (!eventConfDao.getRootEvents().getEventFileCollection().contains(fileName)) {
                logger.info("Adding a reference to " + file.getName() + " inside eventconf.xml.");
                eventConfDao.getRootEvents().getEventFileCollection().add(0, fileName);
                eventConfDao.saveCurrent();
            }
            // Send eventsConfigChange event
            EventBuilder eb = new EventBuilder(EventConstants.EVENTSCONFIG_CHANGED_EVENT_UEI, "WebUI");
            eventProxy.send(eb.getEvent());
            logger.info("The event's configuration reload operation is being performed.");
            success();
        } catch (Exception e) {
            StringWriter sw = new StringWriter();
            PrintWriter pw = new PrintWriter(sw);
            e.printStackTrace(pw);
            logger.error(e.getClass() + ": " + (e.getMessage() == null ? "[No Details]" : e.getMessage()));
            logger.error(sw.toString());
            failure(e.getMessage());
        }
    }

