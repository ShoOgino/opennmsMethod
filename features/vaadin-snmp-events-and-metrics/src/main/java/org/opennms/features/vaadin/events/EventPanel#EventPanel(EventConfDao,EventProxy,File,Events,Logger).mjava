    /**
     * Instantiates a new event panel.
     *
     * @param eventConfDao the OpenNMS Events Configuration DAO
     * @param eventProxy the OpenNMS Events Proxy
     * @param eventFile the events file
     * @param events the OpenNMS events object
     * @param logger the logger object
     */
    public EventPanel(final EventConfDao eventConfDao, final EventProxy eventProxy, final File eventFile, final Events events, final Logger logger) {

        if (eventProxy == null)
            throw new RuntimeException("eventProxy cannot be null.");
        if (eventConfDao == null)
            throw new RuntimeException("eventConfDao cannot be null.");

        this.eventConfDao = eventConfDao;
        this.eventProxy = eventProxy;
        this.eventFile = eventFile;

        setCaption("Events");
        addStyleName(Runo.PANEL_LIGHT);

        VerticalLayout mainLayout = new VerticalLayout();
        mainLayout.setSpacing(true);
        mainLayout.setMargin(true);

        HorizontalLayout toolbar = new HorizontalLayout();
        toolbar.addComponent(new Button("Save Events File", new Button.ClickListener() {
            public void buttonClick(ClickEvent event) {
                events.setEvent(eventTable.getOnmsEvents());
                logger.info("The events have been saved.");
                processEvents(events, logger);
            }
        }));
        toolbar.addComponent(new Button("Cancel", new Button.ClickListener() {
            public void buttonClick(Button.ClickEvent event) {
                logger.info("Event processing has been canceled");
                cancel();
            }
        }));
        mainLayout.addComponent(toolbar);
        mainLayout.setComponentAlignment(toolbar, Alignment.MIDDLE_RIGHT);

        eventTable = new EventTable(events) {
            public void updateExternalSource(org.opennms.netmgt.xml.eventconf.Event event) {
                eventForm.setEventDataSource(event);
                eventForm.setVisible(true);
                eventForm.setReadOnly(true);
                setIsNew(false);
            }
        };
        mainLayout.addComponent(eventTable);

        add = new Button("Add Event");
        add.addListener(new Button.ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
                org.opennms.netmgt.xml.eventconf.Event e = new org.opennms.netmgt.xml.eventconf.Event();
                e.setUei("uei.opennms.org/newEvent");
                e.setEventLabel("New Event");
                e.setDescr("New Event Description");
                e.setLogmsg(new Logmsg());
                e.getLogmsg().setContent("New Event Log Message");
                e.getLogmsg().setDest("logndisplay");
                e.setSeverity("Indeterminate");
                e.setMask(new Mask());
                e.setAlarmData(new AlarmData());
                eventTable.updateExternalSource(e);
                eventForm.setReadOnly(false);
                setIsNew(true);
            }
        });
        mainLayout.addComponent(add);
        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);

        eventForm = new EventForm() {
            public void saveEvent(org.opennms.netmgt.xml.eventconf.Event event) {
                if (isNew) {
                    eventTable.addEvent(event);
                    logger.info("Event " + event.getUei() + " has been created.");
                } else {
                    logger.info("Event " + event.getUei() + " has been updated.");
                }
                eventTable.refreshRowCache();
            }
            public void deleteEvent(org.opennms.netmgt.xml.eventconf.Event event) {
                logger.info("Event " + event.getUei() + " has been removed.");
                Object itemId = eventTable.getValue();
                if (itemId != null) {
                    eventTable.select(null);
                    eventTable.removeItem(itemId);
                    eventTable.refreshRowCache();
                }
            }
        };
        mainLayout.addComponent(eventForm);

        setContent(mainLayout);
    }

