    /**
     * Instantiates a new system definition table.
     *
     * @param group the OpenNMS Data Collection Group
     */
    public SystemDefTable(final DatacollectionGroup group) {
        OnmsBeanContainer<SystemDef> container = new OnmsBeanContainer<SystemDef>(SystemDef.class);
        container.addAll(group.getSystemDefCollection());
        setContainerDataSource(container);
        setStyleName(Runo.TABLE_SMALL);
        setImmediate(true);
        setSelectable(true);
        setWidth("100%");
        setHeight("250px");
        addGeneratedColumn("count", new ColumnGenerator() {
            @Override
            @SuppressWarnings("unchecked")
            public Object generateCell(Table source, Object itemId, Object columnId) {
                BeanItem<SystemDef> item = (BeanItem<SystemDef>) getContainerDataSource().getItem(itemId);
                return item.getBean().getCollect() == null ? 0 : item.getBean().getCollect().getIncludeGroupCount();
            }
        });
        addGeneratedColumn("oid", new ColumnGenerator() {
            @Override
            @SuppressWarnings("unchecked")
            public Object generateCell(Table source, Object itemId, Object columnId) {
                BeanItem<SystemDef> item = (BeanItem<SystemDef>) getContainerDataSource().getItem(itemId);
                final SystemDef s = item.getBean();
                final String value = s.getSysoid() == null ? s.getSysoidMask() : s.getSysoid();
                return value == null ? "N/A" : value;
            }
        });
        addListener(new Property.ValueChangeListener() {
            @SuppressWarnings("unchecked")
            public void valueChange(Property.ValueChangeEvent event) {
                if (getValue() != null) {
                    BeanItem<SystemDef> item = (BeanItem<SystemDef>) getContainerDataSource().getItem(getValue());
                    updateExternalSource(item);
                }
            }
        });
        setVisibleColumns(COLUMN_NAMES);
        setColumnHeaders(COLUMN_LABELS);
    }

