    /* (non-Javadoc)
     * @see org.opennms.features.vaadin.mibcompiler.api.MibParser#getDataCollection()
     */
    public DatacollectionGroup getDataCollection() {
        if (module == null) {
            return null;
        }
        LogUtils.infof(this, "Generating data collection configuration for %s", module.getId());
        DatacollectionGroup dcGroup = new DatacollectionGroup();
        dcGroup.setName(module.getId());
        try {
            for (SmiVariable v : module.getVariables()) {
                String groupName = null, resourceType = null;
                if (v.getNode().getParent().getSingleValue() instanceof SmiRow) {
                    groupName = v.getNode().getParent().getParent().getSingleValue().getId();
                    resourceType = v.getNode().getParent().getSingleValue().getId();
                } else {
                    groupName = v.getNode().getParent().getSingleValue().getId();
                }
                Group group = getGroup(dcGroup, groupName, resourceType);
                String typeName = getType(v.getType().getPrimitiveType());
                if (typeName != null) {
                    MibObj mibObj = new MibObj();
                    mibObj.setOid('.' + v.getOidStr());
                    mibObj.setInstance(resourceType == null ? "0" : resourceType);
                    mibObj.setAlias(v.getId());
                    mibObj.setType(typeName);
                    group.addMibObj(mibObj);
                }
            }
        } catch (Throwable e) {
            String errors = e.getMessage();
            if (errors == null || errors.trim().equals(""))
                errors = "An unknown error accured when generating data collection objects from the MIB " + module.getId();
            LogUtils.errorf(this, e, "Data Collection parsing error: %s", errors);
            errorHandler.addError(errors);
            return null;
        }
        return dcGroup;
    }

