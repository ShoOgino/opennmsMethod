    /**
     * Instantiates a new mask element field.
     *
     * @param caption the caption
     */
    public MaskElementField(String caption) {
        setCaption(caption);
        table.addStyleName("light");
        table.setVisibleColumns(new Object[]{"mename", "mevalues"});
        table.setColumnHeader("mename", "Element Name");
        table.setColumnHeader("mevalues", "Element Values");
        table.setColumnExpandRatio("mevalues", 1);
        table.setEditable(!isReadOnly());
        table.setSelectable(true);
        table.setHeight("125px");
        table.setWidth("100%");
        table.setTableFieldFactory(new DefaultFieldFactory() {
            @Override
            public Field<?> createField(Container container, Object itemId, Object propertyId, Component uiContext) {
                if (propertyId.equals("mename")) {
                    final ComboBox field = new ComboBox();
                    field.setSizeFull();
                    field.setRequired(true);
                    field.setImmediate(true);
                    field.setNullSelectionAllowed(false);
                    field.setNewItemsAllowed(false);
                    field.addItem(Maskelement.TAG_UEI);
                    field.addItem(Maskelement.TAG_SOURCE);
                    field.addItem(Maskelement.TAG_NODEID);
                    field.addItem(Maskelement.TAG_HOST);
                    field.addItem(Maskelement.TAG_INTERFACE);
                    field.addItem(Maskelement.TAG_SNMPHOST);
                    field.addItem(Maskelement.TAG_SERVICE);
                    field.addItem(Maskelement.TAG_SNMP_EID);
                    field.addItem(Maskelement.TAG_SNMP_SPECIFIC);
                    field.addItem(Maskelement.TAG_SNMP_GENERIC);
                    field.addItem(Maskelement.TAG_SNMP_COMMUNITY);
                    return field;
                }
                if (propertyId.equals("mevalues")) {
                    final TextField field = new TextField();
                    field.setConverter(new CsvListConverter());
                    return field;
                }
                return super.createField(container, itemId, propertyId, uiContext);
            }
        });
        toolbar.addComponent(add);
        toolbar.addComponent(delete);
        toolbar.setVisible(table.isEditable());
    }

