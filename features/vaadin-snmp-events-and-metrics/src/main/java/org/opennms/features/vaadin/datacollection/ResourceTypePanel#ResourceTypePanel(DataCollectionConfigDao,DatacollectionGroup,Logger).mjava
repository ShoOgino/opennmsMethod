    /**
     * Instantiates a new resource type panel.
     *
     * @param dataCollectionConfigDao the OpenNMS Data Collection Configuration DAO
     * @param source the OpenNMS Data Collection Group object
     * @param logger the logger object
     */
    public ResourceTypePanel(final DataCollectionConfigDao dataCollectionConfigDao, final DatacollectionGroup source, final Logger logger) {
        addStyleName(Runo.PANEL_LIGHT);

        form = new ResourceTypeForm() {
            @Override
            public void saveResourceType(ResourceType resourceType) {
                if (isNew) {
                    table.addResourceType(resourceType);
                    logger.info("Resource type " + resourceType.getName() + " has been created.");
                } else {
                    logger.info("Resource type " + resourceType.getName() + " has been updated.");
                }
                table.refreshRowCache();
            }
            @Override
            public void deleteResourceType(ResourceType resourceType) {
                logger.info("Resource type " + resourceType.getName() + " has been removed.");
                table.removeItem(resourceType.getName());
                table.refreshRowCache();
            }
        };

        table = new ResourceTypeTable(source) {
            @Override
            public void updateExternalSource(BeanItem<ResourceType> item) {
                form.setItemDataSource(item, Arrays.asList(ResourceTypeForm.FORM_ITEMS));
                form.setVisible(true);
                form.setReadOnly(true);
                setIsNew(false);
            }
        };

        add = new Button("Add Resource Type", new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent event) {
                ResourceType rt = new ResourceType();
                rt.setName("New Resource Type");
                rt.setLabel("New Resource Type");
                rt.setResourceLabel("{index}");
                PersistenceSelectorStrategy persistence = new PersistenceSelectorStrategy();
                persistence.setClazz("org.opennms.netmgt.collectd.PersistAllSelectorStrategy"); // To avoid requires opennms-services
                rt.setPersistenceSelectorStrategy(persistence);
                StorageStrategy storage = new StorageStrategy();
                storage.setClazz(IndexStorageStrategy.class.getName());
                rt.setStorageStrategy(storage);
                table.updateExternalSource(new BeanItem<ResourceType>(rt));
                form.setReadOnly(false);
                setIsNew(true);
            }
        });

        setSpacing(true);
        setMargin(true);
        addComponent(table);
        addComponent(add);
        addComponent(form);

        setComponentAlignment(add, Alignment.MIDDLE_RIGHT);
    }

