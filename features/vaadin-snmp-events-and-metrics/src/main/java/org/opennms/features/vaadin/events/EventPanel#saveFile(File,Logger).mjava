    /**
     * Save file.
     *
     * @param file the file
     * @param logger the logger
     */
    private void saveFile(final File file, final Logger logger) {
        try {
            // Updating the base events object with the new events set.
            baseEventsObject.setEvents(eventTable.getOnmsEvents());
            // Normalize the Event Content (required to avoid marshaling problems)
            // TODO Are other normalizations required ?
            for (org.opennms.netmgt.xml.eventconf.Event event : baseEventsObject.getEvents()) {
                logger.debug("Normalizing event " + event.getUei());
                final AlarmData ad = event.getAlarmData();
                if (ad != null && (ad.getReductionKey() == null || ad.getReductionKey().trim().isEmpty())) {
                    event.setAlarmData(null);
                }
                final Mask m = event.getMask();
                if (m != null && m.getMaskelements().isEmpty()) {
                    event.setMask(null);
                }
            }
            // Save the XML of the new events
            saveEvents(baseEventsObject, file, logger);
            // Add a reference to the new file into eventconf.xml if there are events
            String fileName = file.getAbsolutePath().replaceFirst(".*\\" + File.separatorChar + "events\\" + File.separatorChar + "(.*)", "events" + File.separatorChar + "$1");
            final Events rootEvents = eventConfDao.getRootEvents();
            final File rootFile = ConfigFileConstants.getFile(ConfigFileConstants.EVENT_CONF_FILE_NAME);
            if (baseEventsObject.getEvents().size() > 0) {
                if (!rootEvents.getEventFiles().contains(fileName)) {
                    logger.info("Adding a reference to " + fileName + " inside eventconf.xml.");
                    rootEvents.getEventFiles().add(0, fileName);
                    saveEvents(rootEvents, rootFile, logger);
                }
            } else {
                // If a reference to an empty events file exist, it should be removed.
                if (rootEvents.getEventFiles().contains(fileName)) {
                    logger.info("Removing a reference to " + fileName + " inside eventconf.xml because there are no events.");
                    rootEvents.getEventFiles().remove(fileName);
                    saveEvents(rootEvents, rootFile, logger);
                }
            }
            EventBuilder eb = new EventBuilder(EventConstants.EVENTSCONFIG_CHANGED_EVENT_UEI, "WebUI");
            eventProxy.send(eb.getEvent());
            logger.info("The event's configuration reload operation is being performed.");
            success();
        } catch (Exception e) {
            logger.error(e.getClass() + ": " + (e.getMessage() == null ? "[No Details]" : e.getMessage()));
            if (e.getMessage() == null) {
                StringWriter sw = new StringWriter();
                PrintWriter pw = new PrintWriter(sw);
                e.printStackTrace(pw);
                logger.error(sw.toString());
            }
            failure(e.getMessage());
        }
    }

