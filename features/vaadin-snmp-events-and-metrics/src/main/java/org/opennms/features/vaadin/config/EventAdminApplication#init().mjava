    /* (non-Javadoc)
     * @see com.vaadin.Application#init()
     */
    @Override
    public void init() {
        if (eventProxy == null)
            throw new RuntimeException("eventProxy cannot be null.");
        if (eventConfDao == null)
            throw new RuntimeException("eventConfDao cannot be null.");

        setTheme(Runo.THEME_NAME);
        final File eventsDir = new File(ConfigFileConstants.getFilePathString(), "events");

        final VerticalLayout layout = new VerticalLayout();

        final HorizontalLayout toolbar = new HorizontalLayout();
        toolbar.setMargin(true);

        final ComboBox eventSource = new ComboBox();
        toolbar.addComponent(eventSource);
        eventSource.setImmediate(true);
        eventSource.setNullSelectionAllowed(false);
        eventSource.setContainerDataSource(new FilesystemContainer(eventsDir));
        eventSource.setItemCaptionPropertyId(FilesystemContainer.PROPERTY_NAME);
        eventSource.addListener(new ComboBox.ValueChangeListener() {
            @Override
            public void valueChange(ValueChangeEvent event) {
                final File file = (File) event.getProperty().getValue();
                LogUtils.infof(this, "Loading events from %s", file);
                Events events = JaxbUtils.unmarshal(Events.class, file);
                layout.removeComponent(layout.getComponent(1));
                layout.addComponent(createEventPanel(file, events));
            }
        });

        final Button add = new Button("Add File");
        toolbar.addComponent(add);
        add.addListener(new Button.ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
                PromptWindow w = new PromptWindow("New Events Configuration", "Events File Name") {
                    @Override
                    public void textFieldChanged(String fieldValue) {
                        File file = new File(eventsDir, fieldValue);
                        LogUtils.infof(this, "Adding new events file %s", file);
                        Events events = new Events();
                        layout.removeComponent(layout.getComponent(1));
                        layout.addComponent(createEventPanel(file, events));
                    }
                };
                getMainWindow().addWindow(w);
            }
        });

        final Button remove = new Button("Remove File");
        toolbar.addComponent(remove);
        remove.addListener(new Button.ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
                getMainWindow().showNotification("Not impementet yet!");
            }
        });

        layout.addComponent(toolbar);
        layout.addComponent(new Label(""));
        layout.setComponentAlignment(toolbar, Alignment.MIDDLE_RIGHT);

        final Window mainWindow = new Window("Events Administration", layout);
        setMainWindow(mainWindow);
    }

