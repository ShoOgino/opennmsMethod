    /**
     * Instantiates a new SNMP collection panel.
     *
     * @param dataCollectionConfigDao the data collection configuration DAO
     * @param logger the logger
     */
    public SnmpCollectionPanel(final DataCollectionConfigDao dataCollectionConfigDao, final Logger logger) {
        setCaption("SNMP Collections");
        addStyleName(Runo.PANEL_LIGHT);

        final DatacollectionConfig dataCollectionConfig = dataCollectionConfigDao.getRootDataCollection();

        form = new SnmpCollectionForm(dataCollectionConfigDao) {
            @Override
            public void saveSnmpCollection(SnmpCollection snmpCollection) {
                if (isNew) {
                    table.addSnmpCollection(snmpCollection);
                    logger.info("SNMP Collection " + snmpCollection.getName() + " has been created.");
                } else {
                    logger.info("SNMP Collection " + snmpCollection.getName() + " has been updated.");
                }
                table.refreshRowCache();
                saveSnmpCollections(dataCollectionConfig, logger);
            }
            @Override
            public void deleteSnmpCollection(SnmpCollection snmpCollection) {
                logger.info("SNMP Collection " + snmpCollection.getName() + " has been removed.");
                table.removeItem(snmpCollection.getName());
                table.refreshRowCache();
                saveSnmpCollections(dataCollectionConfig, logger);
            }
        };

        table = new SnmpCollectionTable(dataCollectionConfig) {
            @Override
            public void updateExternalSource(BeanItem<SnmpCollection> item) {
                form.setItemDataSource(item, Arrays.asList(SnmpCollectionForm.FORM_ITEMS));
                form.setVisible(true);
                form.setReadOnly(true);
                setIsNew(false);
            }
        };

        add = new Button("Add SNMP Collection", new Button.ClickListener() {
            public void buttonClick(Button.ClickEvent event) {
                SnmpCollection collection = new SnmpCollection();
                collection.setName("New Collection");
                collection.setSnmpStorageFlag("select");
                Rrd rrd = new Rrd();
                rrd.setStep(300);
                rrd.addRra("RRA:AVERAGE:0.5:1:2016");
                rrd.addRra("RRA:AVERAGE:0.5:12:1488");
                rrd.addRra("RRA:AVERAGE:0.5:288:366");
                rrd.addRra("RRA:MAX:0.5:288:366");
                rrd.addRra("RRA:MIN:0.5:288:366");
                collection.setRrd(rrd);
                table.updateExternalSource(new BeanItem<SnmpCollection>(collection));
                form.setReadOnly(false);
                setIsNew(true);
            }
        });

        setSpacing(true);
        setMargin(true);
        addComponent(table);
        addComponent(add);
        addComponent(form);

        setComponentAlignment(add, Alignment.MIDDLE_RIGHT);
    }

