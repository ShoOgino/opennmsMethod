    private void initializeViewChoiceDisplay(ViewChoiceDisplay viewChoiceDisplay) {
        m_viewChoiceDisplay = viewChoiceDisplay;
        viewChoiceDisplay.getChooseButton().addClickHandler(new ClickHandler() {
            
            @Override
            public void onClick(ClickEvent event) {
                ResourceListItem resource = getView().getSelectedResource();
                if(resource != null) {
                    StringBuilder urlBuilder = new StringBuilder();
                    urlBuilder.append( getBaseUrl() + "/KSC/customGraphEditDetails.htm");
                    urlBuilder.append("?resourceId=" + URL.encodeQueryString(resource.getId()));

                    Location.assign(urlBuilder.toString());
                }else {
                    getView().showWarning();
                }
                
            }
        });
        
        viewChoiceDisplay.getViewButton().addClickHandler(new ClickHandler() {
            
            @Override
            public void onClick(ClickEvent event) {
                ResourceListItem resource = getView().getSelectedResource();
                if(resource != null){
                    StringBuilder urlBuilder = new StringBuilder();
                    urlBuilder.append(getBaseUrl() + "KSC/customGraphChooseResource.htm");
                    urlBuilder.append("?selectedResourceId=");
                    urlBuilder.append("&resourceId=" +  URL.encodeQueryString(resource.getId()));
                    
                    Location.assign(urlBuilder.toString());
                }else{
                    getView().showWarning();
                }
                
            }
        });
    }

