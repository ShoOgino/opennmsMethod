    /**
     * Returns a list of nodes with resources
     *
     * @return a list of nodes
     */
    public List<OnmsNode> getNodesWithResources() {
        return (List<OnmsNode>) m_transactionOperations.execute(new TransactionCallback<Object>() {
            @Override
            public Object doInTransaction(TransactionStatus transactionStatus) {
                List<OnmsNode> onmsNodeList = m_nodeDao.findAll();
                for (int i = onmsNodeList.size() - 1; i >= 0; i--) {
                    OnmsResource resource = m_resourceDao.getResourceById("node[" + onmsNodeList.get(i).getId() + "]");
                    if (resource.getChildResources().size() == 0) {
                        onmsNodeList.remove(i);
                    }
                }
                return onmsNodeList;
            }
        });
    }

