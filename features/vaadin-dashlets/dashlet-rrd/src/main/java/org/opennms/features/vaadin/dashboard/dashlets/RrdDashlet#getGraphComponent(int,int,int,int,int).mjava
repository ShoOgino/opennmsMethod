    /**
     * Returns the graph component for a given graph of the {@link DashletSpec}.
     *
     * @param i              the entry id
     * @param width          the width
     * @param height         the height
     * @param timeFrameType  the timeframe type
     * @param timeFrameValue the timeframe value
     * @return the component
     */
    private Component getGraphComponent(int i, int width, int height, int timeFrameType, int timeFrameValue) {
        String graphTitle = getDashletSpec().getParameters().get("graphLabel" + i);
        String graphName = RrdGraphHelper.getGraphNameFromQuery(getDashletSpec().getParameters().get("graphUrl" + i));
        String resourceId = getDashletSpec().getParameters().get("resourceId" + i);

        GraphContainer graph = new GraphContainer(graphName, resourceId);
        graph.setTitle(graphTitle);
        // Setup the time span
        Calendar cal = new GregorianCalendar();
        graph.setEnd(cal.getTime());
        cal.add(timeFrameType, -timeFrameValue);
        graph.setStart(cal.getTime());
        // Use all of the available width
        graph.setWidthRatio(1.0d);

        VerticalLayout verticalLayout = new VerticalLayout();

        HorizontalLayout horizontalLayout = new HorizontalLayout();
        horizontalLayout.addStyleName("box");
        horizontalLayout.setWidth("100%");
        horizontalLayout.setHeight("42px");

        VerticalLayout leftLayout = new VerticalLayout();
        leftLayout.setDefaultComponentAlignment(Alignment.TOP_LEFT);
        leftLayout.addStyleName("margin");

        Label labelFrom = new Label(getDashletSpec().getParameters().get("nodeLabel" + i));
        labelFrom.addStyleName("text");

        Label labelTo = new Label(getDashletSpec().getParameters().get("resourceTypeLabel" + i) + ": " + getDashletSpec().getParameters().get("resourceLabel" + i));
        labelTo.addStyleName("text");

        leftLayout.addComponent(labelFrom);
        leftLayout.addComponent(labelTo);

        horizontalLayout.addComponent(leftLayout);
        horizontalLayout.setExpandRatio(leftLayout, 1.0f);

        verticalLayout.addComponent(horizontalLayout);
        verticalLayout.addComponent(graph);
        verticalLayout.setWidth(width, Unit.PIXELS);

        verticalLayout.setComponentAlignment(horizontalLayout, Alignment.MIDDLE_CENTER);
        verticalLayout.setComponentAlignment(graph, Alignment.MIDDLE_CENTER);
        verticalLayout.setMargin(true);

        return verticalLayout;
    }

