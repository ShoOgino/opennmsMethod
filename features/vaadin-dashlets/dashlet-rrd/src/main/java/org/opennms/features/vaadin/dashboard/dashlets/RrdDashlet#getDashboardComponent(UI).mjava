    @Override
    public DashletComponent getDashboardComponent(final UI ui) {
        if (m_dashboardComponent == null) {
            m_dashboardComponent = new AbstractDashletComponent() {
                private VerticalLayout m_verticalLayout = new VerticalLayout();

                {
                    m_verticalLayout.setCaption(getName());
                    m_verticalLayout.setSizeFull();
                }

                @Override
                public void refresh() {
                    /**
                     * removing old components
                     */
                    m_verticalLayout.removeAllComponents();

                    /**
                     * iniatizing the parameters
                     */
                    int columns = 0;
                    int rows = 0;
                    int width = 0;
                    int height = 0;

                    try {
                        columns = Integer.parseInt(getDashletSpec().getParameters().get("columns"));
                    } catch (NumberFormatException numberFormatException) {
                        columns = 1;
                    }

                    try {
                        rows = Integer.parseInt(getDashletSpec().getParameters().get("rows"));
                    } catch (NumberFormatException numberFormatException) {
                        rows = 1;
                    }

                    try {
                        width = Integer.parseInt(getDashletSpec().getParameters().get("width"));
                    } catch (NumberFormatException numberFormatException) {
                        width = 400;
                    }

                    try {
                        height = Integer.parseInt(getDashletSpec().getParameters().get("height"));
                    } catch (NumberFormatException numberFormatException) {
                        height = 100;
                    }

                    /**
                     * getting the timeframe values
                     */
                    int timeFrameValue;
                    int timeFrameType;

                    try {
                        timeFrameValue = Integer.parseInt(getDashletSpec().getParameters().get("timeFrameValue"));
                    } catch (NumberFormatException numberFormatException) {
                        timeFrameValue = 1;
                    }

                    try {
                        timeFrameType = Integer.parseInt(getDashletSpec().getParameters().get("timeFrameType"));
                    } catch (NumberFormatException numberFormatException) {
                        timeFrameType = Calendar.HOUR;
                    }

                    int i = 0;

                    ui.getPage().getStyles().add(".box { margin: 5px; background-color: #444; border: 1px solid #999; border-top: 0; overflow: auto; width: 100% }");
                    ui.getPage().getStyles().add(".text { color:#ffffff; line-height: 11px; font-size: 9px; font-family: 'Lucida Grande', Verdana, sans-serif; font-weight: bold; }");
                    ui.getPage().getStyles().add(".margin { margin:5px; }");

                    Accordion accordion = new Accordion();
                    accordion.setSizeFull();

                    /**
                     * adding the components
                     */
                    for (int y = 0; y < rows; y++) {
                        for (int x = 0; x < columns; x++) {
                            String graphUrl = getDashletSpec().getParameters().get("graphUrl" + i);

                            if (graphUrl != null && !"".equals(graphUrl)) {
                                accordion.addTab(getGraphComponent(i, width, height, timeFrameType, timeFrameValue), getDashletSpec().getParameters().get("nodeLabel" + i) + "/" + getDashletSpec().getParameters().get("resourceTypeLabel" + i) + ": " + getDashletSpec().getParameters().get("resourceLabel" + i));
                            }
                            i++;
                        }
                    }

                    m_verticalLayout.addComponent(accordion);
                }

                @Override
                public Component getComponent() {
                    return m_verticalLayout;
                }
            };
        }

        return m_dashboardComponent;
    }

