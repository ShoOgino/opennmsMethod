    /**
     * Constructor for instantiating new objects.
     *
     * @param dashletSpec the {@link DashletSpec} to be used
     */
    public TopologyDashlet(String name, DashletSpec dashletSpec) {
        /**
         * Setting the member fields
         */
        m_name = name;
        m_dashletSpec = dashletSpec;

        /**
         * Setting up the layout
         */
        setCaption(getName());
        setSizeFull();

        String focusNodes = "";
        String szl = "";
        String provider = "";

        if (m_dashletSpec.getParameters().containsKey("focusNodes")) {
            focusNodes = m_dashletSpec.getParameters().get("focusNodes");
        }

        if (m_dashletSpec.getParameters().containsKey("szl")) {
            szl = m_dashletSpec.getParameters().get("szl");
        }

        if (m_dashletSpec.getParameters().containsKey("provider")) {
            provider = m_dashletSpec.getParameters().get("provider");
        }

        String query = "";

        if (!"".equals(focusNodes)) {
            query += "focusNodes=" + focusNodes + "&";
        }

        if (!"".equals(szl)) {
            query += "szl=" + szl + "&";
        }

        if (!"".equals(provider)) {
            query += "provider=" + provider + "&";
        }
        /**
         * creating browser frame to display node-maps
         */
        BrowserFrame browserFrame = new BrowserFrame(null, new ExternalResource("/opennms/topology?" + query));
        browserFrame.setSizeFull();
        addComponent(browserFrame);
    }

