    @Override
    public DashletComponent getDashboardComponent(final UI ui) {
        if (m_dashboardComponent == null) {
            m_dashboardComponent = new AbstractDashletComponent() {
                private HorizontalLayout m_horizontalLayout = new HorizontalLayout();

                {
                    m_horizontalLayout.setCaption(getName());
                    m_horizontalLayout.setSizeFull();
                    injectDashboardStyles();
                }

                /**
                 * Injects CSS styles in the current page
                 */
                private void injectDashboardStyles() {
                    ui.getPage().getStyles().add(".summary.cleared { background: #000000; border-left: 8px solid #858585; }");
                    ui.getPage().getStyles().add(".summary.normal { background: #000000; border-left: 8px solid #336600; }");
                    ui.getPage().getStyles().add(".summary.indeterminate {  background: #000000; border-left: 8px solid #999; }");
                    ui.getPage().getStyles().add(".summary.warning { background: #000000; border-left: 8px solid #FFCC00; }");
                    ui.getPage().getStyles().add(".summary.minor { background: #000000;  border-left: 8px solid #FF9900; }");
                    ui.getPage().getStyles().add(".summary.major { background: #000000; border-left: 8px solid #FF3300; }");
                    ui.getPage().getStyles().add(".summary.critical { background: #000000; border-left: 8px solid #CC0000; }");
                    ui.getPage().getStyles().add(".summary.global { background: #000000; border-left: 8px solid #000000; }");
                    ui.getPage().getStyles().add(".summary { padding: 5px 5px; margin: 1px; }");
                    ui.getPage().getStyles().add(".summary-font { font-size: 17px; line-height: normal; text-align: right; color: #3ba300; }");
                    ui.getPage().getStyles().add(".summary-font-legend { font-size: 9px; line-height: normal; text-align: right; color: #3ba300; }");
                }

                @Override
                public void refresh() {
                    m_timeslot = 3600;

                    try {
                        m_timeslot = Math.max(1, Integer.parseInt(getDashletSpec().getParameters().get("timeslot")));
                    } catch (NumberFormatException numberFormatException) {
                        /**
                         * Just ignore
                         */
                    }

                    m_horizontalLayout.removeAllComponents();

                    Accordion accordion = new Accordion();
                    accordion.setSizeFull();

                    Component severity = getComponentSeverity(16);
                    Component uei = getComponentUei(16);

                    VerticalLayout v1 = new VerticalLayout(severity);
                    v1.setSizeFull();
                    v1.setComponentAlignment(severity, Alignment.MIDDLE_CENTER);
                    v1.setMargin(true);
                    accordion.addTab(v1, "by Severity");

                    VerticalLayout v2 = new VerticalLayout(uei);
                    v2.setSizeFull();
                    v2.setComponentAlignment(uei, Alignment.MIDDLE_CENTER);
                    v2.setMargin(true);
                    accordion.addTab(v2, "by Uei");

                    m_horizontalLayout.addComponent(accordion);
                }

                @Override
                public Component getComponent() {
                    return m_horizontalLayout;
                }

                @Override
                public boolean isBoosted() {
                    return SummaryDashlet.this.m_boosted;
                }
            };
        }

        return m_dashboardComponent;
    }

