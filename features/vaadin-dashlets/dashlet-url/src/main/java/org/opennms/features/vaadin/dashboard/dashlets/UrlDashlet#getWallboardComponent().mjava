    @Override
    public DashletComponent getWallboardComponent() {
        if (m_dashletComponent == null) {
            m_dashletComponent = new AbstractDashletComponent() {
                private VerticalLayout m_verticalLayout = new VerticalLayout();

                {
                    m_verticalLayout.setCaption(getName());
                    m_verticalLayout.setSizeFull();
                }

                @Override
                public void refresh() {
                    m_verticalLayout.removeAllComponents();


                    String url = "";
                    String username = "";
                    String password = "";

                    if (getDashletSpec().getParameters().containsKey("url")) {
                        url = getDashletSpec().getParameters().get("url");
                    }

                    if (getDashletSpec().getParameters().containsKey("username")) {
                        username = getDashletSpec().getParameters().get("username");
                    }

                    if (getDashletSpec().getParameters().containsKey("password")) {
                        password = getDashletSpec().getParameters().get("password");
                    }

                    String usernamePassword = "";

                    if (!"".equals(username) && !"".equals(password)) {
                        usernamePassword = username + ":" + password;

                    }

                    if (!"".equals(url)) {
                        /**
                         * Try to parse the given URL...
                         */
                        URL parsedUrl = null;

                        try {
                            parsedUrl = new URL(url);
                        } catch (MalformedURLException e) {
                            m_verticalLayout.addComponent(new Label("MalformedURLException: " + e.getMessage()));
                            return;
                        }

                        /**
                         * If successful, construct a wellformed URL including the basic auth credentials
                         */
                        URL urlWithAuth = null;

                        try {
                            urlWithAuth = new URI(parsedUrl.getProtocol(), usernamePassword, parsedUrl.getHost(), parsedUrl.getPort() == -1 ? parsedUrl.getDefaultPort() : parsedUrl.getPort(), parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL();
                        } catch (MalformedURLException e) {
                            m_verticalLayout.addComponent(new Label("MalformedURLException: " + e.getMessage()));
                            return;
                        } catch (URISyntaxException e) {
                            m_verticalLayout.addComponent(new Label("URISyntaxException: " + e.getMessage()));
                            return;
                        }

                        /**
                         * creating browser frame to display the URL
                         */
                        BrowserFrame browserFrame = new BrowserFrame(null, new ExternalResource(urlWithAuth));
                        browserFrame.setSizeFull();
                        m_verticalLayout.addComponent(browserFrame);
                    } else {
                        m_verticalLayout.addComponent(new Label("No URL specified!"));
                    }
                }

                @Override
                public Component getComponent() {
                    return m_verticalLayout;
                }
            };
        }

        return m_dashletComponent;
    }

