    /**
     * Created as business service search criteria for a given map.
     *
     * @param map the map to inverstigate
     * @return the criteria
     */
    public static BusinessServiceSearchCriteria fromMap(Map<String, String> map) {
        boolean filterByName = getBooleanForKey(map, "filterByName");
        String nameValue = getStringForKey(map, "nameValue", "");
        boolean filterByAttribute = getBooleanForKey(map, "filterByAttribute");
        String attributeKey = getStringForKey(map, "attributeKey", "");
        String attributeValue = getStringForKey(map, "attributeValue", "");
        boolean filterBySeverity = getBooleanForKey(map, "filterBySeverity");
        String severityValue = getStringForKey(map, "severityValue", Status.WARNING.getLabel());
        String severityCompareOperator = BSMConfigHelper.getStringForKey(map, "severityCompareOperator", BusinessServiceSearchCriteriaBuilder.CompareOperator.GreaterOrEqual.name());
        String orderBy = BSMConfigHelper.getStringForKey(map, "orderBy", BusinessServiceSearchCriteriaBuilder.Order.Name.name());
        String orderSequence = BSMConfigHelper.getStringForKey(map, "orderSequence", BusinessServiceSearchCriteriaBuilder.Sequence.Ascending.name());
        int resultsLimit = getIntForKey(map, "resultsLimit", 10);

        BusinessServiceSearchCriteriaBuilder b = new BusinessServiceSearchCriteriaBuilder();

        if (filterByName) {
            b.name(nameValue);
        }
        if (filterByAttribute) {
            b.attribute(attributeKey, attributeValue);
        }
        if (filterBySeverity) {
            b.filterSeverity(BusinessServiceSearchCriteriaBuilder.CompareOperator.valueOf(severityCompareOperator), Status.valueOf(severityValue));
        }

        return b.order(BusinessServiceSearchCriteriaBuilder.Order.valueOf(orderBy))
                .order(BusinessServiceSearchCriteriaBuilder.Sequence.valueOf(orderSequence))
                .limit(resultsLimit);
    }

