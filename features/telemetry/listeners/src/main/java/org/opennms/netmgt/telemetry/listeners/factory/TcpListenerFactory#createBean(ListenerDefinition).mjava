    @Override
    public Listener createBean(ListenerDefinition listenerDefinition) {
        // TcpListener only supports one parser at a time
        if (listenerDefinition.getParsers().size() != 1) {
            throw new IllegalArgumentException("The simple TCP listener supports exactly one parser");
        }
        // Ensure each defined parser is of type TcpParser
        final List<TcpParser> parser = listenerDefinition.getParsers().stream()
                .map(p -> telemetryRegistry.getParser(p))
                .filter(p -> p instanceof TcpParser && p != null)
                .map(p -> (TcpParser) p).collect(Collectors.toList());
        if (parser.size() != listenerDefinition.getParsers().size()) {
            throw new IllegalArgumentException("Each parser must be of type TcpParser but was not.");
        }
        final TcpListener listener = new TcpListener(listenerDefinition.getName(), parser.iterator().next(), telemetryRegistry.getMetricRegistry());
        final BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(listener);
        wrapper.setPropertyValues(listenerDefinition.getParameterMap());
        return listener;
    }

