    @Test
    public void testFloat64Value() throws Exception {
        final FloatValue float64Value1 = (FloatValue) FloatValue.parserWith64Bit("float64Name1", Optional.empty()).parse(null, (ByteBuffer) ByteBuffer.allocate(8).putDouble(0).flip());
        Assert.assertEquals(0f, float64Value1.getValue(), 0);
        Assert.assertEquals("float64Name1", float64Value1.getName());

        final FloatValue float64Value2 = (FloatValue) FloatValue.parserWith64Bit("float64Name2", Optional.empty()).parse(null, (ByteBuffer) ByteBuffer.allocate(8).putDouble(123.456).flip());
        Assert.assertEquals(123.456, float64Value2.getValue(), 0);
        Assert.assertEquals("float64Name2", float64Value2.getName());

        Assert.assertEquals(4.9E-324, ((FloatValue) FloatValue.parserWith64Bit("float64Name", Optional.empty()).parse(null, ByteBuffer.wrap(new byte[]{0, 0, 0, 0, 0, 0, 0, 1}))).getValue(), 0);
        Assert.assertEquals(4.9E-324, ((FloatValue) FloatValue.parserWith64Bit("float64Name", Optional.empty()).parse(null, ByteBuffer.wrap(new byte[]{0, 0, 0, 0, 0, 0, 1}))).getValue(), 0);
        Assert.assertEquals(4.9E-324, ((FloatValue) FloatValue.parserWith64Bit("float64Name", Optional.empty()).parse(null, ByteBuffer.wrap(new byte[]{0, 0, 0, 0, 0, 1}))).getValue(), 0);
        Assert.assertEquals(4.9E-324, ((FloatValue) FloatValue.parserWith64Bit("float64Name", Optional.empty()).parse(null, ByteBuffer.wrap(new byte[]{0, 0, 0, 0, 1}))).getValue(), 0);
        Assert.assertEquals(4.9E-324, ((FloatValue) FloatValue.parserWith64Bit("float64Name", Optional.empty()).parse(null, ByteBuffer.wrap(new byte[]{0, 0, 0, 1}))).getValue(), 0);
        Assert.assertEquals(4.9E-324, ((FloatValue) FloatValue.parserWith64Bit("float64Name", Optional.empty()).parse(null, ByteBuffer.wrap(new byte[]{0, 0, 1}))).getValue(), 0);
        Assert.assertEquals(4.9E-324, ((FloatValue) FloatValue.parserWith64Bit("float64Name", Optional.empty()).parse(null, ByteBuffer.wrap(new byte[]{0, 1}))).getValue(), 0);
        Assert.assertEquals(4.9E-324, ((FloatValue) FloatValue.parserWith64Bit("float64Name", Optional.empty()).parse(null, ByteBuffer.wrap(new byte[]{1}))).getValue(), 0);
    }

