    @Override
    protected void channelRead0(final ChannelHandlerContext ctx, final DefaultAddressedEnvelope<RecordProvider, InetSocketAddress> packet) throws Exception {
        LOG.trace("Got packet: {}", packet);

        packet.content().getRecords().forEach(record -> {
            final ByteBuffer buffer = serialize(this.protocol, record);

            // Build the message to dispatch
            final TelemetryMessage msg = new TelemetryMessage(packet.sender(), buffer);

            // Dispatch and retain a reference to the packet
            // in the case that we are sharing the underlying byte array
            final CompletableFuture<TelemetryMessage> future = dispatcher.send(msg);

            // Pass exception if dispatching fails
            future.handle((result, ex) -> {
                if (ex != null) {
                    ctx.fireExceptionCaught(ex);
                }
                return result;
            });
        });
    }

