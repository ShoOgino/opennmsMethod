    public TemplateManager getTemplateManager(final InetSocketAddress remoteAddress, final InetSocketAddress localAddress) {
        return new TemplateManager() {
            @Override
            public void add(final long observationDomainId, final Template template) {
                UdpSession.this.templates.put(new Key(remoteAddress, localAddress, observationDomainId, template.id), new Value(template));
            }

            @Override
            public void remove(final long observationDomainId, final int templateId) {
                UdpSession.this.templates.remove(new Key(remoteAddress, localAddress, observationDomainId, templateId));
            }

            @Override
            public void removeAll(final long observationDomainId, final Template.Type type) {
                UdpSession.this.templates.entrySet().removeIf(e -> e.getKey().observationDomainId == observationDomainId && e.getValue().template.type() == type);
            }

            @Override
            public TemplateResolver getResolver(final long observationDomainId) {
                // TODO: Do we have to check template timeout on each get?
                return templateId -> Optional.ofNullable(UdpSession.this.templates.get(new Key(remoteAddress, localAddress, observationDomainId, templateId))).map(v -> v.template);
            }
        };
    }

