    public static ByteBuffer serialize(final Protocol protocol, final RecordProvider.Record record) {
        // Build BSON document from flow
        final BasicOutputBuffer output = new BasicOutputBuffer();
        try (final BsonBinaryWriter writer = new BsonBinaryWriter(output)) {
            writer.writeStartDocument();

            writer.writeInt32("version", protocol.magic);
            writer.writeInt64("domain", record.observationDomainId);
            writer.writeTimestamp("exportTime", new BsonTimestamp(record.exportTime << 32));
            writer.writeInt32("scoped", record.scopeFieldCount);

            writer.writeInt32("recordCount", record.recordCount);
            writer.writeInt64("sequenceNumber", record.sequenceNumber);

            writer.writeStartDocument("elements");

            final FlowBuilderVisitor visitor = new FlowBuilderVisitor(writer);
            for (final Value value : record.values) {
                value.visit(visitor);
            }

            writer.writeEndDocument();

            writer.writeEndDocument();
        }

        return output.getByteBuffers().get(0).asNIO();
    }

