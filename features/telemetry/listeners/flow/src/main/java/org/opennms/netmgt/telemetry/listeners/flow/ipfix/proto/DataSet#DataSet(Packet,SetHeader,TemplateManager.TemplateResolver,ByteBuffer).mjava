    public DataSet(final Packet packet,
                   final SetHeader header,
                   final TemplateManager.TemplateResolver templateResolver,
                   final ByteBuffer buffer) throws InvalidPacketException {
        super(packet, header);

        this.templateResolver = Objects.requireNonNull(templateResolver);
        this.template = this.templateResolver.lookup(this.header.setId)
                .orElseThrow(() -> new InvalidPacketException(buffer, "Unknown Template ID: %d", this.header.setId));

        // For variable length fields we assume at least the length value (1 byte) to be present
        final int minimumRecordLength = this.template.stream()
                .mapToInt(f -> f.length() != FieldValue.VARIABLE_SIZED ? f.length() : 1).sum();

        final List<DataRecord> records = new LinkedList();
        while (buffer.remaining() >= minimumRecordLength) {
            records.add(new DataRecord(this, this.templateResolver, this.template, buffer));
        }

        if (records.size() == 0) {
            throw new InvalidPacketException(buffer, "Empty set");
        }

        this.records = Collections.unmodifiableList(records);
    }

