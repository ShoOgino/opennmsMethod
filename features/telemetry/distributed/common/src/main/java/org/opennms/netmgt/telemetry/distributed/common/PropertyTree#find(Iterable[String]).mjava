    /**
     * Finds the node at the given path.
     *
     * @param path the path of the node to return split into its elements
     * @return the {@link Node} if there is a node on the given path or an {@link Optional#empty()} value if one of the nodes in the path does not exist
     */
    public Optional<Node> find(final Iterable<String> path) {
        Node node = this.root;
        for (final String p : path) {
            node = node.children.get(p);
            if (node == null) {
                return Optional.empty();
            }
        }

        return Optional.of(node);
    }

