    /**
     * Get the values of all child nodes at the given path, enumerating any subtrees and converting their
     * paths into dot-separated property names. This is intended to handle parameter keys containing dots -
     * see NMS-12738.
     *
     * @param path the path of the node to return split into its elements
     * @return the {@link Map} from the children node names to its values. If one of the nodes in the path does not exist this will return an empty {@link Map}
     */

    public Map<String, String> getFlatMap(final String... path) {
        Map<String,String> outmap = new HashMap<>();
        this.find(path).ifPresent(n -> {
            for(Map.Entry<String, Node> e: n.children.entrySet()) {
                buildKeysRecursive(e.getValue(), e.getKey(), outmap);
            }
        });
        return outmap;
    }

