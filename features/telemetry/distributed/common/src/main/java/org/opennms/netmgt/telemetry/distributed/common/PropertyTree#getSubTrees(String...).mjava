    /**
     * Get the children nodes at the given path represented as sub-trees. The sub-trees are mapped by the children node names.
     * The resulting {@link Map} will contain an entry for each children of the addressed node. The name of the children will be used as key.
     * The value will be new {@link PropertyTree} instance in which the children node is used as root node.
     *
     * @param path the path of the node to return split into its elements
     * @return the {@link Map} from the children node names to its representations as sub-trees. If one of the nodes in the path does not exist this will return an empty {@link Map}
     */
    public Map<String, PropertyTree> getSubTrees(final String... path) {
        return this.find(path)
                .map(node -> Maps.transformValues(node.children, PropertyTree::new))
                .orElseGet(Collections::emptyMap);
    }

