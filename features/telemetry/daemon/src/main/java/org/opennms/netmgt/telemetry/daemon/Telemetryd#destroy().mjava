    @Override
    public synchronized void destroy() {
        LOG.info("{} is stopping.", NAME);

        // Stop the listeners
        for (Listener listener : listeners) {
            try {
                LOG.info("Stopping {} listener.", listener.getName());
                listener.stop();
            } catch (InterruptedException e) {
                LOG.warn("Error while stopping listener.", e);
            }
        }
        listeners.clear();

        // Stop the dispatchers
        for (AsyncDispatcher<?> dispatcher : dispatchers) {
            try {
                LOG.debug("Closing dispatcher.", dispatcher);
            } catch (Exception e) {
                LOG.warn("Error while closing dispatcher.", e);
            }
        }
        listeners.clear();

        // Stop the consumers
        for (TelemetryMessageConsumer consumer : consumers) {
            try {
                LOG.info("Stopping consumer for {} protocol.", consumer.getProtocol().getName());
                messageConsumerManager.unregisterConsumer(consumer);
            } catch (Exception e) {
                LOG.error("Error while stopping consumer.", e);
            }
        }
        consumers.clear();

        LOG.info("{} is stopped.", NAME);
    }

