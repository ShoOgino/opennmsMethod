    @Test
    public void testParamsByGroup() {

        PackageConfig connectorPackage = new PackageConfig();
        connectorPackage.getParameters().add(new Parameter("port", "50052"));
        connectorPackage.getParameters().add(new Parameter("group1","paths", "/interfaces"));
        connectorPackage.getParameters().add(new Parameter("group1", "frequency", "5000"));
        connectorPackage.getParameters().add(new Parameter("group2", "frequency", "3000"));
        connectorPackage.getParameters().add(new Parameter("group2", "paths",
                "/network-instances/network-instance[instance-name='master']"));
        connectorPackage.getParameters().add(new Parameter("group3", "paths", "/protocols/protocol/bgp"));
        connectorPackage.getParameters().add(new Parameter("group3", "frequency", "4000"));

        ConnectorManager connectorManager = new ConnectorManager();
        connectorManager.setEntityScopeProvider(new MockEntityScopeProvider());
        ServiceRef serviceRef = new ServiceRef(1, InetAddressUtils.ONE_TWENTY_SEVEN, "OPENCONFIG");
        List<Map<String, String>> groupedParams = connectorManager.getGroupedParams(connectorPackage, serviceRef);
        Assert.assertEquals(4, groupedParams.size());
        // Each map should either belongs to different group which has paths or it should be a group with port ( which is global)
        for(Map<String, String> parms : groupedParams) {
            Assert.assertTrue(parms.containsKey("paths") || parms.containsKey("port"));
        }

    }

