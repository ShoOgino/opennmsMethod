    @PostConstruct
    public void init() {
        flowsPersistedMeter = metricRegistry.meter("flowsPersisted");
        logParsingTimer = metricRegistry.timer("logParsing");
        logEnrichementTimer = metricRegistry.timer("logEnrichment");
        logPersistingTimer = metricRegistry.timer("logPersisting");
        packetsPerLogHistogram = metricRegistry.histogram("packetsPerLog");
        flowsPerPacketHistogram = metricRegistry.histogram("flowsPerPacket");

        // TODO MVR make this configurable, when it is actually an osgi-module
        nodeInfoCache = CacheBuilder.newBuilder()
                .maximumSize(1000)
                .expireAfterWrite(300, TimeUnit.SECONDS) // 5 Minutes
                .build(new CacheLoader<NodeInfoKey, Optional<NodeInfo>>() {
                    @Override
                    public Optional<NodeInfo> load(NodeInfoKey key) throws Exception {
                        return getNodeInfo(key.location, key.ipAddress);
                    }
                });
    }

