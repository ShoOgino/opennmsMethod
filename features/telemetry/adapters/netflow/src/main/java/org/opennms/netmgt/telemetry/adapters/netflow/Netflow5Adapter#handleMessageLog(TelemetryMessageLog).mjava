    @Override
    public void handleMessageLog(TelemetryMessageLog messageLog) {
        LOG.debug("Received {} telemetry messages", messageLog.getMessageList().size());

        final List<NetflowPacket> flowPackets = new LinkedList<>();
        try (Timer.Context ctx = logParsingTimer.time()) {
            for (TelemetryMessage eachMessage : messageLog.getMessageList()) {
                LOG.trace("Parsing packet: {}", eachMessage);
                final NetflowPacket flowPacket = parse(eachMessage);
                if (flowPacket != null) {
                    flowPackets.add(flowPacket);
                }
            }
            packetsPerLogHistogram.update(flowPackets.size());
        }

        try {
            LOG.debug("Persisting {} packets.", flowPackets.size());
            final FlowSource source = new FlowSource(messageLog.getLocation(), messageLog.getSourceAddress());
            flowRepository.persistNetFlow5Packets(flowPackets, source);
        } catch (FlowException ex) {
            LOG.error("Failed to persist one or more packets: {}", ex.getMessage());
        }

        LOG.debug("Completed processing {} telemetry messages.",
                messageLog.getMessageList().size());
    }

