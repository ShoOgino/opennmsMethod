    /**
     * Converts the given flow packet to flows represented by a {@link NetflowDocument}.
     *
     * @param netflowPacket the packet to convert
     * @return The flows of the packet
     */
    private List<NetflowDocument> convert(NetflowPacket netflowPacket) {
        if (netflowPacket == null) {
            LOG.debug("Nothing to convert.");
            return new ArrayList<>();
        }
        return netflowPacket.getRecords().stream()
                .map(record -> {
                    final NetflowDocument document = new NetflowDocument();

                    // META
                    document.setFlowType(FlowType.NETFLOW_5);
                    document.setTimestamp(netflowPacket.getUnixSecs() * 1000L + netflowPacket.getUnixNSecs() / 1000L / 1000L);

                    // Header
                    document.setVersion(netflowPacket.getVersion());
                    document.setFlowRecords(netflowPacket.getCount());
                    document.setSysUptime(netflowPacket.getSysUptime());
                    document.setFlowSequenceNumber(netflowPacket.getFlowSequence());
                    document.setEngineType(netflowPacket.getEngineType());
                    document.setEngineId(netflowPacket.getEngineId());
                    document.setSamplingInterval(netflowPacket.getSamplingInterval());

                    // Body
                    document.setIpv4SourceAddress(record.getSrcAddr());
                    document.setSourcePort(record.getSrcPort());
                    document.setIpv4DestAddress(record.getDstAddr());
                    document.setDestPort(record.getDstPort());
                    document.setIpv4NextHopAddress(record.getNextHop());
                    document.setInputSnmpInterfaceIndex(record.getInput());
                    document.setOutputSnmpInterfaceIndex(record.getOutput());
                    document.setInBytes(record.getDOctets());
                    document.setInPackets(record.getDPkts());
                    document.setFirst(record.getFirst());
                    document.setLast(record.getLast());
                    document.setTcpFlags(record.getTcpFlags());
                    document.setIpProtocol(record.getProt());
                    document.setTos(record.getToS());
                    document.setSourceAutonomousSystemNumber(record.getSrcAs());
                    document.setDestAutonomousSystemNumber(record.getDstAs());
                    document.setSourceMask(record.getSrcMask());
                    document.setDestMask(record.getDstMask());

                    return document;
                })
                .collect(Collectors.toList());
    }

