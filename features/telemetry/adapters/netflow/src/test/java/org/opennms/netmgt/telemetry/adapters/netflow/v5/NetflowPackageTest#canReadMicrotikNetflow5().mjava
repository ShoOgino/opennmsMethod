    @Test
    public void canReadMicrotikNetflow5() {
        execute("/flows/netflow5_test_microtik.dat", flowPackage -> {
            assertThat(flowPackage.isValid(), is(true));

            // Verify Header
            assertThat(flowPackage.getVersion(), is((NetflowPackage.VERSION)));
            assertThat(flowPackage.getCount(), is(30));
            assertThat(flowPackage.getRecords(), hasSize(30));
            assertThat(flowPackage.getSysUptime(), is(27361640L)); // Hex: 0x01A18168
            assertThat(flowPackage.getUnixSecs(), is(1469109117L)); // Hex: 0x5790D37D
            assertThat(flowPackage.getUnixNSecs(), is(514932000L)); // Hex: 0x1EB13D20
            assertThat(flowPackage.getFlowSequence(), is(8140050L));
            assertThat(flowPackage.getEngineId(), is(0));
            assertThat(flowPackage.getEngineType(), is(0));
            assertThat(flowPackage.getSamplingInterval(), is(0));

            // Verify Last Flow Record
            assertThat(flowPackage.getRecord(29).getSrcAddr(), is("10.0.8.1"));
            assertThat(flowPackage.getRecord(29).getDstAddr(), is("192.168.0.1"));
            assertThat(flowPackage.getRecord(29).getNextHop(), is("192.168.0.1"));
            assertThat(flowPackage.getRecord(29).getSrcPort(), is(80));
            assertThat(flowPackage.getRecord(29).getDstPort(), is(51826));
            assertThat(flowPackage.getRecord(29).getToS(), is(40));
            assertThat(flowPackage.getRecord(29).getInput(), is(13));
            assertThat(flowPackage.getRecord(29).getOutput(), is(46));
            assertThat(flowPackage.getRecord(29).getDPkts(), is(13L));
            assertThat(flowPackage.getRecord(29).getDOctets(), is(11442L));
            assertThat(flowPackage.getRecord(29).getFirst(), is(27346380L)); // Hex: 0x01A145CC
            assertThat(flowPackage.getRecord(29).getLast(), is(27346380L)); // Hex: 0x01A145CC
            assertThat(flowPackage.getRecord(29).getTcpFlags(), is(82));
            assertThat(flowPackage.getRecord(29).getProt(), is(6));
            assertThat(flowPackage.getRecord(29).getSrcAs(), is(0));
            assertThat(flowPackage.getRecord(29).getDstAs(), is(0));
            assertThat(flowPackage.getRecord(29).getSrcMask(), is(0));
            assertThat(flowPackage.getRecord(29).getDstMask(), is(0));
        });
    }

