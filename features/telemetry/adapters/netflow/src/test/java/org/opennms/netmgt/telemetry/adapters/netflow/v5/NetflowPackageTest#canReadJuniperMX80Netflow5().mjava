    @Test
    public void canReadJuniperMX80Netflow5() {
        execute("/flows/netflow5_test_juniper_mx80.dat", flowPackage -> {
            assertThat(flowPackage.isValid(), is(true));

            // Verify Flow Header
            assertThat(flowPackage.getVersion(), is((NetflowPackage.VERSION)));
            assertThat(flowPackage.getHeader().getCount(), is(29));
            assertThat(flowPackage.getRecords(), hasSize(29));
            assertThat(flowPackage.getHeader().getSysUptime(), is(190649064L)); // Hex: 0x0B5D12E8
            assertThat(flowPackage.getHeader().getUnixSecs(), is(1469109172L)); // Hex: 0x5790D3B4
            assertThat(flowPackage.getHeader().getUnixNsecs(), is(00000000L)); // Hex: 0x00000000
            assertThat(flowPackage.getHeader().getFlowSequence(), is(528678L));
            assertThat(flowPackage.getHeader().getEngineId(), is(0));
            assertThat(flowPackage.getHeader().getEngineType(), is(0));
            assertThat(flowPackage.getHeader().getSamplingInterval(), is(1000));

            // Verify Last Flow Record
            assertThat(flowPackage.getRecord(28).getSrcAddr(), is("66.249.92.75"));
            assertThat(flowPackage.getRecord(28).getDstAddr(), is("192.168.0.1"));
            assertThat(flowPackage.getRecord(28).getNextHop(), is("192.168.0.1"));
            assertThat(flowPackage.getRecord(28).getSrcPort(), is(37387));
            assertThat(flowPackage.getRecord(28).getDstPort(), is(80));
            assertThat(flowPackage.getRecord(28).getSrcAs(), is(15169));
            assertThat(flowPackage.getRecord(28).getDstAs(), is(64496));
            assertThat(flowPackage.getRecord(28).getTOS(), is(0));
            assertThat(flowPackage.getRecord(28).getInput(), is(542));
            assertThat(flowPackage.getRecord(28).getOutput(), is(536));
            assertThat(flowPackage.getRecord(28).getDPkts(), is(2L));
            assertThat(flowPackage.getRecord(28).getDOctets(), is(104L));
            assertThat(flowPackage.getRecord(28).getFirst(), is(190631000L)); // Hex: 0x0B5CCC58
            assertThat(flowPackage.getRecord(28).getLast(), is(190631000L)); // Hex: 0x0B5CCC58
            assertThat(flowPackage.getRecord(28).getTcpFlags(), is(16));
            assertThat(flowPackage.getRecord(28).getProt(), is(6));
            assertThat(flowPackage.getRecord(28).getSrcAs(), is(15169));
            assertThat(flowPackage.getRecord(28).getDstAs(), is(64496));
            assertThat(flowPackage.getRecord(28).getSrcMask(), is(19));
            assertThat(flowPackage.getRecord(28).getDstMask(), is(24));
        });
    }

