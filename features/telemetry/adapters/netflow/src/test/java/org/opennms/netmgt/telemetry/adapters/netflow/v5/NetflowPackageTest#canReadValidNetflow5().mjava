    @Test
    public void canReadValidNetflow5() throws IOException, URISyntaxException {
        execute("/flows/netflow5.dat", flowPackage -> {
            assertThat(flowPackage.isValid(), is(true));

            // Verify Header
            assertThat(flowPackage.getVersion(), is((NetflowPackage.VERSION)));
            assertThat(flowPackage.getCount(), is(2));
            assertThat(flowPackage.getSysUptime(), is(3381L)); // Hex: 0x00000D35
            assertThat(flowPackage.getUnixSecs(), is(1430591888L)); // Hex: 0x55451990
            assertThat(flowPackage.getUnixNSecs(), is(280328000L)); // Hex: 0x10B57740
            assertThat(flowPackage.getFlowSequence(), is(0L));
            assertThat(flowPackage.getEngineId(), is(0));
            assertThat(flowPackage.getEngineType(), is(0));
            assertThat(flowPackage.getSamplingInterval(), is(0));

            // Verify Flow Record 1
            assertThat(flowPackage.getRecord(0).getSrcAddr(), is("10.0.2.2"));
            assertThat(flowPackage.getRecord(0).getDstAddr(), is("10.0.2.15"));
            assertThat(flowPackage.getRecord(0).getNextHop(), is("0.0.0.0"));
            assertThat(flowPackage.getRecord(0).getSrcPort(), is(54435));
            assertThat(flowPackage.getRecord(0).getDstPort(), is(22));
            assertThat(flowPackage.getRecord(0).getTcpFlags(), is(16));
            assertThat(flowPackage.getRecord(0).getInput(), is(0));
            assertThat(flowPackage.getRecord(0).getOutput(), is(0));
            assertThat(flowPackage.getRecord(0).getDPkts(), is(5L));
            assertThat(flowPackage.getRecord(0).getDOctets(), is(230L));
            assertThat(flowPackage.getRecord(0).getFirst(), is(1024L * 1024L * 1024L * 4L - 1)); // Hex: 0xFFFFFFFF
            assertThat(flowPackage.getRecord(0).getLast(), is(2577L)); // Hex: 0x00000A11
            assertThat(flowPackage.getRecord(0).getProt(), is(6));
            assertThat(flowPackage.getRecord(0).getToS(), is(0));
            assertThat(flowPackage.getRecord(0).getSrcAs(), is(0));
            assertThat(flowPackage.getRecord(0).getDstAs(), is(0));
            assertThat(flowPackage.getRecord(0).getSrcMask(), is(0));
            assertThat(flowPackage.getRecord(0).getDstMask(), is(0));

            // Verify Flow Record 1
            assertThat(flowPackage.getRecord(1).getSrcAddr(), is("10.0.2.15"));
            assertThat(flowPackage.getRecord(1).getDstAddr(), is("10.0.2.2"));
            assertThat(flowPackage.getRecord(1).getNextHop(), is("0.0.0.0"));
            assertThat(flowPackage.getRecord(1).getSrcPort(), is(22));
            assertThat(flowPackage.getRecord(1).getDstPort(), is(54435));
            assertThat(flowPackage.getRecord(1).getTcpFlags(), is(24));
            assertThat(flowPackage.getRecord(1).getInput(), is(0));
            assertThat(flowPackage.getRecord(1).getOutput(), is(0));
            assertThat(flowPackage.getRecord(1).getDPkts(), is(4L));
            assertThat(flowPackage.getRecord(1).getDOctets(), is(304L));
            assertThat(flowPackage.getRecord(1).getFirst(), is(1024L * 1024L * 1024L * 4L - 1)); // Hex: 0xFFFFFFFF
            assertThat(flowPackage.getRecord(1).getLast(), is(2577L)); // Hex: 0x00000A11
            assertThat(flowPackage.getRecord(1).getProt(), is(6));
            assertThat(flowPackage.getRecord(1).getToS(), is(0));
            assertThat(flowPackage.getRecord(1).getSrcAs(), is(0));
            assertThat(flowPackage.getRecord(1).getDstAs(), is(0));
            assertThat(flowPackage.getRecord(1).getSrcMask(), is(0));
            assertThat(flowPackage.getRecord(1).getDstMask(), is(0));
        });
    }

