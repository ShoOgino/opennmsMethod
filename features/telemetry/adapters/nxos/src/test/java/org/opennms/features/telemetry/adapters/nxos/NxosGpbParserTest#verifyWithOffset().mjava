    @Test
    public void verifyWithOffset() throws IOException {

        byte[] nxosMsgBytes = Resources.toByteArray(Resources.getResource("nxos-proto-buf.raw"));
        ByteBuffer buf = ByteBuffer.wrap(nxosMsgBytes, 6, nxosMsgBytes.length - 6);
        TelemetryBis.Telemetry msg = TelemetryBis.Telemetry.parseFrom(buf, s_registry);
        assertNotNull(msg);
        assertNotNull(msg.getDataGpbkvList());

        // Test fields that are unique and not relative to any row/field
        assertEquals(NxosGpbParserUtil.getValueAsDouble(msg, "load_avg_1min"), 1.25d, 0.001d);
        assertEquals(NxosGpbParserUtil.getValueAsDouble(msg, "memory_usage_total"), 8061904, 0.001d);
        assertEquals(NxosGpbParserUtil.getValueAsString(msg, "current_memory_status"), "OK");

        // Test fields for a row ( array of structures)
        for (TelemetryBis.TelemetryField row : NxosGpbParserUtil.getRowsFromTable(msg, "cpu_usage")) {

            assertNotEquals(NxosGpbParserUtil.getValueFromRowAsDouble(row, "cpuid"), Double.NaN);
            assertNotEquals(NxosGpbParserUtil.getValueFromRowAsDouble(row, "kernel"), Double.NaN);
        }

        // Same metric but under different field structure.
        assertEquals(NxosGpbParserUtil.getValueAsDoubleRelativeToField(telemetryMsg, "field1", "load_avg"), 23d,
                0.001d);
        assertEquals(NxosGpbParserUtil.getValueAsDoubleRelativeToField(telemetryMsg, "field2", "load_avg"), 18d,
                0.001d);
    }

