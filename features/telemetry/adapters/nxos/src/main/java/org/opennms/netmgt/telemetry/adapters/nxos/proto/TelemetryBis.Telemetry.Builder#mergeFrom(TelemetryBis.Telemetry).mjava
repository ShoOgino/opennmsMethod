      public Builder mergeFrom(TelemetryBis.Telemetry other) {
        if (other == TelemetryBis.Telemetry.getDefaultInstance()) return this;
        if (!other.getEncodingPath().isEmpty()) {
          encodingPath_ = other.encodingPath_;
          onChanged();
        }
        if (other.getCollectionId() != 0L) {
          setCollectionId(other.getCollectionId());
        }
        if (other.getCollectionStartTime() != 0L) {
          setCollectionStartTime(other.getCollectionStartTime());
        }
        if (other.getMsgTimestamp() != 0L) {
          setMsgTimestamp(other.getMsgTimestamp());
        }
        if (dataGpbkvBuilder_ == null) {
          if (!other.dataGpbkv_.isEmpty()) {
            if (dataGpbkv_.isEmpty()) {
              dataGpbkv_ = other.dataGpbkv_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureDataGpbkvIsMutable();
              dataGpbkv_.addAll(other.dataGpbkv_);
            }
            onChanged();
          }
        } else {
          if (!other.dataGpbkv_.isEmpty()) {
            if (dataGpbkvBuilder_.isEmpty()) {
              dataGpbkvBuilder_.dispose();
              dataGpbkvBuilder_ = null;
              dataGpbkv_ = other.dataGpbkv_;
              bitField0_ = (bitField0_ & ~0x00000040);
              dataGpbkvBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataGpbkvFieldBuilder() : null;
            } else {
              dataGpbkvBuilder_.addAllMessages(other.dataGpbkv_);
            }
          }
        }
        if (other.hasDataGpb()) {
          mergeDataGpb(other.getDataGpb());
        }
        if (other.getCollectionEndTime() != 0L) {
          setCollectionEndTime(other.getCollectionEndTime());
        }
        switch (other.getNodeIdCase()) {
          case NODE_ID_STR: {
            nodeIdCase_ = 1;
            nodeId_ = other.nodeId_;
            onChanged();
            break;
          }
          case NODEID_NOT_SET: {
            break;
          }
        }
        switch (other.getSubscriptionCase()) {
          case SUBSCRIPTION_ID_STR: {
            subscriptionCase_ = 3;
            subscription_ = other.subscription_;
            onChanged();
            break;
          }
          case SUBSCRIPTION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

