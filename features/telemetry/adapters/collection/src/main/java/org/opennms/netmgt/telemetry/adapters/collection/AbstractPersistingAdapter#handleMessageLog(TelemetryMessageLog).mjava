    @Override
    public void handleMessageLog(TelemetryMessageLog messageLog) {
        for (TelemetryMessage message : messageLog.getMessageList()) {
            handleMessage(message, messageLog).forEach(result -> {
                // Locate the matching package definition
                final Package pkg = getPackageFor(protocol, result.getAgent());
                if (pkg == null) {
                    LOG.warn("No matching package found for message: {}. Dropping.", message);
                    return;
                }

                // Build the repository from the package definition
                final RrdRepository repository = new RrdRepository();
                repository.setStep(pkg.getRrd().getStep());
                repository.setHeartBeat(repository.getStep() * 2);
                repository.setRraList(pkg.getRrd().getRras());
                repository.setRrdBaseDir(new File(pkg.getRrd().getBaseDir()));

                // Persist!
                final CollectionSet collectionSet = result.getCollectionSet();
                LOG.trace("Persisting collection set: {} for message: {}", collectionSet, message);
                final Persister persister = persisterFactory.createPersister(EMPTY_SERVICE_PARAMETERS, repository);
                collectionSet.visit(persister);
            });
        }
    }

