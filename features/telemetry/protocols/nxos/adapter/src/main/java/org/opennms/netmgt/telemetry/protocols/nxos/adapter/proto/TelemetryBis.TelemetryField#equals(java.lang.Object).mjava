    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TelemetryBis.TelemetryField)) {
        return super.equals(obj);
      }
      TelemetryBis.TelemetryField other = (TelemetryBis.TelemetryField) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && getName()
          .equals(other.getName());
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && getValueByTypeCase().equals(
          other.getValueByTypeCase());
      if (!result) return false;
      switch (valueByTypeCase_) {
        case 4:
          result = result && getBytesValue()
              .equals(other.getBytesValue());
          break;
        case 5:
          result = result && getStringValue()
              .equals(other.getStringValue());
          break;
        case 6:
          result = result && (getBoolValue()
              == other.getBoolValue());
          break;
        case 7:
          result = result && (getUint32Value()
              == other.getUint32Value());
          break;
        case 8:
          result = result && (getUint64Value()
              == other.getUint64Value());
          break;
        case 9:
          result = result && (getSint32Value()
              == other.getSint32Value());
          break;
        case 10:
          result = result && (getSint64Value()
              == other.getSint64Value());
          break;
        case 11:
          result = result && (
              java.lang.Double.doubleToLongBits(getDoubleValue())
              == java.lang.Double.doubleToLongBits(
                  other.getDoubleValue()));
          break;
        case 12:
          result = result && (
              java.lang.Float.floatToIntBits(getFloatValue())
              == java.lang.Float.floatToIntBits(
                  other.getFloatValue()));
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

