    @Override
    public CompletableFuture<?> parse(final ByteBuffer buffer,
                                      final InetSocketAddress remoteAddress,
                                      final InetSocketAddress localAddress) throws Exception {
        final SampleDatagram packet = new SampleDatagram(buffer);

        LOG.trace("Got packet: {}", packet);

        final CompletableFuture<TelemetryMessage> future = new CompletableFuture<>();
        enricher.enrich(packet, getLookupsEnabled()).whenComplete((enrichment,ex) -> {
            if (ex != null) {
                // Enrichment failed
                future.completeExceptionally(ex);
                return;
            }

            // Serialize
            final BasicOutputBuffer output = new BasicOutputBuffer();
            try (final BsonBinaryWriter bsonWriter = new BsonBinaryWriter(output)) {
                bsonWriter.writeStartDocument();

                bsonWriter.writeName("time");
                bsonWriter.writeInt64(System.currentTimeMillis());

                bsonWriter.writeName("data");
                packet.version.datagram.writeBson(bsonWriter, enrichment);

                bsonWriter.writeEndDocument();
            }

            // Build the message to be sent
            final TelemetryMessage msg = new TelemetryMessage(remoteAddress, output.getByteBuffers().get(0).asNIO());
            dispatcher.send(msg).whenComplete((any, exx) -> {
               if (exx != null) {
                   // Dispatching failed
                   future.completeExceptionally(exx);
               }
               future.complete(any);
            });
        });
        return future;
    }

