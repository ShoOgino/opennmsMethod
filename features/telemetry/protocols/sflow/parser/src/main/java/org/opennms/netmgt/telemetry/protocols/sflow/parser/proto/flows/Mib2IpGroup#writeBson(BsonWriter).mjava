    @Override
    public void writeBson(final BsonWriter bsonWriter) {
        bsonWriter.writeStartDocument();
        bsonWriter.writeInt64("ipForwarding", this.ipForwarding);
        bsonWriter.writeInt64("ipDefaultTTL", this.ipDefaultTTL);
        bsonWriter.writeInt64("ipInReceives", this.ipInReceives);
        bsonWriter.writeInt64("ipInHdrErrors", this.ipInHdrErrors);
        bsonWriter.writeInt64("ipInAddrErrors", this.ipInAddrErrors);
        bsonWriter.writeInt64("ipForwDatagrams", this.ipForwDatagrams);
        bsonWriter.writeInt64("ipInUnknownProtos", this.ipInUnknownProtos);
        bsonWriter.writeInt64("ipInDiscards", this.ipInDiscards);
        bsonWriter.writeInt64("ipInDelivers", this.ipInDelivers);
        bsonWriter.writeInt64("ipOutRequests", this.ipOutRequests);
        bsonWriter.writeInt64("ipOutDiscards", this.ipOutDiscards);
        bsonWriter.writeInt64("ipOutNoRoutes", this.ipOutNoRoutes);
        bsonWriter.writeInt64("ipReasmTimeout", this.ipReasmTimeout);
        bsonWriter.writeInt64("ipReasmReqds", this.ipReasmReqds);
        bsonWriter.writeInt64("ipReasmOKs", this.ipReasmOKs);
        bsonWriter.writeInt64("ipReasmFails", this.ipReasmFails);
        bsonWriter.writeInt64("ipFragOKs", this.ipFragOKs);
        bsonWriter.writeInt64("ipFragFails", this.ipFragFails);
        bsonWriter.writeInt64("ipFragCreates", this.ipFragCreates);
        bsonWriter.writeEndDocument();
    }

