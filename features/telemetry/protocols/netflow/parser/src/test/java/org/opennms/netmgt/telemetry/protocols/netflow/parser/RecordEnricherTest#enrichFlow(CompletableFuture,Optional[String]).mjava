    private void enrichFlow(CompletableFuture reverseLookupFuture, Optional<String> expectedValue) throws InvalidPacketException, ExecutionException, InterruptedException, UnknownHostException {
        DnsResolver dnsResolver = mock(DnsResolver.class);
        when(dnsResolver.reverseLookup(any())).thenReturn(reverseLookupFuture);

        RecordEnricher enricher = new RecordEnricher(dnsResolver);

        final Packet packet = getSampleNf5Packet();
        final List<CompletableFuture<RecordEnrichment>> enrichmentFutures = packet.getRecords().map(enricher::enrich)
                .collect(Collectors.toList());

        CompletableFuture.allOf(enrichmentFutures.toArray(new CompletableFuture[]{}));

        for (CompletableFuture<RecordEnrichment> future : enrichmentFutures) {
            assertThat(future.isCompletedExceptionally(), equalTo(false));

            RecordEnrichment enrichment = future.get();

            assertThat(enrichment.getHostnameFor(InetAddress.getByName("255.255.255.255")), equalTo(expectedValue));
        }
    }

