    private void testSessionKeys(final UdpSessionManager.SessionKey sessionKey1, final UdpSessionManager.SessionKey sessionKey2, final boolean shouldMatch) {
        final UdpSessionManager udpSessionManager = new UdpSessionManager(Duration.ofMinutes(30));
        final Session session1 = udpSessionManager.getSession(sessionKey1);

        final List<Scope> scopes = new ArrayList<>();
        scopes.add(scope("scope1", null));
        scopes.add(scope("scope2", null));

        final List<Field> fields = new ArrayList<>();
        fields.add(field("field1", null));
        fields.add(field("field2", null));

        final Template template = Template.builder(100, Template.Type.OPTIONS_TEMPLATE).withFields(fields).withScopes(scopes).build();
        session1.addTemplate(observationId1, template);

        final List<Value<?>> scopesValue = new ArrayList<>();
        scopesValue.add(value("scope1", "scopeValue1"));
        scopesValue.add(value("scope2", "scopeValue2"));

        final List<Value<?>> fieldsValue = new ArrayList<>();
        fieldsValue.add(value("additionalField1", "additionalValue1"));
        fieldsValue.add(value("additionalField2", "additionalValue2"));

        session1.addOptions(observationId1, templateId1, scopesValue, fieldsValue);

        final Session session2 = udpSessionManager.getSession(sessionKey2);

        final List<Value<?>> notMatchingValues = new ArrayList<>();
        notMatchingValues.add(value("scope1", "scopeValue1"));
        notMatchingValues.add(value("scope2", "mismatch"));

        final List<Value<?>> matchingValues = new ArrayList<>();
        matchingValues.add(value("scope1", "scopeValue1"));
        matchingValues.add(value("scope2", "scopeValue2"));

        Assert.assertEquals(0, session2.getResolver(observationId1).lookupOptions(notMatchingValues).size());
        Assert.assertEquals(0, session2.getResolver(observationId2).lookupOptions(matchingValues).size());

        final List<Value<?>> result = session2.getResolver(observationId1).lookupOptions(matchingValues);

        System.out.println("Checking session keys " + sessionKey1 + " and " + sessionKey2);
        Assert.assertEquals(shouldMatch ? 2 : 0, result.size());
        Assert.assertEquals(shouldMatch, result.contains(new StringValue("additionalField1", Optional.empty(), "additionalValue1")));
        Assert.assertEquals(shouldMatch, result.contains(new StringValue("additionalField2", Optional.empty(), "additionalValue2")));
    }

