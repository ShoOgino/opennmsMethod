    public synchronized boolean verify(final long sequenceNumber) {
        // Fast-path for disabled sequence tracking - everything is valid
        if (this.seen == null) {
            return true;
        }

        // Detect jumps and reinitialize
        if (Math.abs(this.current - sequenceNumber) > this.seen.size()) {
            this.current = sequenceNumber;

            // Start over with a history where everything is marked as seen
            this.seen.reset(true);
            return true;
        }

        // Check if input is out of order
        if (sequenceNumber < this.current) {
            // Update the history marking the input as seen
            this.seen.set(sequenceNumber, true);
            return true;
        }

        // Mark current sequence number as seen
        boolean valid = this.seen.set(sequenceNumber, true);

        // Mark everything between current sequence number and input as missing
        for (long x = this.current + 1; x < sequenceNumber; x++) {
            valid &= this.seen.set(x, false);
        }

        // Advance sequence number
        this.current = sequenceNumber;

        return valid;
    }

