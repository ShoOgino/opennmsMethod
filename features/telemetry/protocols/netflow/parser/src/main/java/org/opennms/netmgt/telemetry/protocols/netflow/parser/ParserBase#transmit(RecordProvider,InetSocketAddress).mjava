    protected CompletableFuture<?> transmit(final RecordProvider packet, final InetSocketAddress remoteAddress) throws Exception {
        LOG.trace("Got packet: {}", packet);

        // Return a future which completes when message is parsed and all records are transmitted
        return CompletableFuture.allOf(packet.getRecords().map(record -> {
            final ByteBuffer buffer = serialize(this.protocol, record);

            // Build the message to dispatch
            final TelemetryMessage msg = new TelemetryMessage(remoteAddress, buffer);

            // Dispatch and retain a reference to the packet
            // in the case that we are sharing the underlying byte array
            return dispatcher.send(msg);
        }).toArray(CompletableFuture[]::new));
    }

