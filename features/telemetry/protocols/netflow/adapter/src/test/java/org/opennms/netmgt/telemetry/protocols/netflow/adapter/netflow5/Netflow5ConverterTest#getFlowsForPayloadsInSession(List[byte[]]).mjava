    private List<Flow> getFlowsForPayloadsInSession(List<byte[]> payloads) {
        final List<Flow> flows = new ArrayList<>();
        for (byte[] payload : payloads) {
            final ByteBuf buffer = Unpooled.wrappedBuffer(payload);
            final Header header;
            try {
                header = new Header(slice(buffer, Header.SIZE));
                final Packet packet = new Packet(header, buffer);
                packet.getRecords().forEach(rec -> {

                    byte[] message = buildAndSerialize(Protocol.NETFLOW5, rec);
                    try {
                        FlowMessage flowMessage = FlowMessage.parseFrom(message);
                        flows.addAll(nf5Converter.convert(flowMessage));
                    } catch (InvalidProtocolBufferException e) {
                        throw new RuntimeException(e);
                    }

                });
            } catch (InvalidPacketException e) {
                throw new RuntimeException(e);
            }
        }
        return flows;
    }

