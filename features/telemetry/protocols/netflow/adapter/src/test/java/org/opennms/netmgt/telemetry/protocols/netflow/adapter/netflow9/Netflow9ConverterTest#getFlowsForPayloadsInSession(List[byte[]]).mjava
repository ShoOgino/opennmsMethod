    private List<Flow> getFlowsForPayloadsInSession(List<byte[]> payloads) {
        final List<Flow> flows = new ArrayList<>();
        final Session session = new TcpSession(InetAddress.getLoopbackAddress());
        for (byte[] payload : payloads) {
            final ByteBuffer buffer = ByteBuffer.wrap(payload);
            final Header header;
            try {
                header = new Header(slice(buffer, Header.SIZE));
                final Packet packet = new Packet(session, header, buffer);
                packet.getRecords().forEach(rec -> {
                    final ByteBuffer bf = ParserBase.serialize(Protocol.NETFLOW9, rec);
                    final BsonDocument doc = new RawBsonDocument(bf.array());
                    flows.addAll(nf9Converter.convert(doc));
                });
            } catch (InvalidPacketException e) {
                throw new RuntimeException(e);
            }
        }
        return flows;
    }

