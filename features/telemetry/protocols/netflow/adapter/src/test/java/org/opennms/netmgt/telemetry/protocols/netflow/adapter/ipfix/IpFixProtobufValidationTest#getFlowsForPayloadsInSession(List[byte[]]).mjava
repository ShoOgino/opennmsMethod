    private List<Flow> getFlowsForPayloadsInSession(List<byte[]> payloads) {
        final List<Flow> flows = new ArrayList<>();
        final Session session = new TcpSession(InetAddress.getLoopbackAddress());
        for (byte[] payload : payloads) {
            final ByteBuf buffer = Unpooled.wrappedBuffer(payload);
            final Header header;

            try {
                header = new Header(slice(buffer, Header.SIZE));
                final Packet packet = new Packet(session, header, slice(buffer, header.payloadLength()));
                packet.getRecords().forEach(rec -> {

                    final FlowMessage flowMessage;
                    try {
                        flowMessage = Utils.buildAndSerialize(Protocol.IPFIX, rec).build();
                    } catch (Exception e) {
                        throw new RuntimeException(e);
                    }

                    flows.addAll(ipFixConverter.convert(flowMessage, Instant.now()));
                });
            } catch (InvalidPacketException e) {
                throw new RuntimeException(e);
            }
        }

        return flows;
    }

