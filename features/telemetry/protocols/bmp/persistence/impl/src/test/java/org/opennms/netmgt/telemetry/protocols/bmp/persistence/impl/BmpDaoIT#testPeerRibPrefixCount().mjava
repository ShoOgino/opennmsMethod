    @Test
    public void testPeerRibPrefixCount() {

        long oneMinBack = new Date().getTime() - 60000;
        Date lastUpdated = new Date(oneMinBack);
        BmpUnicastPrefix bmpUnicastPrefix = buildBmpUnicastPrefix(lastUpdated);
        BmpPeer bmpPeer = buildBmpPeer(lastUpdated);
        BmpRouter bmpRouter = buildBmpRouter(lastUpdated);
        String collectorHashId = "91e3a7ff9f5676ed6ae6fcd8a6b455ec";
        BmpCollector bmpCollector = buildBmpCollector(collectorHashId, lastUpdated);
        bmpCollectorDao.save(bmpCollector);
        List<BmpCollector> collectors = bmpCollectorDao.findAll();
        Assert.assertFalse(collectors.isEmpty());
        bmpRouter.setCollectorHashId(collectorHashId);
        bmpRouterDao.saveOrUpdate(bmpRouter);
        List<BmpRouter> routers = bmpRouterDao.findAll();
        Assert.assertFalse(routers.isEmpty());
        bmpPeer.setBmpRouter(bmpRouter);
        bmpPeerDao.saveOrUpdate(bmpPeer);
        List<BmpPeer> peers = bmpPeerDao.findAll();
        Assert.assertFalse(peers.isEmpty());
        bmpUnicastPrefix.setBmpPeer(bmpPeer);
        bmpUnicastPrefixDao.saveOrUpdate(bmpUnicastPrefix);
        List<BmpUnicastPrefix> prefixes = bmpUnicastPrefixDao.findAll();
        Assert.assertFalse(prefixes.isEmpty());
        List<StatsPeerRib> statsPeerRibs = bmpUnicastPrefixDao.getPeerRibCountsByPeer();
        Assert.assertFalse(statsPeerRibs.isEmpty());
        assertEquals(1L, statsPeerRibs.get(0).getV4prefixes().longValue());
    }

