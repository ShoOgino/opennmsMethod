    @Test
    public void testPersistence() {

        BmpCollector bmpCollector = new BmpCollector();
        bmpCollector.setHashId("91e3a7ff9f5676ed6ae6fcd8a6b455ec");
        bmpCollector.setState(State.UP);
        bmpCollector.setAdminId("admin1");
        bmpCollector.setName("collector1");
        bmpCollector.setRoutersCount(2);
        bmpCollector.setTimestamp(new Date());
        Long id = bmpCollectorDao.save(bmpCollector);
        Assert.assertNotNull(id);
        BmpCollector retrieved = bmpCollectorDao.findByCollectorHashId("91e3a7ff9f5676ed6ae6fcd8a6b455ec");
        assertEquals(bmpCollector.getName(), retrieved.getName());
        assertEquals(bmpCollector.getHashId(), retrieved.getHashId());
        BmpRouter bmpRouter = new BmpRouter();
        bmpRouter.setState(State.UP);
        bmpRouter.setHashId("81e4a7ff8f5673ed6ae6fcd9a3b452bg");
        bmpRouter.setName("router-1");
        bmpRouter.setIpAddress("10.1.4.10");
        bmpRouter.setTimestamp(new Date());
        bmpRouter.setCollectorHashId("91e3a7ff9f5676ed6ae6fcd8a6b455ec");
        bmpRouterDao.saveOrUpdate(bmpRouter);
        BmpRouter persistedRouter = bmpRouterDao.findByRouterHashId("81e4a7ff8f5673ed6ae6fcd9a3b452bg");
        assertEquals(bmpRouter.getName(), persistedRouter.getName());
        assertEquals(bmpRouter.getHashId(), persistedRouter.getHashId());
        List<BmpRouter> routers = bmpRouterDao.findRoutersByCollectorHashId("91e3a7ff9f5676ed6ae6fcd8a6b455ec");
        Assert.assertFalse(routers.isEmpty());
        BmpRouter result = routers.get(0);
        assertEquals(bmpRouter.getHashId(), result.getHashId());
    }

