    private PeerUpPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.Builder subBuilder = null;
              if (peer_ != null) {
                subBuilder = peer_.toBuilder();
              }
              peer_ = input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(peer_);
                peer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.IpAddress.Builder subBuilder = null;
              if (localAddress_ != null) {
                subBuilder = localAddress_.toBuilder();
              }
              localAddress_ = input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.IpAddress.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(localAddress_);
                localAddress_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              localPort_ = input.readUInt32();
              break;
            }
            case 32: {

              remotePort_ = input.readUInt32();
              break;
            }
            case 42: {
              org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.PeerUpPacket.OpenMessage.Builder subBuilder = null;
              if (sendMsg_ != null) {
                subBuilder = sendMsg_.toBuilder();
              }
              sendMsg_ = input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.PeerUpPacket.OpenMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sendMsg_);
                sendMsg_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.PeerUpPacket.OpenMessage.Builder subBuilder = null;
              if (recvMsg_ != null) {
                subBuilder = recvMsg_.toBuilder();
              }
              recvMsg_ = input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.PeerUpPacket.OpenMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(recvMsg_);
                recvMsg_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              sysName_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              sysDesc_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              tableName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

