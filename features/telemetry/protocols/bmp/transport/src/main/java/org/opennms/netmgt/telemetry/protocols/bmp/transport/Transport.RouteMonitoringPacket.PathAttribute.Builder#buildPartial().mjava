        @java.lang.Override
        public org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute buildPartial() {
          org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute result = new org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute(this);
          result.optional_ = optional_;
          result.transitive_ = transitive_;
          result.partial_ = partial_;
          result.extended_ = extended_;
          if (valueCase_ == 5) {
            result.value_ = value_;
          }
          if (valueCase_ == 6) {
            if (asPathBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = asPathBuilder_.build();
            }
          }
          if (valueCase_ == 7) {
            if (nextHopBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = nextHopBuilder_.build();
            }
          }
          if (valueCase_ == 8) {
            if (multiExitDiscBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = multiExitDiscBuilder_.build();
            }
          }
          if (valueCase_ == 9) {
            if (localPrefBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = localPrefBuilder_.build();
            }
          }
          if (valueCase_ == 10) {
            if (atomicAggregateBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = atomicAggregateBuilder_.build();
            }
          }
          if (valueCase_ == 11) {
            if (aggregatorBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = aggregatorBuilder_.build();
            }
          }
          result.valueCase_ = valueCase_;
          onBuilt();
          return result;
        }

