      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + OPTIONAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getOptional());
        hash = (37 * hash) + TRANSITIVE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTransitive());
        hash = (37 * hash) + PARTIAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPartial());
        hash = (37 * hash) + EXTENDED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getExtended());
        switch (valueCase_) {
          case 5:
            hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
            hash = (53 * hash) + getOriginValue();
            break;
          case 6:
            hash = (37 * hash) + AS_PATH_FIELD_NUMBER;
            hash = (53 * hash) + getAsPath().hashCode();
            break;
          case 7:
            hash = (37 * hash) + NEXT_HOP_FIELD_NUMBER;
            hash = (53 * hash) + getNextHop().hashCode();
            break;
          case 8:
            hash = (37 * hash) + MULTI_EXIT_DISC_FIELD_NUMBER;
            hash = (53 * hash) + getMultiExitDisc().hashCode();
            break;
          case 9:
            hash = (37 * hash) + LOCAL_PREF_FIELD_NUMBER;
            hash = (53 * hash) + getLocalPref().hashCode();
            break;
          case 10:
            hash = (37 * hash) + ATOMIC_AGGREGATE_FIELD_NUMBER;
            hash = (53 * hash) + getAtomicAggregate().hashCode();
            break;
          case 11:
            hash = (37 * hash) + AGGREGATOR_FIELD_NUMBER;
            hash = (53 * hash) + getAggregator().hashCode();
            break;
          case 12:
            hash = (37 * hash) + COMMUNITY_FIELD_NUMBER;
            hash = (53 * hash) + getCommunity();
            break;
          case 13:
            hash = (37 * hash) + ORIGINATOR_ID_FIELD_NUMBER;
            hash = (53 * hash) + getOriginatorId();
            break;
          case 14:
            hash = (37 * hash) + CLUSTER_LIST_FIELD_NUMBER;
            hash = (53 * hash) + getClusterList().hashCode();
            break;
          case 15:
            hash = (37 * hash) + EXTENDED_COMMUNITIES_FIELD_NUMBER;
            hash = (53 * hash) + getExtendedCommunities().hashCode();
            break;
          case 16:
            hash = (37 * hash) + CONNECTOR_FIELD_NUMBER;
            hash = (53 * hash) + getConnector();
            break;
          case 17:
            hash = (37 * hash) + AS_PATH_LIMIT_FIELD_NUMBER;
            hash = (53 * hash) + getAsPathLimit().hashCode();
            break;
          case 18:
            hash = (37 * hash) + LARGE_COMMUNITIES_FIELD_NUMBER;
            hash = (53 * hash) + getLargeCommunities().hashCode();
            break;
          case 19:
            hash = (37 * hash) + ATTR_SET_FIELD_NUMBER;
            hash = (53 * hash) + getAttrSet().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

