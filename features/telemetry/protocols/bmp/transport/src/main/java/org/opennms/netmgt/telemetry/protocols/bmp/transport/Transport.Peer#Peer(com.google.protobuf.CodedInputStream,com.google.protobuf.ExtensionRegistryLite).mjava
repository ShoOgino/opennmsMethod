    private Peer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.PeerFlags.Builder subBuilder = null;
              if (flagsCase_ == 2) {
                subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.PeerFlags) flags_).toBuilder();
              }
              flags_ =
                  input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.PeerFlags.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.PeerFlags) flags_);
                flags_ = subBuilder.buildPartial();
              }
              flagsCase_ = 2;
              break;
            }
            case 26: {
              org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.LocRibFlags.Builder subBuilder = null;
              if (flagsCase_ == 3) {
                subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.LocRibFlags) flags_).toBuilder();
              }
              flags_ =
                  input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.LocRibFlags.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.Peer.LocRibFlags) flags_);
                flags_ = subBuilder.buildPartial();
              }
              flagsCase_ = 3;
              break;
            }
            case 33: {

              distinguisher_ = input.readFixed64();
              break;
            }
            case 42: {
              org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.IpAddress.Builder subBuilder = null;
              if (address_ != null) {
                subBuilder = address_.toBuilder();
              }
              address_ = input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.IpAddress.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(address_);
                address_ = subBuilder.buildPartial();
              }

              break;
            }
            case 53: {

              as_ = input.readFixed32();
              break;
            }
            case 58: {
              org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.IpAddress.Builder subBuilder = null;
              if (id_ != null) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.IpAddress.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (timestamp_ != null) {
                subBuilder = timestamp_.toBuilder();
              }
              timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timestamp_);
                timestamp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              hostname_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

