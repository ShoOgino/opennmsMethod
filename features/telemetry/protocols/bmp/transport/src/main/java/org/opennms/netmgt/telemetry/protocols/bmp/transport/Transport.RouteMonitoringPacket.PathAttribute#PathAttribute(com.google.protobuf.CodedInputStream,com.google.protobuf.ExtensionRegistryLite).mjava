      private PathAttribute(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                optional_ = input.readBool();
                break;
              }
              case 16: {

                transitive_ = input.readBool();
                break;
              }
              case 24: {

                partial_ = input.readBool();
                break;
              }
              case 32: {

                extended_ = input.readBool();
                break;
              }
              case 40: {
                int rawValue = input.readEnum();
                valueCase_ = 5;
                value_ = rawValue;
                break;
              }
              case 50: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AsPath.Builder subBuilder = null;
                if (valueCase_ == 6) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AsPath) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AsPath.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AsPath) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 6;
                break;
              }
              case 58: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.NextHop.Builder subBuilder = null;
                if (valueCase_ == 7) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.NextHop) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.NextHop.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.NextHop) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 7;
                break;
              }
              case 66: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.MultiExitDisc.Builder subBuilder = null;
                if (valueCase_ == 8) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.MultiExitDisc) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.MultiExitDisc.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.MultiExitDisc) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 8;
                break;
              }
              case 74: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.LocalPref.Builder subBuilder = null;
                if (valueCase_ == 9) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.LocalPref) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.LocalPref.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.LocalPref) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 9;
                break;
              }
              case 82: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AtomicAggregate.Builder subBuilder = null;
                if (valueCase_ == 10) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AtomicAggregate) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AtomicAggregate.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AtomicAggregate) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 10;
                break;
              }
              case 90: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.Aggregator.Builder subBuilder = null;
                if (valueCase_ == 11) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.Aggregator) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.Aggregator.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.Aggregator) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 11;
                break;
              }
              case 96: {
                valueCase_ = 12;
                value_ = input.readUInt32();
                break;
              }
              case 104: {
                valueCase_ = 13;
                value_ = input.readUInt32();
                break;
              }
              case 114: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.ClusterList.Builder subBuilder = null;
                if (valueCase_ == 14) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.ClusterList) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.ClusterList.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.ClusterList) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 14;
                break;
              }
              case 122: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.ExtendedCommunities.Builder subBuilder = null;
                if (valueCase_ == 15) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.ExtendedCommunities) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.ExtendedCommunities.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.ExtendedCommunities) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 15;
                break;
              }
              case 133: {
                valueCase_ = 16;
                value_ = input.readFixed32();
                break;
              }
              case 138: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AsPathLimit.Builder subBuilder = null;
                if (valueCase_ == 17) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AsPathLimit) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AsPathLimit.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AsPathLimit) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 17;
                break;
              }
              case 146: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.LargeCommunities.Builder subBuilder = null;
                if (valueCase_ == 18) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.LargeCommunities) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.LargeCommunities.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.LargeCommunities) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 18;
                break;
              }
              case 154: {
                org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AttrSet.Builder subBuilder = null;
                if (valueCase_ == 19) {
                  subBuilder = ((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AttrSet) value_).toBuilder();
                }
                value_ =
                    input.readMessage(org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AttrSet.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.opennms.netmgt.telemetry.protocols.bmp.transport.Transport.RouteMonitoringPacket.PathAttribute.AttrSet) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 19;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }

