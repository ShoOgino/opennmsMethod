    public static RouteInfo parseOneRecord(String rawOutput) {
        RouteInfo routeInfo = new RouteInfo();
        // Split output into lines
        String[] lines = rawOutput.split("\\r?\\n");
        for (String line : lines) {
            if (line.contains("route")) {
                getSubStringAfterColon(line).ifPresent(route -> {
                    if (route.contains("/")) {
                        String[] prefixArray = route.split("/", 2);
                        if(isValidIpAddress(prefixArray[0])) {
                            routeInfo.setPrefix(prefixArray[0]);
                        }
                        Integer prefixLen = StringUtils.parseInt(prefixArray[1], null);
                        if (prefixLen != null) {
                            routeInfo.setPrefixLen(prefixLen);
                        }
                    }
                });
            }
            if (line.contains("descr")) {
                getSubStringAfterColon(line).ifPresent(routeInfo::setDescription);
            }
            if (line.contains("source")) {
                getSubStringAfterColon(line).ifPresent(routeInfo::setSource);
            }
            if (line.contains("origin")) {
                getSubStringAfterColon(line).ifPresent(origin -> {
                    if(origin.length() > 2 ) {
                        String originAsnString = origin.substring(2, origin.length());
                        Long originAsn = StringUtils.parseLong(originAsnString, null);
                        if (originAsn != null) {
                            routeInfo.setOriginAs(originAsn);
                        }
                    }
                });
            }
        }
        return routeInfo;
    }

