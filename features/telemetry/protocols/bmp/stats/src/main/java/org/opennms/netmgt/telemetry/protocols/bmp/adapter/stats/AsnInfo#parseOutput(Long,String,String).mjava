    public static AsnInfo parseOutput(Long asn, String source, String rawOutput) {
        AsnInfo asnInfo = new AsnInfo(asn, source, rawOutput);
        // These items can be in multiple lines.
        String remarks = "";
        String address = "";
        String orgId = "";
        // Split output into lines
        String[] lines = rawOutput.split("\\r?\\n");
        for (String line : lines) {
            if (line.contains("ASName") || line.contains("as-name")) {
                getSubStringAfterColon(line).ifPresent(asnInfo::setAsName);
                continue;
            }
            if (line.contains("OrgName") || line.contains("org-name")) {
                getSubStringAfterColon(line).ifPresent(asnInfo::setOrgName);
                continue;
            }
            if (line.contains("OrgId") || line.contains("org")) {
                Optional<String> result = getSubStringAfterColon(line);
                if (result.isPresent()) {
                    orgId = orgId + result.get() + " ";
                    asnInfo.setOrgId(orgId);
                }
                continue;
            }
            if (line.contains("Address") || line.contains("address")) {
                Optional<String> result = getSubStringAfterColon(line);
                if (result.isPresent()) {
                    address = address + result.get() + " ";
                    asnInfo.setAddress(address);
                }
                continue;
            }
            if (line.contains("City")) {
                getSubStringAfterColon(line).ifPresent(asnInfo::setCity);
                continue;
            }
            if (line.contains("StateProv")) {
                getSubStringAfterColon(line).ifPresent(asnInfo::setStateProv);

                continue;
            }
            if (line.contains("PostalCode")) {
                getSubStringAfterColon(line).ifPresent(asnInfo::setPostalCode);

                continue;
            }
            if (line.contains("Country") || line.contains("country")) {
                getSubStringAfterColon(line).ifPresent(asnInfo::setCountry);

                continue;
            }
            if (line.contains("remarks") || line.contains("Comment") || line.contains("descr")) {
                Optional<String> result = getSubStringAfterColon(line);
                if (result.isPresent()) {
                    remarks = remarks + result.get() + " ";
                    asnInfo.setRemarks(remarks);
                }
            }
        }
        return asnInfo;
    }

