    static Optional<RouteInfo> getRouteInfo(String prefix) {
        WhoisClient whoisClient = new WhoisClient();
        Optional<RouteInfo> routeInfo = Optional.empty();
        for (String host : hosts) {
            try {
                whoisClient.connect(host, 43);
                String rawOutput = whoisClient.query(prefix);
                whoisClient.disconnect();
                if (rawOutput.contains("route")) {
                    RouteInfo parsed = RouteInfo.parseOneRecord(rawOutput);
                    if(parsed.getPrefix() != null && parsed.getPrefixLen() != null
                            && parsed.getOriginAs() != null) {
                        routeInfo = Optional.of(parsed);
                        break;
                    } else {
                        LOG.warn("Not able to parse RouteInfo from {}", rawOutput);
                    }
                }
            } catch (IOException e) {
                LOG.warn("Exception while fetching whois info with host `{}` for prefix = {} ", host, prefix, e);
            }
        }
        return routeInfo;
    }

