    @Override
    public void visit(final PeerDownPacket packet) {
        assertThat(packet.peerHeader.type, is(PeerHeader.Type.GLOBAL_INSTANCE));
        assertThat(packet.peerHeader.flags.addressVersion, is(PeerFlags.AddressVersion.IP_V4));
        assertThat(packet.peerHeader.flags.policy, is(PeerFlags.Policy.PRE_POLICY));
        assertThat(packet.peerHeader.flags.legacyASPath, is(false));
        assertThat(packet.peerHeader.distinguisher, is(UnsignedLong.ZERO));
        assertThat(packet.peerHeader.address, is(InetAddressUtils.addr("10.0.255.5")));
        assertThat(packet.peerHeader.as, is(64512L));
        assertThat(packet.peerHeader.id, is(3232238085L));
        assertThat(packet.peerHeader.timestamp, is(Instant.ofEpochSecond(1574257076L)));
        assertThat(packet.type, is(PeerDownPacket.Type.REMOTE_BGP_NOTIFICATION));
        packet.reason.accept(new Reason.Visitor(){
            @Override
            public void visit(LocalBgpNotification localNotification) {
                fail("Wrong Reason LocalBgpNotification");
            }

            @Override
            public void visit(LocalNoNotification localNoNotification) {
                fail("Wrong Reason LocalNoNotification");
            }

            @Override
            public void visit(RemoteBgpNotification remoteNotification) {
                assertThat(remoteNotification.notification.header.length, is(21));
                assertThat(remoteNotification.notification.header.type, is(org.opennms.netmgt.telemetry.protocols.bmp.parser.proto.bgp.Header.Type.NOTIFICATION));
                assertThat(remoteNotification.notification.error, is(NotificationPacket.Error.PEER_DECONFIGURED));
            }

            @Override
            public void visit(RemoteNoNotification remoteNoNotification) {
                fail("Wrong Reason RemoteNoNotification");
            }

            @Override
            public void visit(Unknown unknown) {
                fail("Wrong Reason Unknown");
            }
        });
    }

