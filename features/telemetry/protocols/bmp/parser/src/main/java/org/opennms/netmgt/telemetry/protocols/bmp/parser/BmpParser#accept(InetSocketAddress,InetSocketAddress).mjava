    @Override
    public Handler accept(final InetSocketAddress remoteAddress,
                          final InetSocketAddress localAddress) {
        return buffer -> {
            final Header header = new Header(slice(buffer, Header.SIZE));
            final Packet packet = header.parsePayload(slice(buffer, header.length - Header.SIZE));

            LOG.trace("Got packet: {}", packet);

            final BasicOutputBuffer output = new BasicOutputBuffer();
            try (final BsonBinaryWriter writer = new BsonBinaryWriter(output)) {
                writer.writeStartDocument();

                writer.writeInt32("@version", header.version);
                writer.writeString("@type", header.type.name());

                packet.accept(new Serializer(writer));

                writer.writeEndDocument();
            }

            this.recordsDispatched.mark();

            final TelemetryMessage message = new TelemetryMessage(remoteAddress, output.getByteBuffers().get(0).asNIO());
            return dispatcher.send(message);
        };
    }

