        public Prefix(final ByteBuf buffer, final PeerFlags flags, final Optional<PeerInfo> peerInfo) {
            final boolean addPathCapabilityEnabled = peerInfo.map(info -> info.isAddPathEnabled(BGP_AFI_IPV4, BGP_SAFI_UNICAST)).orElse(false);

            if (addPathCapabilityEnabled) {
                this.pathId = uint32(buffer);
            }

            this.length = uint8(buffer);

            // Create a buffer for the address with the size required to hold the full address (depending on the
            // version) but fill ony the first n bytes. Remaining bytes will be initialized all zero.
            final byte[] prefix = new byte[flags.addressVersion.map(v -> {switch (v) {
                case IP_V4: return 4;
                case IP_V6: return 16;
                default: throw new IllegalStateException();
            }})];
            buffer.readBytes(prefix, 0, (this.length + (8-1)) / 8); // Read n bits padded to the next full byte
            this.prefix = InetAddressUtils.getInetAddress(prefix);
        }

