        private static Value parseValue(final boolean authoritative,
                                        final int highType,
                                        final int lowType,
                                        final ByteBuf buffer) {
            switch (highType | ((authoritative ? 1 : 0) << 7)) {
                case 0x00: // (Non-)Transitive Two-Octet AS-Specific (RFC7153)
                    return parseCommon(buffer, lowType, false, false);
                case 0x01: // (Non-)Transitive IPv4-Address-Specific (RFC7153)
                    return parseCommon(buffer, lowType, true, true);
                case 0x02: // (Non-)Transitive Four-Octet AS-Specific (RFC7153)
                    return parseCommon(buffer, lowType, true, false);

                case 0x03: // Transitive Opaque [RFC7153]
                    return parseOpaque(buffer, lowType);

                case 0x80: // Generic Transitive Experimental Use [RFC7153]
                    return parseGeneric(buffer, lowType, false, false);
                case 0x81: // Generic Transitive Experimental Use Extended Community Part 2 [RFC7674]
                    return parseGeneric(buffer, lowType, true, true);
                case 0x82: // Generic Transitive Experimental Use Extended Community Part 3 [RFC7674]
                    return parseGeneric(buffer, lowType, true, false);

                default:
                    BmpParser.RATE_LIMITED_LOG.debug("Unknown Extended Community Attribute: {}", highType);
                    return null;
            }
        }

