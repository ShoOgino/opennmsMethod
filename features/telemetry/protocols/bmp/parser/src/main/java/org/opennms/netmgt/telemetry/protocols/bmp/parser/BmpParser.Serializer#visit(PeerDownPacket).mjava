        @Override
        public void visit(final PeerDownPacket packet) {
            final Transport.PeerDownPacket.Builder message = this.message.getPeerDownBuilder();
            message.setPeer(peer(packet.peerHeader));

            packet.reason.accept(new Reason.Visitor() {
                @Override
                public void visit(final LocalBgpNotification localBgpNotification) {
                    localBgpNotification.notification.ifPresent(notification -> {
                        message.getLocalBgpNotificationBuilder()
                                .setCode(notification.code)
                                .setSubcode(notification.subcode);
                    });
                }

                @Override
                public void visit(final LocalNoNotification localNoNotification) {
                    message.setLocalNoNotification(localNoNotification.code);
                }

                @Override
                public void visit(final RemoteBgpNotification remoteBgpNotification) {
                    remoteBgpNotification.notification.ifPresent(notification -> {
                        message.getRemoteBgpNotificationBuilder()
                                .setCode(notification.code)
                                .setSubcode(notification.subcode);
                    });
                }

                @Override
                public void visit(final RemoteNoNotification remoteNoNotification) {
                    message.setRemoteNoNotification(Empty.getDefaultInstance());
                }

                @Override
                public void visit(final Unknown unknown) {
                    message.setUnknown(Empty.getDefaultInstance());
                }
            });
        }

