        public void telemetrySubscribe(Telemetry.SubscriptionRequest request,
                                       io.grpc.stub.StreamObserver<Telemetry.OpenConfigData> responseObserver) {
            observer = responseObserver;
            LOG.info("Got request {}", request.toString());
            List<Telemetry.Path> paths  = request.getPathListList();
            if(paths.isEmpty()) {
                LOG.info("No paths found");
                return;
            }
            Telemetry.Path path = paths.get(0);
            int frequency = path.getSampleFrequency();
            Telemetry.OpenConfigData.Builder builder = Telemetry.OpenConfigData.newBuilder();
            builder.setPath(path.getPath());
            builder.setComponentId(1);
            builder.setSystemId("localhost");
            builder.setTimestamp(System.currentTimeMillis());
            Telemetry.KeyValue keyValue = Telemetry.KeyValue.newBuilder().setKey("in-octets")
                    .setIntValue(4000).build();
            builder.addKv(keyValue);
            Telemetry.KeyValue keyValue1 = Telemetry.KeyValue.newBuilder().setKey("name")
                    .setStrValue("eth0").build();
            builder.addKv(keyValue1);

            if(errorStream) {
                responseObserver.onError(new IllegalArgumentException());
                errorStream = false;
                return;
            }
            executor.scheduleAtFixedRate(() ->
                    responseObserver.onNext(builder.build()), 0, frequency, TimeUnit.MILLISECONDS);
        }

