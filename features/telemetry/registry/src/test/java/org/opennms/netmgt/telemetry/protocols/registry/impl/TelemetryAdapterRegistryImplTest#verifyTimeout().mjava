    // Verifies that after a certain time, we bail even if the service is not yet available
    @Test
    public void verifyTimeout() throws InterruptedException, ExecutionException, TimeoutException {
        final long lookupDelay = 250;
        final long gracePeriod = 2000;
        final long waitPeriod = 500;
        final TelemetryAdapterRegistryImpl registry = new TelemetryAdapterRegistryImpl(gracePeriod, waitPeriod, lookupDelay);

        final CompletableFuture<Adapter> future = new CompletableFuture();
        CompletableFuture.runAsync(() -> {
            final Adapter adapter = registry.getService(new AdapterDefinition() {
                @Override
                public String getName() {
                    return DummyAdapter.class.getName();
                }

                @Override
                public String getClassName() {
                    return DummyAdapter.class.getName();
                }

                @Override
                public List<? extends PackageDefinition> getPackages() {
                    return null;
                }

                @Override
                public Map<String, String> getParameterMap() {
                    return null;
                }
            });
            future.complete(adapter);
        });

        // Wait for the future to complete
        Adapter adapter = future.get(gracePeriod * 2, TimeUnit.MILLISECONDS);
        assertNull(adapter);
    }

