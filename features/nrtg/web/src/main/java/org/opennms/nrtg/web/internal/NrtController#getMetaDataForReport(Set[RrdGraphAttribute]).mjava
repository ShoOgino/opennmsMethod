    private Map<String, String> getMetaDataForReport(final Set<RrdGraphAttribute> rrdGraphAttributes) {
        Map<String, String> metaData = new HashMap<String, String>();

        logger.debug("getMetaDataForReport: " + rrdGraphAttributes);

        //get all metaData for RrdGraphAttributes from the meta files next to the RRD/JRobin files
        for (final RrdGraphAttribute attr : rrdGraphAttributes) {
            // Convert the "relative RRD path" from the RrdGraphAttribute to a ResourcePath used
            // by the ResourceStorageDao.
            ResourcePath pathToMetaFile;
            if (TimeSeries.getTimeseriesStrategy() == Strategy.NEWTS || TimeSeries.getTimeseriesStrategy() == Strategy.INTEGRATION) {
                String path = attr.getRrdRelativePath();
                if (path.startsWith("/")) {
                    path = path.substring(1);
                }
                pathToMetaFile = ResourcePath.get(path.split(":"));
            } else {
                final String knownExtensions[] = new String[]{".rrd", ".jrb"};
                String metaFileNameWithoutExtension = attr.getRrdFile();
                for (final String ext : knownExtensions) {
                    if (metaFileNameWithoutExtension.endsWith(ext)) {
                        metaFileNameWithoutExtension = metaFileNameWithoutExtension.substring(0,
                                metaFileNameWithoutExtension.lastIndexOf(ext));
                        break;
                    }
                }
                pathToMetaFile = ResourcePath.get(attr.getResource().getPath(), metaFileNameWithoutExtension);
            }

            final Set<Entry<String, String>> metaDataEntrySet = m_resourceStorageDao.getMetaData(pathToMetaFile).entrySet();
            logger.debug("Meta-data for attribute '{}' at path '{}' contains: {}", attr, pathToMetaFile, metaDataEntrySet);
            if (metaDataEntrySet == null) continue;

            final String attrName = attr.getName();
            final String attrString = attr.toString();

            for (final Map.Entry<String,String> entry : metaDataEntrySet) {
                final String line = entry.getKey() + '=' + entry.getValue();
                if (line.endsWith(attrName)) {
                    metaData.put(attrString, line);
                }
            };
        }
        
        return metaData;
    }

