    private Map<String, String> getMetaDataForReport(Set<RrdGraphAttribute> rrdGraphAttributes) {
        Map<String, String> metaData = new HashMap<String, String>();
        
        logger.debug("getMetaDataForReport: " + rrdGraphAttributes);

        //get all metaData for RrdGraphAttributes from the meta files next to the RRD/JRobin files
        for (RrdGraphAttribute attr : rrdGraphAttributes) {
            String fileName = null;
            BufferedReader bf = null;

            try {
                fileName = m_resourceDao.getRrdDirectory() + File.separator + attr.getRrdRelativePath();

                //get meta files instead of rrd or jrb
                fileName = fileName.substring(0, fileName.lastIndexOf("."));
                fileName = fileName.concat(".meta");
                bf = new BufferedReader(new FileReader(fileName));

                String mappingLine = "";
                while (mappingLine != null) {
                    logger.debug("attr = " + attr.toString() + ", mappingLine = " + mappingLine);
                    metaData.put(attr.toString(), mappingLine);
                    mappingLine = bf.readLine();
                }
            } catch (Exception ex) {
                logger.error("Problem by looking up metadata about metrics for RrdGraphAttributes in context of NRTG from meta file '{}' '{}'", fileName, ex.getMessage());
            } finally {
                if (bf != null) {
                    try {
                        bf.close();
                    } catch (IOException ex) {
                        logger.warn("problem by reader close", ex);
                    }
                }
            }
        }
        return metaData;
    }

