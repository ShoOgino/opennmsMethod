    public ModelAndView nrtStart(String resourceId, String report, HttpSession httpSession) {

        assert (resourceId != null);
        logger.debug("resourceId: '{}'", resourceId);

        assert (report != null);
        logger.debug("report: '{}'", report);

        OnmsResource reportResource = m_resourceDao.getResourceById(resourceId);

        PrefabGraph prefabGraph = m_graphDao.getPrefabGraph(report);
        //TODO Tak graph service is able to check if a graph is proper for a given resource, check that later.
        prefabGraph = lookUpMetricsForColumnsOfPrefabGraphs(prefabGraph, reportResource);

        String nrtCollectionTaskId = "NrtCollectionTaskId_" + System.currentTimeMillis();

        List<CollectionJob> collectionJobs = createCollectionJobs(reportResource, prefabGraph, nrtCollectionTaskId);
        for (CollectionJob collectionJob : collectionJobs) {
            m_nrtBroker.publishCollectionJob(collectionJob);
            getCollectionJobMap(httpSession, true).put(nrtCollectionTaskId, collectionJob);
        }

        ModelAndView modelAndView = new ModelAndView("nrt/realtime");
        modelAndView.addObject("nrtCollectionTaskId", nrtCollectionTaskId);

        modelAndView.addObject("graphTitle", prefabGraph.getTitle());
        modelAndView.addObject("graphName", prefabGraph.getName());
        modelAndView.addObject("graphDescription", prefabGraph.getDescription());

        NrtRrdCommandFormatter rrdFormatter = new NrtRrdCommandFormatter(prefabGraph);
        modelAndView.addObject("rrdGraphString", rrdFormatter.getRrdGraphString());
        modelAndView.addObject("metricsMapping", rrdFormatter.getRrdMetricsMapping());

        return modelAndView;
    }

