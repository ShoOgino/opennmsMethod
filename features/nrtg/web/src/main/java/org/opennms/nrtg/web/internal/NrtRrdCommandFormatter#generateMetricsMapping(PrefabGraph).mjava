    private void generateMetricsMapping(final PrefabGraph prefabGraph) {
        final StringBuilder s = new StringBuilder();

        final String command = prefabGraph.getCommand();

        final Pattern pattern = Pattern.compile("DEF:.*?=(\\{.*?\\}):(.*?):");
        final Matcher matcher = pattern.matcher(command);

        final Map<String, String> rrdFileMapping = new HashMap<String, String>();
        while (matcher.find()) {
            rrdFileMapping.put(matcher.group(2), matcher.group(1));
        }

        final String[] metrics = prefabGraph.getMetricIds();
        final String[] columns = prefabGraph.getColumns();
        assert metrics.length == columns.length;

        for (int i = 0; i < metrics.length; i++) {
            if (i != 0) {
                s.append(", \n");
            }

            final String metric = metrics[i].substring(metrics[i].indexOf("_") + 1);
            final String column = columns[i];

            s.append(String.format("'%s': '%s:%s'", metric, rrdFileMapping.get(column), column));

        }

        this.rrdMetricsMapping = s.toString();
    }

