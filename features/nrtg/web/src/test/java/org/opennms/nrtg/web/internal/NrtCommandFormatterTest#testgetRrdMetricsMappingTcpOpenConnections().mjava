    @Test
    public void testgetRrdMetricsMappingTcpOpenConnections() {
        System.out.println("metrics mapping for TCP Open Connections");

        String rawString = "--title=\"TCP Open Connections\" --vertical-label=\"TCP Opens Per Second\" DEF:actOpen={rrd1}:tcpActiveOpens:AVERAGE DEF:minActOpen={rrd1}:tcpActiveOpens:MIN DEF:maxActOpen={rrd1}:tcpActiveOpens:MAX DEF:passOpen={rrd2}:tcpPassiveOpens:AVERAGE DEF:minPassOpen={rrd2}:tcpPassiveOpens:MIN DEF:maxPassOpen={rrd2}:tcpPassiveOpens:MAX CDEF:negActOpen=0,actOpen,- AREA:passOpen#00ff00:\"In (Passive)\" GPRINT:passOpen:AVERAGE:\"Avg  \\: %8.2lf %s\" GPRINT:passOpen:MIN:\"Min  \\: %8.2lf %s\" GPRINT:passOpen:MAX:\"Max  \\: %8.2lf %s\\n\" AREA:negActOpen#0000ff:\"Out (Active)\" GPRINT:actOpen:AVERAGE:\"Avg  \\: %8.2lf %s\" GPRINT:actOpen:MIN:\"Min  \\: %8.2lf %s\" GPRINT:actOpen:MAX:\"Max  \\: %8.2lf %s\\n\"";
        String expectedResult = "'.1.3.6.1.2.1.6.5.0': '{rrd1}:tcpActiveOpens', \n'.1.3.6.1.2.1.6.6.0': '{rrd2}:tcpPassiveOpens'";
        String[] columns = new String[]{"tcpActiveOpens", "tcpPassiveOpens"};
        String[] metrics = new String[]{"SNMP_.1.3.6.1.2.1.6.5.0", "SNMP_.1.3.6.1.2.1.6.6.0"};

        PrefabGraph prefabGraph = createMock(PrefabGraph.class);
        expect(prefabGraph.getCommand()).andReturn(rawString).anyTimes();
        expect(prefabGraph.getColumns()).andReturn(columns).anyTimes();
        expect(prefabGraph.getMetricIds()).andReturn(metrics).anyTimes();
        replay(prefabGraph);

        NrtRrdCommandFormatter commandFormatter = new NrtRrdCommandFormatter(prefabGraph);
        String mappingResult = commandFormatter.getRrdMetricsMapping();

        assertTrue(mappingResult.contains(".1.3.6.1.2.1.6.5.0"));
        assertTrue(mappingResult.contains(".1.3.6.1.2.1.6.6.0"));
        assertTrue(mappingResult.contains("{rrd1}:tcpActiveOpens"));
        assertTrue(mappingResult.contains("{rrd2}:tcpPassiveOpens"));

        assertEquals(mappingResult, expectedResult);
    }

