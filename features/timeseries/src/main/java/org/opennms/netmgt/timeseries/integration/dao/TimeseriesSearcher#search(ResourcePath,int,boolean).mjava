    public SearchResults search(ResourcePath path, int depth, boolean fetchMetrics) throws StorageException {

        // Numeric suffix for the index name, based on the length of parent path
        int idxSuffix = path.elements().length - 1;
        // The length of the resource ids we're interested in finding
        int targetLen = idxSuffix + depth + 2;

        String key = "_idx"+idxSuffix;
        String value = String.format("(%s,%d)", toResourceId(path), targetLen);
        Tag indexTag = new ImmutableTag(key, value);

        List<Metric> metrics = timeseriesStorageManager.get().getMetrics(Collections.singletonList(indexTag));

        Map<String, SearchResults.Result> resultPerResources = new HashMap<>();


        for(Metric metric : metrics) {
            String resourceId = metric.getFirstTagByKey(IntrinsicTagNames.resourceId).getValue();
            SearchResults.Result result = resultPerResources.get(resourceId);
            if(result == null) {
                Map<String, String> attributes = new HashMap<>();
                metric.getMetaTags().forEach(entry -> attributes.put(entry.getKey(), entry.getValue()));
                Resource resource = new Resource(metric.getFirstTagByKey(IntrinsicTagNames.resourceId).getValue(),
                        Optional.of(attributes));
                result = new SearchResults.Result(resource, new ArrayList<>());
                resultPerResources.put(resourceId, result);
            }
            result.getMetrics().add(metric.getFirstTagByKey(IntrinsicTagNames.name).getValue());
        }

        SearchResults results = new SearchResults();
        resultPerResources.values().forEach(results::addResult);
        return results;
    }

