    public List<Sample> getSamplesToInsert() {
        final List<Sample> samples = Lists.newLinkedList();
        ResourcePath path = ResourceTypeUtils.getResourcePathWithRepository(rrepository, ResourcePath.get(resource.getPath(), name));

        // Add extra attributes that can be used to walk the resource tree.
        TimeseriesUtils.addIndicesToAttributes(path, metaData);
        String resourceId = TimeseriesUtils.toResourceId(path);

        // Convert numeric attributes to samples
        final Instant time = Instant.ofEpochMilli(timeKeeper.getCurrentTime());
        for (Entry<CollectionAttributeType, Number> entry : declarations.entrySet()) {
            CollectionAttributeType attrType = entry.getKey();

            Tag type = typeToTag(attrType.getType());
            if (type == null) {
                // Skip attributes with no type
                continue;
            }

            Number value = entry.getValue();
            if (value == null) {
                // Skip attributes with no value (see NMS-8103)
                continue;
            }

            ImmutableMetric.MetricBuilder builder = ImmutableMetric.builder()
                    .intrinsicTag(IntrinsicTagNames.resourceId, resourceId)
                    .intrinsicTag(IntrinsicTagNames.name, attrType.getName())
                    .metaTag(type);
                metaData.forEach(builder::metaTag);

            final ImmutableMetric metric = builder.build();
            final Double sampleValue = value.doubleValue();
            samples.add(ImmutableSample.builder().metric(metric).time(time).value(sampleValue).build());
        }
        return samples;
    }

