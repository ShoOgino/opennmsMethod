    @Autowired
    public TimeSeriesMetaDataDao(final DataSource dataSource,
                                 @Named("timeseriesMetaDataCache") CacheConfig cacheConfig,
                                 @Named("timeseriesMetricRegistry") MetricRegistry registry
    ) {
        this.dataSource = Objects.requireNonNull(dataSource, "dataSource cannot be null.");
        Objects.requireNonNull(registry, "registry cannot be null.");

        CacheLoader<String, Map<String, String>> loader = new CacheLoader<String, Map<String, String>>(){
            @Override
            public Map<String, String> load(String resourceId) throws Exception {
                return loadFromDataBase(resourceId);
            }
        };
        this.cache = new org.opennms.core.cache.CacheBuilder<String, Map<String, String>>()
                .withConfig(cacheConfig)
                .withCacheLoader(loader)
                .build();
        this.metadataWriteTimer = registry.timer("metadata.write.db");
        this.metadataReadTimer = registry.timer("metadata.read.db");
    }

