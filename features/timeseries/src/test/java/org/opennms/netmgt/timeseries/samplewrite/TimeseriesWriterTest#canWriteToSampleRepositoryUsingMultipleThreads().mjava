    /**
     * Uses a latch to verify that multiple that multiple threads
     * are used to concurrently insert samples into the SampleRepository.
     */
    @Test
    public void canWriteToSampleRepositoryUsingMultipleThreads() {
        int ringBufferSize = 1024;
        int numWriterThreads = 8;

        LatchedTimeseriesStorage store = new LatchedTimeseriesStorage(numWriterThreads);
        MetricRegistry registry = new MetricRegistry();
        TimeseriesWriter writer = new TimeseriesWriter(ringBufferSize, numWriterThreads, registry);
        writer.setTimeSeriesMetaDataDao(Mockito.mock(TimeSeriesMetaDataDao.class));
        when(storageManager.get()).thenReturn(store);
        writer.setTimeSeriesStorage(storageManager);

        Metric metric = createMetric().build();
        for (int i = 0; i < ringBufferSize*2; i++) {
            Sample s = ImmutableSample.builder()
            .metric(metric)
            .time(Instant.now())
            .value((double)i).build();
            writer.insert(Lists.newArrayList(s));
        }
    }

