    @Test
    public void canPersist() throws InterruptedException, StorageException, UnknownHostException {

        createAndSaveNode();

        ServiceParameters params = new ServiceParameters(Collections.emptyMap());
        RrdRepository repo = new RrdRepository();
        // Only the last element of the path matters here
        repo.setRrdBaseDir(Paths.get("a","path","that","ends","with","snmp").toFile());
        Persister persister = persisterFactory.createPersister(params, repo);

        CollectionAgent agent = mock(CollectionAgent.class);
        int nodeId = 1;
        when(agent.getStorageResourcePath()).thenReturn(ResourcePath.get(Integer.toString(nodeId)));
        NodeLevelResource nodeLevelResource = new NodeLevelResource(nodeId);
        InterfaceLevelResource ifLevelResource = new InterfaceLevelResource(nodeLevelResource, "1");

        ResourceType rt = mock(ResourceType.class, RETURNS_DEEP_STUBS);
        when(rt.getName()).thenReturn("Charles");
        when(rt.getStorageStrategy().getClazz()).thenReturn(MockStorageStrategy.class.getCanonicalName());
        when(rt.getPersistenceSelectorStrategy().getClazz()).thenReturn(MockPersistenceSelectorStrategy.class.getCanonicalName());

        DeferredGenericTypeResource deferredGenericTypeResource = new DeferredGenericTypeResource(nodeLevelResource, "Charles", "id");

        GenericTypeResource genericTypeResource = new GenericTypeResource(nodeLevelResource, rt, "idx");
        genericTypeResource.setTimestamp(new Date(0));
        ResourceTypeMapper.getInstance().setResourceTypeMapper((name) -> rt);

        Date now = new Date();
        CollectionSetDTO collectionSet = new CollectionSetBuilder(agent)
                // Node level
                .withNumericAttribute(nodeLevelResource, "metrics", "m1", 900, AttributeType.GAUGE)
                .withIdentifiedNumericAttribute(nodeLevelResource, "metrics", "m2", 1000, AttributeType.COUNTER, "idx-m2")
                .withStringAttribute(nodeLevelResource, "metrics", "sysname", "host1")
                // Interface level
                .withNumericAttribute(ifLevelResource, "if-metrics", "m3", 44, AttributeType.GAUGE)
                .withIdentifiedNumericAttribute(ifLevelResource, "if-metrics", "m4", 55, AttributeType.COUNTER, "idx-m4")
                .withStringAttribute(ifLevelResource, "if-metrics", "ifname", "eth0")
                // Generic
                .withNumericAttribute(deferredGenericTypeResource, "gen-metrics", "m5", 66, AttributeType.GAUGE)
                .withIdentifiedNumericAttribute(deferredGenericTypeResource, "gen-metrics", "m6", 77, AttributeType.COUNTER, "idx-m6")
                .withIdentifiedStringAttribute(deferredGenericTypeResource, "gen-metrics", "genname", "bgp", "oops")
                .withTimestamp(now)
                .build();

        // Persist
        collectionSet.visit(persister);

        // Wait for the sample(s) to be flushed
        Thread.sleep(5 * 1000);

        testForNumericAttribute("snmp:1:metrics", "m1", 900d);
        testForNumericAttribute("snmp:1:metrics", "m2", 1000d);
        testForStringAttribute("snmp/1/metrics", "idx-m2", "m2"); // Identified
        testForStringAttribute("snmp/1", "sysname", "host1");

        testForNumericAttribute("snmp:1:1:if-metrics", "m3", 44d);
        testForNumericAttribute("snmp:1:1:if-metrics", "m4", 55d);
        testForStringAttribute("snmp/1/1/if-metrics", "idx-m4", "m4"); // Identified
        testForStringAttribute("snmp/1/1", "ifname", "eth0");

        testForNumericAttribute("snmp:1:gen-metrics:gen-metrics", "m5", 66d);
        testForNumericAttribute("snmp:1:gen-metrics:gen-metrics", "m6", 77d);
        testForStringAttribute("snmp/1/gen-metrics/gen-metrics", "idx-m6", "m6"); // Identified
        testForStringAttribute("snmp/1/gen-metrics", "genname", "bgp");

        // test for additional meta tags that are provided to the plugin for external use:
        testForStringAttribute("snmp/1/gen-metrics/gen-metrics", "sysObjectID", "abc");
        testForStringAttribute("snmp/1/gen-metrics/gen-metrics", "nodelabel","myNodeLabel");
        testForStringAttribute("snmp/1/gen-metrics/gen-metrics", "vendor","myVendor");
        testForStringAttribute("snmp/1/1/if-metrics", "if-description","myDescription");
        testForStringAttribute("snmp/1/gen-metrics/gen-metrics", "cat_myCategory","myCategory");
    }

