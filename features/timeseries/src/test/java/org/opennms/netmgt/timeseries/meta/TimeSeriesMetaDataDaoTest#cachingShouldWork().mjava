    @Test
    public void cachingShouldWork() throws SQLException, StorageException, ExecutionException {
        CacheConfig config = new CacheConfigBuilder().withName(TimeSeriesMetaDataDaoTest.class.getSimpleName()).build();
        TimeSeriesMetaDataDao dao = Mockito.spy(new TimeSeriesMetaDataDao(mock(DataSource.class), config, new MetricRegistry()));
        Mockito.doNothing().when(dao).storeUncached(anyCollection());
        ResourcePath resourcePathA = new ResourcePath("a", "b", "c");
        MetaData meta = new MetaData(toResourceId(resourcePathA).toString(), "key", "value");
        dao.store(Arrays.asList(meta, meta));
        dao.store(Collections.singletonList(meta));
        dao.store(Collections.singletonList(meta));
        dao.getForResourcePath(resourcePathA);
        // if the cache works correctly we should have only one database call:
        Mockito.verify(dao, times(1)).storeUncached(anyCollection());
    }

