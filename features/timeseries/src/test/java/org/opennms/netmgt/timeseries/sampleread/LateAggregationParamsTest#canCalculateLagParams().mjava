    @Test
    public void canCalculateLagParams() {

        // Supply sane values and make sure the same values are returned
        LateAggregationParams lag = LateAggregationParams.builder().step(300*1000L).interval(150*1000L).heartbeat(450*1000L).build();
        assertEquals(300*1000L, lag.step);
        assertEquals(150*1000L, lag.interval);

        // Supply a step that is not a multiple of the interval, make sure this is corrected
        lag = LateAggregationParams.builder().step(310*1000L).interval(150*1000L).heartbeat(450*1000L).build();
        assertEquals(310000L, lag.step);
        assertEquals(155000L, lag.interval);

        // Supply an interval that is much larger than the step
        lag = LateAggregationParams.builder().step(300*1000L).interval(1500*1000L).heartbeat(45000*1000L).build();
        assertEquals(300*1000L, lag.step);
        // Interval should be reduced
        assertEquals(150*1000L, lag.interval);
    }

