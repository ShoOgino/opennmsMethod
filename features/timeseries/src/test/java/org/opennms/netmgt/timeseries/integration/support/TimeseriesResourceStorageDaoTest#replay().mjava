    private void replay() throws StorageException {
        EasyMock.expect(searcher.search(EasyMock.anyObject(), EasyMock.anyInt(), EasyMock.anyBoolean())).andAnswer(new IAnswer<SearchResults>() {
            public SearchResults
            answer() {
                ResourcePath resourcePath = (ResourcePath)EasyMock.getCurrentArguments()[0];
                int depth = (Integer)EasyMock.getCurrentArguments()[1];

                int idxSuffix = resourcePath.elements().length - 1;
                int targetLen = idxSuffix + depth + 2;
                String field = "_idx"+idxSuffix; // key
                String value = String.format("(%s,%d)", toResourceId(resourcePath), targetLen); // value

                SearchResults searchResults = new SearchResults();
                for (Entry<ResourcePath, Set<String>> entry : indexedPaths.entrySet()) {
                    Map<String, String> attributes = Maps.newHashMap();
                    // Build the indexed attributes and attempt to match them against the given query
                    TimeseriesUtils.addIndicesToAttributes(entry.getKey(), attributes);
                    if (value.equals(attributes.get(field))) {
                        searchResults.addResult(new Resource(toResourceId(entry.getKey())), entry.getValue());
                    }
                }
                return searchResults;
            }
        }).atLeastOnce();
        EasyMock.expect(searcher.getResourceAttributes(EasyMock.anyObject())).andReturn(Maps.newHashMap()).anyTimes();
        EasyMock.replay(searcher);
    }

