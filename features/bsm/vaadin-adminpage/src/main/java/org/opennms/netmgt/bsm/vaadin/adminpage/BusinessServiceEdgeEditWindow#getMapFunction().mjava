    @SuppressWarnings("unchecked")
    private MapFunction getMapFunction() {
        try {
            final MapFunction mapFunction = ((Class<? extends MapFunction>) m_mapFunctionSelect.getValue()).newInstance();
            mapFunction.accept(new MapFunctionVisitor<Void>() {
                @Override
                public Void visit(Decrease decrease) {
                    return null;
                }

                @Override
                public Void visit(Identity identity) {
                    return null;
                }

                @Override
                public Void visit(Ignore ignore) {
                    return null;
                }

                @Override
                public Void visit(Increase increase) {
                    return null;
                }

                @Override
                public Void visit(SetTo setTo) {
                    setTo.setStatus((Status) m_mapFunctionSeveritySelect.getValue());
                    return null;
                }
            });
            return mapFunction;
        } catch (final InstantiationException | IllegalAccessException e) {
            throw Throwables.propagate(e);
        }
    }

