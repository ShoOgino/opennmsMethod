    /**
     * Constructor responsible for creating new instances of this class
     *
     * @param windowTitle the window's title
     * @param fieldName the title of the input field
     * @param inputCallback the callback instance
     */
    public StringInputDialogWindow(String windowTitle, String fieldName, InputCallback inputCallback) {
        super(windowTitle);

        /**
         * set window properties
         */
        setModal(true);
        setClosable(false);
        setResizable(false);

        /**
         * create the main layout
         */
        VerticalLayout verticalLayout = new VerticalLayout();

        /**
         * add the input field
         */
        final TextField inputField = new TextField(fieldName);

        inputField.setValue("");
        inputField.focus();
        inputField.selectAll();
        inputField.setImmediate(true);

        inputField.addValidator(new AbstractStringValidator("Input must not be empty") {
            @Override
            protected boolean isValidValue(String s) {
                return (!"".equals(s));
            }
        });

        /**
         * create nested FormLayout instance
         */
        FormLayout formLayout = new FormLayout();
        formLayout.setSizeUndefined();
        formLayout.setMargin(true);
        formLayout.addComponent(inputField);

        /**
         * add the buttons in a horizontal layout
         */
        HorizontalLayout horizontalLayout = new HorizontalLayout();

        horizontalLayout.setMargin(true);
        horizontalLayout.setSpacing(true);
        horizontalLayout.setWidth("100%");

        /**
         * create cancel button
         */
        Button cancel = new Button("Cancel");
        cancel.setDescription("Cancel editing");
        cancel.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent event) {
                StringInputDialogWindow.this.close();
                /**
                 * call the cancel method of the callback instance...
                 */
                inputCallback.inputCancelled();
            }
        });

        cancel.setClickShortcut(ShortcutAction.KeyCode.ESCAPE, null);

        horizontalLayout.addComponent(cancel);
        horizontalLayout.setExpandRatio(cancel, 1);
        horizontalLayout.setComponentAlignment(cancel, Alignment.TOP_RIGHT);

        /**
         * create ok button
         */
        Button ok = new Button("Save");
        ok.setDescription("Save configuration");
        ok.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent event) {
                if (inputField.isValid()) {
                    StringInputDialogWindow.this.close();
                    /**
                     * call the confirmed method of the callback...
                     */
                    inputCallback.inputConfirmed(inputField.getValue());
                }
            }
        });

        ok.setClickShortcut(ShortcutAction.KeyCode.ENTER, null);
        horizontalLayout.addComponent(ok);

        formLayout.addComponent(horizontalLayout);
        verticalLayout.addComponent(formLayout);

        /**
         * set the content
         */
        setContent(verticalLayout);
    }

