    public BusinessServiceMainLayout(BusinessServiceManager businessServiceManager) {
        m_businessServiceManager = Objects.requireNonNull(businessServiceManager);

        setSizeFull();

        // construct the upper layout for the create button and field
        HorizontalLayout upperLayout = new HorizontalLayout();

        // Reload button to allow manual reloads of the state machine
        final Button reloadButton = UIHelper.createButton("Reload", "Reloads the Business Service State Machine", null, (Button.ClickListener) event -> {
            m_businessServiceManager.triggerDaemonReload();
        });

        // business service input field
        final TextField createTextField = new TextField();
        createTextField.setInputPrompt("Business Service Name");
        createTextField.setId("createTextField");

        // create button
        final Button createButton = new Button("Create");
        createButton.setId("createButton");
        createButton.addClickListener((Button.ClickListener) event -> {
            /**
             * check for valid value
             */
            if (!"".equals(Strings.nullToEmpty(createTextField.getValue()).trim())) {
                /**
                 * create new DTO instance
                 */
                final BusinessServiceDTO businessServiceDTO = new BusinessServiceDTO();
                /**
                 * add the title
                 */
                businessServiceDTO.setName(createTextField.getValue().trim());
                /**
                 * create the modal configuration dialog
                 */
                getUI().addWindow(new BusinessServiceEditWindow(businessServiceDTO, BusinessServiceMainLayout.this));
                /**
                 * clear the textfield value
                 */
                createTextField.setValue("");
            }
        });

        /**
         * add to the upper layout
         */
        upperLayout.addComponent(reloadButton);
        upperLayout.addComponent(createTextField);
        upperLayout.addComponent(createButton);
        addComponent(upperLayout);
        /**
         * and set the upper-right alignment
         */
        setComponentAlignment(upperLayout, Alignment.TOP_RIGHT);

        /**
         * now construct the table...
         */
        m_table = new Table();
        m_table.setSizeFull();
        m_table.setContainerDataSource(m_beanItemContainer);

        /**
         * ...and configure the visible columns
         */
        m_table.setVisibleColumns("id", "name");

        /**
         * create generated columns for modification of entries...
         */
        m_table.addGeneratedColumn("edit", new Table.ColumnGenerator() {
            @Override
            public Object generateCell(Table source, Object itemId, Object columnId) {
                Button editButton = new Button("edit");
                editButton.setId("editButton-" + ((BusinessServiceDTO) itemId).getName());

                editButton.addClickListener((Button.ClickListener) event -> {
                    getUI().addWindow(new BusinessServiceEditWindow((BusinessServiceDTO) itemId, BusinessServiceMainLayout.this));
                    refreshTable();
                });
                return editButton;
            }
        });

        /**
         * ...and deletion of entries
         */
        m_table.addGeneratedColumn("delete", new Table.ColumnGenerator() {
            @Override
            public Object generateCell(Table source, Object itemId, Object columnId) {
                Button deleteButton = new Button("delete");
                deleteButton.setId("deleteButton-" + ((BusinessServiceDTO) itemId).getName());
                deleteButton.addClickListener((Button.ClickListener) event -> {
                    businessServiceManager.delete(((BusinessServiceDTO) itemId).getId());
                    refreshTable();
                });
                return deleteButton;
            }
        });

        /**
         * add the table to the layout
         */
        addComponent(m_table);
        setExpandRatio(m_table, 1.0f);

        /**
         * initial refresh of table
         */
        refreshTable();
    }

