    public BusinessServiceMainLayout(BusinessServiceManager businessServiceManager) {

        this.businessServiceManager = businessServiceManager;
        Objects.requireNonNull(businessServiceManager);

        setSizeFull();

        HorizontalLayout horizontalLayout = new HorizontalLayout();

        final TextField createField = new TextField();
        createField.setInputPrompt("NewBusinessService");

        Button createButton = new Button("Create");
        createButton.addClickListener((Button.ClickListener) event -> {
            if (!"".equals(Strings.nullToEmpty(createField.getValue()).trim())) {
                BusinessServiceDTO businessServiceDTO = new BusinessServiceDTO();
                businessServiceDTO.setName(createField.getValue().trim());
                getUI().addWindow(new BusinessServiceEditWindow(businessServiceDTO, BusinessServiceMainLayout.this));
                createField.setValue("");
                refreshTable();
            }
        });

        horizontalLayout.addComponent(createField);
        horizontalLayout.addComponent(createButton);
        addComponent(horizontalLayout);
        setComponentAlignment(horizontalLayout, Alignment.TOP_RIGHT);

        table = new Table();
        table.setContainerDataSource(beanItemContainer);
        table.setVisibleColumns("id", "name");

        table.addGeneratedColumn("edit", new Table.ColumnGenerator() {
            @Override
            public Object generateCell(Table source, Object itemId, Object columnId) {
                Button editButton = new Button("edit");
                editButton.addClickListener((Button.ClickListener) event -> {
                    getUI().addWindow(new BusinessServiceEditWindow((BusinessServiceDTO)itemId, BusinessServiceMainLayout.this));
                    refreshTable();
                });
                return editButton;
            }
        });

        table.addGeneratedColumn("delete", new Table.ColumnGenerator() {
            @Override
            public Object generateCell(Table source, Object itemId, Object columnId) {
                Button deleteButton = new Button("delete");
                deleteButton.addClickListener((Button.ClickListener) event -> {
                    businessServiceManager.delete(((BusinessServiceDTO)itemId).getId());
                    refreshTable();
                });
                return deleteButton;
            }
        });
        addComponent(table);
        setExpandRatio(table, 1.0f);
        table.setSizeFull();
        refreshTable();
    }

