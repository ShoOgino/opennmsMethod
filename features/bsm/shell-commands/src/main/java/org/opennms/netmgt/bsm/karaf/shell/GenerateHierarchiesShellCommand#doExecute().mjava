    @Override
    protected Object doExecute() throws Exception {
        final Map<String, BusinessService> businessServivesByName = businessServiceManager.getAllBusinessServices()
                .stream().collect(Collectors.toMap(b -> b.getName(), b -> b));

        int showStatusEvery = 100;
        int numServicesToGenerate = numServices != null ? numServices : DEFAULT_NUM_SERVICES;
        int depthPerHierarchy = depth != null ? depth : DEFAULT_DEPTH;

        int currentDepth = 0;
        BusinessService lastBusinessService = null;
        for (int i = 0; i < numServicesToGenerate; i++) {
            if (i % showStatusEvery == 0) {
                System.out.printf("Generating business services %d -> %d\n", i,
                        Math.min(i + showStatusEvery, numServicesToGenerate));
            }
            final String name = "B" + i;
            if (businessServivesByName.containsKey(name)) {
                lastBusinessService = businessServivesByName.get(name);
                continue;
            }

            BusinessService businessService = businessServiceManager.createBusinessService();
            businessService.setName(name);
            businessService.setReduceFunction(new HighestSeverity());
            businessService.getAttributes().put("generated", "true");
            businessServiceManager.saveBusinessService(businessService);

            if (lastBusinessService != null && currentDepth < depthPerHierarchy) {
                businessServiceManager.addChildEdge(lastBusinessService, businessService,
                        new Identity(), 1);
                currentDepth++;
            } else if (currentDepth >= depthPerHierarchy) {
                currentDepth = 0;
            }
            lastBusinessService = businessService;
        }
        return null;
    }

