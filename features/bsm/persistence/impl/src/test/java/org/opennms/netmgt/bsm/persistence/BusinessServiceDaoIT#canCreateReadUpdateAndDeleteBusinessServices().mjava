    @Test
    public void canCreateReadUpdateAndDeleteBusinessServices() {
        // Initially there should be no business services
        assertEquals(0, m_businessServiceDao.countAll());

        // Create a business service
        BusinessService bs = new BusinessService();
        bs.setName("Web Servers");
        bs.setAttribute("dc", "RDU");
        HashSet<String> reductionKeys = Sets.newHashSet();
        reductionKeys.add("TestReductionKeyA");
        reductionKeys.add("TestReductionKeyB");
        bs.setReductionKeys(reductionKeys);
        m_businessServiceDao.save(bs);
        m_businessServiceDao.flush();

        // Read a business service
        assertEquals(bs, m_businessServiceDao.get(bs.getId()));
        assertEquals( reductionKeys.size(), m_businessServiceDao.get(bs.getId()).getReductionKeys().size());

        // Update a business service
        bs.setName("Application Servers");
        bs.setAttribute("dc", "!RDU");
        bs.setAttribute("cd", "/");

        // Grab the first monitored service from node 1
        OnmsMonitoredService ipService = m_databasePopulator.getNode1()
                .getIpInterfaces().iterator().next()
                .getMonitoredServices().iterator().next();
        bs.addIpService(ipService);

        m_businessServiceDao.update(bs);
        m_businessServiceDao.flush();

        // Verify the update
        assertEquals(bs, m_businessServiceDao.get(bs.getId()));

        // Delete
        m_businessServiceDao.delete(bs);
        m_businessServiceDao.flush();

        // There should be no business services after the delete
        assertEquals(0, m_businessServiceDao.countAll());
    }

