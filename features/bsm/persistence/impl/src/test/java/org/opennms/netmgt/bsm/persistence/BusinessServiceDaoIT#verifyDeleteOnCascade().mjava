    // TODO MVR write a test that verifies that if a child is deleted, the edge pointing to that child is also deleted
    @Test
    public void verifyDeleteOnCascade() {
        BusinessServiceEntity child = new BusinessServiceEntityBuilder()
                .name("Child2")
                .reduceFunction(new MostCriticalEntity())
                .toEntity();

        BusinessServiceEntity parent = new BusinessServiceEntityBuilder()
                .name("Web Servers")
                .addAttribute("dc", "RDU")
                .addReductionKey("TestReductionKeyA")
                .addReductionKey("TestReductionKeyB")
                .addIpService(getMonitoredServiceFromNode1())
                .reduceFunction(m_mostCritical)
                .addChildren(child)
                .toEntity();

        m_businessServiceDao.save(child);
        m_businessServiceDao.save(parent);

        assertEquals(2, m_businessServiceDao.countAll());
        assertEquals(2, m_reductionFunctionDao.countAll());
        assertEquals(3, m_edgeDao.countAll());

        m_businessServiceDao.delete(child);
        assertEquals(1, m_businessServiceDao.countAll());
        assertEquals(1, m_reductionFunctionDao.countAll());
        assertEquals(2, m_edgeDao.countAll()); // TODO MVR deleting a child does not delete the edge, should be fixed

        m_businessServiceDao.delete(parent);
        assertEquals(0, m_businessServiceDao.countAll());
        assertEquals(0, m_reductionFunctionDao.countAll());
        assertEquals(0, m_edgeDao.countAll());
    }

