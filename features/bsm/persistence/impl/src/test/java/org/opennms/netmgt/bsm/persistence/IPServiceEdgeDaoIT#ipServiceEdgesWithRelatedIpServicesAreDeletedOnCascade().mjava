    @Test
    public void ipServiceEdgesWithRelatedIpServicesAreDeletedOnCascade() throws InterruptedException {
        // Create a business service
        BusinessServiceEntity bs = new BusinessServiceEntity();
        bs.setName("Mont Cascades");
        bs.setAttribute("dc", "RDU");
        bs.setReductionFunction(m_highestSeverity);
        m_businessServiceDao.save(bs);
        m_businessServiceDao.flush();

        // Initially there should be no edges
        assertEquals(0, m_businessServiceEdgeDao.countAll());

        // Create an edge
        IPServiceEdgeEntity edge = new IPServiceEdgeEntity();
        edge.setMapFunction(m_identity);
        edge.setBusinessService(bs);

        // Grab the first monitored service from node 1
        OnmsNode node = m_databasePopulator.getNode1();
        OnmsMonitoredService ipService = node.getIpInterfaces().iterator().next()
                .getMonitoredServices().iterator().next();
        edge.setIpService(ipService);
        m_businessServiceEdgeDao.save(edge);
        m_businessServiceEdgeDao.flush();

        bs.addEdge(edge);
        m_businessServiceDao.update(bs);
        m_businessServiceDao.flush();

        // We should have a single business service with a single IP service associated
        assertEquals(1, m_businessServiceDao.countAll());
        assertEquals(1, m_businessServiceDao.get(bs.getId()).getIpServiceEdges().size());

        // Now delete the node
        m_nodeDao.delete(node);
        m_nodeDao.flush();

        // The business service should still be present, but the IP service should have been deleted
        // by the foreign key constraint
        assertEquals(1, m_businessServiceDao.countAll());
        assertEquals(0, m_businessServiceDao.get(bs.getId()).getIpServiceEdges().size());
    }

