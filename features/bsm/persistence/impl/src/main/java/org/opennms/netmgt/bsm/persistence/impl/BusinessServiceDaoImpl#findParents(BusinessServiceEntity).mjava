    @Override
    public Set<BusinessServiceEntity> findParents(BusinessServiceEntity child) {
        final long childId =  Objects.requireNonNull(child).getId();
        Set<BusinessServiceEntity> parents = getHibernateTemplate().execute(new HibernateCallback<Set<BusinessServiceEntity>>() {
            @Override
            public Set<BusinessServiceEntity> doInHibernate(Session session) throws HibernateException, SQLException {
                Query query = session.createQuery("select edge from BusinessServiceEdgeEntity edge where type(edge) = BusinessServiceChildEdgeEntity and edge.child.id = :childId");
                query.setParameter("childId", childId);
                @SuppressWarnings("unchecked")
                List<BusinessServiceEdgeEntity> list = query.list();
                return list.stream().map(e -> e.getBusinessService()).collect(Collectors.toSet());
            }
        });
        return parents;
    }

