    @EventHandler(ueis = {EventConstants.SERVICE_DELETED_EVENT_UEI, EventConstants.INTERFACE_DELETED_EVENT_UEI, EventConstants.NODE_DELETED_EVENT_UEI, EventConstants.APPLICATION_DELETED_EVENT_UEI})
    public void serviceInterfaceOrNodeDeleted(Event e) {
        final Set<String> reductionKeys = m_stateMachine.getGraph().getReductionKeys();

        if (EventConstants.NODE_DELETED_EVENT_UEI.equals(e.getUei()) && reductionKeys.contains(String.format("uei.opennms.org/nodes/nodeDown::%d", e.getNodeid()))
                || EventConstants.INTERFACE_DELETED_EVENT_UEI.equals(e.getUei()) && reductionKeys.contains(String.format("uei.opennms.org/nodes/interfaceDown::%d:%s", e.getNodeid(), e.getInterface()))
                || EventConstants.SERVICE_DELETED_EVENT_UEI.equals(e.getUei()) && reductionKeys.contains(String.format("uei.opennms.org/nodes/nodeLostService::%d:%s:%s", e.getNodeid(), e.getInterface(), e.getService()))
                || EventConstants.APPLICATION_DELETED_EVENT_UEI.equals(e.getUei()) && m_stateMachine.getGraph().getVertexByApplicationId(Integer.parseInt(e.getParm("applicationId").getValue().getContent())) != null) {

            final Set<BusinessService> affectedBusinessServices = new HashSet<>();
            String cause = "an associated entity";

            if (EventConstants.APPLICATION_DELETED_EVENT_UEI.equals(e.getUei())) {
                final GraphVertex vertex = m_stateMachine.getGraph().getVertexByApplicationId(Integer.parseInt(e.getParm("applicationId").getValue().getContent()));
                affectedBusinessServices.addAll(searchPredecessors(vertex));
                cause = "application '" + e.getParm("applicationName").getValue().getContent() + "'";
            }

            if (EventConstants.NODE_DELETED_EVENT_UEI.equals(e.getUei())) {
                final GraphVertex vertex = m_stateMachine.getGraph().getVertexByReductionKey(String.format("uei.opennms.org/nodes/nodeDown::%d", e.getNodeid()));
                affectedBusinessServices.addAll(searchPredecessors(vertex));
                cause = "node '" + e.getNodeid() + "'";
            }

            if (EventConstants.INTERFACE_DELETED_EVENT_UEI.equals(e.getUei())) {
                final GraphVertex vertex = m_stateMachine.getGraph().getVertexByReductionKey(String.format("uei.opennms.org/nodes/interfaceDown::%d:%s", e.getNodeid(), e.getInterface()));
                affectedBusinessServices.addAll(searchPredecessors(vertex));
                cause = "interface '" + e.getNodeid() + "/" + e.getInterface() + "'";
            }

            if (EventConstants.SERVICE_DELETED_EVENT_UEI.equals(e.getUei())) {
                final GraphVertex vertex = m_stateMachine.getGraph().getVertexByReductionKey(String.format("uei.opennms.org/nodes/nodeLostService::%d:%s:%s", e.getNodeid(), e.getInterface(), e.getService()));
                affectedBusinessServices.addAll(searchPredecessors(vertex));
                cause = "service '" + e.getNodeid() + "/" + e.getInterface() + "/" + e.getService() + "'";
            }

            reloadConfigurationAt = System.currentTimeMillis() + RELOAD_DELAY;

            for (final BusinessService businessService : affectedBusinessServices) {
                final EventBuilder eventBuilder = new EventBuilder(EventConstants.BUSINESS_SERVICE_GRAPH_INVALIDATED, "bsmd");
                eventBuilder.addParam("businessServiceId", businessService.getId());
                eventBuilder.addParam("businessServiceName", businessService.getName());
                eventBuilder.addParam("cause", cause);
                final Event event = eventBuilder.getEvent();
                try {
                    m_eventIpcManager.send(event);
                } catch (EventProxyException ex) {
                    LOG.error("Cannot send event " + event.getUei(), ex);
                }
            }
        }
    }

