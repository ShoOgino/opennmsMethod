    private void startAlarmPolling() {
        final long pollInterval = getPollInterval();
        alarmPoller.scheduleWithFixedDelay(new Runnable() {
            @Override
            public void run() {
                try {
                    LOG.debug("Polling alarm table...");
                    m_template.execute(new TransactionCallbackWithoutResult() {
                        @Override
                        protected void doInTransactionWithoutResult(TransactionStatus status) {
                            m_alarmDao.findAll().forEach(alarm -> handleAlarm(alarm));
                        }
                    });
                } catch (Exception ex) {
                    LOG.error("Error while polling alarm table", ex);
                } finally {
                    LOG.debug("Polling alarm table DONE");
                }
            }
        }, pollInterval, pollInterval, TimeUnit.SECONDS);

    }

