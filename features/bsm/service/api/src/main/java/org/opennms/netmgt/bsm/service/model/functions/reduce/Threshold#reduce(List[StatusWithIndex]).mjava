    @Override
    public Optional<StatusWithIndices> reduce(List<StatusWithIndex> statuses) {
        final Map<Status, Integer> hitsByStatus = getHitsByStatusWithIndex(statuses);

        // Determine the status with the highest severity where the number of relative hits
        // is greater than the configured threshold
        for (Map.Entry<Status, Integer> statusWithHits : hitsByStatus.entrySet()) {
            if (statusWithHits.getValue() / (double)statuses.size() >= m_threshold) {
                return Optional.of(new StatusWithIndices(statusWithHits.getKey(),
                        StatusUtils.getIndicesWithStatusGe(statuses, statusWithHits.getKey())));
            }
        }

        return Optional.empty();
    }

