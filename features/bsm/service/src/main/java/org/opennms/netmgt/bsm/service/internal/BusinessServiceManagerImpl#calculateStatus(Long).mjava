    @Override
    public OnmsSeverity calculateStatus(Long serviceId) {
        final BusinessService service = getBusinessService(serviceId);
        final List<BusinessStatusEntity> statusEntities = getDao().getStatus();
        if (!statusEntities.isEmpty()) {
            final Set<BusinessStatusEntity.Key> keySet = new HashSet<>();
            for (OnmsMonitoredService eachMonitoredService : service.getIpServices()) {
                BusinessStatusEntity.Key key = new BusinessStatusEntity.Key(eachMonitoredService.getNodeId(), eachMonitoredService.getServiceId(), eachMonitoredService.getIpAddress());
                keySet.add(key);
            }

            // find the status for the the service we are looking for
            final List<BusinessStatusEntity> statusList = new ArrayList<>();
            for (BusinessStatusEntity eachStatus : statusEntities) {
                if (keySet.contains(eachStatus.getKey())) {
                    statusList.add(eachStatus);
                }
            }
            // calculate for the business service
            OnmsSeverity maxSeverity = OnmsSeverity.NORMAL;
            for (BusinessStatusEntity eachStatus : statusList) {
                if (maxSeverity.isLessThan(eachStatus.getSeverity())) {
                    maxSeverity = eachStatus.getSeverity();
                }
            }
            return maxSeverity;
        }
        return OnmsSeverity.NORMAL;
    }

