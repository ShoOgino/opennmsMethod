    @Test
    public void testCalculateStatus() {
        BusinessService service = createService("Dummy Business Service");
        BusinessService service2 = createService("Another Dummy Business Service");
        Long serviceId1 = businessServiceDao.save(service);
        Long serviceId2 = businessServiceDao.save(service2);

        // no ip services attached
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId1));
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId2));

        // ip services attached
        businessServiceManager.assignIpInterface(serviceId1, 5);
        businessServiceManager.assignIpInterface(serviceId1, 6);

        // should not have any effect
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId1));
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId2));


        // attach NORMAL alarm to service 1
        alarmDao.save(createAlarm(monitoredServiceDao.get(5), OnmsSeverity.NORMAL));
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId1));
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId2));

        // attach INDETERMINATE alarm to service 1
        alarmDao.save(createAlarm(monitoredServiceDao.get(5), OnmsSeverity.INDETERMINATE));
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId1));
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId2));

        // attach WARNING alarm to service 1
        alarmDao.save(createAlarm(monitoredServiceDao.get(5), OnmsSeverity.WARNING));
        Assert.assertEquals(OnmsSeverity.WARNING, businessServiceManager.calculateStatus(serviceId1));
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId2));

        // attach CRITICAL alarm to service 1
        alarmDao.save(createAlarm(monitoredServiceDao.get(5), OnmsSeverity.CRITICAL));
        Assert.assertEquals(OnmsSeverity.CRITICAL, businessServiceManager.calculateStatus(serviceId1));
        Assert.assertEquals(OnmsSeverity.NORMAL, businessServiceManager.calculateStatus(serviceId2));
    }

