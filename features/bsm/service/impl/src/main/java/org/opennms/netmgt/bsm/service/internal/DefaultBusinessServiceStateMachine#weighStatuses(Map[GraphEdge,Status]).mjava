    /**
     * Apply the edges weights to the associated statuses set in the map,
     * ignoring the actual status stored in the edge. Can be used for simulations
     * without needing to change the actual edge's status.
     *
     * @param edgesWithStatus
     * @return
     */
    public static List<Status> weighStatuses(Map<GraphEdge, Status> edgesWithStatus) {
        // Find the greatest common divisor of all the weights
        int gcd = edgesWithStatus.keySet().stream()
                .map(e -> e.getWeight())
                .reduce((a,b) -> BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue())
                .orElse(1);

        // Multiply the statuses based on their relative weight
        List<Status> statuses = Lists.newArrayList();
        for (Entry<GraphEdge, Status> entry : edgesWithStatus.entrySet()) {
            int relativeWeight = Math.floorDiv(entry.getKey().getWeight(), gcd);
            for (int i = 0; i < relativeWeight; i++) {
                statuses.add(entry.getValue());
            }
        }

        return statuses;
    }

