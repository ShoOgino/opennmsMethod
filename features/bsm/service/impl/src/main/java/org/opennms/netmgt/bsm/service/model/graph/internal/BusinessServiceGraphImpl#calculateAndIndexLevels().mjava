    private void calculateAndIndexLevels() {
        // Start by finding the root vertices
        // These are the vertices with no incoming edges
        final Set<GraphVertex> rootVertices = Sets.newHashSet();
        for (GraphVertex vertex : getVertices()) {
            if (getInEdges(vertex).size() == 0) {
                rootVertices.add(vertex);
            }
        }

        // Now calculate the distance of every node to each of the root nodes
        final GraphLevelIndexer<GraphVertex, GraphEdge> levelIndexer = new GraphLevelIndexer<>();
        levelIndexer.indexLevel(this, rootVertices);
        for (Entry<GraphVertex, Integer> entry : levelIndexer.getLevelMap().entrySet()) {
            final int level = entry.getValue().intValue();
            final GraphVertexImpl vertex = (GraphVertexImpl)entry.getKey();

            // Store the maximum level within the vertex
            vertex.setLevel(Math.max(level, vertex.getLevel()));
        }

        // Index the vertices by level
        for (GraphVertex vertex : getVertices()) {
            Set<GraphVertex> verticesAtLevel = m_verticesByLevel.get(vertex.getLevel());
            if (verticesAtLevel == null) {
                verticesAtLevel = Sets.newHashSet();
                m_verticesByLevel.put(vertex.getLevel(), verticesAtLevel);
            }
            verticesAtLevel.add(vertex);
        }
    }

