    @Override
    public boolean assignChildService(BusinessService parentService, BusinessService childService) {
        final BusinessServiceEntity parentEntity = getBusinessServiceEntity(parentService);
        final BusinessServiceEntity childEntity = getBusinessServiceEntity(childService);

        if (this.checkDescendantForLoop(parentEntity, childEntity)) {
            throw new IllegalArgumentException("Service will form a loop");
        }

        // if already exists, no update
        if (parentEntity.getChildServices().contains(childEntity)) {
            return false;
        }

        // add and update
        parentEntity.getChildServices().add(childEntity);
        childEntity.getParentServices().add(parentEntity);
//        getDao().update(parentEntity);
//        getDao().update(childEntity);
        return true;
    }

