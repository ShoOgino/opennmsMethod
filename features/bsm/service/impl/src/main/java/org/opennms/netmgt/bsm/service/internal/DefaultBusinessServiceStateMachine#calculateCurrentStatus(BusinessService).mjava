    private Status calculateCurrentStatus(BusinessService businessService) {
        final HashMap<Edge, Status> edgeStatusMap = new HashMap<>();
        // Map
        for (Edge edge : businessService.getEdges()) {
            for (String reductionKey : edge.getReductionKeys()) {
                final Status rkStatus = m_reductionKeyStatus.get(reductionKey);
                edge.getMapFunction().map(rkStatus).ifPresent(s -> edgeStatusMap.put(edge, s));
            }
        }
        for (ChildEdge edge : businessService.getChildEdges()) {
            final Status bsStatus = m_businessServiceStatus.get(edge.getChild());
            edge.getMapFunction().map(bsStatus).ifPresent(s -> edgeStatusMap.put(edge, s));
        }

        // Reduce
        final Status overallStatus = businessService.getReduceFunction().reduce(edgeStatusMap).orElse(DEFAULT_SEVERITY);

        // Apply lower bound, severity states like INDETERMINATE and CLEARED don't always make sense
        return overallStatus.isLessThan(MIN_SEVERITY) ? MIN_SEVERITY : overallStatus;
    }

