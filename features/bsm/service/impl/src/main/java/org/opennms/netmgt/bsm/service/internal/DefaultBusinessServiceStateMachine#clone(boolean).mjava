    @Override
    public BusinessServiceStateMachine clone(boolean preserveState) {
        m_rwLock.readLock().lock();
        try {
            final BusinessServiceStateMachine sm = new DefaultBusinessServiceStateMachine();

            // Rebuild the graph using the business services from the existing state machine
            final BusinessServiceGraph graph = getGraph();
            sm.setBusinessServices(graph.getVertices().stream()
                    .filter(v -> v.getBusinessService() != null)
                    .map(v -> v.getBusinessService())
                    .collect(Collectors.toList()));

            // Prime the state
            if (preserveState) {
                for (String reductionKey : graph.getReductionKeys()) {
                    GraphVertex reductionKeyVertex = graph.getVertexByReductionKey(reductionKey);
                    sm.handleNewOrUpdatedAlarm(new AlarmWrapper() {
                        @Override
                        public String getReductionKey() {
                            return reductionKey;
                        }

                        @Override
                        public Status getStatus() {
                            return reductionKeyVertex.getStatus();
                        }
                    });
                }
            }
            return sm;
        } finally {
            m_rwLock.readLock().unlock();
        }
    }

