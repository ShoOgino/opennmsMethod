    @Override
    public void setBusinessServices(List<BusinessService> businessServices) {
        Objects.requireNonNull(businessServices, "businessServices cannot be null");

        m_rwLock.writeLock().lock();
        try {
            // Clear previous state
            m_reductionKeys.clear();
            m_businessServiceStatus.clear();
            m_reductionKeyStatus.clear();
            m_ipServiceIds.clear();

            // Rebuild the reduction Key set
            for (BusinessService businessService : businessServices) {
                for (IpServiceEdge ipServiceEdge : businessService.getIpServiceEdges()) {
                    m_ipServiceIds.add(ipServiceEdge.getIpService().getId());
                }
                m_businessServiceStatus.put(businessService, DEFAULT_SEVERITY);
                for (Edge edge : businessService.getEdges()) {
                    for (String eachRk : edge.getReductionKeys()) {
                        addReductionKey(eachRk, businessService);
                    }
                }
            }

            // Determine Roots
            Set<BusinessService> rootServices = BusinessServiceHierarchyUtils.getRoots(businessServices);
            // Rebuild hierarchy (set level information)
            BusinessServiceHierarchyUtils.updateHierarchyLevel(rootServices);
        } finally {
            m_rwLock.writeLock().unlock();
        }
    }

