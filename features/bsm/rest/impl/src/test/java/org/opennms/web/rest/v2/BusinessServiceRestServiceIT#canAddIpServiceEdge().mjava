    @Test
    public void canAddIpServiceEdge() throws Exception {
        // Create a business service without any edges
        BusinessServiceEntity service = new BusinessServiceEntityBuilder()
                .name("Dummy Service")
                .reduceFunction(new MostCriticalEntity())
                .toEntity();
        final Long serviceId = m_businessServiceDao.save(service);
        m_businessServiceDao.flush();

        // The Request to send to create an edge
        IpServiceEdgeRequestDTO edgeRequestDTO = new IpServiceEdgeRequestDTO();
        MapFunctionDTO mapFunctionDTO = new MapFunctionDTO();
        mapFunctionDTO.setType(MapFunctionType.Identity);
        edgeRequestDTO.setMapFunction(mapFunctionDTO);

        // verify adding of not existing ip service is not possible
        edgeRequestDTO.setIpServiceId(-1);
        sendData(POST, MediaType.APPLICATION_XML, buildIpServiceEdgeUrl(serviceId), toXml(edgeRequestDTO), 404);

        // verify adding of existing ip service is possible
        edgeRequestDTO.setIpServiceId(10);
        sendData(POST, MediaType.APPLICATION_XML, buildIpServiceEdgeUrl(serviceId), toXml(edgeRequestDTO), 200);
        Assert.assertEquals(1, m_businessServiceDao.get(serviceId).getIpServiceEdges().size());

        // verify adding twice possible, but not modified
        sendData(POST, MediaType.APPLICATION_XML, buildIpServiceEdgeUrl(serviceId), toXml(edgeRequestDTO), 304);
        Assert.assertEquals(1, m_businessServiceDao.get(serviceId).getIpServiceEdges().size());

        // verify adding of existing ip service is possible
        edgeRequestDTO.setIpServiceId(17);
        sendData(POST, MediaType.APPLICATION_XML, buildIpServiceEdgeUrl(serviceId), toXml(edgeRequestDTO), 200);
        Assert.assertEquals(2, m_businessServiceDao.get(serviceId).getIpServiceEdges().size());
    }

