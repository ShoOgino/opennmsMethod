    @Test
    public void canUpdateBusinessService() throws Exception {
        // initialize
        BusinessServiceEntity bs = new BusinessServiceEntityBuilder()
                .name("Dummy Service")
                .addAttribute("some-key", "some-value")
                .addReductionKey("key1", new IdentityEntity())
                .addReductionKey("key2-deleteMe", new IdentityEntity())
                .reduceFunction(new HighestSeverityEntity())
                .toEntity();
        final Long serviceId = m_businessServiceDao.save(bs);
        m_businessServiceDao.flush();

        // update
        BusinessServiceRequestDTO requestDTO = toRequestDto(bs);
        requestDTO.setName("New Name");
        requestDTO.getAttributes().put("key", "value");
        requestDTO.getReductionKeys().clear();
        requestDTO.addReductionKey("key1updated", new FunctionsManager().getMapFunctionDTO(new Ignore()), Edge.DEFAULT_WEIGHT);

        // TODO JSON cannot be de-serialized by the rest service. Fix me.
//        sendData(PUT, MediaType.APPLICATION_JSON, "/business-services/" + serviceId, toJson(requestDTO), 204);
        sendData(PUT, MediaType.APPLICATION_XML, "/business-services/" + serviceId, toXml(requestDTO), 204);

        // Reload from database and verify changes
        bs = m_businessServiceDao.get(serviceId);
        Assert.assertEquals(requestDTO.getName(), bs.getName());
        Assert.assertEquals(requestDTO.getAttributes(), bs.getAttributes());
        Assert.assertEquals(1, bs.getReductionKeyEdges().size());
        Assert.assertEquals(1, bs.getEdges().size());
        Assert.assertEquals(1, m_businessServiceDao.findAll().size());
        Assert.assertEquals(Sets.newHashSet(), bs.getIpServiceEdges());
        BusinessServiceResponseDTO responseDTO = verifyResponse(bs);
        verifyReductionKey("key1updated", responseDTO);
    }

