    /**
     * Verify that the Rest API can deal with setting of a hierarchy
     */
    @Test
    public void canCreateHierarchy() throws Exception {
        final BsmTestData testData = BsmTestUtils.createSimpleHierarchy();
        // clear hierarchy
        for(BusinessServiceEntity eachEntity : testData.getServices()) {
            // TODO MVR fix me
//            eachEntity.getParentServices().clear();
//            eachEntity.getChildServices().clear();
        }
        // save business services
        for (BusinessServiceEntity eachEntity : testData.getServices()) {
            sendData(POST, MediaType.APPLICATION_XML, "/business-services", toXml(toRequestDto(eachEntity)), 201);
        }
        // set hierarchy
        BusinessServiceEntity parentEntity = findEntityByName("Parent")
                .addChildren(findEntityByName("Child 1"), m_identity) // TODO MVR really identity?
                .addChildren(findEntityByName("Child 2"), m_identity); // TODO MVR really identity?
        sendData(PUT, MediaType.APPLICATION_XML, buildServiceUrl(parentEntity.getId()), toXml(toRequestDto(parentEntity)), 204);

        // Verify
        Assert.assertEquals(3, m_businessServiceDao.countAll());
        parentEntity = findEntityByName("Parent");
        // TODO MVR fix me
//        BusinessServiceEntity child1Entity = findEntityByName("Child 1");
//        BusinessServiceEntity child2Entity = findEntityByName("Child 2");
//        Assert.assertEquals(0, parentEntity.getParentServices().size());
//        Assert.assertEquals(2, parentEntity.getChildServices().size());
//        Assert.assertEquals(1, child1Entity.getParentServices().size());
//        Assert.assertEquals(0, child1Entity.getChildServices().size());
//        Assert.assertEquals(1, child2Entity.getParentServices().size());
//        Assert.assertEquals(0, child2Entity.getChildServices().size());
//        verifyResponse(parentEntity);
//        verifyResponse(child1Entity);
//        verifyResponse(child2Entity);
    }

