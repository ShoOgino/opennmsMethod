    @Test
    @JUnitTemporaryDatabase
    @Transactional
    public void canCreateBusinessService() throws Exception {
        final BusinessServiceEntity bs = new BusinessServiceEntityBuilder()
                .name("some-service")
                .addAttribute("some-key", "some-value")
                .addReductionKey("reductionKey-1")
                .addReductionKey("reductionKey-2")
                .addReductionKey("reductionKey-3")
                .toEntity();

        sendData(POST, MediaType.APPLICATION_JSON, "/business-services", toJson(toRequestDto(bs)), 201);
        sendData(POST, MediaType.APPLICATION_XML, "/business-services", toXml(toRequestDto(bs)) , 201);
        Assert.assertEquals(databasePopulator.expectedBsCount(2), m_businessServiceDao.countAll());

        for (BusinessServiceEntity eachEntity : m_businessServiceDao.findAll()) {
            BusinessServiceResponseDTO responseDTO = getXmlObject(
                    JAXBContext.newInstance(BusinessServiceResponseDTO.class),
                    buildServiceUrl(eachEntity.getId()),
                    200,
                    BusinessServiceResponseDTO.class);
            Assert.assertEquals(eachEntity.getId(), Long.valueOf(responseDTO.getId()));
            Assert.assertEquals(eachEntity.getName(), responseDTO.getName());
            Assert.assertEquals(eachEntity.getAttributes(), responseDTO.getAttributes());
            Assert.assertEquals(eachEntity.getReductionKeys(), responseDTO.getReductionKeys());
            Assert.assertEquals(OnmsSeverity.INDETERMINATE, responseDTO.getOperationalStatus());
            Assert.assertEquals(eachEntity.getChildServices()
                    .stream()
                    .map(e -> e.getId())
                    .collect(Collectors.toSet()), responseDTO.getChildServices());
            Assert.assertEquals(eachEntity.getParentServices()
                    .stream()
                    .map(e -> e.getId())
                    .collect(Collectors.toSet()), responseDTO.getChildServices());
            Assert.assertEquals(eachEntity.getName(), responseDTO.getName());
            Assert.assertEquals(3, responseDTO.getReductionKeys().size());
        }
    }

