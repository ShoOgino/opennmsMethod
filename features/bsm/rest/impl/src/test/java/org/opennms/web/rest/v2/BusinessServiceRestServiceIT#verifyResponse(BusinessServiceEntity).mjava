    private BusinessServiceResponseDTO verifyResponse(BusinessServiceEntity entity) throws Exception {
        final BusinessServiceResponseDTO responseDTO = getXmlObject(
                JAXBContext.newInstance(BusinessServiceResponseDTO.class),
                buildServiceUrl(entity.getId()),
                200,
                BusinessServiceResponseDTO.class);
        Assert.assertEquals(entity.getId(), Long.valueOf(responseDTO.getId()));
        Assert.assertEquals(entity.getName(), responseDTO.getName());
        Assert.assertEquals(entity.getAttributes(), responseDTO.getAttributes());
        Assert.assertEquals(entity.getReductionKeyEdges().size(), responseDTO.getReductionKeys().size()); // TODO MVR we should verify the content not only the size
        Assert.assertEquals(responseDTO.getReductionKeys(), responseDTO.getReductionKeys());
        Assert.assertEquals(Status.INDETERMINATE, responseDTO.getOperationalStatus());
        Assert.assertEquals(entity.getChildServices()
                .stream()
                .map(e -> e.getId())
                .collect(Collectors.toSet()), responseDTO.getChildren()); // TODO MVR this is going to fail...
        Assert.assertEquals(m_businessServiceDao.findParents(entity)
                .stream()
                .map(e -> e.getId())
                .collect(Collectors.toSet()), responseDTO.getParentServices()); // TODO MVR this is going to fail..
        Assert.assertEquals(entity.getIpServices()
                .stream()
                .map(e -> e.getId())
                .collect(Collectors.toSet()), responseDTO.getIpServices());
        return responseDTO;
    }

