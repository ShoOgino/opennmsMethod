    @Test
    public void canAddReductionKeyEdge() throws Exception {
        // Create a business service without any edges
        BusinessServiceEntity service = new BusinessServiceEntityBuilder()
                .name("Dummy Service")
                .reduceFunction(new HighestSeverityEntity())
                .toEntity();
        final Long serviceId = m_businessServiceDao.save(service);
        m_businessServiceDao.flush();

        // The Request to send to create an edge
        ReductionKeyEdgeRequestDTO edgeRequestDTO = new ReductionKeyEdgeRequestDTO();
        edgeRequestDTO.setMapFunction(new FunctionsManager().getMapFunctionDTO(new Identity()));

        // verify adding of existing ip service is possible
        edgeRequestDTO.setReductionKey("1st reduction key");
        sendData(POST, getMediaType(), buildReductionKeyEdgeUrl(serviceId), marshal(edgeRequestDTO), 200);
        Assert.assertEquals(1, m_businessServiceDao.get(serviceId).getReductionKeyEdges().size());

        // verify adding twice possible, but not modified
        sendData(POST, getMediaType(), buildReductionKeyEdgeUrl(serviceId), marshal(edgeRequestDTO), 304);
        Assert.assertEquals(1, m_businessServiceDao.get(serviceId).getReductionKeyEdges().size());

        // verify adding of existing ip service is possible
        edgeRequestDTO.setReductionKey("2nd reduction key");
        sendData(POST, getMediaType(), buildReductionKeyEdgeUrl(serviceId), marshal(edgeRequestDTO), 200);
        Assert.assertEquals(2, m_businessServiceDao.get(serviceId).getReductionKeyEdges().size());
    }

