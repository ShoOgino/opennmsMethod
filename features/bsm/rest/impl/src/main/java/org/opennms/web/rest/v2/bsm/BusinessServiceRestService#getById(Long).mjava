    @GET
    @Path("{id}")
    public Response getById(@PathParam("id") Long id) {
        BusinessService service = getManager().getBusinessServiceById(id);

        final BusinessServiceResponseDTO response = new BusinessServiceResponseDTO();
        response.setId(service.getId());
        response.setName(service.getName());
        response.setAttributes(service.getAttributes());
        response.setLocation(ResourceLocationFactory.createBusinessServiceLocation(service.getId().toString()));
        response.setParentServices(service.getParentServices().stream().map(BusinessService::getId).collect(Collectors.toSet()));
        response.setOperationalStatus(service.getOperationalStatus());
        response.setReduceFunction(transform(service.getReduceFunction()));

        service.getEdges().forEach(eachEdge -> eachEdge.accept(new EdgeVisitor<Void>() {
            @Override
            public Void visit(IpServiceEdge edge) {
                response.getIpServices().add(transform(edge));
                return null;
            }

            @Override
            public Void visit(ReductionKeyEdge edge) {
                response.getReductionKeys().add(transform(edge));
                return null;
            }

            @Override
            public Void visit(ChildEdge edge) {
                response.getChildren().add(transform(edge));
                return null;
            }

            @Override
            public Void visit(ApplicationEdge edge) {
                response.getApplications().add(transform(edge));
                return null;
            }
        }));
        return Response.ok(response).build();
    }

