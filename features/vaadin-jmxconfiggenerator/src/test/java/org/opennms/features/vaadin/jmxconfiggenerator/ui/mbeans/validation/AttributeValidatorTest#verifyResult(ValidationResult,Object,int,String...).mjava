    private void verifyResult(ValidationResult result, Object verifiedObject, int numberErrors, String... expectedErrorMessages) {
        Assert.assertNotNull(result);
        Assert.assertEquals(numberErrors == 0 ? Boolean.TRUE : Boolean.FALSE, result.isValid());
        Assert.assertEquals(numberErrors, result.getErrorCount());

        if (expectedErrorMessages != null && expectedErrorMessages.length > 0) {
            Arrays.sort(expectedErrorMessages);
            List<Validator.InvalidValueException> errors = result.getValidationError(verifiedObject).getExceptionList();
            Collections.sort(errors, new Comparator<Validator.InvalidValueException>() {

                @Override
                public int compare(Validator.InvalidValueException o1, Validator.InvalidValueException o2) {
                    return o1.getMessage().compareTo(o2.getMessage());
                }
            });
            for (int i = 0; i < errors.size(); i++) {
                Assert.assertEquals(expectedErrorMessages[i], errors.get(i).getMessage());
            }
        }
    }

