    @Test
    public void testGetValidationErrors() {
        ValidationResult result = new ValidationResult();

        Assert.assertNotNull(result.getValidationErrors());
        Assert.assertEquals(0, result.getValidationErrors().size());

        result.add("A", createDummyException(10));
        result.add(100, createDummyException(20));
        result.add("B", createDummyException(30));

        List<ValidationResult.ValidationError> errorList = result.getValidationErrors();
        Collections.sort(errorList, new Comparator<ValidationResult.ValidationError>() {
            @Override
            public int compare(ValidationResult.ValidationError o1, ValidationResult.ValidationError o2) {
                return o1.getErrorObject().toString().compareTo(o2.getErrorObject().toString());
            }
        });

        Assert.assertEquals(3, result.getValidationErrors().size());
        Assert.assertEquals(100, errorList.get(0).getErrorObject());
        Assert.assertEquals(1, errorList.get(0).getExceptionList().size());
        Assert.assertEquals("A", errorList.get(1).getErrorObject());
        Assert.assertEquals(1, errorList.get(1).getExceptionList().size());
        Assert.assertEquals("B", errorList.get(2).getErrorObject());
        Assert.assertEquals(1, errorList.get(2).getExceptionList().size());
    }

