	public ProgressWindow(final JobManager jobManager) {
		setCaption("processing...");
		setModal(true);
		setResizable(false);
		setClosable(false);
		setWidth(400, Unit.PIXELS);
		setHeight(150, Unit.PIXELS);

		Button cancelButton = UIHelper.createButton("cancel", "Cancels the current process", null, new Button.ClickListener() {
			@Override
			public void buttonClick(Button.ClickEvent event) {
				jobManager.cancelAllJobs();
				UIHelper.updateView(UiState.ServiceConfigurationView);
			}
		});

		progress.setIndeterminate(true); // infinite wheel, instead of 100% bar

		HorizontalLayout contentLayout = new HorizontalLayout(progress, label);
		contentLayout.setSpacing(true);

		layout.addComponent(contentLayout);
		layout.addComponent(cancelButton);
		layout.setComponentAlignment(cancelButton, Alignment.BOTTOM_RIGHT);
		layout.setSpacing(true);
		layout.setMargin(true);

		setContent(layout);
		center();

		addCloseListener(new CloseListener() {
			@Override
			public void windowClose(CloseEvent e) {
				// By default polling is disabled
				UIHelper.getCurrent().setPollInterval(-1);
			}
		});
	}

