	/**
	 * 
	 * @param input
	 *            any Mbean
	 * @param removeLastElement
	 *            should last element be removed?
	 * @return a List of Elements to build the MBeanTree.
	 */
	private static List getMBeansTreeElements(Mbean input, boolean removeLastElement) {
		List names = new ArrayList();
		try {
			/*
			 * By default, the MBeans are displayed in the tree based on their
			 * object names. The order of key properties specified when the
			 * object names are created is preserved by the MBeans tab when it
			 * adds MBeans to the MBean tree. The exact key property list that
			 * the MBeans tab will use to build the MBean tree will be the one
			 * returned by the method ObjectName.getKeyPropertyListString(),
			 * with type as the first key, and j2eeType, if present, as the
			 * second key.(http://visualvm.java.net/mbeans_tab.html).
			 * 
			 * Below is the implementation of the above definition.
			 */
			final ObjectName objectname = ObjectName.getInstance(input.getObjectname());
			final Map<String, String> keyProperty = buildKeyPropertyList(objectname);
			names.add(objectname.getDomain());
			names.addAll(keyProperty.entrySet());
			if (removeLastElement) names.remove(names.size() - 1); // remove
																	// last
																	// element
																	// if needed
		} catch (MalformedObjectNameException ex) {
		}
		return names;
	}

