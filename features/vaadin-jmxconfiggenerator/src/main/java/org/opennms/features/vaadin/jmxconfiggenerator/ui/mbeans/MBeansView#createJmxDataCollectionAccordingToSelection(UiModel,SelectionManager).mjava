	/**
	 * The whole point was to select/deselect
	 * Mbeans/Attribs/CompMembers/CompAttribs. In this method we simply create a
	 * JmxDatacollectionConfig considering the choices we made in the gui. To do
	 * this, we clone the original <code>JmxDatacollectionConfig</code>
	 * loaded at the beginning. After that we remove all
	 * MBeans/Attribs/CompMembers/CompAttribs and add all selected
	 * MBeans/Attribs/CompMembers/CompAttribs afterwards.
	 *
	 * @return
	 */
	private static JmxDatacollectionConfig createJmxDataCollectionAccordingToSelection(final UiModel uiModel, final SelectionManager selectionManager) {
		/*
		 * At First we clone the original collection. This is done, because if
		 * we make any modifications (e.g. deleting not selected elements) the
		 * data isn't available in the GUI, too. To avoid reloading the data
		 * from server, we just clone it.
		 */
		JmxDatacollectionConfig clone = JmxCollectionCloner.clone(uiModel.getRawModel());

		/*
		 * At second we remove all MBeans from original data and get only
		 * selected once.
		 */
		List<Mbean> exportBeans = clone.getJmxCollectionList().get(0).getMbeans();
		exportBeans.clear();
		Iterable<Mbean> selectedMbeans = selectionManager.getSelectedMbeans();
		for (Mbean mbean : selectedMbeans) {
			/*
			 * We remove all Attributes from Mbean, because we only want
			 * selected ones.
			 */
			Mbean exportBean = JmxCollectionCloner.clone(mbean);
			exportBean.clearAttribs(); // we only want selected ones :)
			for (Attrib att : selectionManager.getSelectedAttributes(mbean)) {
				exportBean.addAttrib(JmxCollectionCloner.clone(att));
			}
			// if the parent is selected, but no attributes are,
			// we do not add the parent
			if (!exportBean.getAttribList().isEmpty()) {
				exportBeans.add(exportBean);
			}

			/*
			 * We remove all CompAttribs and CompMembers from MBean,
			 * because we only want selected ones.
			 */
			exportBean.clearCompAttribs();
			for (CompAttrib compAtt : selectionManager.getSelectedCompositeAttributes(mbean)) {
				CompAttrib cloneCompAtt = JmxCollectionCloner.clone(compAtt);
				cloneCompAtt.clearCompMembers();
				for (CompMember compMember : selectionManager.getSelectedCompositeMembers(compAtt)) {
					cloneCompAtt.addCompMember(JmxCollectionCloner.clone(compMember));
				}
				// if the parent is selected, but no attributes are,
				// we do not add the child
				if (!cloneCompAtt.getCompMemberList().isEmpty()) {
					exportBean.addCompAttrib(cloneCompAtt);
				}
			}
		}

		// we sort the order, so the result is deterministic
		sort(exportBeans);

		// Last but not least, we need to update the service name
		clone.getJmxCollectionList().get(0).setName(uiModel.getServiceName());
		return clone;
	}

