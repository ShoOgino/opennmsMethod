    private void initFields() {
        nonEditableField = new TextField();
		nonEditableField.setWidth(400, Unit.PIXELS);
        nonEditableField.setReadOnly(true);
        nonEditableField.setEnabled(false);

        editableField = new TextField();
		editableField.setWidth(400, Unit.PIXELS);
        editableField.setRequired(true);
        editableField.setRequiredError("You must provide a value.");
        editableField.setValidationVisible(false);
        editableField.setBuffered(false);
        editableField.setImmediate(true);
        editableField.addValidator(nameValidator);
        editableField.addValueChangeListener(new Property.ValueChangeListener() {
            @Override
            public void valueChange(Property.ValueChangeEvent event) {
                if (!blockListenerOrValidators) {
                    controller.validateCurrentSelection();
                }
            }
        });
        editableField.setTextChangeTimeout(200);
        editableField.addTextChangeListener(new FieldEvents.TextChangeListener() {
            @Override
            public void textChange(FieldEvents.TextChangeEvent event) {
                editableField.setComponentError(null);
                editableField.setValue(event.getText());
                editableField.validate();
            }
        });

        selectedField = new CheckBox();
        selectedField.setCaption("selected");
        selectedField.addValueChangeListener(new Property.ValueChangeListener() {
            @Override
            public void valueChange(Property.ValueChangeEvent event) {
                nonEditableField.setEnabled(selectedField.getValue());
                editableField.setEnabled(selectedField.getValue());
                editableField.setComponentError(null);
                if (!selectedField.getValue()) {
                    editableField.discard();
                }
                if (!blockListenerOrValidators) {
                    try {
                        blockListenerOrValidators = true;
                        controller.fireSelectionValueChanged(getData(), getItemId(), selectedField.getValue());
                    } finally {
                        blockListenerOrValidators = false;
                    }
                }
            }
        });

        contentLayout.addComponent(selectedField);
        contentLayout.addComponent(editableField);
        contentLayout.addComponent(nonEditableField);
    }

