	protected MBeansTree(final MBeansController controller) {
		this.container = controller.getMBeansHierarchicalContainer();
		this.controller = controller;
		setSizeFull();
		setContainerDataSource(container);
		setItemCaptionPropertyId(MetaMBeansTreeItem.CAPTION);
		setItemIconPropertyId(MetaMBeansTreeItem.ICON);
		setItemDescriptionGenerator(new ItemDescriptionGenerator() {
			@Override
			public String generateDescription(Component source, Object itemId, Object propertyId) {
				return getItem(itemId).getItemProperty(MetaMBeansTreeItem.TOOLTIP).getValue().toString();
			}
		});
		setItemStyleGenerator(new ItemStyleGenerator() {
			@Override
			public String getStyle(Tree source, Object itemId) {
				if ((Boolean) source.getItem(itemId).getItemProperty(MBeansTree.MetaMBeansTreeItem.VALID).getValue())
					return "";
				return "invalid";
			}
		});
		setSelectable(true);
		setMultiSelect(false);
		setNullSelectionAllowed(true);
		setMultiselectMode(MultiSelectMode.SIMPLE);
		addItemClickListener(new ItemClickListener() {
			@Override
			public void itemClick(ItemClickEvent event) {
				final Object itemId = event.getItemId();
				if (itemId instanceof String) {
					controller.selectItemInTree((String) itemId);
				}
			}
		});
		setImmediate(true);
		addActionHandler(this);
		setValidationVisible(false);
	}

