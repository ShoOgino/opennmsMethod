    @Test
    public void shouldProduceStreamOfMacAddresses() {
        MacAddressGenerator gen = new MacAddressGenerator();
        assertEquals("00:00:00:00:00:00", gen.next());
        assertEquals("00:00:00:00:00:01", gen.next());
        assertEquals("00:00:00:00:00:02", gen.next());
        assertEquals("00:00:00:00:00:03", gen.next());
        assertEquals("00:00:00:00:00:04", gen.next());
        assertEquals("00:00:00:00:00:05", gen.next());
        assertEquals("00:00:00:00:00:06", gen.next());
        assertEquals("00:00:00:00:00:07", gen.next());
        assertEquals("00:00:00:00:00:08", gen.next());
        assertEquals("00:00:00:00:00:09", gen.next());
        assertEquals("00:00:00:00:00:0a", gen.next());
        assertEquals("00:00:00:00:00:0b", gen.next());
        assertEquals("00:00:00:00:00:0c", gen.next());
        assertEquals("00:00:00:00:00:0d", gen.next());
        assertEquals("00:00:00:00:00:0e", gen.next());
        assertEquals("00:00:00:00:00:0f", gen.next());

        assertEquals("00:00:00:00:00:10", gen.next());
        assertEquals("00:00:00:00:00:11", gen.next());
        assertEquals("00:00:00:00:00:12", gen.next());
        assertEquals("00:00:00:00:00:13", gen.next());
        assertEquals("00:00:00:00:00:14", gen.next());
        assertEquals("00:00:00:00:00:15", gen.next());
        assertEquals("00:00:00:00:00:16", gen.next());
        assertEquals("00:00:00:00:00:17", gen.next());
        assertEquals("00:00:00:00:00:18", gen.next());
        assertEquals("00:00:00:00:00:19", gen.next());
        assertEquals("00:00:00:00:00:1a", gen.next());
        assertEquals("00:00:00:00:00:1b", gen.next());
        assertEquals("00:00:00:00:00:1c", gen.next());
        assertEquals("00:00:00:00:00:1d", gen.next());
        assertEquals("00:00:00:00:00:1e", gen.next());
        assertEquals("00:00:00:00:00:1f", gen.next());

    }

