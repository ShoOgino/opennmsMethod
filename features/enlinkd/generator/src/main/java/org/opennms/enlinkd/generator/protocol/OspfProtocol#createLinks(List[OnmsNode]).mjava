    private List<OspfLink> createLinks(List<OnmsNode> nodes) {
        PairGenerator<OnmsNode> pairs = createPairGenerator(nodes);
        List<OspfLink> links = new ArrayList<>();
        for (int i = 0; i < topologySettings.getAmountLinks() / 2; i++) {

            // We create 2 links that reference each other, see also LinkdToplologyProvider.matchCdpLinks()
            Pair<OnmsNode, OnmsNode> pair = pairs.next();
            OnmsNode sourceNode = pair.getLeft();
            OnmsNode targetNode = pair.getRight();
            InetAddress ospfIpAddr = inetAddressCreator.next();
            InetAddress ospfRemIpAddr = inetAddressCreator.next();

            OspfLink sourceLink = createLink(
                    sourceNode,
                    ospfIpAddr,
                    ospfRemIpAddr,
                    nodeIfIndexes.get(sourceNode.getId())
            );
            links.add(sourceLink);

            OspfLink targetLink = createLink(
                    targetNode,
                    ospfRemIpAddr,
                    ospfIpAddr,
                    nodeIfIndexes.get(targetNode.getId())
            );
            links.add(targetLink);
            context.currentProgress(String.format("Linked node %s with node %s", sourceNode.getLabel(),
                    targetNode.getLabel()));
        }
        return links;
    }

