    @Override
    protected void createAndPersistProtocolSpecificEntities(List<OnmsNode> nodes) {

        context.currentProgress("Version 1"); // TODO: delete later just for testing purpose

        // Call with: enlinkd:generate-topology --protocol bridgeBridge --nodes 3 --snmpinterfaces 0 -- ipinterfaces 0

       // NodeA is connected to port 24 of NodeB
       // NodeC is connected to port 23 of NodeB
       // you have to generate three nodes nodeA(id=1) nodeB(id=2) nodeC(id=3)
        OnmsNode nodeA =  nodes.get(0);
        OnmsNode nodeB =  nodes.get(1);
        OnmsNode nodeC =  nodes.get(2);

        // snmpinterfaces -> nodeB ----port 1,24 ---specified ifindex name ands so on
        OnmsSnmpInterface snmpInterfaceA = createSnmpInterface(1, nodeA);
        OnmsSnmpInterface snmpInterfaceB = createSnmpInterface(2, nodeB);
        OnmsSnmpInterface snmpInterfaceC = createSnmpInterface(3, nodeC);
        context.getTopologyPersister().persist(snmpInterfaceA, snmpInterfaceB, snmpInterfaceC);

        // ipinterface -> nodeA - 192.168.0.1
        // ipinterface -> nodeB - 192.168.0.2
        // ipinterface -> nodeC - 192.168.0.3
        OnmsIpInterface ipInterfaceA = createIpInterface(snmpInterfaceA, inetGenerator.next());
        OnmsIpInterface ipInterfaceB = createIpInterface(snmpInterfaceB, inetGenerator.next());
        OnmsIpInterface ipInterfaceC = createIpInterface(snmpInterfaceC, inetGenerator.next());
        context.getTopologyPersister().persist(ipInterfaceA, ipInterfaceB, ipInterfaceC);

        // ipnettomedia -> nodeid=1 0123456789a 192.168.0.1
        // ipnettomedia -> nodeid=1 0123456789b 192.168.0.2
        // ipnettomedia -> nodeid=3 0123456789c 192.168.0.3
        IpNetToMedia ipNetToMediaA = createIpNetToMedia(nodeA, "0123456789a", ipInterfaceA.getIpAddress(), nodeB);
        IpNetToMedia ipNetToMediaB = createIpNetToMedia(nodeA, "0123456789b", ipInterfaceB.getIpAddress(), nodeB);
        IpNetToMedia ipNetToMediaC = createIpNetToMedia(nodeC, "0123456789c", ipInterfaceC.getIpAddress(), nodeB);
        context.getTopologyPersister().persist(ipNetToMediaA, ipNetToMediaB, ipNetToMediaC);

        List<BridgeBridgeLink> bridgeBridgeLinks = createBridgeBridgeLinks(nodes);
        this.context.getTopologyPersister().persist(bridgeBridgeLinks);
    }

