    @Override
    protected void createAndPersistProtocolSpecificEntities(List<OnmsNode> nodes) {

        context.currentProgress("Version 1"); // TODO: delete later just for testing purpose

        // Call with: enlinkd:generate-topology --protocol bridgeBridge --nodes 3 --snmpinterfaces 0 -- ipinterfaces 0

       // NodeA port 4 is connected to port 24 of NodeB
       // NodeC port 3 is connected to port 23 of NodeB
       // you have to generate three nodes nodeA(id=1) nodeB(id=2) nodeC(id=3)
        
        OnmsNode nodeA =  nodes.get(0);
        OnmsNode nodeB =  nodes.get(1);
        OnmsNode nodeC =  nodes.get(2);

        // snmpinterfaces -> nodeB ----port 1,24 ---specified ifindex name ands so on
        OnmsSnmpInterface snmpInterfaceA4 = createSnmpInterface(4, nodeA);
        OnmsSnmpInterface snmpInterfaceB24 = createSnmpInterface(24, nodeB);
        OnmsSnmpInterface snmpInterfaceB23 = createSnmpInterface(23, nodeB);
        OnmsSnmpInterface snmpInterfaceC3 = createSnmpInterface(3, nodeC);
        context.getTopologyPersister().persist(snmpInterfaceA4, snmpInterfaceB24,snmpInterfaceB23, snmpInterfaceC3);

        // in bridge only topology ip addresses are not needed
        // ipinterface -> nodeA - 192.168.0.1
        // ipinterface -> nodeB - 192.168.0.2
        // ipinterface -> nodeC - 192.168.0.3
        //OnmsIpInterface ipInterfaceA = createIpInterface(snmpInterfaceA, inetGenerator.next());
        //OnmsIpInterface ipInterfaceB = createIpInterface(snmpInterfaceB, inetGenerator.next());
        //OnmsIpInterface ipInterfaceC = createIpInterface(snmpInterfaceC, inetGenerator.next());
        //context.getTopologyPersister().persist(ipInterfaceA, ipInterfaceB, ipInterfaceC);

        //In Bridge only Topology no need for mac address here
        // ipnettomedia -> nodeid=1 0123456789a 192.168.0.1
        // ipnettomedia -> nodeid=1 0123456789b 192.168.0.2
        // ipnettomedia -> nodeid=3 0123456789c 192.168.0.3
        //IpNetToMedia ipNetToMediaA = createIpNetToMedia(nodeA, "0123456789a", ipInterfaceA.getIpAddress(), nodeB);
        //IpNetToMedia ipNetToMediaB = createIpNetToMedia(nodeA, "0123456789b", ipInterfaceB.getIpAddress(), nodeB);
        //IpNetToMedia ipNetToMediaC = createIpNetToMedia(nodeC, "0123456789c", ipInterfaceC.getIpAddress(), nodeB);
        //context.getTopologyPersister().persist(ipNetToMediaA, ipNetToMediaB, ipNetToMediaC);
        
        BridgeElement bridgeA = createBridgeElement(nodeA);
        BridgeElement bridgeB = createBridgeElement(nodeB);
        BridgeElement bridgeC = createBridgeElement(nodeC);

        this.context.getTopologyPersister().persist(bridgeA,bridgeB,bridgeC);
        
        // linkBA nodeA port 4 connected to nodeB port 24
        BridgeBridgeLink linkBA = createBridgeBridgeLink(nodeA, nodeB, 4, 24);
        // linkBA nodeA port 3 connected to nodeB port 23
        BridgeBridgeLink linkBC = createBridgeBridgeLink(nodeC, nodeB, 4, 23);
        
        
        this.context.getTopologyPersister().persist(linkBA,linkBC);

        //        List<BridgeBridgeLink> bridgeBridgeLinks = createBridgeBridgeLinks(nodes);
//        this.context.getTopologyPersister().persist(bridgeBridgeLinks);
    }

