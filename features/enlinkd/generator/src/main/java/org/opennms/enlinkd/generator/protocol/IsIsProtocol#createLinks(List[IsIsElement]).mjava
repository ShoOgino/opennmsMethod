    private List<IsIsLink> createLinks(List<IsIsElement> elements) {
        PairGenerator<IsIsElement> pairs = createPairGenerator(elements);
        List<IsIsLink> links = new ArrayList<>();
        Integer isisISAdjIndex = 0;

        for (int i = 0; i < topologySettings.getAmountLinks() / 2; i++) {

            // We create 2 links that reference each other, see also LinkdToplologyProvider.match...Links()
            Pair<IsIsElement, IsIsElement> pair = pairs.next();
            IsIsElement sourceElement = pair.getLeft();
            IsIsElement targetElement = pair.getRight();
            isisISAdjIndex++;

            int sourceIfIndex = nodeIfIndexes.get(sourceElement.getNode().getId());
            int targetIfIndex = nodeIfIndexes.get(targetElement.getNode().getId());

            IsIsLink sourceLink = createLink(sourceElement.getNode(), isisISAdjIndex, targetElement.getIsisSysID(),
                    sourceIfIndex);
            links.add(sourceLink);

            IsIsLink targetLink = createLink(targetElement.getNode(), isisISAdjIndex, sourceElement.getIsisSysID(),
                    targetIfIndex);
            links.add(targetLink);

            context.currentProgress(String.format("Linked node %s with node %s", sourceElement.getNode().getLabel(),
                    targetElement.getNode().getLabel()));
        }
        return links;
    }

