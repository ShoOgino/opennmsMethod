    private List<CdpLink> createCdpLinks(List<CdpElement> cdpElements) {
        PairGenerator<CdpElement> pairs = createPairGenerator(cdpElements);
        List<CdpLink> links = new ArrayList<>();
        for (int i = 0; i < topologySettings.getAmountLinks() * 2; i++) {

            // We create 2 links that reference each other, see also LinkdToplologyProvider.matchCdpLinks()
            Pair<CdpElement, CdpElement> pair = pairs.next();
            CdpElement sourceCdpElement = pair.getLeft();
            CdpElement targetCdpElement = pair.getRight();
            CdpLink sourceLink = createCdpLink(
                    sourceCdpElement.getNode(),
                    UUID.randomUUID().toString(),
                    UUID.randomUUID().toString(),
                    targetCdpElement.getCdpGlobalDeviceId()
            );
            links.add(sourceLink);

            String targetCdpCacheDevicePort = sourceLink.getCdpInterfaceName();
            String targetCdpInterfaceName = sourceLink.getCdpCacheDevicePort();
            String targetCdpGlobalDeviceId = sourceCdpElement.getCdpGlobalDeviceId();
            CdpLink targetLink = createCdpLink(
                    targetCdpElement.getNode(),
                    targetCdpInterfaceName,
                    targetCdpCacheDevicePort,
                    targetCdpGlobalDeviceId
            );
            links.add(targetLink);
            LOG.debug("Linked node {} with node {}", sourceCdpElement.getNode().getLabel(), targetCdpElement.getNode().getLabel());
        }
        return links;
    }

