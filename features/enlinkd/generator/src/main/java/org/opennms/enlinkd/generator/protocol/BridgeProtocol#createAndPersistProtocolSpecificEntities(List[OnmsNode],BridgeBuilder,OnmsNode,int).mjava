    private void createAndPersistProtocolSpecificEntities(List<OnmsNode> nodes, BridgeBuilder bridge0B, OnmsNode gateway, int iteration) {

        int offset = iteration * 10;
        OnmsNode bridge1 = nodes.get(1 + offset);
        OnmsNode bridge2 = nodes.get(2 + offset);
        OnmsNode bridge3 = nodes.get(3 + offset);
        OnmsNode host4 = nodes.get(4 + offset);
        OnmsNode bridge5 = nodes.get(5 + offset);
        OnmsNode host6 = nodes.get(6 + offset);
        OnmsNode host7 = nodes.get(7 + offset);
        OnmsNode host8 = nodes.get(8 + offset);
        OnmsNode host9 = nodes.get(9 + offset);

        //bridge0
        //bridge0:port1 connected to up bridge1:port11
        BridgeBuilder bridge1B = bridge0B.connectToNewBridge(bridge1, 11);

        //bridge3:port31 connected to up bridge0:port2
        BridgeBuilder bridge3B = bridge0B.connectToNewBridge(bridge3, 31);

        //bridge0:port3 connected to cloud
        bridge0B.increasePortCounter();
        bridge0B.createAndPersistCloud(2, 2);

        // bridge0:port4 connected to host4:port41
        bridge0B.increasePortCounter();
        bridge0B.createAndPersistBridgeMacLink(host4, 41, gateway);

        // bridge5 will be the new root bridge for the next interation
        BridgeBuilder bridge5B = bridge0B.connectToNewBridge(bridge5, 51);

        //bridge1
        //bridge2:port21 connected to bridge1:port12 with clouds
        BridgeBuilder bridge2B = bridge1B.connectToNewBridge(bridge2, 21);
        bridge1B.createAndPersistCloud(2, 2);

        //bridge2
        // host6 and host 7 connected to port 22 : "cloud" symbol
        bridge2B.increasePortCounter();
        bridge2B.createAndPersistBridgeMacLink(true, host6, 61, gateway);
        bridge2B.createAndPersistBridgeMacLink(false, host7, 71, gateway);

        // bridge3
        // host8:with-no-snmp connected bridge3:port32
        bridge3B.increasePortCounter();
        bridge3B.createAndPersistBridgeMacLink(host8, null, gateway);
        bridge3B.increasePortCounter();
        bridge3B.createAndPersistBridgeMacLink(host9, null, gateway);

        // create sub tree on bridge5:
        if (nodes.size() >= offset + 20) {
            createAndPersistProtocolSpecificEntities(nodes, bridge5B, gateway, iteration + 1);
        }
    }

