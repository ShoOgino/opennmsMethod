        public void checkD(Set<BridgePortWithMacs> forwarders) {
            assertEquals(1, forwarders.size());
            BridgePortWithMacs forward = forwarders.iterator().next(); 
            assertEquals(nodeDId, forward.getPort().getNodeId().intValue());
            assertEquals(50, forward.getPort().getBridgePort().intValue());
            assertEquals(50, forward.getPort().getBridgePortIfIndex().intValue());

            switch (forward.getMacs().size()) {
            case 7: assertTrue(true);
                    break;
            
            case 8: for (String fbe: forwardersBE) {
                    assertTrue(forward.getMacs().contains(fbe));
                };
                break;
            
            default: assertTrue(false);
            break;
                    
        }
            assertTrue(forward.getMacs().contains(macB));
            assertTrue(forward.getMacs().contains(macC));
            assertTrue(forward.getMacs().contains(macE));
            for (String mac: forwardersABD) {
                assertTrue(forward.getMacs().contains(mac));                
            }
            for (String mac: forwardersABCD) {
                assertTrue(forward.getMacs().contains(mac));                
            }
            for (String mac: forwardersD) {
                assertTrue(forward.getMacs().contains(mac));                
            }
        }        

