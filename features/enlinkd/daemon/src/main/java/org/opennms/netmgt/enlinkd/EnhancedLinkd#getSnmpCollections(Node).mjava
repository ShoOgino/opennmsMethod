    /**
     * {@inheritDoc}
     * 
     * @param nodeid
     */
    public List<NodeDiscovery> getSnmpCollections(Node node) {
        List<NodeDiscovery> snmpcolls = new ArrayList<>();
        
        if (m_linkdConfig.useLldpDiscovery()) {
            LOG.debug("getSnmpCollections: adding Lldp Discovery: {}",
                    node);
            snmpcolls.add(new NodeDiscoveryLldp(this, node));
        }
        
        if (m_linkdConfig.useCdpDiscovery()) {
            LOG.debug("getSnmpCollections: adding Cdp Discovery: {}",
                    node);
             snmpcolls.add(new NodeDiscoveryCdp(this, node));   	
        }
        
        if (m_linkdConfig.useBridgeDiscovery()) {
        	LOG.debug("getSnmpCollections: adding IpNetToMedia Discovery: {}",
                    node);
        	snmpcolls.add(new NodeDiscoveryIpNetToMedia(this, node));
        	
        	LOG.debug("getSnmpCollections: adding Bridge Discovery: {}",
                    node);
        	snmpcolls.add(new NodeDiscoveryBridge(this, node));
        }

        if (m_linkdConfig.useOspfDiscovery()) {
            LOG.debug("getSnmpCollections: adding Ospf Discovery: {}",
                    node);
        	snmpcolls.add(new NodeDiscoveryOspf(this, node));
        }

        if (m_linkdConfig.useIsisDiscovery()) {
            LOG.debug("getSnmpCollections: adding Is-Is Discovery: {}",
                    node);
        	snmpcolls.add(new NodeDiscoveryIsis(this, node));
        }

        return snmpcolls;
    }

