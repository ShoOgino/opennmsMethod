    @Override
    public BroadcastDomain reconcile(BroadcastDomain domain,int nodeId) throws BridgeTopologyException {
        
        Date now = new Date();
        if (domain == null || domain.isEmpty()) {
            LOG.warn("reconcileTopologyForDeleteNode: node: {}, start: null domain or empty",nodeId);
            return domain;
        }
        if (domain.getBridge(nodeId) == null) {
            LOG.info("reconcileTopologyForDeleteNode: node: {}, not on domain",nodeId);
            return domain;
        }
        
        if (LOG.isDebugEnabled()) {
            LOG.debug("reconcileTopologyForDeleteNode: node:[{}], domain:\n{}", nodeId, domain.printTopology());
        }
        
        LOG.info("reconcileTopologyForDeleteNode: node:[{}], start: save topology for domain",nodeId);
        BroadcastDomain.removeBridge(domain,nodeId);
        store(domain,now);
        LOG.info("reconcileTopologyForDeleteNode: node:[{}], end: save topology for domain",nodeId);
        
        if (LOG.isDebugEnabled()) {
            LOG.debug("reconcileTopologyForDeleteNode: node:[{}], resulting domain: {}", nodeId, domain.printTopology());
        }
        
        if (domain.isEmpty()) {
            cleanBroadcastDomains();
            LOG.info("reconcileTopologyForDeleteNode: node:[{}], empty domain",nodeId);
            return domain;
        }
        if (domain.getRootBridge() == null) {
            throw new BridgeTopologyException("reconcileTopologyForDeleteNode: Domain without root", domain);
        }
        return domain;
    }

