    @Test
    public void testDuplicatedMac() throws BridgeTopologyException {
        TwentyNodeTopology topology = new TwentyNodeTopology();

        BroadcastDomain domain = new BroadcastDomain();
        Bridge.create(domain,topology.spiazzofasw01Id);
        Bridge.create(domain,topology.spiasvigasw01Id);
        Bridge.create(domain,topology.daremunalv01Id);
        Bridge.create(domain,topology.villpizzasw01Id);
        Bridge.create(domain,topology.rsaspiazzowl1Id);
        Bridge.create(domain,topology.vigrenmualv01Id);
        Bridge.create(domain,topology.vigrenmualv02Id);
        Bridge.create(domain,topology.vigrenmuasw01Id);
        Bridge.create(domain,topology.vrendmunalv02Id);
        Bridge.create(domain,topology.daremunasw01Id);
        Bridge.create(domain,topology.spiazzomepe01Id);
        Bridge.create(domain,topology.comunespiazzowl1Id);
        Bridge.create(domain,topology.vrendmunasw01Id);
        Bridge.create(domain,topology.comunevillarendenawl1Id);
        setBridgeElements(domain,topology.elemlist);

        BridgeForwardingTable bridgeFtpe = 
                BridgeForwardingTable.create(domain.getBridge(topology.spiazzomepe01Id), topology.bftspiazzomepe01);
        
        Map<String, Set<BridgePort>> duplicated = bridgeFtpe.getDuplicated();
        assertEquals(5, duplicated.size());

        assertTrue(duplicated.keySet().contains(topology.macdaremunasw01));  //port 5
        assertTrue(duplicated.keySet().contains(topology.mac001ebe70cec0));  //port 5
        assertTrue(duplicated.keySet().contains(topology.mac0022557fd68f));  //port 6
        assertTrue(duplicated.keySet().contains(topology.macvrendmunasw01)); //port 8
        assertTrue(duplicated.keySet().contains(topology.mac001906d5cf50));  //port 8
        assertEquals(2,duplicated.get(topology.macdaremunasw01).size());  //port 5
        assertEquals(2,duplicated.get(topology.mac001ebe70cec0).size());  //port 5
        assertEquals(2,duplicated.get(topology.mac0022557fd68f).size());  //port 8
        assertEquals(2,duplicated.get(topology.macvrendmunasw01).size()); //port 5
        assertEquals(2,duplicated.get(topology.mac001906d5cf50).size());  //port 5

        System.err.println(BridgeForwardingTableEntry.printTopology(bridgeFtpe.getEntries()));

        assertEquals(0,BridgeForwardingTable.
                              create(domain.getBridge(topology.daremunasw01Id), topology.bftdaremunasw01).getDuplicated().
                              size());

        assertEquals(0,BridgeForwardingTable.
                              create(domain.getBridge(topology.vigrenmuasw01Id), topology.bftvigrenmuasw01).getDuplicated().
                              size());

        assertEquals(0,BridgeForwardingTable.
                            create(domain.getBridge(topology.vrendmunasw01Id), topology.bftvrendmunasw01).getDuplicated().
                            size());

        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.spiazzofasw01Id), topology.bftspiazzofasw01).getDuplicated().
                          size());
                     
        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.spiasvigasw01Id), topology.bftspiasvigasw01).getDuplicated().
                          size());

        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.villpizzasw01Id), topology.bftvillpizzasw01).getDuplicated().
                          size());
        
        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.daremunalv01Id), topology.bftdaremunalv01).getDuplicated().
                          size());

        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.vigrenmualv01Id), topology.bftvigrenmualv01).getDuplicated().
                          size());

        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.vigrenmualv02Id), topology.bftvigrenmualv02).getDuplicated().
                          size());

        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.vrendmunalv02Id), topology.bftvrendmunalv02).getDuplicated().
                          size());

        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.rsaspiazzowl1Id), topology.bftrsaspiazzowl1).getDuplicated().
                          size());

        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.comunespiazzowl1Id), topology.bftcomunespiazzowl1).getDuplicated().
                          size());

        assertEquals(0,BridgeForwardingTable.
                          create(domain.getBridge(topology.comunevillarendenawl1Id), topology.bftcomunevillarendenawl1).getDuplicated().
                          size());
        
    }

