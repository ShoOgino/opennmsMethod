    @Test
    public void testFiveSwitchTopologyBCADE() throws BridgeTopologyException {

        FiveSwitchTopology topology = new FiveSwitchTopology();

        BroadcastDomain domain = new BroadcastDomain();
        Bridge.create(domain,topology.nodeAId);
        Bridge.create(domain,topology.nodeBId);
        Bridge.create(domain,topology.nodeCId);
        Bridge.create(domain,topology.nodeDId);
        Bridge.create(domain,topology.nodeEId);
        setBridgeElements(domain,topology.elemlist);
        
        DiscoveryBridgeTopology ndbtB= new DiscoveryBridgeTopology(domain);
        
        ndbtB.addUpdatedBFT((topology.nodeBId),topology.bftB);
        ndbtB.calculate();        
        assertEquals(0, domain.getForwarders(topology.nodeAId).size());
        assertEquals(0, domain.getForwarders(topology.nodeBId).size());
        assertEquals(0, domain.getForwarders(topology.nodeCId).size());
        assertEquals(0, domain.getForwarders(topology.nodeDId).size());
        assertEquals(0, domain.getForwarders(topology.nodeEId).size());
        
        
        DiscoveryBridgeTopology ndbtC= new DiscoveryBridgeTopology(domain);
        ndbtC.addUpdatedBFT((topology.nodeCId),topology.bftC);
        ndbtC.calculate();
        topology.checkBC(domain);
        assertEquals(0, domain.getForwarders(topology.nodeAId).size());
        topology.checkBcalcBC(domain.getForwarders(topology.nodeBId));
        topology.checkCcalcBC(domain.getForwarders(topology.nodeCId));
        assertEquals(0, domain.getForwarders(topology.nodeDId).size());
        assertEquals(0, domain.getForwarders(topology.nodeEId).size());

        DiscoveryBridgeTopology ndbtA= new DiscoveryBridgeTopology(domain);
        ndbtA.addUpdatedBFT((topology.nodeAId),topology.bftA);
        ndbtA.calculate();
        topology.checkAcalcBCA(domain.getForwarders(topology.nodeAId));
        topology.checkBcalcBCA(domain.getForwarders(topology.nodeBId));
        topology.checkCcalcBCA(domain.getForwarders(topology.nodeCId));
        assertEquals(0, domain.getForwarders(topology.nodeDId).size());
        assertEquals(0, domain.getForwarders(topology.nodeEId).size());
        
        DiscoveryBridgeTopology ndbtD= new DiscoveryBridgeTopology(domain);
        ndbtD.addUpdatedBFT((topology.nodeDId),topology.bftD);
        ndbtD.calculate();
        topology.checkAcalcBCAD(domain.getForwarders(topology.nodeAId));
        topology.checkBcalcBCAD(domain.getForwarders(topology.nodeBId));
        topology.checkCcalcBCAD(domain.getForwarders(topology.nodeCId));
        topology.checkDcalcBCAD(domain.getForwarders(topology.nodeDId));
        assertEquals(0, domain.getForwarders(topology.nodeEId).size());
        
        DiscoveryBridgeTopology ndbtE= new DiscoveryBridgeTopology(domain);
        ndbtE.addUpdatedBFT((topology.nodeEId),topology.bftE);
        ndbtE.calculate();
        topology.check(domain);
    }

