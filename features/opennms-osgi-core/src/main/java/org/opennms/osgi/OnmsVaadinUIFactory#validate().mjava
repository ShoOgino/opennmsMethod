    /**
     * Verify that the current UIFactory is set up correctly.
     */
    private void validate() {
        // Verify that the uiBean is a subclass of UI
        final Object instance = m_blueprintContainer.getComponentInstance(m_uiBeanId);
        if (!(instance instanceof UI)) {
            throw new IllegalStateException("The bean with id " + m_uiBeanId + " must be of type " + com.vaadin.ui.UI.class);
        }

        // Verify that the scope is prototype and NOT singleton
        final ComponentMetadata componentMetadata = Objects.requireNonNull(m_blueprintContainer.getComponentMetadata(m_uiBeanId));
        if (!(componentMetadata instanceof BeanMetadata)) {
            throw new IllegalStateException("The referenced id is not a bean");
        }

        if (!BeanMetadata.SCOPE_PROTOTYPE.equals(((BeanMetadata) componentMetadata).getScope())) {
            throw new IllegalStateException("The scope of the defined bean with id " + m_uiBeanId + " must be " + BeanMetadata.SCOPE_PROTOTYPE + " but is " + BeanMetadata.SCOPE_SINGLETON);
        }
    }

