    private void replay() {
        EasyMock.expect(m_searcher.search(EasyMock.eq(m_context), EasyMock.anyObject(), EasyMock.anyBoolean())).andAnswer(new IAnswer<SearchResults>() {
            public SearchResults answer() throws Throwable {
                // Assume there is a single term query
                Query q = (Query)EasyMock.getCurrentArguments()[1];
                BooleanQuery bq = (BooleanQuery)q;
                TermQuery tq = (TermQuery)bq.getClauses().get(0).getQuery();
                String field = tq.getTerm().getField("");
                String value = tq.getTerm().getValue();

                SearchResults searchResults = new SearchResults();
                for (Entry<ResourcePath, Set<String>> entry : m_indexedPaths.entrySet()) {
                    Map<String, String> attributes = Maps.newHashMap();
                    // Build the indexed attributes and attempt to match them against the given query
                    NewtsUtils.addIndicesToAttributes(entry.getKey(), attributes);
                    if (value.equals(attributes.get(field))) {
                        searchResults.addResult(new Resource(NewtsUtils.toResourceId(entry.getKey())), entry.getValue());
                    }
                }
                return searchResults;
            }
        }).atLeastOnce();
        EasyMock.expect(m_searcher.getResourceAttributes(EasyMock.eq(m_context), EasyMock.anyObject())).andReturn(Maps.newHashMap()).anyTimes();
        EasyMock.replay(m_searcher);
    }

