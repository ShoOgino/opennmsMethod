    @Inject
    public RedisResourceMetadataCache(@Named("redis.hostname") String hostname, @Named("redis.port") Integer port, MetricRegistry registry, ResourceIdSplitter resourceIdSplitter) {
        Preconditions.checkNotNull(hostname, " hostname argument");
        Preconditions.checkNotNull(port, "port argument");
        m_jedis = new Jedis(hostname, port);

        Preconditions.checkNotNull(registry, "registry argument");
        m_metricReqs = registry.meter(name(getClass(), "metric-reqs"));
        m_metricMisses = registry.meter(name(getClass(), "metric-misses"));
        m_attributeReqs = registry.meter(name(getClass(), "attribute-reqs"));
        m_attributeMisses = registry.meter(name(getClass(), "attribute-misses"));

        m_resourceIdSplitter = Preconditions.checkNotNull(resourceIdSplitter, "resourceIdSplitter argument");
    }

