    public static <T extends SearchableResourceMetadataCache> T createCache(String cacheType, List<CacheFactory> factories) {
        Objects.requireNonNull(cacheType);
        Objects.requireNonNull(factories);
        try {
            final Class<?> cacheClass = Class.forName(cacheType);
            final Optional<CacheFactory> cacheFactory = factories.stream().filter(f -> f.supportedType() == cacheClass).findFirst();
            if (cacheFactory.isPresent()) {
                return (T) cacheFactory.get().createCache();
            }
        } catch (Exception ex) {
            throw new RuntimeException(ex);
        }
        throw new IllegalArgumentException("No cache of type " + cacheType + " found.");
    }

