    // Verifies graph updates can be detected
    @Test
    public void verifyUpdate() {
        // Graph with vertices (1,2,3)
        final GenericGraph oldGraph = GenericGraph.builder()
                .namespace(NAMESPACE)
                .addVertex(GenericVertex.builder().namespace(NAMESPACE).id("1").build())
                .addVertex(GenericVertex.builder().namespace(NAMESPACE).id("2").build())
                .addVertex(GenericVertex.builder().namespace(NAMESPACE).id("3").build())
                .addEdge(GenericEdge.builder().namespace(NAMESPACE).id("e1").source(NAMESPACE, "1").target(NAMESPACE, "2").build())
                .addEdge(GenericEdge.builder().namespace(NAMESPACE).id("e2").source(NAMESPACE, "2").target(NAMESPACE, "3").build())
                .build();

        // Graph with vertices (3,4)
        final GenericGraph newGraph = GenericGraph.builder()
                .namespace(NAMESPACE)
                .label("Some Label")
                .description("Some Description")
                .addVertex(GenericVertex.builder().namespace(NAMESPACE).id("3").label("Three").build())
                .addVertex(GenericVertex.builder().namespace(NAMESPACE).id("4").build())
                .addEdge(GenericEdge.builder().namespace(NAMESPACE).id("e2").source(NAMESPACE, "4").target(NAMESPACE, "3").build())
                .addEdge(GenericEdge.builder().namespace(NAMESPACE).id("e3").source(NAMESPACE, "3").target(NAMESPACE, "4").build())
                .build();

        // Detect changes
        // Changes are (removed vertices: 1, 2. Added Vertices: 4, Updated Vertices: 3
        final ChangeSet<GenericGraph, GenericVertex, GenericEdge> changeSet = ChangeSet.builder(oldGraph, newGraph).build();
        assertThat(changeSet.getNamespace(), Matchers.is(NAMESPACE)); // Ensure the namespace was detected successful

        // Verify change Flags
        assertThat(changeSet.hasGraphInfoChanged(), Matchers.is(true));
        assertThat(changeSet.hasFocusChanged(), Matchers.is(false));
        assertThat(changeSet.getVerticesAdded(), Matchers.hasSize(1));
        assertThat(changeSet.getVerticesRemoved(), Matchers.hasSize(2));
        assertThat(changeSet.getVerticesUpdated(), Matchers.hasSize(1));
        assertThat(changeSet.getEdgesRemoved(), Matchers.hasSize(1));
        assertThat(changeSet.getEdgesUpdated(), Matchers.hasSize(1));
        assertThat(changeSet.getEdgesAdded(), Matchers.hasSize(1));

        // Verify changes
        assertEquals("4", changeSet.getVerticesAdded().get(0).getId());
        assertEquals("1", changeSet.getVerticesRemoved().get(0).getId());
        assertEquals("2", changeSet.getVerticesRemoved().get(1).getId());
        assertEquals("3", changeSet.getVerticesUpdated().get(0).getId());
        assertEquals("e3", changeSet.getEdgesAdded().get(0).getId());
        assertEquals("e1", changeSet.getEdgesRemoved().get(0).getId());
        assertEquals("e2", changeSet.getEdgesUpdated().get(0).getId());
        assertEquals(new DefaultGraphInfo(NAMESPACE)
                .withDescription("Some Description")
                .withLabel("Some Label"), changeSet.getGraphInfo());
    }

