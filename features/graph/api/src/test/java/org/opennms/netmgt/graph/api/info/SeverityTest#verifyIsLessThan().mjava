    @Test
    public void verifyIsLessThan() {
        // Unknown
        assertThat(Severity.Unknown.isLessThan(Severity.Unknown), Matchers.is(false));
        assertThat(Severity.Unknown.isLessThan(Severity.Normal), Matchers.is(true));
        assertThat(Severity.Unknown.isLessThan(Severity.Warning), Matchers.is(true));
        assertThat(Severity.Unknown.isLessThan(Severity.Minor), Matchers.is(true));
        assertThat(Severity.Unknown.isLessThan(Severity.Major), Matchers.is(true));
        assertThat(Severity.Unknown.isLessThan(Severity.Critical), Matchers.is(true));

        // Normal
        assertThat(Severity.Normal.isLessThan(Severity.Unknown), Matchers.is(false));
        assertThat(Severity.Normal.isLessThan(Severity.Normal), Matchers.is(false));
        assertThat(Severity.Normal.isLessThan(Severity.Warning), Matchers.is(true));
        assertThat(Severity.Normal.isLessThan(Severity.Minor), Matchers.is(true));
        assertThat(Severity.Normal.isLessThan(Severity.Major), Matchers.is(true));
        assertThat(Severity.Normal.isLessThan(Severity.Critical), Matchers.is(true));

        // Warning
        assertThat(Severity.Warning.isLessThan(Severity.Unknown), Matchers.is(false));
        assertThat(Severity.Warning.isLessThan(Severity.Normal), Matchers.is(false));
        assertThat(Severity.Warning.isLessThan(Severity.Warning), Matchers.is(false));
        assertThat(Severity.Warning.isLessThan(Severity.Minor), Matchers.is(true));
        assertThat(Severity.Warning.isLessThan(Severity.Major), Matchers.is(true));
        assertThat(Severity.Warning.isLessThan(Severity.Critical), Matchers.is(true));

        // Minor
        assertThat(Severity.Minor.isLessThan(Severity.Unknown), Matchers.is(false));
        assertThat(Severity.Minor.isLessThan(Severity.Normal), Matchers.is(false));
        assertThat(Severity.Minor.isLessThan(Severity.Warning), Matchers.is(false));
        assertThat(Severity.Minor.isLessThan(Severity.Minor), Matchers.is(false));
        assertThat(Severity.Minor.isLessThan(Severity.Major), Matchers.is(true));
        assertThat(Severity.Minor.isLessThan(Severity.Critical), Matchers.is(true));

        // Major
        assertThat(Severity.Major.isLessThan(Severity.Unknown), Matchers.is(false));
        assertThat(Severity.Major.isLessThan(Severity.Normal), Matchers.is(false));
        assertThat(Severity.Major.isLessThan(Severity.Warning), Matchers.is(false));
        assertThat(Severity.Major.isLessThan(Severity.Minor), Matchers.is(false));
        assertThat(Severity.Major.isLessThan(Severity.Major), Matchers.is(false));
        assertThat(Severity.Major.isLessThan(Severity.Critical), Matchers.is(true));

        // Critical
        assertThat(Severity.Critical.isLessThan(Severity.Unknown), Matchers.is(false));
        assertThat(Severity.Critical.isLessThan(Severity.Normal), Matchers.is(false));
        assertThat(Severity.Critical.isLessThan(Severity.Warning), Matchers.is(false));
        assertThat(Severity.Critical.isLessThan(Severity.Minor), Matchers.is(false));
        assertThat(Severity.Critical.isLessThan(Severity.Major), Matchers.is(false));
        assertThat(Severity.Critical.isLessThan(Severity.Critical), Matchers.is(false));
    }

