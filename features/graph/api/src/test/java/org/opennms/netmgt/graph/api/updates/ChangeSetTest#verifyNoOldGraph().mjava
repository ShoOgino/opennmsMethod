    // Verifies that when a complete new graph was added,
    // everything from the new graph is the change
    @Test
    public void verifyNoOldGraph() {
        final GenericGraph graph = GenericGraph.builder()
                .namespace(NAMESPACE)
                .addVertex(GenericVertex.builder().namespace(NAMESPACE).id("v1").label("Vertex 1").build())
                .addVertex(GenericVertex.builder().namespace(NAMESPACE).id("v2").label("Vertex 2").build())
                .addEdge(GenericEdge.builder().namespace(NAMESPACE).id("e1")
                        .source(new VertexRef(NAMESPACE, "v1"))
                        .target(new VertexRef(NAMESPACE, "v2"))
                        .build())
                .build();
        final ChangeSet<GenericGraph, GenericVertex, GenericEdge> changeSet = ChangeSet.builder(null, graph).build();
        assertThat(changeSet.getNamespace(), Matchers.is(NAMESPACE));
        assertThat(changeSet.hasGraphInfoChanged(), Matchers.is(true));
        assertThat(changeSet.hasFocusChanged(), Matchers.is(false));
        assertThat(changeSet.getVerticesAdded(), Matchers.hasSize(2));
        assertThat(changeSet.getVerticesRemoved(), Matchers.hasSize(0));
        assertThat(changeSet.getVerticesUpdated(), Matchers.hasSize(0));
        assertThat(changeSet.getEdgesAdded(), Matchers.hasSize(1));
        assertThat(changeSet.getEdgesRemoved(), Matchers.hasSize(0));
        assertThat(changeSet.getEdgesUpdated(), Matchers.hasSize(0));
        assertThat(changeSet.getGraphInfo(), Matchers.not(Matchers.is(Matchers.nullValue())));
    }

