        public GenericGraphBuilder addVertex(GenericVertex vertex) {
            Objects.requireNonNull(getNamespace(), "Please set a namespace before adding elements to this graph.");
            Objects.requireNonNull(vertex, "GenericVertex can not be null");
            checkArgument(!Strings.isNullOrEmpty(vertex.getId()) , "GenericVertex.getId() can not be empty or null. Vertex= %s", vertex);
            if (!this.getNamespace().equals(vertex.getNamespace())) {
                throw new IllegalArgumentException(
                    String.format("The namespace of the vertex (%s) doesn't match the namespace of this graph (%s). Vertex: %s ",
                        vertex.getNamespace(), this.getNamespace(), vertex.toString()));
            }
            if (vertexToIdMap.containsKey(vertex.getId())) return this; // already added
            jungGraph.addVertex(vertex.getVertexRef());
            vertexToIdMap.put(vertex.getId(), vertex);
            if (vertex.getNodeRef() != null) {
                nodeRefToVertexMap.putIfAbsent(vertex.getNodeRef(), new ArrayList<>());
                nodeRefToVertexMap.get(vertex.getNodeRef()).add(vertex);
            }
            return this; 
        }

