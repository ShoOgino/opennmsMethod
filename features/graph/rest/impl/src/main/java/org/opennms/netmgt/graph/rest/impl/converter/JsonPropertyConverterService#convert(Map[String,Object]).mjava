    public JSONObject convert(Map<String, Object> properties) {
        final JSONObject jsonObject = new JSONObject();
        if (!properties.isEmpty()) {
            final List<PropertyConverter> propertyConverters = getConverters();
            for (Map.Entry<String, Object> eachProperty : properties.entrySet()) {
                final Object value = eachProperty.getValue();
                if (value != null) {
                    final Class type = value.getClass();
                    final Optional<PropertyConverter> first = propertyConverters.stream().filter(converter -> converter.canConvert(type)).findFirst();
                    if (first.isPresent()) {
                        final Object convertedValue = first.get().convert(value);
                        jsonObject.put(eachProperty.getKey(), convertedValue);
                    } else {
                        LoggerFactory.getLogger(getClass()).warn("Cannot convert property of type {}. Skipping property {}", type, eachProperty.getKey());
                    }
                }
            }
        }
        return jsonObject;
    }

