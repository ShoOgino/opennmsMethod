    @Override
    public Response getView(String containerId, String namespace, Query query) {
        final GenericGraph graph = graphService.getGraph(containerId, namespace);
        if (graph == null) {
            return Response.status(Response.Status.NOT_FOUND).build();
        }
        if (query.getSemanticZoomLevel() == null) {
            query.setSemanticZoomLevel(Query.DEFAULT_SEMANTIC_ZOOM_LEVEL);
        }
        if (query.getSemanticZoomLevel() < 0) {
            return Response
                .status(Response.Status.BAD_REQUEST)
                .entity(new JSONObject().put("error", "SemanticZoomLevel must be >= 0 but was " + query.getSemanticZoomLevel()).toString())
                .build();
        }
        if (query.getVerticesInFocus() == null || query.getVerticesInFocus().isEmpty()) {
            query.setVerticesInFocus(graph.getDefaultFocus().getVertexIds());
        }
        final List<GenericVertex> focussedVertices = graph.resolveVertices(query.getVerticesInFocus());
        final GenericGraph view = graph.getView(focussedVertices, query.getSemanticZoomLevel()).asGenericGraph();

        // Apply enrichment
        final GenericGraph enrichedView = enrichmentService.enrich(view);
        final JSONObject jsonView = new JsonConverterService(bundleContext).convert(enrichedView);
        jsonView.put("focus", convert(query));
        jsonView.remove("defaultFocus"); // There shouldn't be a default focus
        return Response.ok(jsonView.toString()).type(MediaType.APPLICATION_JSON_TYPE).build();
    }

