    @Override
    public JSONObject convert(ImmutableGraphContainer<?> input) {
        final JSONObject jsonContainer = new JSONObject();
        final JSONArray jsonGraphArray = new JSONArray();
        jsonContainer.put("graphs", jsonGraphArray);

        final GenericGraphContainer genericGraphContainer = input.asGenericGraphContainer();
        final Map<String, Object> properties = genericGraphContainer.getProperties();
        final JSONObject convertedProperties = new JsonPropertyConverterService(bundleContext).convert(properties);
        convertedProperties.toMap().forEach(jsonContainer::put);

        genericGraphContainer.getProperties().forEach((key, value) -> jsonContainer.put(key, value));
        input.getGraphs()
                .stream()
                .sorted(Comparator.comparing(GraphInfo::getNamespace))
                .forEach(graph -> {
                            final JSONObject jsonGraph = new GraphConverter(bundleContext).convert(graph);
                            jsonGraphArray.put(jsonGraph);
                        }
                );
        return jsonContainer;
    }

