    private List<PropertyConverter> getConverters() {
        final List<PropertyConverter> propertyConverters = Lists.newArrayList();
        propertyConverters.add(new PrimitiveConverter());
        propertyConverters.add(new NodeInfoConverter());
        propertyConverters.add(new IpInfoConverter());
        propertyConverters.add(new VertexRefConverter());
        try {
            final Collection<ServiceReference<PropertyConverter>> serviceReferences = bundleContext.getServiceReferences(PropertyConverter.class, null);
            if (serviceReferences != null) {
                for (ServiceReference<PropertyConverter> serviceReference : serviceReferences) {
                    final PropertyConverter converter = bundleContext.getService(serviceReference);
                    propertyConverters.add(converter);
                }
            }
        } catch (InvalidSyntaxException e) {
            LoggerFactory.getLogger(getClass()).error("Cannot fetch services due to wrong filter criteria", e);
        }
        propertyConverters.add(new FallbackConverter()); // Ensure this is always last entry in list
        return propertyConverters;
    }

