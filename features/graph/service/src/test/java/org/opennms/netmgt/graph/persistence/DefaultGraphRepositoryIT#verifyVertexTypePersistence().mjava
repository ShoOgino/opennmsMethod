    @Test
    public void verifyVertexTypePersistence() {
        final ApplicationGraph applicationGraph = ApplicationGraph.builder()
                .label("Application Graph")
                .description("The Application Graph")
                .build();
        final ApplicationGraphContainer applicationGraphContainer= ApplicationGraphContainer.builder()
                .id("test")
                .description("Test Container")
                .addGraph(applicationGraph)
                .build();
        graphRepository.save(applicationGraphContainer);

        // Verify that generic info contains proper domain vertex type
        final GenericGraphContainer genericGraphContainer = graphRepository.findContainerById("test");
        final GraphInfo genericGraphInfo = genericGraphContainer.getGraphInfo(ApplicationGraph.NAMESPACE);
        assertEquals(GenericVertex.class, genericGraphInfo.getVertexType());

        // Convert to domain container and verify types again
        final ApplicationGraphContainer readContainer = new ApplicationGraphContainer(genericGraphContainer);
        assertEquals(readContainer.getGraph(ApplicationGraph.NAMESPACE).getVertexType(), ApplicationVertex.class);

        // Verify that reading only the container info contains the generic vertex types for the graph
        final GraphInfo readGraphInfo = graphRepository.findContainerInfoById("test").getGraphInfo(ApplicationGraph.NAMESPACE);
        assertEquals(GenericVertex.class, readGraphInfo.getVertexType());
    }

