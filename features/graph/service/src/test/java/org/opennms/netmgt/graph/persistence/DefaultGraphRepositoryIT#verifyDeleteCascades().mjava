    @Test
    // Verifies that when deleting the graphcontainer all other entities are also deleted (properties, focus, etc)
    public void verifyDeleteCascades() {
        final GenericGraphContainerBuilder containerBuilder = GenericGraphContainer.builder().id(CONTAINER_ID);
        final GenericGraphBuilder graphBuilder = GenericGraph.builder()
                .namespace(NAMESPACE)
                .addVertex(GenericVertex.builder().namespace(NAMESPACE).id("v1").label("Vertex 1").build())
                .addVertex((GenericVertex.builder().namespace(NAMESPACE).id("v2").label("Vertex 2").build()));
        final GenericGraphContainer container = containerBuilder.addGraph(graphBuilder.build()).build();
        graphRepository.save(container);

        // Verify creation of objects
        // 1 container, 1 graph, 2 vertices
        assertThat(persistenceAccessor.findAll(AbstractGraphEntity.class), Matchers.hasSize(4));
        // 1 Focus
        assertThat(persistenceAccessor.findAll(FocusEntity.class), Matchers.hasSize(1));
        // 1 container id, 1 graph namespace, 2 vertex namespace, 2 vertex ids, 2 vertex labels
        assertThat(persistenceAccessor.findAll(PropertyEntity.class), Matchers.hasSize(8));

        // Delete the container
        graphRepository.deleteContainer(container.getId());

        // Verify deletion of objects
        assertThat(persistenceAccessor.findAll(AbstractGraphEntity.class), Matchers.hasSize(0));
        assertThat(persistenceAccessor.findAll(FocusEntity.class), Matchers.hasSize(0));
        assertThat(persistenceAccessor.findAll(PropertyEntity.class), Matchers.hasSize(0));
    }

