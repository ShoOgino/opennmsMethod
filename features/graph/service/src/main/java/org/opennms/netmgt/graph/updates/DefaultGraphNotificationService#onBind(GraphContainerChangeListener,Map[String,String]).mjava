    public synchronized void onBind(GraphContainerChangeListener listener, Map<String, String> props) {
        // The call is wrapped
        final GraphContainerChangeSetListener wrappedListener = changeSet -> {
            if (!changeSet.getGraphsAdded().isEmpty()) {
                changeSet.getGraphsAdded().forEach(listener::handleGraphAdded);
            }
            if (!changeSet.getGraphsRemoved().isEmpty()) {
                changeSet.getGraphsRemoved().forEach(listener::handleGraphRemoved);
            }
            if (!changeSet.getGraphsUpdated().isEmpty()) {
                changeSet.getGraphsUpdated().forEach(listener::handleGraphUpdated);
            }
        };
        // Remember which one was actually wrapped, to help removing it later
        graphContainerChangeListenerToChangeSetListener.put(listener, wrappedListener);
        graphContainerChangeSetListeners.add(wrappedListener);
    }

