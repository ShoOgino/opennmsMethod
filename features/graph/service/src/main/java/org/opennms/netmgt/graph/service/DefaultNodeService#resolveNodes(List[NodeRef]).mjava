    @Override
    public List<NodeInfo> resolveNodes(List<NodeRef> nodeRefs) {
        Objects.requireNonNull(nodeRefs);
        final List<OnmsNode> nodes = loadNodes(nodeRefs);
        final List<NodeInfo> nodeInfoList = nodes.stream().map(node -> {
            final Set<String> categories = node.getCategories().stream().map(OnmsCategory::getName).collect(Collectors.toSet());
            final List<IpInfo> ipInfoList = node.getIpInterfaces().stream().map(ifc -> new IpInfo(ifc.getIpAddress(), ifc.isPrimary(), ifc.isManaged())).collect(Collectors.toList());
            return new NodeInfo.NodeInfoBuilder().
                    id(node.getId())
                    .label(node.getLabel())
                    .foreignId(node.getForeignId())
                    .foreignSource(node.getForeignSource())
                    .location(node.getLocation().getLocationName())
                    .categories(categories)
                    .ipInterfaces(ipInfoList)
                    .build();
        }).collect(Collectors.toList());
        return nodeInfoList;
    }

