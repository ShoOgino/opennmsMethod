    public synchronized void onBind(GraphChangeListener listener, Map<String, String> props) {
        final GraphChangeSetListener wrappedListener = changeSet -> {
            if (!changeSet.getVerticesAdded().isEmpty()) {
                listener.handleVerticesAdded(changeSet.getVerticesAdded());
            }
            if (!changeSet.getVerticesRemoved().isEmpty()) {
                listener.handleVerticesRemoved(changeSet.getVerticesRemoved());
            }
            if (!changeSet.getVerticesUpdated().isEmpty()) {
                listener.handleVerticesUpdated(changeSet.getVerticesUpdated());
            }
            if (!changeSet.getEdgesAdded().isEmpty()) {
                listener.handleEdgesAdded(changeSet.getEdgesAdded());
            }
            if (!changeSet.getEdgesRemoved().isEmpty()) {
                listener.handleEdgesRemoved(changeSet.getEdgesRemoved());
            }
            if (!changeSet.getEdgesUpdated().isEmpty()) {
                listener.handleEdgesUpdated(changeSet.getEdgesUpdated());
            }
            if (changeSet.getFocus() != null) {
                listener.handleFocusChanged(changeSet.getFocus());
            }
            if (changeSet.getGraphInfo() != null) {
                listener.handleGraphInfoChanged(changeSet.getGraphInfo());
            }
        };
        // Remember which one was actually wrapped, to help removing it later
        graphChangeListenerToChangeSetListener.put(listener, wrappedListener);
        graphChangeSetListeners.add(wrappedListener);
    }

