    protected LegacyVertex(GenericVertex genericVertex) {
        super(Objects.requireNonNull(genericVertex).getNamespace(), genericVertex.getId(), genericVertex.getProperty(GenericProperties.LABEL, genericVertex.getId()));
        setIconKey(genericVertex.getProperty("iconKey"));
        setIpAddress(genericVertex.getProperty("ipAddr"));
        setLocked(Boolean.valueOf(genericVertex.getProperty("locked")));
        setSelected(Boolean.valueOf(genericVertex.getProperty("selected")));
        setStyleName(genericVertex.getProperty("styleName"));
        setTooltipText(genericVertex.getProperty(genericVertex.getLabel()));
        if (genericVertex.getProperty("edge-path-offset") != null) {
            setEdgePathOffset(genericVertex.getProperty("edge-path-offset"));
        }
        // We have 3 ways to determine the nodeId, lets try all - last one wins.
        // nodeInfo is produced by the NodeEnrichment
        Optional.ofNullable(genericVertex.getProperty(GenericProperties.NODE_INFO))
                .map(o -> (NodeInfo)o)
                .map(NodeInfo::getId)
                .ifPresent(this::setNodeID);
        if (genericVertex.getProperty(GenericProperties.NODE_ID) != null) {
            setNodeID(genericVertex.getProperty(GenericProperties.NODE_ID));
        }
        Optional.ofNullable(genericVertex.getNodeRef())
                .map(NodeRef::getNodeId)
                .ifPresent(this::setNodeID);
        level = genericVertex.getProperty("level", 0);
        properties = genericVertex.getProperties();
    }

