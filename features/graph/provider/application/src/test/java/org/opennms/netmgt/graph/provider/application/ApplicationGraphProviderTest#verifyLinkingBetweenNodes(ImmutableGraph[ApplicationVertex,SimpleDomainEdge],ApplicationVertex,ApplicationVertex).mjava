    private static void verifyLinkingBetweenNodes(ImmutableGraph<ApplicationVertex, SimpleDomainEdge>  graph, ApplicationVertex left, ApplicationVertex right) {
        final Collection<SimpleDomainEdge> edgesLeft = graph.getConnectingEdges(left);
        final Collection<SimpleDomainEdge> edgesRight = graph.getConnectingEdges(right);

        // 1. get the EdgeRef that connects the 2 vertices
        final Set<SimpleDomainEdge> intersection = intersect(edgesLeft, edgesRight);
        assertEquals(1, intersection.size());
        SimpleDomainEdge edge = intersection.iterator().next();

        // 2. get the Edge and check if it really connects the 2 Vertices
        // we don't know the direction it is connected so we have to test both ways:
        assertTrue(
                (graph.resolveVertex(edge.getSource()).equals(left) || graph.resolveVertex(edge.getSource()).equals(right)) // source side
                        && (graph.resolveVertex(edge.getTarget()).equals(left) || graph.resolveVertex(edge.getTarget()).equals(right)) // target side
                        && !graph.resolveVertex(edge.getSource()).equals(graph.resolveVertex(edge.getTarget()))); // make sure it doesn't connect the same node
    }

