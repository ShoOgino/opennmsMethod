    public GenericGraphContainer convert(final GraphML graphML) {
        // Index vertex id to graph mapping
        graphML.getGraphs().stream().forEach(
                g -> g.getNodes().stream().forEach(n -> {
                    if (vertexIdToGraphMapping.containsKey(n.getId())) {
                        throw new IllegalStateException("GraphML graph contains vertices with same id. Bailing");
                    }
                    vertexIdToGraphMapping.put(n.getId(), g);
                })
        );

        // Convert graph
        final String graphContainerId = determineGraphContainerId(graphML);
        final GenericGraphContainer.GenericGraphContainerBuilder graphContainerBuilder = GenericGraphContainer.builder()
                .id(graphContainerId)
                .label(graphML.getProperty(GenericProperties.LABEL))
                .description(graphML.getProperty(GenericProperties.DESCRIPTION));
        for (GraphMLGraph eachGraph : graphML.getGraphs()) {
            final GenericGraph convertedGraph = convert(eachGraph);
            graphContainerBuilder.addGraph(convertedGraph);
        }
        this.vertexIdToGraphMapping.clear(); // clear data as it was only needed while building the container
        final GenericGraphContainer graphContainer = graphContainerBuilder.build();
        return graphContainer;
    }

