    public BusinessServiceVertex(GenericVertex genericVertex) {
        super(genericVertex);

        // generic checks
        Objects.requireNonNull(getLevel(), "getLevel() cannot be null.");
        Objects.requireNonNull(isLeaf(), "isLeaf() cannot be null.");
        Objects.requireNonNull(getType(), "getType() cannot be null.");
        Objects.requireNonNull(getReductionKeys(), "getReductionKeys() cannot be null.");

        // Specific checks
        final Type type = genericVertex.getProperty(Properties.TYPE);
        if (Type.Application == type) {
            Objects.requireNonNull(delegate.getProperty(Properties.Application.id), String.format("%s cannot be null", Properties.Application.id));
        } else if (Type.BusinessService == type) {
            Objects.requireNonNull(delegate.getProperty(Properties.BusinessService.id), String.format("%s cannot be null", Properties.BusinessService.id));
        } else if (Type.IpService == type) {
            Objects.requireNonNull(delegate.getProperty(Properties.IpService.id), String.format("%s cannot be null", Properties.IpService.id));
        } else if (Type.ReductionKey == type) {
            Objects.requireNonNull(delegate.getProperty(Properties.REDUCTION_KEYS), String.format("%s cannot be null", Properties.REDUCTION_KEYS));
        } else {
            throw new IllegalArgumentException("Unknown type of BusinessServiceVertex: "  + type);
        }
    }

