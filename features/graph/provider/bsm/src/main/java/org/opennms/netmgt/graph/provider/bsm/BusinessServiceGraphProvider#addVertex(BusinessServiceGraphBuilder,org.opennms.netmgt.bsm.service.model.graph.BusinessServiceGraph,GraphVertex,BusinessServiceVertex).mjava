    private static void addVertex(BusinessServiceGraphBuilder targetGraphBuilder, org.opennms.netmgt.bsm.service.model.graph.BusinessServiceGraph sourceGraph, GraphVertex graphVertex, BusinessServiceVertex topologyVertex) {
        if (topologyVertex == null) {
            // Create a topology vertex for the current vertex
            topologyVertex = builder().graphVertex(graphVertex).build();
            targetGraphBuilder.addVertex(topologyVertex);
        }

        for (GraphEdge graphEdge : sourceGraph.getOutEdges(graphVertex)) {
            final GraphVertex childVertex = sourceGraph.getOpposite(graphVertex, graphEdge);

            // Create a topology vertex for the child vertex
            final BusinessServiceVertexBuilder childTopologyVertexBuilder = builder().graphVertex(childVertex);
            sourceGraph.getInEdges(childVertex).stream()
                    .map(GraphEdge::getFriendlyName)
                    .filter(s -> !Strings.isNullOrEmpty(s))
                    .findFirst()
                    .ifPresent(childTopologyVertexBuilder::label);
            final BusinessServiceVertex childTopologyVertex = childTopologyVertexBuilder.build();
            targetGraphBuilder.addVertex(childTopologyVertex);

            // Connect the two
            final BusinessServiceEdge edge = BusinessServiceEdge.builder()
                    .graphEdge(graphEdge)
                    .source(topologyVertex.getVertexRef())
                    .target(childTopologyVertex.getVertexRef()).build();
            targetGraphBuilder.addEdge(edge);

            // Recurse
            addVertex(targetGraphBuilder, sourceGraph, childVertex, childTopologyVertex);
        }
    }

