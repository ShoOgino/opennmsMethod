    @Test
    @DirtiesContext
    public void testMultipleRequestsToLoadDependenciesOfTypeAllAndAllWithdrawn() {

        resetFacts();
        // verify empty memory
        verifyFacts();

        resetFacts();

        // component to request dependencies for
        Component b = createComponent("ServiceElementComponent", "NA-SvcElemComp", "9876,jnxVpnPw-vcid(50)");
        DependenciesNeeded dependenciesNeeded = new DependenciesNeeded(b, "requestor1");

        // this component depends on b
        Component a = createComponent("ServiceElement", "NA-ServiceElement", "9876");

        anticipateFacts(dependenciesNeeded, b, new DependsOn(a, b));

        // pretend to be a using rule that inserts the DependenciesNeeded fact
        FactHandle depsNeededHandle = insertFactAndFireRules(dependenciesNeeded);

        verifyFacts();

        resetFacts();

        anticipateFacts(dependenciesNeeded, b, new DependsOn(a, b));

        DependenciesNeeded dependenciesNeeded2 = new DependenciesNeeded(b, "requestor2");

        // don't expect any further dependencies to be added
        anticipateFacts(dependenciesNeeded2);

        FactHandle depsNeeded2Handle = insertFactAndFireRules(dependenciesNeeded2);

        verifyFacts();

        resetFacts();

        anticipateFacts(dependenciesNeeded2, b, new DependsOn(a, b));

        retractFactAndFireRules(depsNeededHandle);

        verifyFacts();

        resetFacts();

        retractFactAndFireRules(depsNeeded2Handle);

        // expect everything to be clean up
        verifyFacts();

    }
    // dependencies must be loaded when needed by propagation rules
    // loaded deps needed by multiple events should not load more than once
    // deps no longer needed by one event should remain loaded if need by others
    // deps no longer needed by any event should be unloaded

