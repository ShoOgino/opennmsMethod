	private void testNodeEventMapping(Event event, Class<? extends ComponentEvent> componentEventClass,	Set<String> componentIds) {
		// Get engine
        DroolsCorrelationEngine engine = findEngineByName("eventMappingRules");
        
        assertEquals("Expected nothing but got " + engine.getMemoryObjects(), 0, engine.getMemorySize());
        
		engine.correlate( event );
		
		List<Object> memObjects = engine.getMemoryObjects();

		// expect an ComponentX event for each component
		assertEquals("Unexpected number of events added to memory " + memObjects, componentIds.size(), memObjects.size());
		
		Set<String> remainingIds = new HashSet<String>(componentIds);
		for(Object eventObj : memObjects) {

		    assertTrue( "expected " + eventObj + " to be an instance of " + componentEventClass, componentEventClass.isInstance(eventObj) );
		    assertTrue( eventObj instanceof ComponentEvent );
		
		    ComponentEvent c = (ComponentEvent) eventObj;
		
		    assertSame(event, c.getEvent());
		    
            Component component = c.getComponent();
            
            String id = component.getForeignSource()+":"+component.getForeignId();
		    assertTrue("Expected an event for component "+id, remainingIds.remove(id));
		}
	}

