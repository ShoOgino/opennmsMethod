	/*
	 * Replaced/Updated:
	 * <component type="ServiceElementComponent" foreignId="9876,vcid(50)" foreignSource="NA-SvcElemComp">
	 *   <name>PE2,vcid(50)</name>
	 *   <dependenciesRequired>ANY</dependenciesRequired>
	 * </component>
	 *
	 * Deleted:
	 * <component type="ServiceElementComponent" foreignId="9876,LSP-1234" foreignSource="NA-SvcElemComp">
	 *   <name>lspA-PE2-PE1</name>
	 * </component>
	 * <component type="ServiceElementComponent" foreignId="9876,LSP-4321" foreignSource="NA-SvcElemComp">
	 *   <name>lspB-PE2-PE1</name>
	 * </component>
	 */
	@Test
	public void testDeleteOrphans() throws Exception {
		sendPost("/NCS", m_serviceXML);

		m_eventAnticipator.reset();
		anticipateEvent(EventConstants.COMPONENT_UPDATED_UEI, new String[] { "ServiceElementComponent", "PE2,vcid(50)", "NA-SvcElementComp", "9876,vcid(50)" });
		anticipateEvent(EventConstants.COMPONENT_DELETED_UEI, new String[] { "ServiceElementComponent", "lspA-PE2-PE1", "NA-SvcElemComp", "9876,LSP-1234" });
		anticipateEvent(EventConstants.COMPONENT_DELETED_UEI, new String[] { "ServiceElementComponent", "lspB-PE2-PE1", "NA-SvcElemComp", "9876,LSP-4321" });

        final MockHttpServletRequest request = createRequest(POST, "/NCS");
        // request.setQueryString("deleteOrphans=true");
        request.setContentType(MediaType.APPLICATION_XML);
        request.setContent(m_serviceXMLFragment.getBytes());
        request.setQueryString("deleteOrphans=true");
        sendRequest(request, 200);
	}

