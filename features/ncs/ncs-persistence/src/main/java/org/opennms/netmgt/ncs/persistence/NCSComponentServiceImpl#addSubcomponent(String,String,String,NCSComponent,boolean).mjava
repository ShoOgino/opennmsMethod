	@Override
	@Transactional
	public NCSComponent addSubcomponent(final String type, final String foreignSource, final String foreignId, final NCSComponent subComponent, final boolean deleteOrphans) {
		final ComponentIdentifier id = new ComponentIdentifier(type, foreignSource, foreignId);
		final ComponentIdentifier subComponentId = getIdentifier(subComponent);
		
		LogUtils.debugf(this, "addSubcomponent(%s, %s, %s, %s, %s)", type, foreignSource, foreignId, subComponentId, Boolean.valueOf(deleteOrphans));

		final ComponentEventQueue ceq = new ComponentEventQueue();
		final NCSComponent component = getComponent(id);

		if (component == null) {
			throw new ObjectRetrievalFailureException(NCSComponent.class, "Unable to locate component with type=" + type + ", foreignSource=" + foreignSource + ", foreignId=" + foreignId);
		}

		final NCSComponent updatedSubComponent = addOrUpdateComponents(subComponentId, subComponent, ceq, deleteOrphans);
		component.addSubcomponent(updatedSubComponent);
		
		m_componentDao.update(component);
		ceq.componentUpdated(id);

		ceq.sendAll(m_eventForwarder);

		return getComponent(id);
	}

