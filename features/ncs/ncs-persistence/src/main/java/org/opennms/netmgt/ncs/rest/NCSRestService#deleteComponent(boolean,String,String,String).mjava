    @DELETE
    @Path("{type}/{foreignSource}:{foreignId}")
    public Response deleteComponent(@QueryParam("deleteOrphans") final boolean deleteOrphans, @PathParam("type") String type, @PathParam("foreignSource") String foreignSource, @PathParam("foreignId") String foreignId) {
        afterPropertiesSet();
        writeLock();

        try {
            LOG.info("deleteComponent: Deleting component of type {} and foreignIdentity {}:{} (deleteOrphans={})", type, foreignSource, foreignId, Boolean.valueOf(deleteOrphans));

            if (m_componentService == null) {
                throw getException(Status.INTERNAL_SERVER_ERROR, "Component service is null");
            }
            if (type == null) {
                throw getException(Status.BAD_REQUEST, "Type cannot be null");
            }
            if (foreignSource == null) {
                throw getException(Status.BAD_REQUEST, "Foreign Source cannot be null");
            }
            if (foreignId == null) {
                throw getException(Status.BAD_REQUEST, "Foreign ID cannot be null");
            }

            m_componentService.deleteComponent(type, foreignSource, foreignId, deleteOrphans);
            return Response.noContent().build();
        } finally {
            writeUnlock();
        }
    }

