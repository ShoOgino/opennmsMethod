    /**
     * <p>getNodes</p>
     *
     * @return a {@link org.opennms.netmgt.model.OnmsNodeList} object.
     */
    @GET
    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})
    @Path("{type}/{foreignSource}:{foreignId}")
    public NCSComponent getComponent(@PathParam("type") final String type, @PathParam("foreignSource") final String foreignSource, @PathParam("foreignId") final String foreignId) {
        afterPropertiesSet();
        readLock();
        try {
            LOG.debug("getComponent: type = {}, foreignSource = {}, foreignId = {}", type, foreignSource, foreignId);

            if (m_componentService == null) {
                throw getException(Status.INTERNAL_SERVER_ERROR, "Component service is null");
            }
            if (foreignSource == null) {
                throw getException(Status.BAD_REQUEST, "Foreign Source cannot be null");
            }
            if (foreignId == null) {
                throw getException(Status.BAD_REQUEST, "Foreign ID cannot be null");
            }

            final NCSComponent component = m_componentService.getComponent(type, foreignSource, foreignId);
            if (component == null) throw getException(Status.NOT_FOUND, "Component of type {} not found for {}:{}", type, foreignSource, foreignId);
            return component;
        } finally {
            readUnlock();
        }
    }

