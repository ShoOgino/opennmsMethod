	@Override
	@Transactional
	public void deleteComponent(final String type, final String foreignSource, final String foreignId, final boolean deleteOrphans) {
		LogUtils.debugf(this, "deleteSubcomponent(%s, %s, %s, %s)", type, foreignSource, foreignId, Boolean.valueOf(deleteOrphans));

		final NCSComponent component = getComponent(type, foreignSource, foreignId);
		final ComponentIdentifier id = getIdentifier(component);
		final ComponentEventQueue ceq = new ComponentEventQueue();
		deleteComponent(id, ceq, deleteOrphans);
		try {
			ceq.sendAll(m_eventProxy);
		} catch (final EventProxyException e) {
			LogUtils.warnf(this, e, "Component %s deleted, but an error occured while sending delete/update events.", id);
		}
	}

