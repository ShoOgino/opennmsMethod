    @Override
    public Object execute() {
        if (alarmDataStore.isEnabled()) {
            System.out.println("The alarm data store is currently disabled and must be enabled for this shell command to function.");
        }

        // Wait for the alarm data store to be ready
        if (!isAlarmDataStoreReady()) {
            final long startTime = System.currentTimeMillis();
            System.out.println("Waiting for alarm data store to be ready..");
            while (true) {
                try {
                    System.out.print(".");
                    Thread.sleep(TimeUnit.SECONDS.toMillis(1));
                    if (isAlarmDataStoreReady()) {
                        System.out.printf("\nReady in %d ms.\n\n", System.currentTimeMillis() - startTime);
                        break;
                    }
                } catch (InterruptedException e) {
                    System.out.println("\nInterrupted.");
                    return null;
                }
            }
        }

        // Get
        final Map<String, OpennmsModelProtos.Alarm> alarmsByReductionKey = new LinkedHashMap<>();
        if (reductionKey != null) {
            alarmsByReductionKey.put(reductionKey, alarmDataStore.getAlarm(reductionKey));
        } else {
            alarmsByReductionKey.putAll(alarmDataStore.getAlarms());
        }

        // Dump
        alarmsByReductionKey.forEach(this::printAlarm);

        return null;
    }

