      @java.lang.Override
      public org.opennms.features.kafka.producer.model.OpennmsModelProtos.Node buildPartial() {
        org.opennms.features.kafka.producer.model.OpennmsModelProtos.Node result = new org.opennms.features.kafka.producer.model.OpennmsModelProtos.Node(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.foreignSource_ = foreignSource_;
        result.foreignId_ = foreignId_;
        result.location_ = location_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          category_ = category_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.category_ = category_;
        result.label_ = label_;
        result.createTime_ = createTime_;
        result.sysContact_ = sysContact_;
        result.sysDescription_ = sysDescription_;
        result.sysObjectId_ = sysObjectId_;
        if (ipInterfaceBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            ipInterface_ = java.util.Collections.unmodifiableList(ipInterface_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.ipInterface_ = ipInterface_;
        } else {
          result.ipInterface_ = ipInterfaceBuilder_.build();
        }
        if (snmpInterfaceBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            snmpInterface_ = java.util.Collections.unmodifiableList(snmpInterface_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.snmpInterface_ = snmpInterface_;
        } else {
          result.snmpInterface_ = snmpInterfaceBuilder_.build();
        }
        if (hwInventoryBuilder_ == null) {
          result.hwInventory_ = hwInventory_;
        } else {
          result.hwInventory_ = hwInventoryBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

