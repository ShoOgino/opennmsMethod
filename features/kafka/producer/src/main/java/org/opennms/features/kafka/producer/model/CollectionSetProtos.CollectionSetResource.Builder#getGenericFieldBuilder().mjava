      /**
       * <code>.GenericTypeResource generic = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opennms.features.kafka.producer.model.CollectionSetProtos.GenericTypeResource, org.opennms.features.kafka.producer.model.CollectionSetProtos.GenericTypeResource.Builder, org.opennms.features.kafka.producer.model.CollectionSetProtos.GenericTypeResourceOrBuilder> 
          getGenericFieldBuilder() {
        if (genericBuilder_ == null) {
          if (!(resourceCase_ == 3)) {
            resource_ = org.opennms.features.kafka.producer.model.CollectionSetProtos.GenericTypeResource.getDefaultInstance();
          }
          genericBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opennms.features.kafka.producer.model.CollectionSetProtos.GenericTypeResource, org.opennms.features.kafka.producer.model.CollectionSetProtos.GenericTypeResource.Builder, org.opennms.features.kafka.producer.model.CollectionSetProtos.GenericTypeResourceOrBuilder>(
                  (org.opennms.features.kafka.producer.model.CollectionSetProtos.GenericTypeResource) resource_,
                  getParentForChildren(),
                  isClean());
          resource_ = null;
        }
        resourceCase_ = 3;
        onChanged();;
        return genericBuilder_;
      }

