    @Override
    public Object execute() {
        final Expression expression = SPEL_PARSER.parseExpression(spelExpression);
        System.out.printf("SPEL Expression: %s\n", expression.getExpressionString());
        if (alarmId != null) {
            transactionOperations.execute((TransactionCallback<Void>) status -> {
                if (alarmId != null) {
                    final OnmsAlarm alarm = alarmDao.get(alarmId);
                    if (alarm == null) {
                        System.out.printf("No alarm found with ID: %d\n", alarmId);
                    } else {
                        System.out.printf("Alarm with ID %d has reduction key: %s\n", alarmId, alarm.getReductionKey());
                    }
                    System.out.printf("Result: %s\n", expression.getValue(alarm, Boolean.class));
                }
                return null;
            });
        }
        if (eventUei != null) {
            final Event event = new EventBuilder(eventUei, "kafka-producer:evaluate-filter")
                    .getEvent();
            System.out.printf("Event has UEI: %s\n", event.getUei());
            System.out.printf("Result: %s\n", expression.getValue(event, Boolean.class));
        }
        return null;
    }

