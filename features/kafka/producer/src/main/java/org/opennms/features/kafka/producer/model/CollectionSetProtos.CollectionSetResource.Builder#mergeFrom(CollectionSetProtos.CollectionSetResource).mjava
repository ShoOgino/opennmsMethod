      public Builder mergeFrom(CollectionSetProtos.CollectionSetResource other) {
        if (other == CollectionSetProtos.CollectionSetResource.getDefaultInstance()) return this;
        if (stringBuilder_ == null) {
          if (!other.string_.isEmpty()) {
            if (string_.isEmpty()) {
              string_ = other.string_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureStringIsMutable();
              string_.addAll(other.string_);
            }
            onChanged();
          }
        } else {
          if (!other.string_.isEmpty()) {
            if (stringBuilder_.isEmpty()) {
              stringBuilder_.dispose();
              stringBuilder_ = null;
              string_ = other.string_;
              bitField0_ = (bitField0_ & ~0x00000010);
              stringBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStringFieldBuilder() : null;
            } else {
              stringBuilder_.addAllMessages(other.string_);
            }
          }
        }
        if (numericBuilder_ == null) {
          if (!other.numeric_.isEmpty()) {
            if (numeric_.isEmpty()) {
              numeric_ = other.numeric_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureNumericIsMutable();
              numeric_.addAll(other.numeric_);
            }
            onChanged();
          }
        } else {
          if (!other.numeric_.isEmpty()) {
            if (numericBuilder_.isEmpty()) {
              numericBuilder_.dispose();
              numericBuilder_ = null;
              numeric_ = other.numeric_;
              bitField0_ = (bitField0_ & ~0x00000020);
              numericBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNumericFieldBuilder() : null;
            } else {
              numericBuilder_.addAllMessages(other.numeric_);
            }
          }
        }
        switch (other.getResourceCase()) {
          case NODE: {
            mergeNode(other.getNode());
            break;
          }
          case INTERFACE: {
            mergeInterface(other.getInterface());
            break;
          }
          case GENERIC: {
            mergeGeneric(other.getGeneric());
            break;
          }
          case RESPONSE: {
            mergeResponse(other.getResponse());
            break;
          }
          case RESOURCE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

