      public Builder mergeFrom(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Node other) {
        if (other == org.opennms.features.kafka.producer.model.OpennmsModelProtos.Node.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getForeignSource().isEmpty()) {
          foreignSource_ = other.foreignSource_;
          onChanged();
        }
        if (!other.getForeignId().isEmpty()) {
          foreignId_ = other.foreignId_;
          onChanged();
        }
        if (!other.getLocation().isEmpty()) {
          location_ = other.location_;
          onChanged();
        }
        if (!other.category_.isEmpty()) {
          if (category_.isEmpty()) {
            category_ = other.category_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCategoryIsMutable();
            category_.addAll(other.category_);
          }
          onChanged();
        }
        if (!other.getLabel().isEmpty()) {
          label_ = other.label_;
          onChanged();
        }
        if (other.getCreateTime() != 0L) {
          setCreateTime(other.getCreateTime());
        }
        if (!other.getSysContact().isEmpty()) {
          sysContact_ = other.sysContact_;
          onChanged();
        }
        if (!other.getSysDescription().isEmpty()) {
          sysDescription_ = other.sysDescription_;
          onChanged();
        }
        if (!other.getSysObjectId().isEmpty()) {
          sysObjectId_ = other.sysObjectId_;
          onChanged();
        }
        if (ipInterfaceBuilder_ == null) {
          if (!other.ipInterface_.isEmpty()) {
            if (ipInterface_.isEmpty()) {
              ipInterface_ = other.ipInterface_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureIpInterfaceIsMutable();
              ipInterface_.addAll(other.ipInterface_);
            }
            onChanged();
          }
        } else {
          if (!other.ipInterface_.isEmpty()) {
            if (ipInterfaceBuilder_.isEmpty()) {
              ipInterfaceBuilder_.dispose();
              ipInterfaceBuilder_ = null;
              ipInterface_ = other.ipInterface_;
              bitField0_ = (bitField0_ & ~0x00000400);
              ipInterfaceBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIpInterfaceFieldBuilder() : null;
            } else {
              ipInterfaceBuilder_.addAllMessages(other.ipInterface_);
            }
          }
        }
        if (snmpInterfaceBuilder_ == null) {
          if (!other.snmpInterface_.isEmpty()) {
            if (snmpInterface_.isEmpty()) {
              snmpInterface_ = other.snmpInterface_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureSnmpInterfaceIsMutable();
              snmpInterface_.addAll(other.snmpInterface_);
            }
            onChanged();
          }
        } else {
          if (!other.snmpInterface_.isEmpty()) {
            if (snmpInterfaceBuilder_.isEmpty()) {
              snmpInterfaceBuilder_.dispose();
              snmpInterfaceBuilder_ = null;
              snmpInterface_ = other.snmpInterface_;
              bitField0_ = (bitField0_ & ~0x00000800);
              snmpInterfaceBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSnmpInterfaceFieldBuilder() : null;
            } else {
              snmpInterfaceBuilder_.addAllMessages(other.snmpInterface_);
            }
          }
        }
        if (other.hasHwInventory()) {
          mergeHwInventory(other.getHwInventory());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

