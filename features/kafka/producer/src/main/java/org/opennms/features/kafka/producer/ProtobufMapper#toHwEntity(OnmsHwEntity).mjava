    public OpennmsModelProtos.HwEntity.Builder toHwEntity(OnmsHwEntity entity) {
        if (entity == null) {
            return null;
        }

        final OpennmsModelProtos.HwEntity.Builder builder = OpennmsModelProtos.HwEntity.newBuilder();

        if (entity.getId() != null) {
                builder.setEntityId(entity.getId());
        }
        if (entity.getEntPhysicalIndex() != null) {
                builder.setEntPhysicalIndex(entity.getEntPhysicalIndex());
        }
        if (entity.getEntPhysicalClass() != null) {
            builder.setEntPhysicalClass(entity.getEntPhysicalClass());
        }
        if (entity.getEntPhysicalDescr() != null) {
            builder.setEntPhysicalDescr(entity.getEntPhysicalDescr());
        }
        if (entity.getEntPhysicalIsFRU() != null) {
            builder.setEntPhysicalIsFRU(entity.getEntPhysicalIsFRU());
        }
        if (entity.getEntPhysicalName() != null) {
            builder.setEntPhysicalName(entity.getEntPhysicalName());
        }
        if (entity.getEntPhysicalVendorType() != null) {
            builder.setEntPhysicalVendorType(entity.getEntPhysicalVendorType());
        }
        // Add aliases, sorting them by index
        entity.getEntAliases()
                .stream()
                .forEach(alias -> builder.addEntHwAlias(toHwAlias(alias)));
        // Add children
        entity.getChildren()
                .stream()
                .forEach(child -> builder.addChildren(toHwEntity(child)));

        return builder;
    }

