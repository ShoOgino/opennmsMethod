    protected static boolean waitForAlarmDataStore(AlarmDataStore alarmDataStore, long timeout, TimeUnit unit) {
        if (!alarmDataStore.isEnabled()) {
            System.out.println("The alarm data store is currently disabled and must be enabled for this shell command to function.");
            return false;
        }

        // Wait for the alarm data store to be ready
        if (!isAlarmDataStoreReady(alarmDataStore)) {
            final long startTime = System.currentTimeMillis();
            final long endTime = startTime + unit.toMillis(timeout);
            System.out.println("Waiting for alarm data store to be ready..");
            while (System.currentTimeMillis() < endTime) {
                try {
                    System.out.print(".");
                    Thread.sleep(TimeUnit.SECONDS.toMillis(1));
                    if (isAlarmDataStoreReady(alarmDataStore)) {
                        System.out.printf("\nReady in %d ms.\n\n", System.currentTimeMillis() - startTime);
                        break;
                    }
                } catch (InterruptedException e) {
                    System.out.println("\nInterrupted.");
                    return false;
                }
            }
            System.out.printf("\nAlarm data store was not ready in %d %s. Try again and see logs if issue persists.\n", timeout, unit.name());
            return false;
        }
        return true;
    }

