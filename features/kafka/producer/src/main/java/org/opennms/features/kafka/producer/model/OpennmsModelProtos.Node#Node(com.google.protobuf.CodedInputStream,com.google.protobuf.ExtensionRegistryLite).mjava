    private Node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readUInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              foreignSource_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              foreignId_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              location_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                category_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              category_.add(s);
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              label_ = s;
              break;
            }
            case 56: {

              createTime_ = input.readUInt64();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              sysContact_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              sysDescription_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              sysObjectId_ = s;
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                ipInterface_ = new java.util.ArrayList<org.opennms.features.kafka.producer.model.OpennmsModelProtos.IpInterface>();
                mutable_bitField0_ |= 0x00000400;
              }
              ipInterface_.add(
                  input.readMessage(org.opennms.features.kafka.producer.model.OpennmsModelProtos.IpInterface.parser(), extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                snmpInterface_ = new java.util.ArrayList<org.opennms.features.kafka.producer.model.OpennmsModelProtos.SnmpInterface>();
                mutable_bitField0_ |= 0x00000800;
              }
              snmpInterface_.add(
                  input.readMessage(org.opennms.features.kafka.producer.model.OpennmsModelProtos.SnmpInterface.parser(), extensionRegistry));
              break;
            }
            case 106: {
              org.opennms.features.kafka.producer.model.OpennmsModelProtos.HwEntity.Builder subBuilder = null;
              if (hwInventory_ != null) {
                subBuilder = hwInventory_.toBuilder();
              }
              hwInventory_ = input.readMessage(org.opennms.features.kafka.producer.model.OpennmsModelProtos.HwEntity.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hwInventory_);
                hwInventory_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          category_ = category_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          ipInterface_ = java.util.Collections.unmodifiableList(ipInterface_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          snmpInterface_ = java.util.Collections.unmodifiableList(snmpInterface_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

