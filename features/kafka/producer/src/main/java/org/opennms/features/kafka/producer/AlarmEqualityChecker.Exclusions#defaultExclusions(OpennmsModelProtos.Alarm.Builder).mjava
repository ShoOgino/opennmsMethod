        /**
         * The default exclusions.
         *
         * @param alarmBuilder the alarm builder to apply exclusions to
         * @return the alarm builder with exclusions applied
         */
        public static OpennmsModelProtos.Alarm.Builder defaultExclusions(
                OpennmsModelProtos.Alarm.Builder alarmBuilder) {
            // Recursively apply these exclusions to any related alarms
            if (!alarmBuilder.getRelatedAlarmList().isEmpty()) {
                List<OpennmsModelProtos.Alarm> relatedAlarmsWithExclusions = alarmBuilder.getRelatedAlarmList().stream()
                        // Convert the related alarm into a builder
                        .map(OpennmsModelProtos.Alarm::newBuilder)
                        // Apply the exclusions
                        .map(Exclusions::defaultExclusions)
                        // Convert the alarm back
                        .map(OpennmsModelProtos.Alarm.Builder::build)
                        .collect(Collectors.toList());
                // Doesn't look like we can just replace the list at this point so we need to clear it and repopulate
                // it iteratively
                // Clear all the untouched related alarms
                alarmBuilder.clearRelatedAlarm();
                // Replace them with the excluded related alarms
                relatedAlarmsWithExclusions.forEach(alarmBuilder::addRelatedAlarm);
            }

            return alarmBuilder
                    .clearCount()
                    .clearLastEvent()
                    .clearLastEventTime();
        }

