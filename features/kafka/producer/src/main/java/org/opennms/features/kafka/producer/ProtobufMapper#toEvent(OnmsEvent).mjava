    public OpennmsModelProtos.Event.Builder toEvent(OnmsEvent event) {
        if (event == null) {
            return null;
        }
        try {
            final OpennmsModelProtos.Event.Builder builder = OpennmsModelProtos.Event.newBuilder()
                    .setId(event.getId())
                    .setUei(event.getEventUei())
                    .setSource(event.getEventSource())
                    .setSeverity(toSeverity(OnmsSeverity.get(event.getEventSeverity())))
                    .setLog("Y".equalsIgnoreCase(event.getEventLog()))
                    .setDisplay("Y".equalsIgnoreCase(event.getEventDisplay()));

            final String eventLabel = eventConfDao.getEventLabel(event.getEventUei());
            if (eventLabel != null) {
                builder.setLabel(eventLabel);
            }
            if (event.getEventDescr() != null) {
                builder.setDescription(event.getEventDescr());
            }
            if (event.getEventLogMsg() != null) {
                builder.setLogMessage(event.getEventLogMsg());
            }
            if (event.getNodeId() != null) {
                builder.setNodeCriteria(toNodeCriteria(event.getNode()));
            }

            if(event.getIpAddr() != null) {
                builder.setIpAddress(InetAddressUtils.toIpAddrString(event.getIpAddr()));
            }

            for (OnmsEventParameter param : event.getEventParameters()) {
                if (param.getName() == null || param.getValue() == null) {
                    continue;
                }
                builder.addParameter(OpennmsModelProtos.EventParameter.newBuilder()
                        .setName(param.getName())
                        .setValue(param.getValue()));
            }

            setTimeIfNotNull(event.getEventTime(), builder::setTime);
            setTimeIfNotNull(event.getEventCreateTime(), builder::setTime);
            return builder;
        } catch (RuntimeException e) {
            // We are only interested in catching org.hibernate.ObjectNotFoundExceptions, but this code runs in OSGi
            // which has a different class for this loaded then what is being thrown
            // Resort to comparing the name instead
            if (ObjectNotFoundException.class.getCanonicalName().equals(e.getClass().getCanonicalName())) {
                LOG.debug("Event was deleted before we could perform the mapping.");
                return null;
            } else {
                // Rethrow
                throw e;
            }
        }
    }

