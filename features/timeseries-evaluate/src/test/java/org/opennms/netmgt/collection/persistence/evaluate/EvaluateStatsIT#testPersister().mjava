    /**
     * Test persister.
     *
     * @throws Exception the exception
     */
    @Test
    public void testPersister() throws Exception {
        RrdRepository repo = new RrdRepository();
        repo.setRrdBaseDir(new File("/tmp"));
        EvaluateGroupPersister persister = new EvaluateGroupPersister(stats, new ServiceParameters(new HashMap<String,Object>()), repo);
        MockCollectionAgent agent = new MockCollectionAgent(1, "node.local", "Test", "001", InetAddressUtils.addr("127.0.0.1"));
        CollectionSetBuilder builder = new CollectionSetBuilder(agent);
        NodeLevelResource node = new NodeLevelResource(agent.getNodeId());  
        InterfaceLevelResource eth0 = new InterfaceLevelResource(node, "eth0");
        builder.withNumericAttribute(eth0, "mib2-interfaces", "ifInErrors", 0.0, AttributeType.COUNTER);
        builder.withNumericAttribute(eth0, "mib2-interfaces", "ifOutErrors", 0.0, AttributeType.COUNTER);
        builder.withNumericAttribute(eth0, "mib2-X-interfaces", "ifHCInOctets", 100.0, AttributeType.COUNTER);
        builder.withNumericAttribute(eth0, "mib2-X-interfaces", "ifHCOutOctets", 100.0, AttributeType.COUNTER);
        builder.withStringAttribute(eth0, "mib2-X-interfaces", "ifHighSpeed", "1000");
        InterfaceLevelResource eth1 = new InterfaceLevelResource(node, "eth1");
        builder.withNumericAttribute(eth1, "mib2-interfaces", "ifInErrors", 0.0, AttributeType.COUNTER);
        builder.withNumericAttribute(eth1, "mib2-interfaces", "ifOutErrors", 0.0, AttributeType.COUNTER);
        builder.withNumericAttribute(eth1, "mib2-X-interfaces", "ifHCInOctets", 100.0, AttributeType.COUNTER);
        builder.withNumericAttribute(eth1, "mib2-X-interfaces", "ifHCOutOctets", 100.0, AttributeType.COUNTER);
        builder.withStringAttribute(eth1, "mib2-X-interfaces", "ifHighSpeed", "1000");
        builder.build().visit(persister);
        stats.dumpCache();

        Assert.assertEquals(1, registry.getGauges().get("evaluate.nodes").getValue());
        Assert.assertEquals(2, registry.getGauges().get("evaluate.resources").getValue());
        Assert.assertEquals(4, registry.getGauges().get("evaluate.groups").getValue());
        Assert.assertEquals(8, registry.getGauges().get("evaluate.numeric-attributes").getValue());
        Assert.assertEquals(2, registry.getGauges().get("evaluate.string-attributes").getValue());
        Assert.assertEquals(8, registry.getMeters().get("evaluate.samples").getCount());
    }

