    /**
     * Instantiates a new evaluate statistics.
     *
     * @param registry the registry
     */
    public EvaluateStats(MetricRegistry registry) {
        final Gauge<Integer> node = () -> { return nodeMap.size(); };
        registry.register(MetricRegistry.name("evaluate", "node"), node);

        final Gauge<Integer> resources = () -> { return resourceMap.size(); };
        registry.register(MetricRegistry.name("evaluate", "resources"), resources);

        final Gauge<Integer> numericAttributes = () -> { return numericAttributeMap.size(); };
        registry.register(MetricRegistry.name("evaluate", "numeric-attributes"), numericAttributes);

        final Gauge<Integer> stringAttributes = () -> { return stringAttributeMap.size(); };
        registry.register(MetricRegistry.name("evaluate", "string-attributes"), stringAttributes);

        if (ResourceTypeUtils.isStoreByGroup()) {
            final Gauge<Integer> groups = () -> { return groupMap.size(); };
            registry.register(MetricRegistry.name("evaluate", "groups"), groups);
        }

        samplesMeter = registry.meter(MetricRegistry.name("evaluate", "samples"));
    }

