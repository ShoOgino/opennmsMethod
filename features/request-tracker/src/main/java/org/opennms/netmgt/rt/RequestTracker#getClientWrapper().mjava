    public synchronized HttpClientWrapper getClientWrapper() {
        if (m_clientWrapper == null) {
            m_clientWrapper = HttpClientWrapper.create()
                    .setSocketTimeout(m_timeout)
                    .setConnectionTimeout(m_timeout)
                    .setRetries(m_retries)
                    .useBrowserCompatibleCookies()
                    .dontReuseConnections();

            final HttpPost post = new HttpPost(m_baseURL + "/REST/1.0/user/" + m_user);
            final List<NameValuePair> params = new ArrayList<NameValuePair>();
            params.add(new BasicNameValuePair("user", m_user));
            params.add(new BasicNameValuePair("pass", m_password));

            try {
                UrlEncodedFormEntity entity = new UrlEncodedFormEntity(params, "UTF-8");
                post.setEntity(entity);

                final CloseableHttpResponse response = m_clientWrapper.execute(post);
                int responseCode = response.getStatusLine().getStatusCode();
                if (responseCode != HttpStatus.SC_OK) {
                    throw new RequestTrackerException("Received a non-200 response code from the server: " + responseCode);
                } else {
                    if (response.getEntity() != null) {
                        EntityUtils.consume(response.getEntity());
                    }
                    LOG.warn("got user session for username: {}", m_user);
                }
            } catch (final UnsupportedEncodingException e) {
                LOG.warn("unsupported encoding exception for UTF-8 -- WTF?!", e);
            } catch (final Exception e) {
                LOG.warn("Unable to get session (by requesting user details)", e);
            } finally {
                m_clientWrapper.closeResponse();
            }
        }
        return m_clientWrapper;
    }

