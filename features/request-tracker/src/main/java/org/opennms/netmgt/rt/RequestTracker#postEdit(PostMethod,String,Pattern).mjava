    public Long postEdit(final PostMethod post, final String content, final Pattern pattern) throws RequestTrackerException {
        String rtTicketNumber = null;

        NameValuePair[] ticketCreateParams = {
            new NameValuePair("content", content),
            new NameValuePair("user", m_user),
            new NameValuePair("pass", m_password)
        };

        post.setRequestBody(ticketCreateParams);

        try {
            final int responseCode = getClient().executeMethod(post);
            if (responseCode != HttpStatus.SC_OK) {
                throw new RequestTrackerException("Received a non-200 response code from the server: " + responseCode);
            } else {
                final String in = post.getResponseBodyAsString();
                final Matcher matcher = pattern.matcher(in);
                if (matcher.find()) {
                    rtTicketNumber = matcher.group(1);
                } else {
                    LogUtils.debugf(this, "did not get ticket ID from response when posting to %s", post.toString());
                }
            }
        } catch (final Exception e) {
            LogUtils.errorf(this, e, "Failure attempting to update ticket.");
            throw new RequestTrackerException(e);
        } finally {
            post.releaseConnection();
        }

        if (rtTicketNumber == null) {
            return null;
        }

        return Long.valueOf(rtTicketNumber);
    }

