	public void testLoadContext() throws Throwable {

		DaoTestConfigBean bean = new DaoTestConfigBean();
		bean.afterPropertiesSet();

		MockDatabase db = new MockDatabase(true);
		DataSourceFactory.setInstance(db);

		servletContext = new MockServletContext("file:src/main/webapp");

		servletContext.addInitParameter(
				"contextConfigLocation", 
				"classpath:/META-INF/opennms/applicationContext-commonConfigs.xml " +
				"classpath:/META-INF/opennms/applicationContext-dao.xml " +
				"classpath*:/META-INF/opennms/component-service.xml " +
				"classpath*:/META-INF/opennms/component-dao.xml " +
				"/WEB-INF/applicationContext-svclayer.xml " +
				"/WEB-INF/applicationContext-spring-security.xml "
		);

		servletContext.addInitParameter("parentContextKey", "daoContext");

		ServletContextEvent e = new ServletContextEvent(servletContext);
		contextListener = new ContextLoaderListener();
		contextListener.contextInitialized(e);

		servletContext.setContextPath(contextPath);
		servletConfig = new MockServletConfig(servletContext, "dispatcher");    
		servletConfig.addInitParameter("com.sun.jersey.config.property.resourceConfigClass", "com.sun.jersey.api.core.PackagesResourceConfig");
		servletConfig.addInitParameter("com.sun.jersey.config.property.packages", "org.opennms.web.rest");

		try {

			MockFilterConfig filterConfig = new MockFilterConfig(servletContext, "openSessionInViewFilter");
			filter = new OpenSessionInViewFilter();
			filter.init(filterConfig);
		} catch (ServletException se) {
			throw se.getRootCause();
		}
	}

