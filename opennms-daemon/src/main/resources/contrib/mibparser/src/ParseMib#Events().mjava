// handle NOTIFICATION-TPYE
// at this time it just mostly skips the info here
// it would be easy to walk the trees later and output xml
// for the traps
  static final public void Events() throws ParseException {
                 /*@bgen(jjtree) Events */
  SimpleNode jjtn000 = new SimpleNode(JJTEVENTS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
    try {
      jj_consume_token(IDENTIFIER);
      if (jj_2_78(3)) {
        jj_consume_token(NOTIFICATION_TYPE_TOKEN);
      } else if (jj_2_79(3)) {
        jj_consume_token(NOTIFICATION_GROUP_TOKEN);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      label_14:
      while (true) {
        if (jj_2_80(3)) {
          ;
        } else {
          break label_14;
        }
        if (jj_2_85(3)) {
          jj_consume_token(STATUS);
          jj_consume_token(IDENTIFIER);
        } else if (jj_2_86(3)) {
          jj_consume_token(DESCRIPTION);
          jj_consume_token(DESCRIPTOR_LITERAL);
        } else if (jj_2_87(3)) {
          jj_consume_token(OBJECTS_TOKEN);
          jj_consume_token(LBRACE);
          label_15:
          while (true) {
            jj_consume_token(IDENTIFIER);
            if (jj_2_81(3)) {
              jj_consume_token(COMMA);
            } else {
              ;
            }
            if (jj_2_82(3)) {
              ;
            } else {
              break label_15;
            }
          }
          jj_consume_token(RBRACE);
        } else if (jj_2_88(3)) {
          jj_consume_token(NOTIFICATIONS_TOKEN);
          jj_consume_token(LBRACE);
          label_16:
          while (true) {
            jj_consume_token(IDENTIFIER);
            if (jj_2_83(3)) {
              jj_consume_token(COMMA);
            } else {
              ;
            }
            if (jj_2_84(3)) {
              ;
            } else {
              break label_16;
            }
          }
          jj_consume_token(RBRACE);
        } else if (jj_2_89(3)) {
          jj_consume_token(ASSIGN);
          jj_consume_token(LBRACE);
          jj_consume_token(IDENTIFIER);
          jj_consume_token(INTEGER_LITERAL);
          jj_consume_token(RBRACE);
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
    }
  }

