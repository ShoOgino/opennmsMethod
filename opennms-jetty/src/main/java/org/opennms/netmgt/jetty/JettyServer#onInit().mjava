    /** {@inheritDoc} */
    @Override
    protected void onInit() {
        Properties p = System.getProperties();
        
        File homeDir = new File(p.getProperty("opennms.home"));
        File webappsDir = new File(homeDir, "jetty-webapps");

        m_server = new Server();
        Connector connector = new SelectChannelConnector();
        Integer port = Integer.getInteger("org.opennms.netmgt.jetty.port", m_port);
        connector.setPort(port);

        String host = System.getProperty("org.opennms.netmgt.jetty.host");
        if (host != null) {
            connector.setHost(host);
        }
        
        Integer requestHeaderSize = Integer.getInteger("org.opennms.netmgt.jetty.requestHeaderSize");
        if(requestHeaderSize != null) {
            connector.setRequestHeaderSize(requestHeaderSize);
        }

        m_server.addConnector(connector);

        Integer ajp_port = Integer.getInteger("org.opennms.netmgt.jetty.ajp-port");
        if (ajp_port != null) {
            Ajp13SocketConnector ajpConnector = new Ajp13SocketConnector();
            ajpConnector.setPort(ajp_port);
            // Apache AJP connector freaks out with anything larger
            ajpConnector.setHeaderBufferSize(8096);
            m_server.addConnector(ajpConnector);
        }
        
        Integer https_port = Integer.getInteger("org.opennms.netmgt.jetty.https-port");
        if (https_port != null) {
            
            String keyStorePath = System.getProperty("org.opennms.netmgt.jetty.https-keystore", homeDir+File.separator+"etc"+File.separator+"examples"+File.separator+"jetty.keystore");
            String keyStorePassword = System.getProperty("org.opennms.netmgt.jetty.https-keystorepassword", "changeit");
            String keyManagerPassword = System.getProperty("org.opennms.netmgt.jetty.https-keypassword", "changeit");

            SslContextFactory contextFactory = new SslContextFactory(keyStorePath);
            contextFactory.setKeyStorePassword(keyStorePassword);
            contextFactory.setKeyManagerPassword(keyManagerPassword);

        	excludeCipherSuites(contextFactory, https_port);

            SslSocketConnector sslConnector = new SslSocketConnector(contextFactory);
            sslConnector.setPort(https_port);

        	String httpsHost = System.getProperty("org.opennms.netmgt.jetty.https-host");
    		if (httpsHost != null) {
    			sslConnector.setHost(httpsHost);
    		}
    		m_server.addConnector(sslConnector);
        }
        
        HandlerCollection handlers = new HandlerCollection();

        if (webappsDir.exists()) {
            File rootDir = null;
            for (File file: webappsDir.listFiles()) {
                if (file.isDirectory()) {
                    String contextPath;
                    if ("ROOT".equals(file.getName())) {
                        // Defer this to last to avoid nested context order problems
                        rootDir = file;
                        continue;
                    } else {
                        contextPath = "/" + file.getName();
                    }
                    addContext(handlers, file, contextPath);
                }
            }
            if (rootDir != null) {
                // If we deferred a ROOT context, handle that now
                addContext(handlers, rootDir, "/");
            }
        }

        m_server.setHandler(handlers);
        m_server.setStopAtShutdown(true);
    }

