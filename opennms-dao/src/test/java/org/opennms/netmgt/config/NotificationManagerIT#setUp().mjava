    @Before
    public void setUp() throws Exception {
        // Initialize Filter DAO
        DatabaseSchemaConfigFactory.init();
        JdbcFilterDao jdbcFilterDao = new JdbcFilterDao();
        jdbcFilterDao.setDataSource(m_dataSource);
        jdbcFilterDao.setDatabaseSchemaConfigFactory(DatabaseSchemaConfigFactory.getInstance());
        jdbcFilterDao.afterPropertiesSet();
        FilterDaoFactory.setInstance(jdbcFilterDao);

        m_configManager = new MockNotifdConfigManager(ConfigurationTestUtils.getConfigForResourceWithReplacements(this, "notifd-configuration.xml"));
        m_notificationManager = new NotificationManagerIT.NotificationManagerImpl(m_configManager, m_dataSource);

        OnmsNode node;
        OnmsIpInterface ipInterface;
        OnmsMonitoredService service;
        OnmsServiceType serviceType;

        OnmsCategory category1 = new OnmsCategory("CategoryOne");
        m_categoryDao.save(category1);
        OnmsCategory category2 = new OnmsCategory("CategoryTwo");
        m_categoryDao.save(category2);
        OnmsCategory category3 = new OnmsCategory("CategoryThree");
        m_categoryDao.save(category3);
        OnmsCategory category4 = new OnmsCategory("CategoryFour");
        m_categoryDao.save(category4);
        m_categoryDao.flush();

        serviceType = new OnmsServiceType("ICMP");
        m_serviceTypeDao.save(serviceType);

        serviceType = new OnmsServiceType("HTTP");
        m_serviceTypeDao.save(serviceType);

        // node 1
        node = new OnmsNode(m_locationDao.getDefaultLocation(), "node 1");
        node.addCategory(category1);
        node.addCategory(category2);
        node.addCategory(category3);
        node1 = node;

        ipInterface = new OnmsIpInterface(addr("192.168.1.1"), node);
        ipInterfaceOnNode1 = ipInterface;
        service = new OnmsMonitoredService(ipInterface, serviceType);
        m_nodeDao.save(node);

        // node 2
        node = new OnmsNode(m_locationDao.getDefaultLocation(), "node 2");
        node.addCategory(category1);
        node.addCategory(category2);
        node.addCategory(category4);
        m_nodeDao.save(node);

        ipInterface = new OnmsIpInterface(addr("192.168.1.1"), node);
        m_ipInterfaceDao.save(ipInterface);
        service = new OnmsMonitoredService(ipInterface, serviceType);
        m_serviceDao.save(service);

        ipInterface = new OnmsIpInterface(addr("0.0.0.0"), node);
        m_ipInterfaceDao.save(ipInterface);

        // node 3
        node = new OnmsNode(m_locationDao.getDefaultLocation(), "node 3");
        m_nodeDao.save(node);

        ipInterface = new OnmsIpInterface(addr("192.168.1.2"), node);
        m_ipInterfaceDao.save(ipInterface);
        service = new OnmsMonitoredService(ipInterface, serviceType);
        m_serviceDao.save(service);

        // node 4 has an interface, but no services
        node = new OnmsNode(m_locationDao.getDefaultLocation(), "node 4");
        m_nodeDao.save(node);

        ipInterface = new OnmsIpInterface(addr("192.168.1.3"), node);
        m_ipInterfaceDao.save(ipInterface);

        // node 5 has no interfaces
        node = new OnmsNode(m_locationDao.getDefaultLocation(), "node 5");
        m_nodeDao.save(node);

        m_nodeDao.flush();
        m_ipInterfaceDao.flush();
        m_serviceDao.flush();
        m_serviceTypeDao.flush();
        m_categoryDao.flush();
    }

