	@Test
	public void testPrefabPropertiesIncludeDirectoryReloadSingleReports()
			throws Exception {
			    File rootFile = m_fileAnticipator.tempFile("snmp-graph.properties");
			    File graphDirectory = m_fileAnticipator.tempDir("snmp-graph.properties.d");
			    File graphBits = m_fileAnticipator.tempFile(graphDirectory, "mib2.bits.properties");
			
			    m_outputStream = new FileOutputStream(rootFile);
			    m_writer = new OutputStreamWriter(m_outputStream, "UTF-8");
			    m_writer.write(s_baseIncludePrefab);
			    m_writer.close();
			    m_outputStream.close();
			    
			    graphDirectory.mkdir();
			    m_outputStream = new FileOutputStream(graphBits);
			    m_writer = new OutputStreamWriter(m_outputStream, "UTF-8");
			    m_writer.write(s_separateBitsGraph);
			    m_writer.close();
			    m_outputStream.close();
			    
			    HashMap<String, Resource> perfConfig = new HashMap<String, Resource>();
			    perfConfig.put("performance", new FileSystemResource(rootFile));
			    PropertiesGraphDao dao = createPropertiesGraphDao(perfConfig, s_emptyMap);
			                
			    PrefabGraph graph = dao.getPrefabGraph("mib2.bits");
			    assertNotNull("could not get mib2.bits report", graph);
			    assertEquals("ifSpeed", graph.getExternalValues()[0]);
			
			    Thread.sleep(1100);
			
			    m_outputStream = new FileOutputStream(graphBits);
			    m_writer = new OutputStreamWriter(m_outputStream, "UTF-8");
			    m_writer.write(s_separateBitsGraph.replace("ifSpeed", "anotherExternalValue"));
			    m_writer.close();
			    m_outputStream.close();
			    
			    graph = dao.getPrefabGraph("mib2.bits");
			    assertNotNull("could not get mib2.bits report after rewriting config file", graph);
			    assertEquals("anotherExternalValue", graph.getExternalValues()[0]);
			}

