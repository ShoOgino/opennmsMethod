    @Test
    public void testSaveWithMetaData() {
        final int nodeId = m_transTemplate.execute((ts) -> {
            OnmsNode node = new OnmsNode(m_locationDao.getDefaultLocation(), "SomeNode");
            node.addMetaData("ctx", "key", "val");
            getNodeDao().save(node);
            getNodeDao().flush();

            return node.getId();
        });

        m_transTemplate.execute((ts) -> {
            OnmsNode node = getNodeDao().get(nodeId);
            node.addMetaData("ctx", "key", "val");
            getNodeDao().update(node);
            getNodeDao().flush();

            return node.getId();
        });

        m_transTemplate.execute((ts) -> {
            OnmsNode node = getNodeDao().get(nodeId);
            assertEquals(1, node.getMetaData().size());
            assertEquals("ctx", node.getMetaData().iterator().next().getContext());
            assertEquals("key", node.getMetaData().iterator().next().getKey());
            assertEquals("val", node.getMetaData().iterator().next().getValue());
            return null;
        });

        m_transTemplate.execute((ts) -> {
            OnmsNode node = getNodeDao().get(nodeId);
            node.setMetaData(Arrays.asList(new OnmsMetaData("ctx", "foo", "bar")));
            getNodeDao().update(node);
            getNodeDao().flush();

            return node.getId();
        });

        m_transTemplate.execute((ts) -> {
            OnmsNode node = getNodeDao().get(nodeId);
            assertEquals(1, node.getMetaData().size());
            assertEquals("ctx", node.getMetaData().iterator().next().getContext());
            assertEquals("foo", node.getMetaData().iterator().next().getKey());
            assertEquals("bar", node.getMetaData().iterator().next().getValue());
            return null;
        });
    }

