    @Test
    public void children() throws IOException {
        // Children are empty when the folder is missing
        assertEquals(0, m_fsResourceStorageDao.children(ResourcePath.get("should", "not", "exist")).size());

        // Children are empty when the folder is emtpy
        File folder = tempFolder.newFolder("a");
        assertEquals(0, m_fsResourceStorageDao.children(ResourcePath.get("a")).size());

        // Children are empty when the folder only contains an RRD file
        File rrd = new File(folder, "ds" + RrdUtils.getExtension());
        rrd.createNewFile();
        assertEquals(0, m_fsResourceStorageDao.children(ResourcePath.get("a")).size());
        assertTrue(rrd.delete());

        // Children are empty when the folder only contains an empty sub-folder
        File subFolder = tempFolder.newFolder("a", "b");
        assertEquals(0, m_fsResourceStorageDao.children(ResourcePath.get("a")).size());

        // Child exists when the sub-folder contains an RRD file
        rrd = new File(subFolder, "ds" + RrdUtils.getExtension());
        rrd.createNewFile();
        Set<ResourcePath> children = m_fsResourceStorageDao.children(ResourcePath.get("a"));
        assertEquals(1, children.size());
        assertEquals(ResourcePath.get("a", "b"), children.iterator().next());

        // Same call but specifying the depth
        children = m_fsResourceStorageDao.children(ResourcePath.get("a"), 1);
        assertEquals(1, children.size());
        assertEquals(ResourcePath.get("a", "b"), children.iterator().next());

        // No children when depth is 0
        assertEquals(0, m_fsResourceStorageDao.children(ResourcePath.get("a"), 0).size());
        assertTrue(rrd.delete());
    }

