    @Test
    @Transactional
    public void testAddStickyMemoToExistingAlarm() {
        OnmsEvent event = new OnmsEvent();
        event.setEventLog("Y");
        event.setEventDisplay("Y");
        event.setEventCreateTime(new Date());
        event.setDistPoller(m_distPollerDao.whoami());
        event.setEventTime(new Date());
        event.setEventSeverity(new Integer(7));
        event.setEventUei("uei://org/opennms/test/EventDaoTest");
        event.setEventSource("test");
        m_eventDao.save(event);

        OnmsNode node = m_nodeDao.findAll().iterator().next();

        OnmsAlarm alarm = new OnmsAlarm();

        alarm.setNode(node);
        alarm.setUei(event.getEventUei());
        alarm.setSeverityId(event.getEventSeverity());
        alarm.setFirstEventTime(event.getEventTime());
        alarm.setLastEvent(event);
        alarm.setCounter(1);
        alarm.setDistPoller(m_distPollerDao.whoami());
        alarm.setReductionKey("fristReductionKey");

        m_alarmDao.save(alarm);
        // It works we're so smart! hehe

        OnmsAlarm newAlarm = m_alarmDao.load(alarm.getId());
        assertEquals("uei://org/opennms/test/EventDaoTest", newAlarm.getUei());
        assertEquals(alarm.getLastEvent().getId(), newAlarm.getLastEvent().getId());

        final OnmsMemo memo = new OnmsMemo();
        memo.setBody("Call me Ishmael...");
        memo.setAuthor("Herman Melville");
        Date memoCreation = new Date(); 
        memo.setCreated(memoCreation);
        newAlarm.setStickyMemo(memo);

        m_alarmDao.update(newAlarm);
        m_alarmDao.flush();

        assertNotNull(newAlarm.getStickyMemo().getId());        
        assertNotNull(newAlarm.getStickyMemo().getCreated());
        assertNotNull(newAlarm.getStickyMemo().getAuthor());
        assertNotNull(newAlarm.getStickyMemo().getBody());

        assertNotNull(alarm.getStickyMemo().getId());
        assertNotNull(alarm.getStickyMemo().getCreated());
        assertNotNull(alarm.getStickyMemo().getAuthor());
        assertNotNull(alarm.getStickyMemo().getBody());
    }

