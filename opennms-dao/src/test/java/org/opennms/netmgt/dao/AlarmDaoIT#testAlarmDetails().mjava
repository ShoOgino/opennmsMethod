	@Test
	@Transactional
	public void testAlarmDetails() {
		// Create some alarm without any details
		OnmsNode node = m_nodeDao.findAll().iterator().next();
		OnmsAlarm alarm = new OnmsAlarm();
		alarm.setNode(node);
		alarm.setUei(EventConstants.NODE_DOWN_EVENT_UEI);
		alarm.setSeverityId(OnmsSeverity.CLEARED.getId());
		alarm.setCounter(1);
		alarm.setDistPoller(m_distPollerDao.whoami());
		m_alarmDao.save(alarm);

		// Retrieve it from the database and verify that there are no details
		OnmsAlarm alarmFromDb = m_alarmDao.get(alarm.getId());
		if (alarmFromDb.getDetails() == null) {
			alarmFromDb.setDetails(new HashMap<>());
		}
		assertThat(alarmFromDb.getDetails().entrySet(), empty());

		// Now add some properties
		alarmFromDb.getDetails().put("k1", "v1");
		alarmFromDb.getDetails().put("k2", "v2");
		alarmFromDb.getDetails().put("k3", null);
		m_alarmDao.update(alarmFromDb);
		m_alarmDao.flush();

		// Retrieve it back from the database and verify the properties
		alarmFromDb = m_alarmDao.get(alarm.getId());
		assertThat(alarmFromDb.getDetails().entrySet(), hasSize(3));
		assertThat(alarmFromDb.getDetails().get("k1"), equalTo("v1"));
		assertThat(alarmFromDb.getDetails().get("k2"), equalTo("v2"));
		assertThat(alarmFromDb.getDetails().get("k3"), nullValue());
	}

