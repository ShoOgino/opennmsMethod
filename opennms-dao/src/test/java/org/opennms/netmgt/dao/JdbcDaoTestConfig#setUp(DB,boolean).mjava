    protected PlatformTransactionManager setUp(DB db, boolean createDb) throws Exception {
        m_createDb = createDb;
        
        class ReaderEater extends Thread {
            BufferedReader m_reader;

            ReaderEater(BufferedReader r) {
                m_reader = r;
            }
            
            public BufferedReader getReader() {
                return m_reader;
            }

            public void run() {
                try {
                    while (m_reader.readLine() != null) {
                    }
                } catch (IOException e) {
                    e.printStackTrace();  
                }
            }
        }

        
        if (createDb) {
        	
        	Resource resource = new ClassPathResource("create.sql");
        	File createSql = resource.getFile();
        	
            String cmd = System.getProperty("psql.command", "psql") ;
            System.err.println("psql.command = "+cmd);
            cmd = cmd+" test -U opennms -f "+createSql.getAbsolutePath();

            System.err.println("Executing: "+cmd);
            Process p = Runtime.getRuntime().exec(cmd);
            ReaderEater inputEater = new ReaderEater(new BufferedReader(new InputStreamReader(p.getInputStream())));
            ReaderEater errorEater = new ReaderEater(new BufferedReader(new InputStreamReader(p.getErrorStream())));
            inputEater.start();
            errorEater.start();
            p.waitFor();
            inputEater.getReader().close();
            errorEater.getReader().close();
            
            System.err.println("Got an exitValue of "+p.exitValue());
            p.destroy();
        }
                
        //m_dataSource = db.getDataSource();
        m_dataSource = db.getPoolingDataSource();
        
        // initialize the factory classs and register them with the Cache
        Cache.registerFactories(m_dataSource);
        
        return new DataSourceTransactionManager(m_dataSource);
    }

