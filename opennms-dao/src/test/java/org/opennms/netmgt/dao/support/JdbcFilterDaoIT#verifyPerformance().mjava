    // Verifies that if a bunch of interfaces exists, checking if an ip address is valid should be faster
    // than retrieving all interfaces.
    // See HZN-1161 for more details.
    @Test
    public void verifyPerformance() {
        // Create a bunch of interfaces
        final OnmsNode node1 = m_populator.getNode1();
        final IPAddressRange ipAddresses = new IPAddressRange("10.10.0.0", "10.10.255.255");
        final Iterator<IPAddress> iterator = ipAddresses.iterator();
        while (iterator.hasNext()) {
            IPAddress address = iterator.next();
            OnmsIpInterface ipInterface = new OnmsIpInterface();
            ipInterface.setNode(node1);
            ipInterface.setIpAddress(address.toInetAddress());
            m_interfaceDao.save(ipInterface);
        }
        final int numberOfInterfaces = m_interfaceDao.countAll();
        assertThat(numberOfInterfaces, greaterThan(255 * 255));

        // verify
        assertThat(m_dao.getActiveIPAddressList("IPADDR != '0.0.0.0'"), Matchers.hasSize(numberOfInterfaces));
        assertThat(m_dao.isValid("10.10.0.1", "IPADDR != '0.0.0.0'"), is(true));
    }

