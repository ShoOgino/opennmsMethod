    @Test
    @Transactional
    public void testDuplicate() throws Exception {
        final OnmsMonitoringLocation defaultLocation = m_monitoringLocationDao.getDefaultLocation();

        final InetAddress theAddress = InetAddress.getByName("1.2.3.4");

        Assert.assertNotNull(m_cache);

        final OnmsNode node1 = new OnmsNode(defaultLocation,"node1");
        final OnmsIpInterface iface1 = new OnmsIpInterface();
        iface1.setIpAddress(theAddress);
        iface1.setIsSnmpPrimary(PrimaryType.PRIMARY);
        node1.addIpInterface(iface1);
        final int nodeId1 = m_databasePopulator.getNodeDao().save(node1);

        m_cache.setNodeId(defaultLocation.getLocationName(), iface1.getIpAddress(), node1.getId());

        Assert.assertEquals(nodeId1, (int) m_cache.getFirstNodeId(defaultLocation.getLocationName(), theAddress).get());

        final OnmsNode node2 = new OnmsNode(defaultLocation,"node2");
        final OnmsIpInterface iface2 = new OnmsIpInterface();
        iface2.setIpAddress(theAddress);
        iface2.setIsSnmpPrimary(PrimaryType.PRIMARY);
        node2.addIpInterface(iface2);
        final int nodeId2 = m_databasePopulator.getNodeDao().save(node2);

        m_cache.setNodeId(defaultLocation.getLocationName(), iface2.getIpAddress(), node2.getId());

        Assert.assertEquals(nodeId1, (int) m_cache.getFirstNodeId(defaultLocation.getLocationName(), theAddress).get());

        m_cache.removeNodeId(defaultLocation.getLocationName(), theAddress, nodeId1);

        Assert.assertEquals(nodeId2, (int) m_cache.getFirstNodeId(defaultLocation.getLocationName(), theAddress).get());
    }

