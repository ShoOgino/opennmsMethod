    public void testIncludeDirectoryIncludeMissingReportId() throws Exception {
        //We're expecting an ERROR log, and will be most disappointed if
        // we don't get it.  Turn off the default check in runTest
        testSpecificLoggingTest = true;
        /*
         * We're not going to use the anticipator functionality, but it's
         * handy for handling temporary directories.
         */
        FileAnticipator fa = new FileAnticipator();

        try {
            File rootFile = fa.tempFile("snmp-graph.properties");
            File graphDirectory = fa.tempDir("snmp-graph.properties.d");
            File graphBits = fa.tempFile(graphDirectory,
                                         "mib2.bits.properties");

            Writer writer = new OutputStreamWriter(
                                                   new FileOutputStream(
                                                                        rootFile),
                                                   "UTF-8");
            writer.write(s_baseIncludePrefab);
            writer.close();

            graphDirectory.mkdir();
            writer = new OutputStreamWriter(new FileOutputStream(graphBits),
                                            "UTF-8");
            writer.write(s_separateBitsGraph.replace("report.id",
                                                     "report.noid"));
            writer.close();

            HashMap<String, Resource> perfConfig = new HashMap<String, Resource>();
            perfConfig.put("performance", new FileSystemResource(rootFile));
            PropertiesGraphDao dao = createPropertiesGraphDao(perfConfig,
                                                              s_emptyMap);

            try {
                PrefabGraph graph = dao.getPrefabGraph("mib2.bits");
                fail("Shouldn't have gotten here; expecting an exception fetching "+graph);
            } catch (ObjectRetrievalFailureException e) {
                //Expected; no such graph
            }

            //There should have been an error log about the reload failure (but no exception) 
            MockLogAppender.assertLogAtLevel(Level.ERROR);

        } finally {
            fa.deleteExpected();
            fa.tearDown();
        }
    }

