    public void testPrefabPropertiesReloadBad() throws Exception {
        MockLogAppender.setupLogging(false, "DEBUG");
        
        File f = m_fileAnticipator.tempFile("snmp-graph.properties");

        m_outputStream = new FileOutputStream(f);
		m_writer = new OutputStreamWriter(m_outputStream, "UTF-8");
        m_writer.write(s_prefab);
        m_writer.close();
        m_outputStream.close();

        HashMap<String, Resource> perfConfig = new HashMap<String, Resource>();
        perfConfig.put("performance", new FileSystemResource(f));
        PropertiesGraphDao dao = createPropertiesGraphDao(perfConfig, s_emptyMap);
        PrefabGraphTypeDao type = dao.findPrefabGraphTypeDaoByName("performance");
        assertNotNull("could not get performance prefab graph type", type);
        
        assertNotNull("could not get mib2.bits report", type.getQuery("mib2.bits"));
        assertNotNull("could not get mib2.discards report", type.getQuery("mib2.discards"));

        Thread.sleep(1100);

        m_outputStream = new FileOutputStream(f);
        m_writer = new OutputStreamWriter(m_outputStream, "UTF-8");
        // Don't include the reports line at all so we get an error
        String noReports = s_prefab.replace("reports=mib2.HCbits, mib2.bits, mib2.discards", "");
        m_writer.write(noReports);
        m_writer.close();
        m_outputStream.close();
        
        type = dao.findPrefabGraphTypeDaoByName("performance");
        LoggingEvent[] events = MockLogAppender.getEvents();
        assertNotNull("logged event list was null", events);
        assertEquals("should only have received two logged events", 2, events.length);
        assertEquals("should have received an ERROR event" + events[0], Level.ERROR, events[0].getLevel());
        assertEquals("should have received an INFO event" + events[1], Level.INFO, events[1].getLevel());
        MockLogAppender.resetEvents();

        assertNotNull("could not get performance prefab graph type after rewriting config file", type);
        assertNotNull("could not get mib2.bits report after rewriting config file", type.getQuery("mib2.bits"));
        
        //Expecting the same events again, as the individual graph reload attempts to re-read the config file
        events = MockLogAppender.getEvents();
        assertNotNull("logged event list was null", events);
        assertEquals("should only have received two logged events", 2, events.length);
        assertEquals("should have received an ERROR event" + events[0], Level.ERROR, events[0].getLevel());
        assertEquals("should have received an INFO event" + events[1], Level.INFO, events[1].getLevel());
        MockLogAppender.resetEvents();
        
        assertNotNull("could not get mib2.discards report after rewriting config file", type.getQuery("mib2.discards"));
        //And again, same events
        events = MockLogAppender.getEvents();
        assertNotNull("logged event list was null", events);
        assertEquals("should only have received two logged events", 2, events.length);
        assertEquals("should have received an ERROR event" + events[0], Level.ERROR, events[0].getLevel());
        assertEquals("should have received an INFO event" + events[1], Level.INFO, events[1].getLevel());
        MockLogAppender.resetEvents();
    }

