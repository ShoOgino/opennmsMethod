    /**
     * Test find entity.
     */
    @Test
    @Transactional
    public void testEntityCycle() {
        HwEntityAttributeType ram = new HwEntityAttributeType(".1.3.6.1.4.1.9.9.195.1.1.1.1", "ram", "integer");
        m_hwEntityAttributeTypeDao.save(ram);
        m_hwEntityAttributeTypeDao.flush();

        OnmsNode node = getNode();
        Assert.assertNotNull(node);
        Assert.assertNotNull(node.getId());

        OnmsHwEntity root = new OnmsHwEntity();
        root.setEntPhysicalIndex(1);
        root.setEntPhysicalClass("chassis");
        root.setEntPhysicalName("Chassis");

        OnmsHwEntity m1 = new OnmsHwEntity();
        m1.setEntPhysicalIndex(2);
        m1.setEntPhysicalClass("module");
        m1.setEntPhysicalName("M1");
        m1.addAttribute(ram, "4");

        OnmsHwEntity m2 = new OnmsHwEntity();
        m2.setEntPhysicalIndex(3);
        m2.setEntPhysicalClass("module");
        m2.setEntPhysicalName("M2");
        m2.addAttribute(ram, "2");

        root.addChildEntity(m1);
        root.addChildEntity(m2);
        Assert.assertNotNull(m1.getParent());
        Assert.assertNotNull(m2.getParent());

        root.setNode(node);
        Assert.assertNotNull(root.getNode());
        Assert.assertEquals(2, root.getChildren().size());

        // Test saving root entity
        m_hwEntityDao.saveOrUpdate(root);
        m_hwEntityDao.flush();

        // Test valid findRootByNodeId
        OnmsHwEntity e1 = m_hwEntityDao.findRootByNodeId(node.getId());
        Assert.assertNotNull(e1);
        Assert.assertNotNull(e1.getNode());
        Assert.assertEquals(e1.getNode().getId(), node.getId());
        Assert.assertEquals(2, e1.getChildren().size());
        Assert.assertEquals("chassis", e1.getEntPhysicalClass());
        OnmsHwEntity c = e1.getChildren().iterator().next();
        Assert.assertEquals("4", c.getAttributeValue("ram"));

        // Test invalid findRootByNodeId
        Assert.assertNull(m_hwEntityDao.findRootByNodeId(10000));

        // Test findEntityByIndex
        OnmsHwEntity e2 = m_hwEntityDao.findEntityByIndex(node.getId(), e1.getEntPhysicalIndex());
        Assert.assertTrue(e1.equals(e2));

        // Test findEntityByName
        OnmsHwEntity e3 = m_hwEntityDao.findEntityByName(node.getId(), e1.getEntPhysicalName());
        Assert.assertTrue(e1.equals(e3));

        // Test getAttributeValue
        Assert.assertEquals("Chassis", m_hwEntityDao.getAttributeValue(node.getId(), 1, "entPhysicalName"));
        Assert.assertEquals("4", m_hwEntityDao.getAttributeValue(node.getId(), 2, "ram"));
        Assert.assertEquals("chassis", m_hwEntityDao.getAttributeValue(node.getId(), "Chassis", "entPhysicalClass"));
        Assert.assertEquals("4", m_hwEntityDao.getAttributeValue(node.getId(), "~^M1", "ram"));

        // Test delete
        m_hwEntityDao.flush();
        m_hwEntityDao.delete(e2.getId());
        m_hwEntityDao.flush();
        Assert.assertNull(m_hwEntityDao.get(e2.getId()));
    }

