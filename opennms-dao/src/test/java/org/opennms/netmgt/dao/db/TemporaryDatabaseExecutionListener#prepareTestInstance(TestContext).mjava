	public void prepareTestInstance(final TestContext testContext) throws Exception {
		System.err.printf("TemporaryDatabaseExecutionListener.prepareTestInstance(%s)\n", testContext);
		final JUnitTemporaryDatabase jtd = findAnnotation(testContext);
		boolean useExisting = false;
		if (jtd != null && jtd.useExistingDatabase() != null) {
			useExisting = !jtd.useExistingDatabase().equals("");
		}

		final String dbName = useExisting ? jtd.useExistingDatabase() : getDatabaseName(testContext);
		m_database = (jtd == null ? new TemporaryDatabase(dbName, useExisting) : (jtd.tempDbClass()).getConstructor(String.class, Boolean.TYPE).newInstance(dbName, useExisting));
		m_database.setPopulateSchema(jtd == null ? true : (jtd.populate() && !useExisting));
		try {
			m_database.create();
		} catch (final Throwable e) {
			System.err.printf("TemporaryDatabaseExecutionListener.prepareTestInstance: error while creating database: %s\n", e.getMessage());
		}

		final LazyConnectionDataSourceProxy proxy = new LazyConnectionDataSourceProxy(m_database);
		DataSourceFactory.setInstance(proxy);
		System.err.printf("TemporaryDatabaseExecutionListener.prepareTestInstance(%s) prepared db %s\n", testContext, dbName);
	}

