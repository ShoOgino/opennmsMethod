    public void prepareTestInstance(TestContext testContext) throws Exception {
        System.err.printf("TemporaryDatabaseExecutionListener.prepareTestInstance(%s)\n", testContext);
        JUnitTemporaryDatabase jtd = findAnnotation(testContext);
        boolean useExisting = false;
        if (jtd != null && jtd.useExistingDatabase() != null) {
        	useExisting = !jtd.useExistingDatabase().equals("");
        }

        String dbName = useExisting ? jtd.useExistingDatabase() : getDatabaseName(testContext);
        m_database = (jtd == null ? new TemporaryDatabase(dbName, useExisting) : (jtd.tempDbClass()).getConstructor(String.class, Boolean.TYPE).newInstance(dbName, useExisting));
        m_database.setPopulateSchema(jtd == null? true : (jtd.populate() && !useExisting));
        try {
            m_database.create();
        } catch (Throwable e) {
            System.err.printf("TemporaryDatabaseExecutionListener.prepareTestInstance: error while creating database: %s\n", e.getMessage());
        }
        

        LazyConnectionDataSourceProxy proxy = new LazyConnectionDataSourceProxy(m_database);
        
        DataSourceFactory.setInstance(proxy);
        System.err.printf("TemporaryDatabaseExecutionListener.prepareTestInstance(%s) prepared db %s\n", testContext, dbName);
    }

