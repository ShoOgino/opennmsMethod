    public void testSnmpInterfaceNonUniqueKeys() throws Exception {
        getInstallerDb().createSequences();
        getInstallerDb().updatePlPgsql();
        getInstallerDb().addStoredProcedures();

        addTableFromSQL("distpoller");
        addTableFromSQL("node");
        addTableFromSQL("snmpinterface");
        executeSQL("drop index snmpinterface_nodeid_ifindex_unique_idx");
        
        executeSQL("INSERT INTO node ( nodeId, nodeCreateTime ) "
                   + "VALUES ( 1, now() )");

        // One test with identical entries
        executeSQL("INSERT INTO snmpInterface ( nodeID, snmpIfIndex ) "
                   + "VALUES ( 1, 1 )");
        executeSQL("INSERT INTO snmpInterface ( nodeID, snmpIfIndex ) "
                   + "VALUES ( 1, 1 )");
        
        // One with different different IPs
        executeSQL("INSERT INTO snmpInterface ( nodeID, snmpIfIndex ) "
                   + "VALUES ( 1, 1 )");
        executeSQL("INSERT INTO snmpInterface ( nodeID, snmpIfIndex ) "
                   + "VALUES ( 1, 1 )");
        
        ThrowableAnticipator ta = new ThrowableAnticipator();
        ta.anticipate(new Exception("Unique index "
                                    + "'snmpinterface_nodeid_ifindex_unique_idx' "
                                    + "cannot be added to table "
                                    + "'snmpinterface' because 4 rows are not "
                                    + "unique.  See the install guide for "
                                    + "details on how to correct this "
                                    + "problem.  You can use the following SQL "
                                    + "to see which rows are not unique:\n"
                                    + "SELECT * FROM snmpinterface WHERE ( "
                                    + "nodeID, snmpIfIndex ) IN ( SELECT "
                                    + "nodeID, snmpIfIndex FROM snmpinterface "
                                    + "GROUP BY nodeID, snmpIfIndex HAVING "
                                    + "count(nodeID) > 1 ORDER BY nodeID, "
                                    + "snmpIfIndex ) ORDER BY nodeID, "
                                    + "snmpIfIndex"));
        try {
            getInstallerDb().checkIndexUniqueness();
        } catch (Throwable t) {
            ta.throwableReceived(t);
        }
        ta.verifyAnticipated();
    }

