    public void testExceptionContainsFileNameUnmarshalResourceWithBadResource() throws MarshalException, ValidationException, FileNotFoundException, IOException {
        /*
         * We are going to attempt to unmarshal groups.xml with the wrong
         * class so we get a MarshalException and we can then test to see if the
         * file name is embedded in the exception.
         */
        boolean gotException = false;
        File file = ConfigurationTestUtils.getFileForConfigFile("groups.xml");
        try {
            CastorUtils.unmarshal(Userinfo.class, new FileSystemResource(file));
        } catch (MarshalException e) {
            String matchString = file.getAbsolutePath().replace('\\', '/');
            if (e.toString().contains(matchString)) {
                gotException = true;
            } else {
                AssertionFailedError ae = new AssertionFailedError("Got an exception, but not one containing the message we were expecting ('" + matchString + "'): " + e);
                ae.initCause(e);
                throw ae;
            }
        }
        
        if (!gotException) {
            fail("Did not get a MarshalException, but we were expecting one.");
        }
    }

