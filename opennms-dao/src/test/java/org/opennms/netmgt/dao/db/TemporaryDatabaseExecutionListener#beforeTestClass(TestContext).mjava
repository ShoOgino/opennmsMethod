	@Override
	public void beforeTestClass(final TestContext testContext) {
		JUnitTemporaryDatabase classJtd = testContext.getTestClass().getAnnotation(JUnitTemporaryDatabase.class);
		TemporaryDatabase classDs = (classJtd == null ? null : createNewDatabase(classJtd));
		if (classJtd != null && classJtd.reuseDatabase() == false) {
		    m_createNewDatabases = true;
		}
		for (Method method : testContext.getTestClass().getMethods()) {
			if (method != null) {
				JUnitTemporaryDatabase methodJtd = method.getAnnotation(JUnitTemporaryDatabase.class);
				boolean methodHasTest = method.getAnnotation(Test.class) != null;
				if (methodHasTest) {
					// If there is a method-specific annotation, use it to create the temporary database
					if (methodJtd != null) {
						// Create a new database based on the method-specific annotation
						m_databases.add(createNewDatabase(methodJtd));
					} else if (classJtd != null) {
						if (m_createNewDatabases) {
							// Create a new database based on the test class' annotation
							m_databases.add(createNewDatabase(classJtd));
						} else {
							// Reuse the database based on the test class' annotation
							m_databases.add(classDs);
						}
					}
				}
			}
		}
	}

