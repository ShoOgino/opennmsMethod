    /**
     * Load the context locations for this test if tests are enabled,
     * adding our own application context files to the list.  If tests are
     * not enabled, no beans will be loaded and no temporary database is
     * created.
     * 
     * This prepends
     * our overridable context file onto the front of the user-supplied list
     * and appends our non-overridable context file to the end of the list.
     * 
     * To enforce the ordering of context files and to ensure that our
     * non-overridable context is last, this method is marked final.
     * 
     * @see #CONTEXT_OVERRIDABLE
     * @see #CONTEXT_NON_OVERRIDABLE
     * @see org.springframework.test.AbstractSingleSpringContextTests#loadContextLocations(java.lang.String[])
     * @see PopulatedTemporaryDatabaseTestCase.isEnabled()
     */
    @Override
    protected final ConfigurableApplicationContext loadContextLocations(String[] locations) throws Exception {
        if (!PopulatedTemporaryDatabaseTestCase.isEnabled()) {
            /*
             * Disable dependency checking so we don't try to load any beans
             * and return an empty context list.  This ensures that no beans
             * are loaded, including the bean that creates our temporary
             * database.
             */
            setDependencyCheck(false);
            return super.loadContextLocations(new String[0]);
        }
        
        assertNotNull("config locations list cannot be null", locations);
        
        List<String> newLocations = new ArrayList<String>();
        newLocations.add(CONTEXT_OVERRIDABLE); 
        newLocations.addAll(Arrays.asList(locations));
        newLocations.add(CONTEXT_NON_OVERRIDABLE); 
        return super.loadContextLocations((String[]) newLocations.toArray(new String[0]));
    }

