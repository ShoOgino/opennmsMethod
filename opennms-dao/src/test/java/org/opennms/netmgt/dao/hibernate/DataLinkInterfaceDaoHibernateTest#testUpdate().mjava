    @Test
    @Transactional // why is this necessary?
    public void testUpdate() {
        // Create a new data link interface and save it.
        DataLinkInterface dli = new DataLinkInterface(m_databasePopulator.getNode4(), -1, m_databasePopulator.getNode1().getId(), 3, StatusType.UNKNOWN, new Date());
        dli.setLinkTypeId(101);
        dli.setSource("updatetest");
        m_dataLinkInterfaceDao.save(dli);
        m_dataLinkInterfaceDao.flush();

        m_dataLinkInterfaceDao.setStatusForNode(m_databasePopulator.getNode4().getId(), "updatetest",StatusType.DELETED);

        assertNotNull(m_dataLinkInterfaceDao.get(dli.getId()));

        DataLinkInterface dli2 = m_dataLinkInterfaceDao.findById(dli.getId());
        assertSame(dli, dli2);
        assertEquals(dli.getId(), dli2.getId());
        assertEquals(dli.getNode().getId(), dli2.getNode().getId());
        assertEquals(dli.getIfIndex(), dli2.getIfIndex());
        assertEquals(dli.getNodeParentId(), dli2.getNodeParentId());
        assertEquals(dli.getParentIfIndex(), dli2.getParentIfIndex());
        assertEquals(StatusType.DELETED, dli2.getStatus());
        assertEquals(dli.getLinkTypeId(), dli2.getLinkTypeId());
        assertEquals(dli.getLastPollTime(), dli2.getLastPollTime());
        assertEquals(dli.getSource(), "updatetest");
    }

