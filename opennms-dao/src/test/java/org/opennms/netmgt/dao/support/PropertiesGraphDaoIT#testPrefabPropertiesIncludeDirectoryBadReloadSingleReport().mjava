	/**
	 * Test that reloading a badly formatted single report doens't overwrite a previously functioning
	 * report.  
	 * 
	 * NB: It should still complain with an Error log.  Should there be an event as well?
	 * @throws Exception
	 */
	@Test
	public void testPrefabPropertiesIncludeDirectoryBadReloadSingleReport()
			throws Exception {
			    //We're expecting an ERROR log, and will be most disappointed if
			    // we don't get it.  Turn off the default check in runTest
			    m_testSpecificLoggingTest = true;
			    File rootFile = m_fileAnticipator.tempFile("snmp-graph.properties");
			    File graphDirectory = m_fileAnticipator.tempDir("snmp-graph.properties.d");
			    File graphBits = m_fileAnticipator.tempFile(graphDirectory, "mib2.bits.properties");
			
			    m_outputStream = new FileOutputStream(rootFile);
			    m_writer = new OutputStreamWriter(m_outputStream, "UTF-8");
			    m_writer.write(s_baseIncludePrefab);
			    m_writer.close();
			    m_outputStream.close();
			    
			    graphDirectory.mkdir();
			    m_outputStream = new FileOutputStream(graphBits);
			    m_writer = new OutputStreamWriter(m_outputStream, "UTF-8");
			    m_writer.write(s_separateBitsGraph);
			    m_writer.close();
			    m_outputStream.close();
			       
			    HashMap<String, Resource> perfConfig = new HashMap<String, Resource>();
			    perfConfig.put("performance", new FileSystemResource(rootFile));
			    PropertiesGraphDao dao = createPropertiesGraphDao(perfConfig, s_emptyMap);
			    
			    
			    PrefabGraph graph = dao.getPrefabGraph("mib2.bits");
			    assertNotNull("could not get mib2.bits report", graph);
			    assertEquals("ifSpeed", graph.getExternalValues()[0]);
			
			    Thread.sleep(1100);
			
			    m_outputStream = new FileOutputStream(graphBits);
			    m_writer = new OutputStreamWriter(m_outputStream, "UTF-8");
			    //Two changes:
			    // 1) Remove a required property; this should break the reading of the new file
			    // 2) Change the externalvalues attribute name; we shouldn't see that new name after the reload
			    m_writer.write(s_separateBitsGraph.replace("report.name", "report.fluggle").replace("ifSpeed", "anotherExternalValue"));
			    m_writer.close();
			    m_outputStream.close();
			    
			    graph = dao.getPrefabGraph("mib2.bits");
			    assertNotNull("could not get mib2.bits report after rewriting config file", graph);
			    assertEquals("ifSpeed", graph.getExternalValues()[0]);
			    
			}

