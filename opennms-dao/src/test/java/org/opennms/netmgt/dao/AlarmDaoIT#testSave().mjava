	@Test
	@Transactional
	public void testSave() {
		OnmsEvent event = new OnmsEvent();
		event.setEventLog("Y");
		event.setEventDisplay("Y");
		event.setEventCreateTime(new Date());
		event.setDistPoller(m_distPollerDao.load("localhost"));
		event.setEventTime(new Date());
		event.setEventSeverity(new Integer(7));
		event.setEventUei("uei://org/opennms/test/EventDaoTest");
		event.setEventSource("test");
		m_eventDao.save(event);

		OnmsNode node = m_nodeDao.findAll().iterator().next();

		OnmsAlarm alarm = new OnmsAlarm();

		alarm.setNode(node);
		alarm.setUei(event.getEventUei());
		alarm.setSeverityId(event.getEventSeverity());
		alarm.setFirstEventTime(event.getEventTime());
		alarm.setLastEvent(event);
		alarm.setCounter(1);
		alarm.setDistPoller(m_distPollerDao.load("localhost"));

		m_alarmDao.save(alarm);
		// It works we're so smart! hehe

		OnmsAlarm newAlarm = m_alarmDao.load(alarm.getId());
		assertEquals("uei://org/opennms/test/EventDaoTest", newAlarm.getUei());
		assertEquals(alarm.getLastEvent().getId(), newAlarm.getLastEvent().getId());

		Collection<OnmsAlarm> alarms;
		Criteria criteria = new Criteria(OnmsAlarm.class);
		criteria.addRestriction(new EqRestriction("node.id", node.getId()));
		alarms = m_alarmDao.findMatching(criteria);
		assertEquals(1, alarms.size());
		newAlarm = alarms.iterator().next();
		assertEquals("uei://org/opennms/test/EventDaoTest", newAlarm.getUei());
		assertEquals(alarm.getLastEvent().getId(), newAlarm.getLastEvent().getId());
	}

