	@Test
	@Transactional
	public void testOutages() {
		assertLoadAll(OnmsOutage.class, new EmptyChecker<OnmsOutage>() {

			@Override
			public void check(OnmsOutage entity) {
				assertNotNull("monitored service should not be null: " + entity.toString(), entity.getMonitoredService());
				assertNotNull("ip address should not be null: " + entity.toString(), entity.getIpAddress());
				assertNotNull("node ID should not be null: " + entity.toString(), entity.getNodeId());
				assertNotNull("service lost event should not be null: " + entity.toString(), entity.getServiceLostEvent());
				assertNotNull("service lost event UEI should not be null: " + entity.toString(), entity.getServiceLostEvent().getEventUei());
				if (entity.getIfRegainedService() != null) {
					assertNotNull("outage has ended (ifregainedservice) so service regained event should not be null: " + entity.toString(), entity.getServiceRegainedEvent());
					assertNotNull("outage has ended (ifregainedservice) so service regained event UEI should not be null: " + entity.toString(), entity.getServiceRegainedEvent().getEventUei());
				}
					
			}
			
		});
	}

