    /**
     * Test that individual graph files in an include directory are loaded as expected
     */
    @Test
    public void testBasicPrefabConfigDirectorySingleReports() throws IOException {
        File rootFile = m_fileAnticipator.tempFile("snmp-graph.properties");
        File graphDirectory = m_fileAnticipator.tempDir("snmp-graph.properties.d");
        
        File graphBits = m_fileAnticipator.tempFile(graphDirectory, "mib2.bits.properties");
        File graphHCbits = m_fileAnticipator.tempFile(graphDirectory, "mib2.HCbits.properties");
                    
        m_outputStream = new FileOutputStream(rootFile);
		m_writer = new OutputStreamWriter(m_outputStream, StandardCharsets.UTF_8);
        m_writer.write(s_baseIncludePrefab);
        m_writer.close();
        m_outputStream.close();
                    
        graphDirectory.mkdir();
        m_outputStream = new FileOutputStream(graphBits);
        m_writer = new OutputStreamWriter(m_outputStream, StandardCharsets.UTF_8);
        m_writer.write(s_separateBitsGraph);
        m_writer.close();
        m_outputStream.close();
        
        m_outputStream = new FileOutputStream(graphHCbits);
        m_writer = new OutputStreamWriter(m_outputStream, StandardCharsets.UTF_8);
        m_writer.write(s_separateHCBitsGraph);
        m_writer.close();
        m_outputStream.close();
           
        HashMap<String, Resource> prefabConfigs = new HashMap<String, Resource>();
        prefabConfigs.put("performance", new FileSystemResource(rootFile));

        PropertiesGraphDao dao = createPropertiesGraphDao(prefabConfigs, s_emptyMap);
        
        PrefabGraph mib2Bits = dao.getPrefabGraph("mib2.bits");
        assertNotNull(mib2Bits);
        assertEquals("mib2.bits", mib2Bits.getName());
        assertEquals("Bits In/Out", mib2Bits.getTitle());
        String columns1[] = {"ifInOctets","ifOutOctets"};
        Assert.assertArrayEquals(columns1, mib2Bits.getColumns());

        PrefabGraph mib2HCBits = dao.getPrefabGraph("mib2.HCbits");
        assertNotNull(mib2HCBits);
        assertEquals("mib2.HCbits", mib2HCBits.getName());
        assertEquals("Bits In/Out", mib2HCBits.getTitle());
        String columns2[] = {"ifHCInOctets","ifHCOutOctets"};
        Assert.assertArrayEquals(columns2, mib2HCBits.getColumns());
    }

