    public void testAdhocPropertiesReload() throws Exception {
        /*
         * We're not going to use the anticipator functionality, but it's
         * handy for handling temporary directories.
         */
        FileAnticipator fa = new FileAnticipator();
        
        try {
            File f = fa.tempFile("snmp-adhoc-graph.properties");
            
            Writer writer = new OutputStreamWriter(new FileOutputStream(f), "UTF-8");
            // Set the image type to image/cheeesy
            String cheesy = s_adhoc.replace("image/png", "image/cheesy");
            writer.write(cheesy);
            writer.close();
            
            HashMap<String, Resource> adhocConfig = new HashMap<String, Resource>();
            adhocConfig.put("performance", new FileSystemResource(f));
            PropertiesGraphDao dao = createPropertiesGraphDao(s_emptyMap, adhocConfig);
            AdhocGraphType type = dao.findAdhocGraphTypeByName("performance");
            assertNotNull("could not get performance adhoc graph type", type);
            assertEquals("image type isn't correct", "image/cheesy", type.getOutputMimeType());

            Thread.sleep(1100);

            writer = new OutputStreamWriter(new FileOutputStream(f), "UTF-8");
            writer.write(s_adhoc);
            writer.close();
            
            type = dao.findAdhocGraphTypeByName("performance");
            assertNotNull("could not get performance adhoc graph type", type);
            assertEquals("image type isn't correct", "image/png", type.getOutputMimeType());
        } finally {
            fa.deleteExpected();
            fa.tearDown();
        }
    }

