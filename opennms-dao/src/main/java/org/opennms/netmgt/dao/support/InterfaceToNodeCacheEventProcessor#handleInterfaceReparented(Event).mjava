    @EventHandler(uei=EventConstants.INTERFACE_REPARENTED_EVENT_UEI)
    @Transactional
    public void handleInterfaceReparented(Event event) {
        LOG.debug("Received event: {}", event.getUei());

        final String oldNodeId = event.getParm(EventConstants.PARM_OLD_NODEID).getValue().getContent();
        final String newNodeId = event.getParm(EventConstants.PARM_NEW_NODEID).getValue().getContent();

        if (oldNodeId == null) {
            LOG.error(EventConstants.INTERFACE_REPARENTED_EVENT_UEI + ": Event with no node ID: " + event.toString());
            return;
        }

        if (newNodeId == null) {
            LOG.error(EventConstants.INTERFACE_REPARENTED_EVENT_UEI + ": Event with no node ID: " + event.toString());
            return;
        }

        final OnmsNode oldNode = m_nodeDao.get(oldNodeId);
        if (oldNode == null) {
            LOG.warn(EventConstants.INTERFACE_REPARENTED_EVENT_UEI + ": Cannot find node in DB: " + oldNodeId);
            return;
        }

        final OnmsNode newNode = m_nodeDao.get(newNodeId);
        if (newNode == null) {
            LOG.warn(EventConstants.INTERFACE_REPARENTED_EVENT_UEI + ": Cannot find node in DB: " + newNodeId);
            return;
        }

        // add to known nodes
        m_cache.removeNodeId(oldNode.getLocation().getLocationName(), event.getInterfaceAddress(), oldNode.getId());
        m_cache.setNodeId(newNode.getLocation().getLocationName(), event.getInterfaceAddress(), newNode.getId());
    }

