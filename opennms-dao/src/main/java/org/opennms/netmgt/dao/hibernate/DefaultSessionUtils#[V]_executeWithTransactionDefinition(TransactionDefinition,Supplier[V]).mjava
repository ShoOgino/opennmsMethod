    /**
     * NOTE: This is mostly copied from org.springframework.transaction.support.TransactionTemplate#execute
     * but adds the ability to specify our own transaction definition.
     */
    private <V> V executeWithTransactionDefinition(TransactionDefinition transactionDefinition, Supplier<V> supplier) {
        final TransactionStatus status = transactionManager.getTransaction(transactionDefinition);
        V result;
        try {
            result = supplier.get();
        }
        catch (RuntimeException ex) {
            // Transactional code threw application exception -> rollback
            rollbackOnException(status, ex);
            throw ex;
        }
        catch (Error err) {
            // Transactional code threw error -> rollback
            rollbackOnException(status, err);
            throw err;
        }
        catch (Throwable ex) {
            // Transactional code threw unexpected exception -> rollback
            rollbackOnException(status, ex);
            throw new UndeclaredThrowableException(ex, "TransactionCallback threw undeclared checked exception");
        }
        this.transactionManager.commit(status);
        return result;
    }

