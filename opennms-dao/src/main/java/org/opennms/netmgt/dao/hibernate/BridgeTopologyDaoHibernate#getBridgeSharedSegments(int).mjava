    @Override
    public List<SharedSegment> getBridgeSharedSegments(int nodeid) 
        {
        List<SharedSegment> segments = new ArrayList<SharedSegment>();

        BBLDESI: for (BridgeBridgeLink link: m_bridgeBridgeLinkDao.findByDesignatedNodeId(nodeid)) {
            for (SharedSegment segment : segments) {
                if (segment.containsPort(BridgePort.getFromDesignatedBridgeBridgeLink(link))) {
                    segment.getBridgePortsOnSegment().add(BridgePort.getFromBridgeBridgeLink(link));
                    continue BBLDESI;
                }
            }
            try {
                segments.add(SharedSegment.create(link));
            } catch (BridgeTopologyException e) {
                LOG.error("getBridgeNodeSharedSegments: cannot create shared segment {}", 
                          e.getMessage(),
                          e);
                return new ArrayList<SharedSegment>();
            }
        }

        Set<BridgePort> designated = new HashSet<BridgePort>();
        for (BridgeBridgeLink link : m_bridgeBridgeLinkDao.findByNodeId(nodeid)) {
            designated.add(BridgePort.getFromDesignatedBridgeBridgeLink(link));
        }        
        
       for (BridgePort designatedport: designated) {
       BBL: for ( BridgeBridgeLink link : m_bridgeBridgeLinkDao.getByDesignatedNodeIdBridgePort(designatedport.getNodeId(), 
                                                                                             designatedport.getBridgePort())) {
           for (SharedSegment segment : segments) {
               if (segment.containsPort(BridgePort.getFromDesignatedBridgeBridgeLink(link))) {
                   segment.getBridgePortsOnSegment().add(BridgePort.getFromBridgeBridgeLink(link));
                   continue BBL;
               }
           }
           try {
               segments.add(SharedSegment.create(link));
           } catch (BridgeTopologyException e) {
               LOG.error("getBridgeSharedSegments: cannot create shared segment {}", 
                  e.getMessage(),
                  e);
               return new ArrayList<SharedSegment>();
           }
           }
       }

        MACLINK:for (BridgeMacLink link : m_bridgeMacLinkDao.findByNodeId(nodeid)) {

            if (link.getLinkType() == BridgeMacLinkType.BRIDGE_FORWARDER) {
                continue;
            }
            for (SharedSegment segment : segments) {
                if (segment.containsPort(BridgePort.getFromBridgeMacLink(link))) {
                    segment.getMacsOnSegment().add(link.getMacAddress());
                    continue MACLINK;
                }
            }
            try {
                segments.add(SharedSegment.create(link));
            } catch (BridgeTopologyException e) {
                LOG.error("getBridgeSharedSegments: cannot create shared segment {}", e.getMessage(),e);
                return new ArrayList<SharedSegment>();
            }
        }
        return segments;
    }

