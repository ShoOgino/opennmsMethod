    public void checkIndexUniqueness() throws Exception {
        Collection<Index> indexes = getIndexDao().getAllIndexes();

        Statement st = getConnection().createStatement();

        for (Index index: indexes) {
            if (!index.isUnique()) {
                continue;
            }
            if (!tableExists(index.getTable())) {
                continue;
            }
            
            String query = index.getIndexUniquenessQuery();
            if (query == null) {
                continue;
            }
            
            String countQuery = query.replaceFirst("(?i)\\s(\\S+)\\s+FROM",
                " count(\\1) FROM").replaceFirst("(?i)\\s*ORDER\\s+BY\\s+[^()]+$", "");

            try {
				ResultSet rs = st.executeQuery(countQuery);

				rs.next();
				int count = rs.getInt(1);
				rs.close();

				if (count > 0) {
				    st.close();
				    throw new Exception("Unique index '" +  index.getName() + "' "
				                        + "cannot be added to table '" +
				                        index.getTable() + "' because " + count
				                        + " rows are not unique.  See the "
				                        + "install guide for details on how to "
				                        + "correct this problem.  You can use the "
				                        + "following SQL to see which rows are not "
				                        + "unique:\n"
				                        + query);
				}
			} catch (org.postgresql.util.PSQLException e) {
				if (e.getMessage().contains("does not exist")) {
					// we can ignore this, the column just hasn't been created yet
				} else {
					throw e;
				}
			}
        }
        
        st.close();
    }

