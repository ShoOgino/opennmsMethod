    public void resetDatabase() {
        LOG.debug("==== DatabasePopulator Reset ====");
        for (final DataLinkInterface iface : m_dataLinkInterfaceDao.findAll()) {
            m_dataLinkInterfaceDao.delete(iface);
        }
        for (final OnmsOutage outage : m_outageDao.findAll()) {
            m_outageDao.delete(outage);
        }
        for (final OnmsUserNotification not : m_userNotificationDao.findAll()) {
            m_userNotificationDao.delete(not);
        }
        for (final OnmsNotification not : m_notificationDao.findAll()) {
            m_notificationDao.delete(not);
        }
        for (final OnmsAlarm alarm : m_alarmDao.findAll()) {
            m_alarmDao.delete(alarm);
        }
        for (final OnmsEvent event : m_eventDao.findAll()) {
            m_eventDao.delete(event);
        }
        for (final OnmsSnmpInterface iface : m_snmpInterfaceDao.findAll()) {
            m_snmpInterfaceDao.delete(iface);
        }
        for (final OnmsIpInterface iface : m_ipInterfaceDao.findAll()) {
            m_ipInterfaceDao.delete(iface);
        }
        for (final OnmsNode node : m_nodeDao.findAll()) {
            m_nodeDao.delete(node);
        }
        for (final OnmsServiceType service : m_serviceTypeDao.findAll()) {
            m_serviceTypeDao.delete(service);
        }
        for (final LocationDef location : m_monitoringLocationDao.findAll()) {
            m_monitoringLocationDao.delete(location);
        }
        
        LOG.debug("= DatabasePopulatorExtension Reset Starting =");
    	for (Extension eachExtension : extensions) {
    			DaoSupport daoSupport = eachExtension.getDaoSupport();
    			OnmsDao<?,?> dao = daoSupport != null && daoSupport.getDaoClass() != null ? lookupDao(daoSupport.getDaoClass()) : null;

    			eachExtension.onShutdown(this, dao);
    			if (dao != null) {
    				dao.flush();
    			}
    	}
    	LOG.debug("= DatabasePopulatorExtension Reset Finished =");
        
        m_dataLinkInterfaceDao.flush();
        m_outageDao.flush();
        m_userNotificationDao.flush();
        m_notificationDao.flush();
        m_alarmDao.flush();
        m_eventDao.flush();
        m_snmpInterfaceDao.flush();
        m_ipInterfaceDao.flush();
        m_nodeDao.flush();
        m_serviceTypeDao.flush();
        
        LOG.debug("==== DatabasePopulator Reset Finished ====");
    }

