    @Override
    public OnmsLocationSpecificStatus getMostRecentStatusChange(final OnmsMonitoringLocation location, final OnmsMonitoredService monSvc) {
        final HibernateCallback<OnmsLocationSpecificStatus> callback = new HibernateCallback<OnmsLocationSpecificStatus>() {

            @Override
            public OnmsLocationSpecificStatus doInHibernate(final Session session) throws HibernateException, SQLException {
                return (OnmsLocationSpecificStatus)session.createQuery("from OnmsLocationSpecificStatus status where status.location = :location and status.monitoredService = :monitoredService order by status.pollResult.timestamp desc")
                        .setEntity("location", location)
                        .setEntity("monitoredService", monSvc)
                        .setMaxResults(1)
                        .uniqueResult();
            }

        };
        return getHibernateTemplate().execute(callback);
    }

