    /**
     * <p>getForeignSourceNodeEntityResource</p>
     *
     * @param resource a {@link java.lang.String} object.
     * @return a {@link org.opennms.netmgt.model.OnmsResource} object.
     */
    protected OnmsResource getForeignSourceNodeEntityResource(String resource) {
        
        File idDir = new File(getRrdDirectory(), SNMP_DIRECTORY + File.separator + ResourceTypeUtils.getRelativeNodeSourceDirectory(resource).toString());
        if (idDir.isDirectory() && RrdFileConstants.NODESOURCE_DIRECTORY_FILTER.accept(idDir)) {
            return m_nodeSourceResourceType.createChildResource(resource);
        } else {
           LOG.debug("resource {} not found by foreign source/foreignId. Trying as a node resource instead...", resource);
           String[] ident = resource.split(":");
           OnmsNode node = m_nodeDao.findByForeignId(ident[0], ident[1]);
           if (node == null) {
                throw new ObjectRetrievalFailureException(OnmsNode.class, resource, "Top-level resource of resource type node could not be found: " + resource, null);
           }
           
           OnmsResource onmsResource = getResourceForNode(node);
           
           return onmsResource;
        }
    }

