    @Override
    public synchronized void walked(int nodeid) {
        BroadcastDomain elemdomain = null;
        for (BroadcastDomain domain: m_domains) {
            if (domain.containBridgeId(nodeid)) {
                elemdomain = domain;
                break;
            }
        }
        if (elemdomain != null) {
            elemdomain.removeBridge(nodeid);
            if (elemdomain.isEmpty())
                m_domains.remove(elemdomain);
        }        

        List<BridgeMacLink> bft = m_notYetParsedBFTMap.remove(nodeid);
        Set<String>incomingSet = new HashSet<String>();
        for (BridgeMacLink link: bft)
            incomingSet.add(link.getMacAddress());
        LOG.debug("walked: parsing BFT with macs: {}, size {}", incomingSet, incomingSet.size());
        BroadcastDomain bftdomain = null;
        for (BroadcastDomain domain: m_domains) {
            Set<String>retainedSet = new HashSet<String>(domain.getMacsOnDomain());
            LOG.debug("walked: checking against BroadcastDomain with macs: {}, size {}", retainedSet,retainedSet.size());
            retainedSet.retainAll(incomingSet);
            LOG.debug("walked: BFT and BroadcastDomain cross macs: {}, size {}", retainedSet,retainedSet.size());
            // should contain at list 50% of the all size
            if (retainedSet.size() >= 10 || retainedSet.size() <= incomingSet.size()*0.2 )
                continue;          
            bftdomain = domain;
            break;
        }
        if (bftdomain == null) {
            bftdomain = new BroadcastDomain();
            m_domains.add(bftdomain);
        }
        bftdomain.loadBFT(nodeid,bft,m_notYetParsedSTPMap.remove(nodeid),m_notYetParsedEleMap.remove(nodeid));

    }

