    private boolean exists(Path root, int depth) {
        if (!root.toFile().isDirectory()) {
            return false;
        }

        if (depth < 0) {
            try (Stream<Path> stream = Files.walk(root)) {
                return stream.anyMatch(isRrdFile);
            } catch (IOException e) {
                LOG.error("Failed to walk {}. Marking path as non-existent.", root, e);
                return false;
            }
        } else {
            try (Stream<Path> stream = Files.list(root)) {
                if (depth == 0) {
                    return stream.anyMatch(isRrdFile);
                } else {
                    return stream.anyMatch(p -> exists(p, depth-1));
                }
            } catch (IOException e) {
                LOG.error("Failed to list {}. Marking path as non-existent.", root, e);
                return false;
            }
        }
    }

