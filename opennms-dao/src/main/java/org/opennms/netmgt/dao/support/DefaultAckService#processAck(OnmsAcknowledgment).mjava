    public void processAck(OnmsAcknowledgment ack) {
        log().debug("processAck: Searching DB for acknowledgables for ack: "+ack);
        List<Acknowledgeable> ackables = m_ackDao.findAcknowledgables(ack);
        
        if (ackables == null || ackables.size() < 1) {
            log().debug("processAck: No acknowledgables found.");
            throw new IllegalStateException("No acknowlegables in the database for ack: "+ack);
        }

        log().debug("processAck: Found "+ackables.size()+". Acknowledging...");
        for (Acknowledgeable ackable : ackables) {
            switch (ack.getAckAction()) {
            case ACKNOWLEDGE:
                log().debug("processAck: Acknowledging ackable: "+ackable);
                ackable.acknowledge(ack.getAckUser());
                break;
            case UNACKNOWLEDGE:
                log().debug("processAck: Unacknowledging ackable: "+ackable);
                ackable.unacknowledge(ack.getAckUser());
            case CLEAR:
                log().debug("processAck: Clearing ackable: "+ackable);
                ackable.clear(ack.getAckUser());
                break;
            case ESCALATE:
                log().debug("processAck: Escalating ackable: "+ackable);
                ackable.escalate(ack.getAckUser());
            default:
                break;
            }
            
            m_ackDao.updateAckable(ackable);
            m_ackDao.save(ack);
            m_ackDao.flush();
        }
    }

