    /** {@inheritDoc} */
    @Override
    public List<OnmsResource> getResourcesForParent(OnmsResource parent) {
        if (!NodeResourceType.isNode(parent)) {
            return Collections.emptyList();
        }

        final OnmsNode node = ResourceTypeUtils.getNodeFromResource(parent);
        final List<OnmsResource> resources = Lists.newLinkedList();
        final Collection<LocationIpInterface> statuses = m_locationSpecificStatusDao.findStatusChangesForNodeForUniqueMonitorAndInterface(node.getId());

        for (LocationIpInterface status : statuses) {
            String location = status.getLocation().getLocationName();
            final OnmsIpInterface ipInterface = status.getIpInterface();
            String ipAddr = InetAddressUtils.str(ipInterface.getIpAddress());

            if (m_resourceStorageDao.exists(getRelativeInterfacePath(location, ipAddr), 0)) {
                resources.add(createResource(location, ipAddr));
            }
        }

        return OnmsResource.sortIntoResourceList(resources);
    }

