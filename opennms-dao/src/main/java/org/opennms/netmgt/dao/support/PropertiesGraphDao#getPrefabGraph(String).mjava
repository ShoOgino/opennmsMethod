    /** {@inheritDoc} */
    @Override
    public PrefabGraph getPrefabGraph(final String name) {
        for (final FileReloadContainer<PrefabGraphTypeDao> container : m_types.values()) {
            final PrefabGraphTypeDao type = container.getObject();
            this.rescanIncludeDirectory(type);
            final PrefabGraph graph = type.getQuery(name);
            if (graph != null) {
                return graph;
            }
        }

        if (m_extContainer.getObject() != null) {
            List<PrefabGraph> graphs = m_extContainer.getObject().getPrefabGraphs();
            Optional<PrefabGraph> prefabGraph = graphs.stream().filter(graph -> graph.getName().equals(name)).findFirst();
            if (prefabGraph.isPresent()) {
                return prefabGraph.get();
            }
        }
        throw new ObjectRetrievalFailureException(PrefabGraph.class, name,
                                                  "Could not find prefabricated graph report with name '"
                                                          + name + "'", null);
    }

