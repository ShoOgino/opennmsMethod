    private void initResourceTypes() {
        final Map<String, OnmsResourceType> resourceTypes = Maps.newLinkedHashMap();
        OnmsResourceType resourceType;

        resourceType = new NodeSnmpResourceType(m_resourceStorageDao);
        resourceTypes.put(resourceType.getName(), resourceType);

        resourceType = new InterfaceSnmpResourceType(m_resourceStorageDao);
        resourceTypes.put(resourceType.getName(), resourceType);

        resourceType = new ResponseTimeResourceType(m_resourceStorageDao, m_ipInterfaceDao);
        resourceTypes.put(resourceType.getName(), resourceType);

        resourceType = new DistributedStatusResourceType(m_resourceStorageDao, m_locationMonitorDao);
        resourceTypes.put(resourceType.getName(), resourceType);

        resourceTypes.putAll(GenericIndexResourceType.createTypes(m_resourceTypesDao.getResourceTypes(), m_resourceStorageDao));

        m_nodeResourceType = new NodeResourceType(this, m_nodeDao);
        resourceTypes.put(m_nodeResourceType.getName(), m_nodeResourceType);

        if (isDomainResourceTypeUsed()) {
            LOG.debug("One or more packages are configured with storeByIfAlias=true. Enabling the domain resource type.");
            resourceType = new DomainResourceType(this, m_resourceStorageDao);
            resourceTypes.put(resourceType.getName(), resourceType);
        } else {
            LOG.debug("No packages are configured with storeByIfAlias=true. Excluding the domain resource type.");
        }

        m_nodeSourceResourceType = new NodeSourceResourceType(this, m_nodeDao);
        resourceTypes.put(m_nodeSourceResourceType.getName(), m_nodeSourceResourceType);

        m_resourceTypes = resourceTypes;
        m_lastUpdatedResourceTypesConfig = m_resourceTypesDao.getLastUpdate();
    }

