    /**
     * <p>
     * getAllPrefabGraphs
     * </p>
     * 
     * @return a {@link java.util.List} object.
     */
    @Override
    public List<PrefabGraph> getAllPrefabGraphs() {
        final List<PrefabGraph> graphs = new ArrayList<>();
        for (final FileReloadContainer<PrefabGraphTypeDao> container : new ArrayList<>(m_types.values())) {
            final PrefabGraphTypeDao type = container.getObject();
            this.rescanIncludeDirectory(type);
            for (final FileReloadContainer<PrefabGraph> graphContainer : type.getReportMap().values()) {
                graphs.add(graphContainer.getObject());
            }
        }
        if(m_extContainer.getObject() != null) {
            graphs.addAll(m_extContainer.getObject().getPrefabGraphs());
        }
        return graphs;
    }

