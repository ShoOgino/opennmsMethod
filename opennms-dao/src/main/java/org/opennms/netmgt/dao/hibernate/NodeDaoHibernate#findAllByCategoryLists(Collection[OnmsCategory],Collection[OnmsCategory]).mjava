    /** {@inheritDoc} */
    @Override
    public List<OnmsNode> findAllByCategoryLists( final Collection<OnmsCategory> rowCategories, final Collection<OnmsCategory> columnCategories) {

        return getHibernateTemplate().execute(new HibernateCallback<List<OnmsNode>>() {

            @SuppressWarnings("unchecked")
            @Override
            public List<OnmsNode> doInHibernate(Session session) throws HibernateException, SQLException {

                return (List<OnmsNode>)session.createQuery("select distinct n from OnmsNode as n "
                        + "join n.categories c1 "
                        + "join n.categories c2 "
                        + "left join fetch n.assetRecord "
                        + "left join fetch n.ipInterfaces as iface "
                        + "left join fetch n.snmpInterfaces as snmpIface"
                        + "left join fetch iface.monitoredServices as monSvc "
                        + "left join fetch monSvc.serviceType "
                        + "left join fetch monSvc.currentOutages "
                        + "where c1 in (:rowCategories) "
                        + "and c2 in (:colCategories) "
                        + "and n.type != 'D'")
                        .setParameterList("rowCategories", rowCategories)
                        .setParameterList("colCategories", columnCategories)
                        .list();


            }

        });

    }

