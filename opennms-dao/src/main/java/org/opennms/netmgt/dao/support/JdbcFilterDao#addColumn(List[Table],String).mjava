    /**
     * Validate that a column is in the schema, add it's table to a list of tables,
     * and return the full table.column name of the column.
     *
     * @param tables
     *            a list of tables to add the column's table to
     * @param column
     *            the column to add
     *
     * @return table.column string
     *
     * @exception FilterParseException
     *                if the column is not found in the schema
     */
    private String addColumn(final List<Table> tables, final String column) throws FilterParseException {
        m_databaseSchemaConfigFactory.getReadLock().lock();
        try {
            final Table table = m_databaseSchemaConfigFactory.findTableByVisibleColumn(column);
            if(table == null) {
                final String message = "Could not find the column '" + column +"' in filter rule";
				LogUtils.errorf(this, message);
                throw new FilterParseException(message);
            }
            if (!tables.contains(table)) {
                tables.add(table);
            }
            return table.getName() + "." + column;
        } finally {
            m_databaseSchemaConfigFactory.getReadLock().unlock();
        }
    }

