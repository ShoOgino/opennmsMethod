    /**
     * Clears and synchronizes the internal known IP address cache with the
     * current information contained in the database. To synchronize the cache
     * the method opens a new connection to the database, loads the address,
     * and then closes it's connection.
     *
     * @throws java.sql.SQLException Thrown if the connection cannot be created or a database
     *                               error occurs.
     */
    @Override
    @Transactional
    public void dataSourceSync() {
        // Determine if spring already created a transaction or if we have to manually do it
        // (depending on where the call to dataSourceSync comes from)
        if (TransactionSynchronizationManager.isActualTransactionActive()) {
            dataSourceSyncWithinTransaction();
        } else {
            transactionOperations.execute((status) -> {
                dataSourceSyncWithinTransaction();
                return null;
            });
        }
    }

