    private PrefabGraph makePrefabGraph(String name, Properties props,
            int order) {
        Assert.notNull(name, "name argument cannot be null");
        Assert.notNull(props, "props argument cannot be null");

        String key = name; // Default to the name, for

        if (props.getProperty("report.id") != null) {
            key = null; // A report-per-file properties file
        }

        String title = getReportProperty(props, key, "name", true);

        String command = getReportProperty(props, key, "command", true);

        String columnString = getReportProperty(props, key, "columns", true);
        String[] columns = BundleLists.parseBundleList(columnString);

        String externalValuesString = getReportProperty(props, key,
                                                        "externalValues",
                                                        false);
        String[] externalValues;
        if (externalValuesString == null) {
            externalValues = new String[0];
        } else {
            externalValues = BundleLists.parseBundleList(externalValuesString);
        }

        String[] propertiesValues;
        String propertiesValuesString = getReportProperty(props, key,
                                                          "propertiesValues",
                                                          false);
        if (propertiesValuesString == null) {
            propertiesValues = new String[0];
        } else {
            propertiesValues = BundleLists.parseBundleList(propertiesValuesString);
        }

        // can be null
        String[] types;
        String typesString = getReportProperty(props, key, "type", false);
        if (typesString == null) {
            types = new String[0];
        } else {
            types = BundleLists.parseBundleList(typesString);
        }

        // can be null
        String description = getReportProperty(props, key, "description",
                                               false);

        /*
         * TODO: Right now a "width" and "height" property is required in
         * order to get zoom to work properly on non-standard sized graphs. A
         * more elegant solution would be to parse the command string and look
         * for --width and --height and set the following two variables
         * automagically, without having to rely on a configuration file.
         */
        Integer graphWidth = getIntegerReportProperty(props, key, "width",
                                                      false);
        Integer graphHeight = getIntegerReportProperty(props, key, "height",
                                                       false);

        String suppressString = getReportProperty(props, key, "suppress",
                                                  false);
        String[] suppress = (suppressString == null) ? new String[0]
                                                    : BundleLists.parseBundleList(suppressString);

        return new PrefabGraph(name, title, columns, command, externalValues,
                               propertiesValues, order, types, description,
                               graphWidth, graphHeight, suppress);

    }

