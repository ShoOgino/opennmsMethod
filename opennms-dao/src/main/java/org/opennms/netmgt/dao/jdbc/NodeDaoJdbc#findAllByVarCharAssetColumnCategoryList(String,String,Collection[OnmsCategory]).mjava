    /**
     * This method searches for nodes matching a column in the assets table and also having been
     * assigned to a category in the cateories table.  Note: this implmentation requires that
     * the column type be of type VARCHAR.
     * 
     * @param columnName is VARCHAR column in assets table used in where clause
     * @param columnValue is the value used for matching <code>columnName</code>
     * @param categoryNames is a collection of names from categories
     *  table assigned to the node via category_node table
     * @return Collection of nodes.
     */
    public Collection<OnmsNode> findAllByVarCharAssetColumnCategoryList(String columnName, String columnValue, Collection<OnmsCategory> categories) {
        log().debug("findAllByVarCharAssetColumnCategoryList: beginning find.");
        List<OnmsNode> nodes = new FindByVarCharAssetColumnAndCategoryList(getDataSource(), columnName, categories).execute(columnValue);

        for (OnmsNode node : nodes) {
			getHierarchy(node.getId());
		}
        
// Turns out its faster just go thru and load the hierarchy of each node... go figure!        
//    	NodeHierarchyMapper rowMapper = new NodeHierarchyMapper(getDataSource());
//    	
//
//    	final String hierarchyQuery = "SELECT " +
//    	rowMapper.getColumns() +
//    	"FROM node " +
//    	"JOIN assets ON (node.nodeid = assets.nodeid) " +
//    	"JOIN category_node ON (node.nodeid = category_node.nodeid) " +
//    	"JOIN categories ON (category_node.categoryid = categories.categoryid) " +
//    	"LEFT JOIN ipInterface ON (node.nodeId = ipInterface.nodeId) " +
//    	"LEFT JOIN ifservices ON (ipInterface.nodeId = ifservices.nodeId AND ipInterface.ipAddr = ifservices.ipAddr) " +
//    	"LEFT JOIN outages ON (ifServices.nodeId = outages.nodeId AND ifServices.ipAddr = outages.ipAddr AND ifServices.serviceID = outages.serviceId AND outages.ifRegainedService is null) " +
//    	"WHERE assets." + columnName +" = ? " +
//    	"AND categories.categoryName in ("+StringUtils.collectionToDelimitedString(categoryNames, ",", "'", "'")+")" +
//    	"";
//    	
//    	Set<OnmsNode> nodes = new HashSet<OnmsNode>(getJdbcTemplate().query(hierarchyQuery, new Object[] { columnValue }, rowMapper));

    	log().debug("findAllByVarCharAssetColumnCateoryList: find complete. Nodes found: "+nodes.size());
        return nodes;
    }

