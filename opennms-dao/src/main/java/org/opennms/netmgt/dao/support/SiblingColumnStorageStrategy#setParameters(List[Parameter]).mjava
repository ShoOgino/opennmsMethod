    /** {@inheritDoc} */
    @Override
    public void setParameters(List<Parameter> parameterCollection) {
        if (parameterCollection == null) {
            log().fatal("Got a null parameter list, but need one containing a '" + PARAM_SIBLING_COLUMN_NAME + "' parameter.");
            throw new RuntimeException("Got a null parameter list, but need one containing a '" + PARAM_SIBLING_COLUMN_NAME + "' parameter.");
        }
        
        for (Parameter param : parameterCollection) {
            if (PARAM_SIBLING_COLUMN_NAME.equals(param.getKey())) {
                m_siblingColumnName = param.getValue();
            } else if (PARAM_REPLACE_FIRST.equals(param.getKey())) {
                m_replaceOps.add(new ReplaceFirstOperation(param.getValue()));
            } else if (PARAM_REPLACE_ALL.equals(param.getKey())) {
                m_replaceOps.add(new ReplaceAllOperation(param.getValue()));
            } else {
                log().warn("Encountered unsupported parameter key=\"" + param.getKey() + "\". Can accept: " + PARAM_SIBLING_COLUMN_NAME + ", " + PARAM_REPLACE_FIRST + ", " + PARAM_REPLACE_ALL);
            }
        }
        
        if (m_siblingColumnName == null) {
            log().error("The provided parameter list must contain a '" + PARAM_SIBLING_COLUMN_NAME + "' parameter.");
            throw new RuntimeException("The provided parameter list must contain a '" + PARAM_SIBLING_COLUMN_NAME + "' parameter.");
        }
    }

