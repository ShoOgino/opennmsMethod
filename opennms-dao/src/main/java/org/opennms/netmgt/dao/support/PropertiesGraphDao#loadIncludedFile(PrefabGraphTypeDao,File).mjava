    private void loadIncludedFile(PrefabGraphTypeDao type, File file)
            throws FileNotFoundException, IOException {
        Properties props = new Properties();
        InputStream fileIn = new FileInputStream(file);
        try {
            props.load(fileIn);
        } finally {
            IOUtils.closeQuietly(fileIn);
        }
        //Clear any malformed setting; if everything goes ok, it'll remain cleared
        // If there's problems, it'll be re-added.
        type.removeMalformedFile(file);
        try {
            List<PrefabGraph> subGraphs = loadPrefabGraphDefinitions(type,
                                                                     props);
            for (PrefabGraph graph : subGraphs) {
                if(graph == null) {
                    //Indicates a multi-graph file that had a munted graph definition
                    type.addMalformedFile(file); //Record that the file was partly broken
                } else {
                    type.addPrefabGraph(new FileReloadContainer<PrefabGraph>(
                                                                         graph,
                                                                         new FileSystemResource(
                                                                                                file),
                                                                         type.getCallback()));
                }
            }

        } catch (DataAccessResourceFailureException e) {
            LOG.error("Problem while attempting to load {}", file, e);
            type.addMalformedFile(file); //Record that the file was completely broken
        }
    }

