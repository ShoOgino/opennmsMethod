    /**
     * Force a reload of the configuration.
     */
    public synchronized void reload() {
        /*
         * Always update the timestamp, even if we have an error. 
         * XXX What if someone is writing the file while we are reading it,
         * we get an error, and the (correct) file is written completely
         * within the same second, so lastModified doesn't get updated.
         */
        m_lastModified = m_file.lastModified();
            
        T object;
        try {
            object = m_callback.reload(m_object, m_resource);
        } catch (Throwable t) {
            String message = 
                "Failed reloading data for object '" + m_object + "' "
                + "from file '" + m_file.getAbsolutePath() + "'.  "
                + "Unexpected Throwable received while "
                + "issuing reload: " + t.getMessage();
            log().error(message, t);
            throw new DataAccessResourceFailureException(message, t);
        }
        
        if (object == null) {
            log().info("Not updating object for file '"
                       + m_file.getAbsolutePath()
                       + "' due to reload callback returning null");
        } else {
            m_object = object;
        }
    }

