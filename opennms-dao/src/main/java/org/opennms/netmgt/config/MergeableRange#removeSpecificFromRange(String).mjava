    /**
     * Changes the current Range by moving the end before the specific and
     * creates a new range to the right of the specific ending with the
     * current Range's end address.
     * 
     * @param rng
     * @return a new Range to be added to Definition
     */
    protected Range removeSpecificFromRange(final String spec) {
        
        if (!coversSpecific(spec))
            throw new IllegalArgumentException("Specific: "+spec+", doesn't effect range: ");

        MergeableSpecific specific = new MergeableSpecific(spec);
        
        Range newRange = null;
        
        if (specific.getValue() == getFirst().getValue()) {
            getRange().setBegin(SnmpPeerFactory.toIpAddr(specific.getValue()+1));
        } else if (specific.getValue() == getLast().getValue()) {
            getRange().setEnd(SnmpPeerFactory.toIpAddr(specific.getValue()-1));
        } else {
            newRange = new Range();
            newRange.setBegin(SnmpPeerFactory.toIpAddr(specific.getValue()+1));
            newRange.setEnd(getRange().getEnd());
            getRange().setEnd(SnmpPeerFactory.toIpAddr(specific.getValue()-1));
        }
        return newRange;
    }

