    private void validateResourceTypes() {
    	Set<String> allowedResourceTypes = getConfiguredResourceTypes().keySet();
    	String configuredString;
    	if (allowedResourceTypes.size() == 0) {
    		configuredString = "(none)";
    	} else {
    		configuredString = join(", ", allowedResourceTypes);
    	}
    	
    	String allowableValues = "any positive number, 'ifIndex', or any of the configured resourceTypes: " + configuredString;
		Collection<SnmpCollection> snmpCollections = getSnmpCollections();
		for (SnmpCollection collection : snmpCollections) {
			Collection<Group> groups = getGroupsForCollection(collection);
			for (Group group : groups) {
				Collection<MibObj> mibObjs = getMibObjsForGroup(group);
				for (MibObj mibObj : mibObjs) {
					String instance = mibObj.getInstance();
					if (instance == null) {
						continue;
					}
					if (s_digitsPattern.matcher(instance).matches()) {
						continue;
					}
					if (MibObject.INSTANCE_IFINDEX.equals(instance)) {
						continue;
					}
					if (allowedResourceTypes.contains(instance)) {
						continue;
					}
					// XXX this should be a better exception
					throw new IllegalArgumentException("instance '" + instance + "' invalid in mibObj definition for OID '" + mibObj.getOid() + "' in collection '" + collection.getName() + "' for group '" + group.getName() + "'.  Allowable instance values: " + allowableValues);
				}
			}
		}
	}

