    /**
     * 
     */
    private void finishConstruction() {
        Table primary = getPrimaryTable();
        Set<String> joinableSet = new HashSet<String>();
        Map<String, Join> primaryJoins = new HashMap<String, Join>();
        joinableSet.add(primary.getName());
        int joinableCount = 0;
        // loop until we stop adding entries to the set
        while (joinableCount < joinableSet.size()) {
            joinableCount = joinableSet.size();
            Set<String> newSet = new HashSet<String>(joinableSet);
            Enumeration<Table> e = getDatabaseSchema().enumerateTable();
            // for each table not already in the set
            while (e.hasMoreElements()) {
                Table t = e.nextElement();
                if (!joinableSet.contains(t.getName()) && (t.getVisable() == null || t.getVisable().equalsIgnoreCase("true"))) {
                    Enumeration<Join> ejoin = t.enumerateJoin();
                    // for each join does it join a table in the set?
                    while (ejoin.hasMoreElements()) {
                        Join j = ejoin.nextElement();
                        if (joinableSet.contains(j.getTable())) {
                            newSet.add(t.getName());
                            primaryJoins.put(t.getName(), j);
                        }
                    }
                }
            }
            joinableSet = newSet;
        }
        // FIXME: m_joinable is never read
        //m_joinable = Collections.synchronizedSet(joinableSet);
        m_primaryJoins = Collections.synchronizedMap(primaryJoins);
    }

