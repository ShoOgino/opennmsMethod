                @Override
        public void visitNode(final Node node) {
			m_transTemplate.execute(new TransactionCallbackWithoutResult() {
                                @Override
				protected void doInTransactionWithoutResult(TransactionStatus status) {
					
					OnmsNode dbNode = findNodeByForeignId(m_foreignSource, node.getForeignId());
					if (dbNode == null) {
					    LOG.error("Error setting parent on node: {} node not in database", node.getForeignId());
					    return;
					}
					OnmsNode parent = findParent(node);
					
					OnmsIpInterface critIface = null;
					if (parent != null) {
						critIface = getCriticalInterface(parent);
					}
					
					LOG.info("Setting parent of node: {} to: {}", dbNode, parent);
					dbNode.setParent(parent);
					LOG.info("Setting criticalInterface of node: {} to: {}", dbNode, critIface);
					if (critIface == null) {
						dbNode.setPathElement(null);
					} else {
						final String ipAddress = InetAddressUtils.str(critIface.getIpAddress());
						dbNode.setPathElement(new PathElement(ipAddress, "ICMP"));
					}
					getNodeDao().update(dbNode);
				}

				private OnmsIpInterface getCriticalInterface(OnmsNode parent) {
					
					OnmsIpInterface critIface = parent.getPrimaryInterface();
					if (critIface != null) {
						return critIface;
					}
					
					return parent.getInterfaceWithService("ICMP");
					
				}

			});
		}

