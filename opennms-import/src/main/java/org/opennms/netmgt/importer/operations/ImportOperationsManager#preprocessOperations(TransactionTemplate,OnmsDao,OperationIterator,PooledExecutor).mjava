	private void preprocessOperations(final TransactionTemplate template, final OnmsDao dao, OperationIterator iterator, final PooledExecutor dbPool) {
		
		m_stats.beginPreprocessingOps();
		
		PooledExecutor threadPool = new PooledExecutor(new LinkedQueue());
		threadPool.setMinimumPoolSize(m_scanThreads);
		for (Iterator it = iterator; it.hasNext();) {
    		final ImportOperation oper = (ImportOperation) it.next();
    		Runnable r = new Runnable() {
    			public void run() {
    				preprocessOperation(oper, template, dao, dbPool);
    			}
    		};
    		try { threadPool.execute(r); } catch (InterruptedException e) { log().info("Interrupted: " + e, e); }
    		it.remove();
    	}
		threadPool.shutdownAfterProcessingCurrentlyQueuedTasks();
		try { threadPool.awaitTerminationAfterShutdown(); } catch (InterruptedException e) {log().error("preprocessor interrupted!", e);}
		
		m_stats.finishPreprocessingOps();
	}

