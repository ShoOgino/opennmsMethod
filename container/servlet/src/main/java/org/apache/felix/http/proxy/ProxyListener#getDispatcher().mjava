    private Object getDispatcher()
    {
        if (this.eventDispatcherTracker == null)
        {
            // the bundle context may or may not be already provided;
            // if not we cannot access the dispatcher yet
            Object bundleContextAttr = this.servletContext.getAttribute(BundleContext.class.getName());
            if (!(bundleContextAttr instanceof BundleContext))
            {
                return null;
            }

            try
            {
                BundleContext bundleContext = (BundleContext) bundleContextAttr;
                Filter filter = createFilter(bundleContext, null);
                this.eventDispatcherTracker = new ServiceTracker(bundleContext, filter, null)
                {
                    public void removedService(ServiceReference reference, Object service)
                    {
                        ProxyListener.this.sessionDispatcher = null;
                        ProxyListener.this.attributeDispatcher = null;
                        super.removedService(reference, service);
                    }
                };
                this.eventDispatcherTracker.open();
            }
            catch (InvalidSyntaxException e)
            {
                // not expected for our simple filter
            }

        }
        return this.eventDispatcherTracker.getService();
    }

