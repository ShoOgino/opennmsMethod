    private List<URI> getFeaturesUrisForKar(String kar) {
        final Path featureConfig = Paths.get(KAR_STORAGE, kar, FEATURE_CONFIG_FILE);
        final File featureConfigFile = featureConfig.toFile();

        if (!featureConfigFile.isFile()) {
            LOG.debug("Kar '{}' is installed, but the feature configuration is not yet written. " +
                    "Waiting up-to 30 seconds for it to show up...");
            try {
                for (int i = 30; i > 0 && !featureConfigFile.isFile(); i--) {
                    Thread.sleep(1000);
                }
            } catch (InterruptedException e) {
                LOG.info("Interrupted while waiting for {}. Assuming no feature repositories are used.", featureConfigFile);
                return Collections.emptyList();
            }
        }

        try {
            LOG.debug("Reading feature repository list for kar '{}' in: {}", kar, featureConfig);
            return Files.readAllLines(featureConfig).stream()
                    .map(URI::create)
                    .collect(Collectors.toList());
        } catch (IOException e) {
            LOG.warn("Cannot read feature repository list for kar '{}' in: {}. Assuming no feature repositories are used.",
                    kar, featureConfig, e);
            return Collections.emptyList();
        }
    }

