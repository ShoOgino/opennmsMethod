    public static void main(String args[]) throws ParseException {
        String hostname = null;
        String username = null;
        String password = null;
        String rrdRepository = null;

        final Options options = new Options();

        options.addOption("rrdRepository", true, "set rrdRepository path for generated config files, default: '/opt/opennms/share/rrd/snmp/'");

        final CommandLineParser parser = new PosixParser();
        final CommandLine cmd = parser.parse(options, args);

        @SuppressWarnings("unchecked")
        List<String> arguments = (List<String>) cmd.getArgList();

        if (arguments.size() < 3) {
            usage(options, cmd);
            System.exit(1);
        }

        hostname = arguments.remove(0);
        username = arguments.remove(0);
        password = arguments.remove(0);

        if (cmd.hasOption("rrdRepository")) {
            rrdRepository = cmd.getOptionValue("rrdRepository");
        } else {
            rrdRepository = "/opt/opennms/share/rrd/snmp/";
        }

        TrustManager[] trustAllCerts = new TrustManager[1];

        trustAllCerts[0] = new TrustAllManager();

        SSLContext sc = null;
        try {
            sc = SSLContext.getInstance("SSL");
            sc.init(null, trustAllCerts, null);
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (KeyManagementException e) {
            e.printStackTrace();
        }

        HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());

        HostnameVerifier hv = new HostnameVerifier() {
            @Override
            public boolean verify(String urlHostName, SSLSession session) {
                return true;
            }
        };

        HttpsURLConnection.setDefaultHostnameVerifier(hv);

        VmwareConfigBuilder vmwareConfigBuilder;

        vmwareConfigBuilder = new VmwareConfigBuilder(hostname, username, password);

        try {
            vmwareConfigBuilder.generateData(rrdRepository);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

