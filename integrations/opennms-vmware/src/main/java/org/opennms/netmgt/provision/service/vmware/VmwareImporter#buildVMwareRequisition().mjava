    /**
     * Builds the complete requisition object.
     *
     * @return the requisition object
     */
    private Requisition buildVMwareRequisition() {
        VmwareViJavaAccess vmwareViJavaAccess = null;

        // for now, set the foreign source to the specified vcenter host
        m_requisition = new Requisition(request.getForeignSource());

        logger.debug("Creating new VIJava access object for host {} ...", request.getHostname());
        if ((request.getHostname() == null || "".equals(request.getHostname())) || (request.getPassword() == null || "".equals(request.getPassword()))) {
            logger.info("No credentials found for connecting to host {}, trying anonymously...", request.getHostname());
            try {
                vmwareViJavaAccess = new VmwareViJavaAccess(request.getHostname());
            } catch (IOException e) {
                logger.warn("Error initialising VMware connection to '{}': '{}'", request.getHostname(), e.getMessage());
                return null;
            }
        } else {
            vmwareViJavaAccess = new VmwareViJavaAccess(request.getHostname(), request.getUsername(), request.getPassword());
        }
        logger.debug("Successfully created new VIJava access object for host {}", request.getHostname());

        logger.debug("Connecting VIJava access for host {} ...", request.getHostname());
        try {
            vmwareViJavaAccess.connect();
        } catch (MalformedURLException e) {
            logger.warn("Error connecting VMware management server '{}': '{}'", request.getHostname(), e.getMessage());
            return null;
        } catch (RemoteException e) {
            logger.warn("Error connecting VMware management server '{}': '{}'", request.getHostname(), e.getMessage());
            return null;
        }
        logger.debug("Successfully connected VIJava access for host {}", request.getHostname());

        logger.debug("Starting to enumerate VMware managed objects from host {} ...", request.getHostname());
        try {
            int apiVersion = vmwareViJavaAccess.getMajorApiVersion();
            logger.debug("Starting to iterate host system managed objects from host {} ...", request.getHostname());
            iterateHostSystems(vmwareViJavaAccess, apiVersion);
            logger.debug("Done iterating host system managed objects from host {}", request.getHostname());
            logger.debug("Starting to iterate VM managed objects from host {} ...", request.getHostname());
            iterateVirtualMachines(vmwareViJavaAccess, apiVersion);
            logger.debug("Done iterating VM managed objects from host {}", request.getHostname());
        } catch (RemoteException e) {
            logger.warn("Error retrieving managed objects from VMware management server '{}': '{}'", request.getHostname(), e.getMessage());
            return null;
        } finally {
            vmwareViJavaAccess.disconnect();
        }

        return m_requisition;
    }

