    public static void main(String args[]) throws Exception {
        final Options options = new Options();

        final CommandLineParser parser = new PosixParser();
        final CommandLine cmd = parser.parse(options, args);

        @SuppressWarnings("unchecked")
        List<String> arguments = (List<String>) cmd.getArgList();

        if (arguments.size() < 1) {
            usage(options, cmd);
            System.exit(1);
        }

        String urlString = arguments.remove(0);
        URL url = new URL(urlString.replaceFirst("vmware", "http")); // Internal trick to avoid confusions.

        VmwareRequisitionUrlConnection c = new VmwareRequisitionUrlConnection(url) {
            @Override
            protected Requisition getExistingRequisition() {
                String onmsHome = System.getProperty("opennms.home");
                if (onmsHome != null) {
                    // This is not elegant but it is necessary to avoid booting Spring
                    File req = new File(ConfigFileConstants.getFilePathString(), "imports" + File.separator + m_requisition + ".xml");
                    if (req.exists()) {
                        return JaxbUtils.unmarshal(Requisition.class, req);
                    }
                }
                return null;
            }
        };
        c.connect();
        InputStream is = c.getInputStream();
        if (is == null) {
            System.err.println("Couldn't generate requisition from " +  urlString);
            System.exit(1);
        } else {
            System.out.println(IOUtils.toString(is, "UTF-8"));
        }
    }

