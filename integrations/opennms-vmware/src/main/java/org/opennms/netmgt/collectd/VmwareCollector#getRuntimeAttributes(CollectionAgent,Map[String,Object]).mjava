    @Override
    public Map<String, Object> getRuntimeAttributes(CollectionAgent agent, Map<String, Object> parameters) {
        final Map<String, Object> runtimeAttributes = new HashMap<>();

        m_transactionTemplate.execute(new TransactionCallback<Object>() {
            @Override
            public Object doInTransaction(TransactionStatus transactionStatus) {
                final OnmsNode onmsNode = m_nodeDao.get(agent.getNodeId());
                if (onmsNode == null) {
                    throw new IllegalArgumentException(String.format("VmwareCollector: No node found with id: %d", agent.getNodeId()));
                }

                // retrieve the metadata
                final String vmwareManagementServer = VmwareImporter.getManagementServer(onmsNode);

                if (Strings.isNullOrEmpty(vmwareManagementServer)) {
                    throw new IllegalArgumentException(String.format("VmwareCollector: No management server is set on node with id %d.",  onmsNode.getId()));
                }
                runtimeAttributes.put(VmwareImporter.METADATA_MANAGEMENT_SERVER, vmwareManagementServer);

                final String vmwareManagedObjectId = onmsNode.getForeignId();
                if (Strings.isNullOrEmpty(vmwareManagedObjectId)) {
                    throw new IllegalArgumentException(String.format("VmwareCollector: No foreign id is set on node with id %d.",  onmsNode.getId()));
                }
                runtimeAttributes.put(VmwareImporter.METADATA_MANAGED_OBJECT_ID, vmwareManagedObjectId);

                // retrieve the collection
                final String collectionName = ParameterMap.getKeyedString(parameters, "collection", ParameterMap.getKeyedString(parameters, "vmware-collection", null));
                final VmwareCollection collection = m_vmwareDatacollectionConfigDao.getVmwareCollection(collectionName);
                if (collection == null) {
                    throw new IllegalArgumentException(String.format("VmwareCollector: No collection found with name '%s'.",  collectionName));
                }
                runtimeAttributes.put(VmwareImporter.VMWARE_COLLECTION_KEY, collection);

                // retrieve the server configuration
                final Map<String, VmwareServer> serverMap = m_vmwareConfigDao.getServerMap();
                if (serverMap == null) {
                    throw new IllegalStateException(String.format("VmwareCollector: Error getting vmware-config.xml's server map."));
                }
                final VmwareServer vmwareServer = serverMap.get(vmwareManagementServer);
                if (vmwareServer == null) {
                    throw new IllegalStateException(String.format("VmwareCollector: Error getting credentials for VMware management server: %s", vmwareManagementServer));
                }
                runtimeAttributes.put(VmwareImporter.VMWARE_SERVER_KEY, vmwareServer);

                return null;
            }
        });

        return runtimeAttributes;
    }

