    @Test
    public void verifyHousekeeping() throws Exception {
        ServiceInstance s1 = serviceInstancePool.retain("host2.test.de", "username2", "password2");
        Assert.assertEquals("host2.test.de/username2/password2/1/valid", s1.toString());

        // L N N N

        ((DummyServiceInstance) s1).valid = false;

        // L/I N N N

        ServiceInstance s2 = serviceInstancePool.retain("host2.test.de", "username2", "password2");
        Assert.assertEquals("host2.test.de/username2/password2/2/valid", s2.toString());

        // L/I L/I N N

        ((DummyServiceInstance) s2).valid = false;

        // L/I L/I N N

        serviceInstancePool.release(s1);

        // U/I L/I N N

        ServiceInstance s3 = serviceInstancePool.retain("host3.test.de", "username3", "password3");
        Assert.assertEquals("host3.test.de/username3/password3/3/valid", s3.toString());

        // U/I L/I L N

        Assert.assertEquals(2, serviceInstancePool.lockedEntryCount());
        Assert.assertEquals(1, serviceInstancePool.unlockedEntryCount());

        Assert.assertEquals(1, serviceInstancePool.lockedEntryCount("host2.test.de/username2/password2"));
        Assert.assertEquals(1, serviceInstancePool.unlockedEntryCount("host2.test.de/username2/password2"));

        Assert.assertEquals(1, serviceInstancePool.lockedEntryCount("host3.test.de/username3/password3"));
        Assert.assertEquals(0, serviceInstancePool.unlockedEntryCount("host3.test.de/username3/password3"));

        serviceInstancePool.release(s3);
        s3 = serviceInstancePool.retain("host3.test.de", "username3", "password3");
        Assert.assertEquals("host3.test.de/username3/password3/3/valid", s3.toString());

        // N N L N

        await().until(() -> serviceInstancePool.lockedEntryCount() == 1 && serviceInstancePool.unlockedEntryCount() == 0);

        ServiceInstance s4 = serviceInstancePool.retain("host3.test.de", "username3", "password3");
        Assert.assertEquals("host3.test.de/username3/password3/4/valid", s4.toString());

        // N N L L

        Assert.assertEquals(2, serviceInstancePool.lockedEntryCount());
        Assert.assertEquals(0, serviceInstancePool.unlockedEntryCount());

        Assert.assertEquals(2, serviceInstancePool.lockedEntryCount("host3.test.de/username3/password3"));
        Assert.assertEquals(0, serviceInstancePool.unlockedEntryCount("host3.test.de/username3/password3"));
    }

