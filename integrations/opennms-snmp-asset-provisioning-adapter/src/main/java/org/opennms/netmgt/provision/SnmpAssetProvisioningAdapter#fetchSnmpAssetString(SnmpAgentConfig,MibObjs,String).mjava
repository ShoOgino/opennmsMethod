	private static String fetchSnmpAssetString(SnmpAgentConfig agentConfig, MibObjs mibObjs, String formatString) {

		List<String> aliases = new ArrayList<String>();
		List<SnmpObjId> objs = new ArrayList<SnmpObjId>();
		for (MibObj mibobj : mibObjs.getMibObj()) {
			aliases.add(mibobj.getAlias());
			objs.add(SnmpObjId.get(mibobj.getOid()));
		}
		// Fetch the values from the SNMP agent
		SnmpValue[] values = SnmpUtils.get(agentConfig, objs.toArray(new SnmpObjId[0]));
		if (values.length == aliases.size()) {
			Properties substitutions = new Properties();
			for (int i = 0; i < values.length; i++) {
				substitutions.setProperty(aliases.get(i), values[i].toString());
			}

			try {
				return PropertiesUtils.substitute(formatString, substitutions);
			} catch (MissingFormatArgumentException e) {
				log().warn("fetchSnmpAssetString: Insufficient SNMP parameters returned to satisfy format string: " + formatString);
				return formatString;
			}
		} else {
			log().warn("fetchSnmpAssetString: Invalid number of SNMP parameters returned: " + values.length + " != " + aliases.size());
			return formatString;
		}
	}

