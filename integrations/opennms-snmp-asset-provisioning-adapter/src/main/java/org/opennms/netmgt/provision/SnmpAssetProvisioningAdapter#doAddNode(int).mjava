	/**
	 * <p>doAdd</p>
	 *
	 * @param nodeId a int.
	 * @param retry a boolean.
	 * @throws org.opennms.netmgt.provision.ProvisioningAdapterException if any.
	 */
	@Override
	public void doAddNode(int nodeId) throws ProvisioningAdapterException {
		log().debug("doAdd: adding nodeid: " + nodeId);

		final OnmsNode node = m_nodeDao.get(nodeId);
		Assert.notNull(node, "doAdd: failed to return node for given nodeId:"+nodeId);

		InetAddress ipaddress = m_template.execute(new TransactionCallback<InetAddress>() {
			public InetAddress doInTransaction(TransactionStatus arg0) {
				return getIpForNode(node);
			}
		});

		try {
			m_onmsNodeIpMap.putIfAbsent(nodeId, ipaddress);
		} catch (ProvisioningAdapterException ae) {
			sendAndThrow(nodeId, ae);
		} catch (Throwable e) {
			sendAndThrow(nodeId, e);
		}

		SnmpAgentConfig agentConfig = null;
		agentConfig = m_snmpConfigDao.getAgentConfig(ipaddress);

		OnmsAssetRecord asset = node.getAssetRecord();
		AssetField[] fields = m_config.getAssetFieldsForAddress(ipaddress, node.getSysObjectId());
		for (AssetField field : fields) {
			String value = fetchSnmpAssetString(agentConfig, field.getMibObjs(), field.getFormatString());
			if (log().isDebugEnabled()) {
				log().debug("doAdd: Setting asset field \"" + field.getName() + "\" to value: " + value);
			}
			// Use Spring bean-accessor classes to set the field value
			BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(asset);
			try {
				wrapper.setPropertyValue(field.getName(), value);
			} catch (BeansException e) {
				log().warn("doAdd: Could not set property \"" + field.getName() + "\" on asset object: " + e.getMessage(), e);
			}
		}
		node.setAssetRecord(asset);
		m_nodeDao.saveOrUpdate(node);
	}

