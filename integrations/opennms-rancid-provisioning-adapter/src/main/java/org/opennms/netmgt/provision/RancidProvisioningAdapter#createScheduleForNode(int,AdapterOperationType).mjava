    @Override
    AdapterOperationSchedule createScheduleForNode(final int nodeId, AdapterOperationType adapterOperationType) {
        log().debug("Scheduling: " + adapterOperationType + " for nodeid: " + nodeId);
        if (adapterOperationType.equals(AdapterOperationType.CONFIG_CHANGE)) {
            updateRancidNodeState(nodeId, true);

            String ipaddress = m_onmsNodeIpMap.get(nodeId);
            //String ipaddress = (String) m_template.execute(new TransactionCallback() {
            //    public Object doInTransaction(TransactionStatus arg0) {
            //        return getSuitableIpForRancid(nodeId);
            //    }
            //});
            
            log().debug("Found Suitable ip address: " + ipaddress);
            long initialDelay = m_rancidAdapterConfig.getDelay(ipaddress);
            int retries = m_rancidAdapterConfig.getRetries(ipaddress);
            log().debug("Setting initialDelay(sec): " + initialDelay);
            log().debug("Setting retries(sec): " + retries);
            
            return new AdapterOperationSchedule(initialDelay,60, retries, TimeUnit.SECONDS);
        }
        return new AdapterOperationSchedule();
    }

