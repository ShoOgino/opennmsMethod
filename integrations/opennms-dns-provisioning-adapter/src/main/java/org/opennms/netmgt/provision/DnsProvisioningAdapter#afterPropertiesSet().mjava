    public void afterPropertiesSet() throws Exception {
        //load current nodes into the map
        Assert.notNull(m_nodeDao, "DnsProvisioner requires a NodeDao which is not null.");
        List<OnmsNode> nodes = m_nodeDao.findAllProvisionedNodes();
        
        m_nodeDnsRecordMap = new ConcurrentHashMap<Integer, DnsRecord>(nodes.size());
        
        for (OnmsNode onmsNode : nodes) {
            m_nodeDnsRecordMap.putIfAbsent(onmsNode.getId(), new DnsRecord(onmsNode));
        }

        String dnsServer = System.getProperty("importer.adapter.dns.server");
        if (dnsServer != null && dnsServer.trim().length() > 0) {
            m_resolver = new SimpleResolver(dnsServer);
    
            // Doesn't work for some reason, haven't figured out why yet
            String key = System.getProperty("importer.adapter.dns.privatekey");
            if (key != null && key.length() > 0) {
                m_signature = key;
                m_resolver.setTSIGKey(TSIG.fromString(m_signature));
            }
        } else {
            log().warn("no DNS server configured, DnsProvisioningAdapter will not do anything!");
        }
    }

