    @Transactional
    @EventHandler(uei = EventConstants.SERVICE_UNMANAGED_EVENT_UEI)
    public void handleServiceUnmanaged(Event e) {
       try { 
            logEvent(e);
            if (e.getService() != null && !e.getService().equals(getEndPointTypeValidator().getServiceName())) {
                debugf(this, "Discarding Event %s since service %s does not match EndPoint service %s", e.getUei(), e.getService(), getEndPointTypeValidator().getServiceName());
                return;
            }
            int nodeId = Long.valueOf(e.getNodeid()).intValue();
            if(isSnmpPrimary(nodeId, e.getInterface())){
                linkUp(nodeId); 
            }
            else {
                debugf(this, "Discarding Event %s since ip %s is not the primary interface of node %d", e.getUei(), e.getInterface(), e.getNodeid());
            }
       }catch(Throwable t) {
           debugf(this, t, "Caught a throwable in handleServiceUnmanaged!");
       }finally {
           debugf(this, "Bailing out of handleServiceUnmanaged");
       }
    }

