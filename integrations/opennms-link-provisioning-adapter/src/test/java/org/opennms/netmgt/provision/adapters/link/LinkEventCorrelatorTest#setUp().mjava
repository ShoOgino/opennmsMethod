    @Before
    public void setUp() {
        
        m_eventIpcManager = new MockEventIpcManager();
        m_anticipator = m_eventIpcManager.getEventAnticipator();

        m_endPointConfigDao = new DefaultEndPointConfigurationDao();
        m_endPointConfigDao.setConfigResource(new ClassPathResource("/test-endpoint-configuration.xml"));
        m_endPointConfigDao.afterPropertiesSet();

        m_network = new MockNetwork();
        m_node1 = new MockNode(m_network, 1, "pittsboro-1");
        m_node1.addInterface("192.168.0.1");
        m_node1.getInterface("192.168.0.1").addService("EndPoint", 1);
        m_node2 = new MockNode(m_network, 2, "pittsboro-2");
        m_node2.addInterface("192.168.0.2").addService("EndPoint", 1);
        
        m_nodeLinkService = createMock(NodeLinkService.class);

        final OnmsNode node = new OnmsNode();
        node.setId(2);
        Collection<DataLinkInterface> dlis = new ArrayList<DataLinkInterface>();
        m_dataLinkInterface = new DataLinkInterface(node, 1, 1, 1, "U", new Date());
        dlis.add(m_dataLinkInterface);
        
        expect(m_nodeLinkService.getLinkContainingNodeId(1)).andStubReturn(dlis);
        expect(m_nodeLinkService.getLinkContainingNodeId(2)).andStubReturn(dlis);
        
        
        
        expect(m_nodeLinkService.getNodeLabel(1)).andStubReturn("pittsboro-1");
        expect(m_nodeLinkService.getNodeLabel(2)).andStubReturn("pittsboro-2");
        
    }

