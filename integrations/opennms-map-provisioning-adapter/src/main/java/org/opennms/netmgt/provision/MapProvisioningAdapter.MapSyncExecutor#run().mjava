        public void run() {
            syncMaps();
            while (true) {
                try {
                    log().debug("Sleeping: " + RESYNC_TIMEOUT);
                    Thread.sleep(RESYNC_TIMEOUT);
                } catch (InterruptedException e) {
                    log().error("Cannot sleep:" + e.getLocalizedMessage());
                }
                
                if (doSync) {
                    log().debug("Synchronization started");
                    Set<Integer> deletes = new TreeSet<Integer>();
                    Set<Integer> adds = new TreeSet<Integer>();
                    Set<Integer> updates = new TreeSet<Integer>();
                    log().info("acquiring lock...");
                    synchronized (m_lock) {                            
                        for (Integer i: m_deletes) {
                            deletes.add(i);
                        }                        
                        for (Integer i: m_adds) {
                            adds.add(i);
                        }
                        for (Integer i: m_updates) {
                            updates.add(i);
                        }
                        m_deletes = new TreeSet<Integer>();
                        m_updates = new TreeSet<Integer>();
                        m_adds = new TreeSet<Integer>();                            
                        doSync = false;
                    }
                    log().info("lock released.");
                    reSyncMap(deletes,adds,updates);
                } else {
                    log().debug("No Synchronization required");
                    
                }
            }
        }        

