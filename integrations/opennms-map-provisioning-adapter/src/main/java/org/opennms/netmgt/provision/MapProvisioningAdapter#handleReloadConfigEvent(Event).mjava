    /**
     * <p>handleReloadConfigEvent</p>
     *
     * @param event a {@link org.opennms.netmgt.xml.event.Event} object.
     */
    @EventHandler(uei = EventConstants.RELOAD_DAEMON_CONFIG_UEI)
    public void handleReloadConfigEvent(Event event) {
        if (isReloadConfigEventTarget(event)) {
            EventBuilder ebldr = null;
            LogUtils.infof(this, "reloading the maps adapter configuration");
            try {
                MapsAdapterConfigFactory.reload();
                syncMaps();
                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, "Provisiond.MapProvisioningAdapter");
                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, "Provisiond.MapProvisioningAdapter");
            } catch (Throwable e) {
                LogUtils.errorf(this, e, "unable to reload maps adapter configuration");
                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, "Provisiond.MapProvisioningAdapter");
                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, "Provisiond.MapProvisioningAdapter");
                ebldr.addParam(EventConstants.PARM_REASON, e.getLocalizedMessage().substring(1, 128));
            }
            if (ebldr != null) {
                getEventForwarder().sendNow(ebldr.getEvent());
            }
        }
    }

