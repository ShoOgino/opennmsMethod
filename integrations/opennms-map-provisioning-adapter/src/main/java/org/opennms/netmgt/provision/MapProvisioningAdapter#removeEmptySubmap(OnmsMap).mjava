    protected void removeEmptySubmap(OnmsMap submap) {
        log().debug("removeEmptySubmap: verify delete map element which correspond to empty submap: " + submap.getName());
        Map<String,List<Csubmap>> submaps = m_mapsAdapterConfig.getsubMaps();
        for (String mapName : submaps.keySet()) {
            for (Csubmap csubmap : submaps.get(mapName)) {
                if (csubmap.getName().equals(submap.getName())) {
                    if (csubmap.getAddwithoutelements()) continue;
                    log().debug("removeEmptySubmap: delete from container map: '" + mapName +"' empty submap '" + submap.getName() );
                    OnmsMap onmsMap = getSuitableMap(mapName);
                    Integer mapid = onmsMap.getId();
                    OnmsMapElement mapElement = m_onmsMapElementDao.findMapElement(submap.getId(), OnmsMapElement.MAP_TYPE, onmsMap);
                    if (mapElement != null) {
                        m_onmsMapElementDao.delete(mapElement);
                        m_onmsMapElementDao.flush();
                        onmsMap = m_onmsMapDao.findMapById(mapid);
                        onmsMap.setLastModifiedTime(new Date());
                        m_onmsMapDao.update(onmsMap);
                        m_onmsMapDao.flush();
                    }
                }
            }
        }
    }

