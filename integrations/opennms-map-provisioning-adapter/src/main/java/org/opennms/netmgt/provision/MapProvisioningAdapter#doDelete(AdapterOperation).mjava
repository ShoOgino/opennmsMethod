    /* (non-Javadoc)
     * @see org.opennms.netmgt.provision.ProvisioningAdapter#deleteNode(org.opennms.netmgt.model.OnmsNode)
     */
    @Transactional
    private void doDelete(AdapterOperation op) throws ProvisioningAdapterException {
        log().debug("Map PROVISIONING ADAPTER CALLED deleteNode");        
        m_nodeId = op.getNodeId();
        try {
            m_template.execute(new TransactionCallback() {
                public Object doInTransaction(TransactionStatus arg0) {
                    try {
                        for (OnmsMapElement elem: m_onmsNodeMapElementListMap.remove(Integer.valueOf(m_nodeId))) {
                            OnmsMap onmsMap = elem.getMap();
                            onmsMap.setLastModifiedTime(new Date());
                            m_onmsMapElementDao.delete(elem);
                            m_onmsMapDao.update(onmsMap);
                        }
                        m_onmsMapDao.flush();
                        m_onmsMapElementDao.flush();
                        m_onmsMapDao.clear();
                        m_onmsMapElementDao.clear();
                        removeEmptySubmaps();
                    } catch (Exception e) {
                        log().error(e.getMessage());
                    }
                    return null;
                }
            });
        } catch (Exception e) {
            sendAndThrow(m_nodeId, e);
        }
    }

