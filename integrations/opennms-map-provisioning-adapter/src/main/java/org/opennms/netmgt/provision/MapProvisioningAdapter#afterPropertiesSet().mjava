    public void afterPropertiesSet() throws Exception {
        
        Assert.notNull(m_onmsNodeDao, "Map Provisioning Adapter requires nodeDao property to be set.");
        Assert.notNull(m_onmsMapDao, "Map Provisioning Adapter requires OnmsMapDao property to be set.");
        Assert.notNull(m_onmsMapElementDao, "Map Provisioning Adapter requires OnmsMapElementDao property to be set.");
        Assert.notNull(m_mapsAdapterConfig, "Map Provisioning Adapter requires MapasAdapterConfig property to be set.");
        Assert.notNull(m_eventForwarder, "Map Provisioning Adapter requires EventForwarder property to be set.");

        m_template.execute(new TransactionCallback() {
            public Object doInTransaction(TransactionStatus arg0) {
                List<Cmap> cmaps = m_mapsAdapterConfig.getAllMaps();
                m_mapNameMapSizeListMap = new ConcurrentHashMap<String, Integer>(cmaps.size());
                
                List<OnmsNode> nodes = m_onmsNodeDao.findAllProvisionedNodes();
                m_onmsNodeMapElementListMap = new ConcurrentHashMap<Integer, List<OnmsMapElement>>(nodes.size());

                syncMaps(cmaps, nodes);
                return null;
           }

        });

    }

