    /**
     * Gets the hardware entity.
     *
     * @return the hardware entity
     */
    public OnmsHwEntity getOnmsHwEntity() {
        SnmpValue v = null;
        final OnmsHwEntity entity = new OnmsHwEntity();
        entity.setEntPhysicalIndex(getEntPhysicalIndex());
        v = getValue(entPhysicalDescr);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalDescr(v.toDisplayString().trim());
        v = getValue(entPhysicalVendorType);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalVendorType(v.toDisplayString().trim());
        v = getValue(entPhysicalContainedIn);
        if (v != null)
            entity.setEntPhysicalContainedIn(v.toInt());
        v = getValue(entPhysicalClass);
        if (v != null)
            entity.setEntPhysicalClass(CLASSES[v.toInt()]);
        v = getValue(entPhysicalParentRelPos);
        if (v != null)
            entity.setEntPhysicalParentRelPos(v.toInt());
        v = getValue(entPhysicalName);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalName(v.toDisplayString().trim().trim());
        v = getValue(entPhysicalHardwareRev);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalHardwareRev(v.toDisplayString().trim());
        v = getValue(entPhysicalFirmwareRev);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalFirmwareRev(v.toDisplayString().trim());
        v = getValue(entPhysicalSoftwareRev);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalSoftwareRev(v.toDisplayString().trim());
        v = getValue(entPhysicalSerialNum);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalSerialNum(v.toDisplayString().trim());
        v = getValue(entPhysicalMfgName);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalMfgName(v.toDisplayString().trim());
        v = getValue(entPhysicalModelName);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalModelName(v.toDisplayString().trim());
        v = getValue(entPhysicalAlias);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalAlias(v.toDisplayString().trim());
        v = getValue(entPhysicalAssetID);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalAssetID(v.toDisplayString().trim());
        v = getValue(entPhysicalIsFRU);
        if (v != null)
            entity.setEntPhysicalIsFRU(v.toInt() == 1 ? true : false);
        v = getValue(entPhysicalUris);
        if (v != null && !v.toDisplayString().trim().isEmpty())
            entity.setEntPhysicalUris(v.toDisplayString());
        if (vendorAttributes != null && vendorAttributes.size() > 0) {
            BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(entity);
            for (Map.Entry<SnmpObjId, HwEntityAttributeType> entry : vendorAttributes.entrySet()) {
                v = getValue(entry.getKey());
                if (v != null && !v.toDisplayString().trim().isEmpty()) {
                    String typeName = entry.getValue().getName();
                    if (replacementMap.containsKey(typeName)) {
                        String property = replacementMap.get(typeName);
                        if (wrapper.isWritableProperty(property)) {
                            wrapper.setPropertyValue(property, v.toDisplayString().trim());
                        }
                    } else {
                        entity.addAttribute(entry.getValue(), v.toDisplayString().trim());
                    }
                }                
            }
        }
        return entity;
    }

