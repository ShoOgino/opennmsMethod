	/**
	 * {@inheritDoc}
	 *
	 * Creates a new ticket (if none exists) or updates an existing ticket in the
	 * RT trouble ticket system. Ticket updates are currently limited to updating
	 * the ticket status only.
	 */
	public void saveOrUpdate(final Ticket newTicket) throws PluginException {
		
		String newTicketID;
		
		Ticket currentTicket = null;
		
		try {
		    
		    // If there's no external ID in the OpenNMS ticket, we need to create one
			
			if ((newTicket.getId() == null) ) {
			    
			    LogUtils.debugf(this, "TicketId is null creating a new ticket");
                RTTicket ticket = rtTicketFromTicket(newTicket);
                
                Long rtTicketNumber = null;
                try {
                    rtTicketNumber = m_requestTracker.createTicket(ticket);
                } catch (final Exception e) {
                    throw new PluginException(e);
                }
                
                if (rtTicketNumber == null) {
                    throw new PluginException("Received no ticket number from RT");
                }
				
			    newTicketID = rtTicketNumber.toString();
				newTicket.setId(newTicketID);

				LogUtils.debugf(this, "created new ticket: %s", newTicket.getId());
				
				
			} else {
			    
			    currentTicket = get(newTicket.getId()); 
				LogUtils.debugf(this, "updating existing ticket: %s", currentTicket.getId());
				
				if (currentTicket.getState() != newTicket.getState()) {
					updateRtStatus(newTicket);
				} else {
					// There is no else at the moment
					// Tickets are _only_ updated with new state
				}
				
			}
			
		} catch (final PluginException e) {
			LogUtils.errorf(this, e, "Failed to create or update RT ticket");
			throw e;
		}
			
	}

