    @Override
    public void doUpdateNode(final int nodeId) throws ProvisioningAdapterException {
        m_template.execute((TransactionCallback<Void>) status -> {
            LOG.debug("doUpdate: updating nodeid: {}", nodeId);

            final OnmsNode node = m_nodeDao.get(nodeId);
            Objects.requireNonNull(node, "doAdd: failed to return node for given nodeId: " + nodeId);
            LOG.debug("doUpdate: Fetching vendor asset string");
            final InetAddress ipaddress = getIpForNode(node);
            String vendor = node.getAssetRecord().getVendor();
            LOG.debug("doUpdate: Fetched asset string: \"{}\"", vendor);

            if (m_wsManConfigDao == null) {
                m_wsManConfigDao = BeanUtils.getBean("daoContext", "wsManConfigDao", WSManConfigDao.class);
            }
            final WsmanAgentConfig config = m_wsManConfigDao.getAgentConfig(ipaddress);
            final WSManEndpoint endpoint = WSManConfigDao.getEndpoint(config, ipaddress);
            final WSManClient client = m_factory.getClient(endpoint);
            LOG.debug("doUpdate: m_config: \"{}\"", m_config);

            final OnmsAssetRecord asset = node.getAssetRecord();
            m_config.getReadLock().lock();
            try {
                for (final AssetField field : m_config.getAssetFieldsForAddress(ipaddress, vendor)) {
                    try {
                        final String value = fetchWsManAssetString(client, endpoint, field.getWqlObjs(), field.getFormatString());
                        LOG.debug("doUpdate: Setting asset field \" {} \" to value: {}", field.getName(), value);
                        // Use Spring bean-accessor classes to set the field value
                        final BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(asset);
                        wrapper.setPropertyValue(field.getName(), value);
                    } catch (final BeansException e) {
                        LOG.warn("doUpdate: Could not set property \" {} \" on asset object {}", field.getName(), e.getMessage(), e);
                    } catch (final Throwable t) {
                        // This exception is thrown if the WSMAN ENUM fails or an incorrect number of
                        // parameters is returned by the agent or because of a misconfiguration.
                        LOG.warn("doUpdate: Could not set value for asset field \" {} \": {}", field.getName(), t.getMessage(), t);
                    }
                }
            } finally {
                m_config.getReadLock().unlock();
            }

            node.setAssetRecord(asset);
            m_nodeDao.saveOrUpdate(node);
            m_nodeDao.flush();
            return null;
        });
    }

