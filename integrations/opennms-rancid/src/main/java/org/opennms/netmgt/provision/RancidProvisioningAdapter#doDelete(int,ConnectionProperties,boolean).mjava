    public void doDelete(int nodeId,ConnectionProperties cp, boolean retry) throws ProvisioningAdapterException {

        log().debug("RANCID PROVISIONING ADAPTER CALLED deleteNode: nodeid: " + nodeId);
        
        /*
         * The work to maintain the hashmap boils down to needing to do deletes, so
         * here we go.
         */
        try {

            if (m_onmsNodeRancidNodeMap.containsKey(Integer.valueOf(nodeId))) {
                RancidNode rNode = m_onmsNodeRancidNodeMap.get(Integer.valueOf(nodeId)).getNode();
                RWSClientApi.deleteRWSRancidNode(cp, rNode);
  
                RancidNodeAuthentication rAuth = m_onmsNodeRancidNodeMap.get(Integer.valueOf(nodeId)).getAuth();
                RWSClientApi.deleteRWSAuthNode(cp, rAuth);
                m_onmsNodeRancidNodeMap.remove(Integer.valueOf(nodeId));
            } else {
                log().warn("No node found in nodeRancid Map for nodeid: " + nodeId);                
            }
            
        } catch (Exception e) {
            cp = getStandByRWSConnection();
            if (retry && cp != null) {
                doNodeConfigChanged(nodeId, cp, false);
            } else {
                sendAndThrow(nodeId, e);            
            }
        }
    }

