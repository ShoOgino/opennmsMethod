    @Override
    AdapterOperationSchedule createScheduleForNode(final int nodeId, AdapterOperationType type) {
        log().debug("Scheduling: " + type + " for nodeid: " + nodeId);
        if (type.equals(AdapterOperationType.CONFIG_CHANGE)) {
            final String ipaddress =
            (String)m_template.execute(new TransactionCallback() {
                public Object doInTransaction(TransactionStatus arg0) {
                    return getSuitableIpForRancid(nodeId);
                }
            });
            long initialDelay = m_rancidAdapterConfig.getDelay(ipaddress);
            int retries = m_rancidAdapterConfig.getRetries(ipaddress);
            log().debug("Setting initialDelay: " + initialDelay);
            log().debug("Setting retries: " + retries);
            
            return new AdapterOperationSchedule(initialDelay,60, retries, TimeUnit.SECONDS);
        }
        return new AdapterOperationSchedule();
    }

