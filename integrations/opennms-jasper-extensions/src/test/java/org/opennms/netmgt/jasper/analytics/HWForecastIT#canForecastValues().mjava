    @Test
    public void canForecastValues() throws Exception {
        final String qs = "ANALYTICS:HoltWinters=HW:X:12:1:0.95";
        RrdDataSourceFilter dse = new RrdDataSourceFilter(qs);

        // Use constant values for the Y column
        RowSortedTable<Integer, String, Double> table = TreeBasedTable.create();
        for (int i = 0; i < 100; i++) {
            table.put(i, "Timestamp", (double)(i * 1000));
            table.put(i, "X", 1.0d);
        }
        assertEquals(100, table.rowKeySet().size());

        // Make the forecasts
        dse.filter(table);

        // Original size + 12 forecasts
        assertEquals(112, table.rowKeySet().size());

        // The timestamps should be continuous
        for (int i = 0; i < 112; i++) {
            assertEquals((double)(i * 1000), table.get(i, "Timestamp"), 0.0001);
        }

        // The forecasted value should be constant
        for (int i = 100; i < 112; i++) {
            assertEquals(1.0d, table.get(i, "HWFit"), 0.0001);
            assertEquals(1.0d, table.get(i, "HWLwr"), 0.0001);
            assertEquals(1.0d, table.get(i, "HWUpr"), 0.0001);
        }
    }

