    public GrafanaQuery(String queryString) {
        JsonParser parser = new JsonParser();
        JsonObject jo = (JsonObject)parser.parse(queryString);
        JsonObject dashboard = jo.getAsJsonObject("dashboard");
        dashboardUid = dashboard.getAsJsonPrimitive("uid").getAsString();

        JsonObject time = jo.getAsJsonObject("time");
        from = new Date(time.getAsJsonPrimitive("from").getAsLong());
        to = new Date(time.getAsJsonPrimitive("to").getAsLong());

        JsonObject render = jo.getAsJsonObject("render");
        width = render.getAsJsonPrimitive("width").getAsInt();
        height = render.getAsJsonPrimitive("height").getAsInt();
        theme = render.getAsJsonPrimitive("theme").getAsString();

        JsonObject vars = jo.getAsJsonObject("variables");
        if (vars != null) {
            variables = vars.entrySet().stream()
                    .collect(Collectors.toMap(Map.Entry::getKey, e -> vars.getAsJsonPrimitive(e.getKey()).getAsString()));
        } else {
            variables = Collections.emptyMap();
        }
    }

