    public static ColumnValuesDataSource toDs(Table<Integer, String, Double> table) {
        String columnNames[] = table.columnKeySet().toArray(new String[0]);
        List<ColumnValues> columnValues = Lists.newLinkedList();
        int numRows = table.rowKeySet().size();

        // Rebuild all of the columns
        for(String columnName : columnNames) {
            if ("Timestamp".equalsIgnoreCase(columnName)) {
                // Always convert the Timestamp column to Date objects
                Object[] values = new Date[numRows];
                for (int i = 0; i < numRows; i++) {
                    values[i] = new Date(table.get(i, columnName).longValue());
                }
                columnValues.add(new ObjectArrayValues(values));
            } else {
                // Leave every other column as doubles
                double[] values = new double[numRows];
                for (int i = 0; i < numRows; i++) {
                    Double value = table.get(i, columnName);
                    // Convert any nulls to NaNs, avoids NPEs
                    if (value != null) {
                        values[i] = value;
                    } else {
                        values[i] = Double.NaN;
                    }
                }
                columnValues.add(new DoubleArrayValues(values));
            }
        }

        // Join the columns into a data source
        return new ColumnValuesDataSource(
                columnNames,
                numRows,
                columnValues.toArray(new ColumnValues[0])
        );
    }

