    private void connect(final boolean useSsl, final String url, final String username, final String password) throws IOException {
        connection = (HttpURLConnection) new URL(url).openConnection();

        // if ssl is enabled and the connection is not an SSL-Exception abort
        if (useSsl && !(connection instanceof HttpsURLConnection)) {
            throw new SSLException("A secure connection is expected but was not established. Use SSL = " + useSsl + ", URL = " + url);
        }

        // if ssl is not enabled, but the connection is SSL-enabled, warn
        if (!useSsl && connection instanceof HttpsURLConnection) {
            LOG.warn("A secure connection was established even if it was not intended. Use SSL = {}, URL = {}", useSsl, url);
        }

        // verify if authentication is required
        if (isAuthenticationRequired(username, password)) {
            connection.setRequestProperty("Authorization", createBasicAuthHeader(username, password));
        }
        connection.setAllowUserInteraction(false);
        connection.setConnectTimeout(CONNECT_TIMEOUT);
        connection.setUseCaches(false);
        connection.setDoOutput(true);
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Accept", "application/xml");
        connection.setRequestProperty("Accept-Charset", "UTF-8");
        connection.setRequestProperty("Content-Type", "application/xml");
        connection.setInstanceFollowRedirects(false); // we do not want to follow redirects, otherwise 200 OK might be returned
        connection.connect();
    }

