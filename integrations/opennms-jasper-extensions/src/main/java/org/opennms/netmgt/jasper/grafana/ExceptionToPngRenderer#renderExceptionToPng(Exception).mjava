    /**
     * Render the given exception to an image.
     *
     * @param e exception
     * @return a byte array of a .png representing the given exception
     * @throws IOException if an error occurs rendering the .png
     */
    public static byte[] renderExceptionToPng(Exception e) {
        // Build a string representation of the exception
        final StringBuilder sb = new StringBuilder();
        sb.append("Exception occurred: ");
        final String stack = Throwables.getStackTraceAsString(e) ;
        // Limit the length of the stack
        sb.append(getFirstNLines(stack, MAX_STACKTRACE_LINES));
        final String text = sb.toString();
        final String[] lines = text.split("\n");

        // Determine the maximum height of any line in the given text
        BufferedImage img = new BufferedImage(1, 1, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = img.createGraphics();
        g2d.setFont(font);
        int lineWidth = 0;
        int lineHeight = 0;
        FontMetrics fm = g2d.getFontMetrics();
        for (String line : lines) {
            lineWidth = Math.max(lineWidth, fm.stringWidth(line));
            lineHeight = Math.max(lineHeight, fm.getHeight());
        }
        g2d.dispose();

        // Now render the text to an image line by line
        final int paddingLeft = 10;
        final int paddingTop = 10;
        final int imgWidth = paddingLeft + lineWidth;
        final int imgHeight = paddingTop + lineHeight * lines.length;

        img = new BufferedImage(imgWidth, imgHeight, BufferedImage.TYPE_INT_RGB);
        g2d = img.createGraphics();
        g2d.setFont(font);
        g2d.setColor(Color.WHITE);
        g2d.fillRect(0, 0, imgWidth, imgHeight);
        fm = g2d.getFontMetrics();
        g2d.setColor(Color.BLACK);

        int yOffset = 0;
        for (String line : lines) {
            g2d.drawString(line, paddingLeft, yOffset + fm.getAscent());
            yOffset += lineHeight;
        }
        g2d.dispose();

        // Render the Graphics2D context to a PNG
        final ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try {
            ImageIO.write(img, "png", baos);
        } catch (IOException ex) {
            // Given that we're writing to a byte array, we don't expect this to ever happen
            throw new RuntimeException(e);
        }
        return baos.toByteArray();
    }

