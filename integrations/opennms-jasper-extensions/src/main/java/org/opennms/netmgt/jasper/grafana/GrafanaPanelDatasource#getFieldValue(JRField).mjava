    @Override
    public Object getFieldValue(final JRField jrField) {
        final String fieldName = jrField.getName();
        if (Objects.equals(WIDTH_FIELD_NAME, fieldName)) {
            return query.getWidth();
        } else if (Objects.equals(HEIGHT_FIELD_NAME, fieldName)) {
            return query.getHeight();
        } else if (Objects.equals(TITLE_FIELD_NAME, fieldName)) {
            return currentPanel.getTitle();
        } else if (Objects.equals(DATASOURCE_FIELD_NAME, fieldName)) {
            return currentPanel.getDatasource();
        } else if (Objects.equals(DESCRIPTION_FIELD_NAME, fieldName)) {
            return currentPanel.getDescription();
        } else if (Objects.equals(IMAGE_FIELD_NAME, fieldName)) {
            try {
                maybeRenderPanels();
                LOG.debug("Waiting for panel with id: {} on dashboard with uid: {} to finish rendering.",
                        currentPanel.getId(), dashboard.getUid());
                final byte[] pngBytes = panelRenders.get(currentPanel).get(5, TimeUnit.MINUTES);
                LOG.debug("PNG successfully rendered ({} bytes) for panel with id: {} on dashboard with uid: {}",
                        pngBytes.length, currentPanel.getId(), dashboard.getUid());
                return pngBytes;
            } catch (TimeoutException|InterruptedException|ExecutionException e) {
                LOG.warn("Exception while rendering panel with id: {} on dashboard with uid: {}",
                        currentPanel.getId(), dashboard.getUid(), e);
                return renderExceptionToPng(e);
            }
        }
        return "<unknown field name: " + fieldName + ">" ;
    }

