    /**
     * Used to dynamically lookup registered SnmpSyntax objects
     * 
     * @param asnType
     *            The ASN.1 type to search for
     * 
     * @return A new SnmpSyntax object of the appropiate type
     * 
     */
    static SnmpSyntax getSyntaxObject(byte asnType) {
        SnmpSyntax obj = null;
        switch (asnType) {
        case SnmpInt32.ASNTYPE:
            obj = new SnmpInt32();
            break;

        case SnmpCounter32.ASNTYPE:
            obj = new SnmpCounter32();
            break;

        case SnmpGauge32.ASNTYPE:
            obj = new SnmpGauge32();
            break;

        case SnmpCounter64.ASNTYPE:
            obj = new SnmpCounter64();
            break;

        case SnmpTimeTicks.ASNTYPE:
            obj = new SnmpTimeTicks();
            break;

        case SnmpOctetString.ASNTYPE:
            obj = new SnmpOctetString();
            break;

        case SnmpOpaque.ASNTYPE:
            obj = new SnmpOpaque();
            break;

        case SnmpIPAddress.ASNTYPE:
            obj = new SnmpIPAddress();
            break;

        case SnmpObjectId.ASNTYPE:
            obj = new SnmpObjectId();
            break;

        case SnmpV2PartyClock.ASNTYPE:
            obj = new SnmpV2PartyClock();
            break;

        case SnmpNoSuchInstance.ASNTYPE:
            obj = new SnmpNoSuchInstance();
            break;

        case SnmpNoSuchObject.ASNTYPE:
            obj = new SnmpNoSuchObject();
            break;

        case SnmpEndOfMibView.ASNTYPE:
            obj = new SnmpEndOfMibView();
            break;

        case SnmpNull.ASNTYPE:
            obj = new SnmpNull();
            break;
        } // end case

        //
        // If the object is null then search
        // through user registered objects
        // see the SnmpSession.registerSyntaxObject
        // method
        //
        if (obj == null) {
            synchronized (m_syntaxArray) {
                for (int x = m_syntaxArray.size() - 1; x >= 0; --x) {
                    SnmpSyntax o = (SnmpSyntax) m_syntaxArray.get(x);
                    if (asnType == o.typeId()) {
                        obj = o.duplicate();
                        break; // exit the loop
                    }
                }
            }
        }
        return obj;
    }

