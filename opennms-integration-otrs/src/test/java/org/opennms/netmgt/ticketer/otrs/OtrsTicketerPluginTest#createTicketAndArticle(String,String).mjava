	 private TicketIDAndNumber createTicketAndArticle(String ticketSubject, String articleBody) throws InterruptedException {
			
			TicketIDAndNumber idAndNumber = null;
			
			m_configDao = new DefaultOtrsConfigDao();
			
			TicketCore otrsTicket = new TicketCore();

			otrsTicket.setLock(m_configDao.getLock());
			otrsTicket.setQueue(m_configDao.getQueue());
			otrsTicket.setPriority(m_configDao.getPriority());
			otrsTicket.setState(m_configDao.getState());
			otrsTicket.setOwnerID(m_configDao.getOwnerID());
			
			otrsTicket.setUser(defaultUser);
			otrsTicket.setTitle(ticketSubject);
			
			Integer articleId = null;
			
			TicketServiceLocator service = new TicketServiceLocator();

			service.setTicketServicePortEndpointAddress(m_configDao.getEndpoint());
			
			m_creds  = new Credentials(m_configDao.getUserName(),m_configDao.getPassword());

			TicketServicePort_PortType port = null;
			
			try {
				port = service.getTicketServicePort();
			} catch (ServiceException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			
			try {
				idAndNumber = port.ticketCreate(otrsTicket, m_creds);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			ArticleCore otrsArticle = new ArticleCore();
				
			otrsArticle.setArticleType(m_configDao.getArticleType());
			otrsArticle.setSenderType(m_configDao.getArticleSenderType());
			otrsArticle.setContentType(m_configDao.getArticleContentType());
			otrsArticle.setHistoryType(m_configDao.getArticleHistoryType());
			otrsArticle.setHistoryComment(m_configDao.getArticleHistoryComment());
			otrsArticle.setSenderType(m_configDao.getArticleSenderType());
			
			otrsArticle.setSubject(defaultArticleSubject);
			otrsArticle.setFrom(m_configDao.getArticleFrom());
			otrsArticle.setBody(defaultArticleBody);
			otrsArticle.setUser(defaultUser);
			otrsArticle.setTicketID(idAndNumber.getTicketID());
			otrsArticle.setBody(articleBody);

			
			try {
				articleId = port.articleCreate(otrsArticle, m_creds);
				assertNotNull(articleId);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			return idAndNumber;
	 }

