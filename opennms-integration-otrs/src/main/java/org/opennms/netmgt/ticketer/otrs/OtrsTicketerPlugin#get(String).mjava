	public Ticket get(String ticketId) {

		TicketWithArticles ticketWithArticles = null;

		// don't try to get ticket if it's marked as not available
		
		Ticket opennmsTicket = new Ticket();

		if (ticketId.equals(UNAVAILABLE_TICKET_ID))  {
		    
		    log().error("No OTRS ticketID available in OpenNMS Ticket");
		    
		} else {
		    
		    TicketServicePort_PortType port = getTicketServicePort(m_endpoint);
	   
		    if (port != null) {
		    
    		    long otrsTicketNumber = Long.parseLong(ticketId.trim());
    
    			Credentials creds = new Credentials();
    
    			creds.setUser(m_configDao.getUserName());
    			creds.setPass(m_configDao.getPassword());
    
    			// get the ticket from OTRS system
    			
    			try {
    				ticketWithArticles = port.getByNumber(otrsTicketNumber, creds);
    			} catch (RemoteException e) {
    				log().error("Failed to retrieve OTRS ticket" + e);
    				m_eventIpcManager.sendNow(createEvent("Failed to retrieve OTRS ticket"));
    			}
    			
		    }
			
		}
		
		// construct an opennms ticket from the returned OTRS ticket and articles
		// That's if there were any.....

		if (ticketWithArticles != null) {

			// add ticket basics from the OTRS ticket
			
			log().debug(
					"Adding Ticket details from OTRS ticket # "
							+ ticketWithArticles.getTicket().getTicketNumber());
			opennmsTicket.setId(ticketWithArticles.getTicket().getTicketNumber().toString());
			opennmsTicket.setSummary(ticketWithArticles.getTicket().getTitle());
			
			// Note that we user "Owner" from the OTRS ticket here. There is nothing to ensure
			// That this is a valid OpenNMS user
			
			opennmsTicket.setUser(ticketWithArticles.getTicket().getOwner());
			opennmsTicket.setState(otrsToOpenNMSState(ticketWithArticles.getTicket().getStateID()));
			
			log().debug("Retrieved ticket state : " + otrsToOpenNMSState(ticketWithArticles.getTicket().getStateID()));
			
			// add all the article details from the OTRS ticket
			// this is not strictly essential as we have no way of viewing this atm.
			
			String opennmsTicketDetails = "";

			for (Article article : ticketWithArticles.getArticles()) {
				log().debug(
						"Adding Article details from OTRS article ID "
								+ article.getArticleID());
				opennmsTicketDetails = opennmsTicketDetails + "\n"
						+ "From:    " + article.getFrom() + "\n" + "Subject: "
						+ article.getSubject() + "\n" + "Body:\n"
						+ article.getBody() + "\n";
			}
			
			opennmsTicket.setDetails(opennmsTicketDetails);

		} else {
		    
		    // Create a skeleton ticket at state CANCELLED
		    // will do this if:
		    // 1. There was no ticketID attached to the OpenNMS ticket
		    // 2. Ticket retrieval failed.
		    
		    log().error("No valid Ticket data available - returning 'unavailable' ticket");
		    
		    opennmsTicket.setId(UNAVAILABLE_TICKET_ID);
		    opennmsTicket.setState(Ticket.State.CANCELLED);
		    opennmsTicket.setSummary(UNAVAILABLE_TICKET_SUMMARY);
		    opennmsTicket.setUser(UNAVAILABLE_TICKET_USER);
		    opennmsTicket.setDetails(UNAVAILABLE_TICKET_DETAILS);
		    
		}

		return opennmsTicket;

	}

