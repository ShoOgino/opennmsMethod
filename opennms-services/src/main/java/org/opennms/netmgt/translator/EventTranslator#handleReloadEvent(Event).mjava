    /**
     * Re-marshals the translator specs into the factory's config member and
     * re-registers the UIEs with the eventProxy.
     *
     * @param e The reload daemon config event<code>Event</code>
     */
    protected void handleReloadEvent(Event e) {
        log().info("onEvent: reloading configuration....");
        EventBuilder ebldr = null;
        try {
            List<String> previousUeis = m_config.getUEIList();
            m_config.update();
            
            //need to re-register the UEIs not including those the daemon
            //registered separate from the config (i.e. reloadDaemonConfig)
            getEventManager().removeEventListener(this, previousUeis);
            getEventManager().addEventListener(this, m_config.getUEIList());
            
            log().debug("onEvent: configuration reloaded.");
            ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, getName());
            ebldr.addParam(EventConstants.PARM_DAEMON_NAME, "Translator");
        } catch (Exception exception) {
            log().error("onEvent: reload config failed:"+e, exception);
            ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, getName());
            ebldr.addParam(EventConstants.PARM_DAEMON_NAME, "Translator");
            ebldr.addParam(EventConstants.PARM_REASON, exception.getLocalizedMessage().substring(1, 128));
        }
        if (ebldr != null) {
            m_eventMgr.sendNow(ebldr.getEvent());
        }
        
        log().info("onEvent: reload configuration: reload configuration contains "+m_config.getUEIList().size()+" UEI specs.");
    }

