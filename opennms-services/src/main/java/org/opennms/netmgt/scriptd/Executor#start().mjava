    public synchronized void start() {

        for (Engine engine : m_config.getEngines()) {

            LOG.debug("Registering engine: {}", engine.getLanguage());

            String[] extensions = null;

            String extensionList = engine.getExtensions();

            if (extensionList != null) {
                StringTokenizer st = new StringTokenizer(extensionList);

                extensions = new String[st.countTokens()];

                int j = 0;

                while (st.hasMoreTokens()) {
                    extensions[j++] = st.nextToken();
                }
            }

            BSFManager.registerScriptingEngine(engine.getLanguage(), engine.getClassName(), extensions);
        }

        m_scriptManager = new BSFManager();
        m_scriptManager.registerBean("log", LOG);

        // Run all start scripts
        for (StartScript startScript : m_config.getStartScripts()) {
            try {
                m_scriptManager.exec(startScript.getLanguage(), "", 0, 0, startScript.getContent());
            } catch (BSFException e) {
                LOG.error("Start script failed: " + startScript, e);
            }
        }

        // Start the thread pool
        m_executorService = Executors.newFixedThreadPool(1, new LogPreservingThreadFactory("Scriptd-Executor", 1));

        // Register the event listener after the thread pool has been
        // started
        try {
            m_broadcastEventProcessor = new BroadcastEventProcessor(this);
        } catch (Throwable e) {
            LOG.error("Failed to setup event reader", e);
            throw new UndeclaredThrowableException(e);
        }

        LOG.debug("Scriptd executor started");
    }

