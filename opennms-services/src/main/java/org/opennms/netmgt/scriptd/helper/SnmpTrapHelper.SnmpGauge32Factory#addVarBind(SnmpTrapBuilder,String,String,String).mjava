        /**
         * Constructs a new SnmpVarBind with the specified name and value. The
         * value will be encoded as an SnmpGauge32. The value is assumed to have
         * been encoded with the specified encoding (only XML_ENCODING_TEXT is
         * supported).
         * @param name
         *            The name (a.k.a. "id") of the variable binding to be
         *            created
         * @param encoding
         *            Describes the way in which the value content has been
         *            encoded (i.e. XML_ENCODING_TEXT, or XML_ENCODING_BASE64)
         * @param value
         *            The variable binding value
         * 
         * @return The newly-created variable binding
         * @exception Throws
         *                SnmpTrapHelperException if the variable binding cannot
         *                be created for any reason (e.g. encoding not
         *                supported, invalid value, etc.).
         */
        @Override
        public void addVarBind(SnmpTrapBuilder trap, String name, String encoding, String value) throws SnmpTrapHelperException {

            if (EventConstants.XML_ENCODING_TEXT.equals(encoding)) {
                try {
                    trap.addVarBind(SnmpObjId.get(name), SnmpUtils.getValueFactory().getGauge32(Long.parseLong(value)));
                }
                
                catch (NumberFormatException e) {
                    throw new SnmpTrapHelperException("Value " + value + "is invalid for SnmpGauge32");
                }

                catch (IllegalArgumentException e) {
                    throw new SnmpTrapHelperException("Value " + value + "is invalid for SnmpGauge32");
                }

                catch (NullPointerException e) {
                    throw new SnmpTrapHelperException("Value is null for SnmpGauge32");
                }
            } else {
                throw new SnmpTrapHelperException("Encoding " + encoding + "is invalid for SnmpGauge32");
            }
        }

