    public void onEvent(Event event) {
        if (RELOAD_CONFIG_UEI.equals(event.getUei())) {
            try {
                log().info("onEvent: reloading configuration.");
                log().debug("onEvent: Number of elements in schedule:"+m_scheduler.getScheduled());
                log().debug("onEvent: calling stop on scheduler.");

                stop();
                while (m_scheduler.getRunner().getStatus() != STOPPED || m_scheduler.getStatus() != STOPPED) {
                    log().debug("onEvent: waiting for scheduler to stop." +
                            " Current status of scheduler: "+m_scheduler.getStatus()+"; Current status of runner: "+m_scheduler.getRunner().getStatus());
                    Thread.sleep(500);
                }
                log().debug("onEvent: Current status of scheduler: "+m_scheduler.getStatus()+"; Current status of runner: "+m_scheduler.getRunner().getStatus());
                log().debug("onEvent: Number of elements in schedule:"+m_scheduler.getScheduled());
                log().debug("onEvent: reloading vacuumd configuration.");

                VacuumdConfigFactory.reload();
                log().debug("onEvent: creating new schedule and rescheduling automations.");

                init();
                log().debug("onEvent: restarting vacuumd and scheduler.");

                start();
                log().debug("onEvent: Number of elements in schedule:"+m_scheduler.getScheduled());
            } catch (MarshalException e) {
                log().error("onEvent: problem marshaling vacuumd configuration: " + e, e);
            } catch (ValidationException e) {
                log().error("onEvent: problem validating vacuumd configuration: " + e, e);
            } catch (IOException e) {
                log().error("onEvent: IO problem reading vacuumd configuration: " + e, e);
            } catch (InterruptedException e) {
                log().error("onEvent: Problem interrupting current Vacuumd Thread: " + e, e);
            }
            log().info("onEvent: completed configuration reload.");
        }
    }

