    /**
     * Removes the given event from the programmatic event store.  This store currently implemented as a file (referenced from eventconf.xml)
     * The programmatic store is a separate storage area, so that incidental programmatic editing of events (e.g. custom UEIs for thresholds, edited 
     * through the Web-UI) does not clutter up the otherwise carefully maintained event files.  This method does not save (persist) the changes
     * 
     * @param event The fully configured Event object to remove.
     * @returns true if the event was removed, false if it wasn't found (either not in the programmatic store, or the store didn't exist)
     */   
    public boolean removeEventFromProgrammaticStore(Event event) {
        if (!m_eventFiles.containsKey(m_programmaticStoreFile)) {
            return false; // Oops, doesn't exist
        }
        
        Events events = m_eventFiles.get(m_programmaticStoreFile);
        boolean result = events.removeEvent(event);
        if (events.getEventCount() == 0) {
            // No more events in the programmatic store.  We must remove that file entry.
            m_eventFiles.remove(m_programmaticStoreFile);
            Events root = m_eventFiles.get(m_rootConfigFile);
            root.removeEventFile(m_programmaticStoreFile.getAbsolutePath());
            // The file will be deleted by saveCurrent, not here
        }
        return result;
    }

