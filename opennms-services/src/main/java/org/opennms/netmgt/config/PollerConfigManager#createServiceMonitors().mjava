    /**
     * @param poller
     * @return
     */
    private synchronized void createServiceMonitors() {
        ThreadCategory log = ThreadCategory.getInstance(getClass());
    
        // Load up an instance of each monitor from the config
        // so that the event processor will have them for
        // new incomming events to create pollable service objects.
        //
        log.debug("start: Loading monitors");

        
        Collection<ServiceMonitorLocator> locators = getServiceMonitorLocators(DistributionContext.DAEMON);
        
        for (ServiceMonitorLocator locator : locators) {
            try {
                m_svcMonitors.put(locator.getServiceName(), locator.getServiceMonitor());
            } catch (Throwable t) {
                if (log.isEnabledFor(Level.WARN)) {
                    log.warn("start: Failed to create monitor " + locator.getServiceLocatorKey() + " for service " + locator.getServiceName(), t);
                }
            }
        }
    
    }

