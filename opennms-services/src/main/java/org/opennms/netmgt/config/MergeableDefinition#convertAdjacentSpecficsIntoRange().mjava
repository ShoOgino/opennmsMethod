    /**
     * Converts specifics into ranges when their diffs are abs() 1
     */
    private void convertAdjacentSpecficsIntoRange() {
        sortSpecifics();
        List specificList = new ArrayList(new LinkedHashSet(getConfigDef().getSpecificCollection()));
        List definedRanges = Arrays.asList(getConfigDef().getRange());
        ArrayList newRanges = new ArrayList();
        
        if (specificList.size() > 1) {

            for (ListIterator it = specificList.listIterator(); it.hasNext();) {
                final MergeableSpecific specific = new MergeableSpecific((String)it.next());
                final Range newRange = new Range();
                newRange.setBegin(specific.getSpecific());
                while (it.hasNext()) {
                    String nextSpecific = (String)it.next();
                    if (specific.compareTo(nextSpecific) == -1) {
                        newRange.setEnd(nextSpecific);
                        getConfigDef().removeSpecific(specific.getSpecific());
                        getConfigDef().removeSpecific(nextSpecific);
                        specific.setSpecific(nextSpecific);
                    } else {
                        it.previous();
                        break;
                    }
                }
                
                if (newRange.getEnd() != null) {
                    newRanges.add(newRange);
                }
            }
            newRanges.addAll(definedRanges);
            getConfigDef().setRangeCollection(newRanges);
            sortRanges();
        }
    }

