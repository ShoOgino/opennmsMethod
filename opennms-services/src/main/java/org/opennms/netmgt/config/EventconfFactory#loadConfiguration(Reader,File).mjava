    protected void loadConfiguration(Reader rdr, File rootConfigFile) throws MarshalException, ValidationException, FileNotFoundException, IOException {
        Map<File, Events> eventFiles = new HashMap<File, Events>();
        EventConfData eventConfData = new EventConfData();
        Set<String> secureTags = new HashSet<String>();

        Events events = CastorUtils.unmarshal(Events.class, rdr);
        IOUtils.closeQuietly(rdr);
        
        secureTags.addAll(events.getGlobal().getSecurity().getDoNotOverrideCollection());
        processEvents(eventFiles, eventConfData, rootConfigFile, events);

        for (String eventFilePath : events.getEventFileCollection()) {
            File eventFile = new File(eventFilePath);
            
            if (!eventFile.isAbsolute()) {
                if (rootConfigFile == null) {
                    throw new IOException("Event configuration file contains an eventFile element with a relative path, however loadConfiguration was called without a rootConfigFile parameter, so the relative path cannot be resolved.  The event-file entry is: " + eventFilePath);
                }
                
                eventFile = new File(rootConfigFile.getParentFile(), eventFilePath);
                // Should we do this, too?
                // eventFile = tempFile.getCanonicalFile();
            }

            
            FileReader fileIn = new FileReader(eventFile);
            if (fileIn == null) {
                throw new IOException("Eventconf: Failed to load/locate events file: " + eventFile);
            }

            Events filelevel = CastorUtils.unmarshal(Events.class, fileIn);
            IOUtils.closeQuietly(fileIn);
            
            if (filelevel.getGlobal() != null) {
                throw new ValidationException("The event file " + eventFile + " included from the top-level event configuration file cannot have a 'global' element");
            }
            if (filelevel.getEventFileCollection().size() > 0) {
                throw new ValidationException("The event file " + eventFile + " included from the top-level event configuration file cannot include other configuration files: " + StringUtils.collectionToCommaDelimitedString(filelevel.getEventFileCollection()));
            }
            
            processEvents(eventFiles, eventConfData, eventFile, filelevel);
        }
        
        m_eventFiles = eventFiles;
        m_eventConfData = eventConfData;
        m_secureTags = secureTags;
    }

