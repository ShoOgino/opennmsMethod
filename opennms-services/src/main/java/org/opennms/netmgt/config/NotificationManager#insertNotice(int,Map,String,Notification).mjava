    /**
     * This method inserts a row into the notifications table in the database.
     * This row indicates that the page has been sent out.
     * @param queueID
     * @param notification TODO
     */
    public void insertNotice(int notifyId, Map params, String queueID, Notification notification) throws SQLException {
        Connection connection = null;
        try {
            connection = getConnection();
            PreparedStatement statement = connection.prepareStatement("INSERT INTO notifications (" +
                    "textmsg, numericmsg, notifyid, pagetime, nodeid, interfaceid, serviceid, eventid, " +
                    "eventuei, subject, queueID, notifConfigName) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
    
            // notifications textMsg field
            statement.setString(1, (String) params.get(NotificationManager.PARAM_TEXT_MSG));
    
            // notifications numericMsg field
            statement.setString(2, (String) params.get(NotificationManager.PARAM_NUM_MSG));
    
            // notifications notifyID field
            statement.setInt(3, notifyId);
    
            // notifications pageTime field
            statement.setTimestamp(4, new Timestamp((new Date()).getTime()));
    
            // notifications nodeID field
            String node = (String) params.get(NotificationManager.PARAM_NODE);
            if (node != null && !node.trim().equals("") && !node.toLowerCase().equals("null") && !node.toLowerCase().equals("%nodeid%")) {
                statement.setInt(5, Integer.parseInt(node));
            } else {
                statement.setNull(5, Types.INTEGER);
            }
    
            // notifications interfaceID field
            String ipaddr = (String) params.get(NotificationManager.PARAM_INTERFACE);
            if (ipaddr != null && !ipaddr.trim().equals("") && !ipaddr.toLowerCase().equals("null") && !ipaddr.toLowerCase().equals("%interface%")) {
                statement.setString(6, ipaddr);
            } else {
                statement.setString(6, null);
            }
    
            // notifications serviceID field
            String service = (String) params.get(NotificationManager.PARAM_SERVICE);
            if (service != null && !service.trim().equals("") && !service.toLowerCase().equals("null") && !service.toLowerCase().equals("%service%")) {
                statement.setInt(7, getServiceId(service));
            } else {
                statement.setNull(7, Types.INTEGER);
            }
    
            // eventID field
            String eventID = (String) params.get("eventID");
            statement.setInt(8, Integer.parseInt(eventID));
    
            statement.setString(9, (String) params.get("eventUEI"));
            
            // notifications subject field
            statement.setString(10, (String) params.get(NotificationManager.PARAM_SUBJECT));
            
            // the queue this will be sent on
            statement.setString(11, queueID);
            
            statement.setString(12, notification.getName());
    
            statement.executeUpdate();
            statement.close();
        } finally {
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                }
            }
        }
    }

