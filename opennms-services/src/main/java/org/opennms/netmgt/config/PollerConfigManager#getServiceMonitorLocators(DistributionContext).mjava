    public synchronized Collection<ServiceMonitorLocator> getServiceMonitorLocators(DistributionContext context) {
        List<ServiceMonitorLocator> locators = new ArrayList<ServiceMonitorLocator>();
        Enumeration<Monitor> monitors = enumerateMonitor();
        while (monitors.hasMoreElements()) {
            Monitor monitor = monitors.nextElement();
            try {
                Class<? extends ServiceMonitor> mc = findServiceMonitorClass(monitor);
                if (isDistributableToContext(mc, context)) {
                    ServiceMonitorLocator locator = new DefaultServiceMonitorLocator(monitor.getService(), mc);
                    locators.add(locator);
                }
            } catch (ClassNotFoundException e) {
                log().warn("Unable to location monitor for service: "+monitor.getService()+" class-name: "+monitor.getClassName(), e);
            } catch (CastorObjectRetrievalFailureException e) {
                log().warn(e.getMessage(), e.getRootCause());
            }
            
        }
        
        return locators;
        
    }

