    /**
     * 
     */
    public synchronized void replaceNotification(final String oldName, final Notification newNotice) throws MarshalException, ValidationException, IOException, ClassNotFoundException {
        //   In order to preserve the order of the notices, we have to replace "in place".

        Notification notice = getNotification(oldName);
	if (notice != null) {
       	notice.setWriteable(newNotice.getWriteable());
	        notice.setDescription(newNotice.getDescription());
	        notice.setUei(newNotice.getUei());
	        notice.setRule(newNotice.getRule());
	        notice.setDestinationPath(newNotice.getDestinationPath());
	        notice.setNoticeQueue(newNotice.getNoticeQueue());
	        notice.setTextMessage(newNotice.getTextMessage());
	        notice.setSubject(newNotice.getSubject());
	        notice.setNumericMessage(newNotice.getNumericMessage());
	        notice.setStatus(newNotice.getStatus());
	        notice.setVarbind(newNotice.getVarbind());
           
	        Parameter parameters[] = newNotice.getParameter();
	        for (int i = 0; i < parameters.length; i++) {
		            Parameter newParam = new Parameter();
		            newParam.setName(parameters[i].getName());
		            newParam.setValue(parameters[i].getValue());

		            notice.addParameter(newParam);
	        } 
                saveCurrent();
	}
	else	
        	addNotification(newNotice);
     }

