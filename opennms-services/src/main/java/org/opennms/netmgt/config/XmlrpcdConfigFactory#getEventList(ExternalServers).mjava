    /**
     * Retrieves configured list of subscribed event uei for the given
     *  subscribing server.
     *
     * @throws org.exolab.castor.xml.ValidationException if a serverSubscription
     *          element references a subscription name that doesn't exist
     * 
     * @return an enumeration of subscribed event ueis.
     */
    public synchronized ArrayList<SubscribedEvent> getEventList(ExternalServers server) throws ValidationException {
        // get names of event subscriptions from server
        List<String> serverSubs = server.getServerSubscriptionCollection();

        // get event lists from names
        ArrayList<SubscribedEvent> allEventsList = new ArrayList<SubscribedEvent>();
        for (int i = 0; i < serverSubs.size(); i++) {
            String name = serverSubs.get(i);

            List<Subscription> subscriptions = m_config.getSubscriptionCollection();

            boolean foundSubscription = false;

            for (int j = 0; j < subscriptions.size(); j++) {
                Subscription sub = subscriptions.get(j);
                if (sub.getName().equals(name)) {
                    allEventsList.addAll(sub.getSubscribedEventCollection());
                    foundSubscription = true;
                    break;
                }
            }

            if (!foundSubscription) {
                // oops -- a serverSubscription element referenced a 
                //  subscription element that doesn't exist
                
                Category log = ThreadCategory.getInstance(getClass());
                log.error("serverSubscription element " + name + 
                            " references a subscription that does not exist");
                throw new ValidationException("serverSubscription element " +
                    name + " references a subscription that does not exist");
            }
        }

        // return the merged list
        return(allEventsList);

    }

