    private void populateSnmpCollection(final SnmpCollection coll, final Package pkg, final String sysoid) {
        coll.setPackageName(pkg.getName());
   		coll.setInitialSleepTime(getInitialSleepTime());
   		coll.setPollInterval(pkg.hasSnmp_poll_interval()? pkg.getSnmp_poll_interval() : getSnmpPollInterval());
        
   		if (hasIpRouteClassName(sysoid)) {
   		    coll.setIpRouteClass(getIpRouteClassName(sysoid));
   		    LogUtils.debugf(this, "populateSnmpCollection: found class to get ipRoute: %s", coll.getIpRouteClass());
   		} else {
   		    coll.setIpRouteClass(DEFAULT_IP_ROUTE_CLASS_NAME);
   		    LogUtils.debugf(this, "populateSnmpCollection: Using default class to get ipRoute: %s", coll.getIpRouteClass());
   		}
   		
   		if (pkg.hasEnableVlanDiscovery() && pkg.getEnableVlanDiscovery() && hasClassName(sysoid)) {
   		    coll.setVlanClass(getVlanClassName(sysoid));
			LogUtils.debugf(this, "populateSnmpCollection: found class to get Vlans: %s", coll.getVlanClass());
		} else if (!pkg.hasEnableVlanDiscovery() && enableVlanDiscovery() && hasClassName(sysoid)) {
		    coll.setVlanClass(getVlanClassName(sysoid));
		    LogUtils.debugf(this, "populateSnmpCollection: found class to get Vlans: %s", coll.getVlanClass());
		} else {
		    LogUtils.debugf(this, "populateSnmpCollection: no class found to get Vlans or VlanDiscoveryDisabled for Package: %s", pkg.getName());
		}

        coll.collectCdpTable(pkg.hasUseCdpDiscovery()? pkg.getUseCdpDiscovery() : useCdpDiscovery());

        final boolean useIpRouteDiscovery = (pkg.hasUseIpRouteDiscovery()? pkg.getUseIpRouteDiscovery() : useIpRouteDiscovery());
		final boolean saveRouteTable = (pkg.hasSaveRouteTable()? pkg.getSaveRouteTable() : saveRouteTable());

		coll.SaveIpRouteTable(saveRouteTable);
		coll.collectIpRouteTable(useIpRouteDiscovery || saveRouteTable);

		final boolean useBridgeDiscovery = (pkg.hasUseBridgeDiscovery()? pkg.getUseBridgeDiscovery() : useBridgeDiscovery());
		coll.collectBridgeForwardingTable(useBridgeDiscovery);

		final boolean saveStpNodeTable = (pkg.hasSaveStpNodeTable()? pkg.getSaveStpNodeTable() : saveStpNodeTable());

		coll.saveStpNodeTable(saveStpNodeTable);
		coll.collectStpNode(useBridgeDiscovery || saveStpNodeTable);

		final boolean saveStpInterfaceTable = (pkg.hasSaveStpInterfaceTable()? pkg.getSaveStpInterfaceTable() : saveStpInterfaceTable());
		
		coll.saveStpInterfaceTable(saveStpInterfaceTable);
		coll.collectStpTable(useBridgeDiscovery || saveStpInterfaceTable);
    }

