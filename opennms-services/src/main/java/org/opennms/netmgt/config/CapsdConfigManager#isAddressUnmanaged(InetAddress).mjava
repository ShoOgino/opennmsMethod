    /**
     * {@inheritDoc}
     *
     * Checks the configuration to determine if the target is managed or
     * unmanaged.
     */
    public boolean isAddressUnmanaged(InetAddress target) {
        String managementPolicy = m_config.getManagementPolicy();
        boolean managedByDefault = (managementPolicy == null || managementPolicy.equalsIgnoreCase("managed"));
    
        boolean found_denial = false;
        boolean found_accept = false;
        List<IpManagement> ipManagements = getIpManagements();
        Iterator<IpManagement> ipIter = ipManagements.iterator();
        while (ipIter.hasNext() && !found_denial) {
            IpManagement mgt = ipIter.next();
            for (String saddr : getSpecifics(mgt)) {
                InetAddress addr;
                try {
                    addr = InetAddress.getByName(saddr);
                } catch (UnknownHostException e) {
                    log().info("Failed to convert specific address '" + saddr + "' to an InetAddress: " + e, e);
                    continue;
                }
                
                if (addr.equals(target)) {
                    if (mgt.getPolicy() == null || mgt.getPolicy().equalsIgnoreCase("managed")) {
                        found_accept = true;
                    } else {
                        found_denial = true;
                    }

                    break;
                }
            }
    
            // now check the ranges
            List<Range> ranges = getRanges(mgt);
            Iterator<Range> rangeIter = ranges.iterator();
            while (!found_denial && rangeIter.hasNext()) {
                Range range = rangeIter.next();

                InetAddress saddr;
                try {
                    saddr = InetAddress.getByName(range.getBegin());
                } catch (UnknownHostException e) {
                    log().info("Failed to convert begin address '" + range.getBegin() + "' to an InetAddress: " + e, e);
                    continue;
                }

                InetAddress eaddr;
                try {
                    eaddr = InetAddress.getByName(range.getEnd());
                } catch (UnknownHostException e) {
                    log().info("Failed to convert end address '" + range.getEnd() + "' to an InetAddress: " + e, e);
                    continue;
                }

                long start = toLong(saddr);
                long stop = toLong(eaddr);
                long tgt = toLong(target);
                if (start <= tgt && tgt <= stop) {
                    if (mgt.getPolicy() == null || mgt.getPolicy().equalsIgnoreCase("managed")) {
                        found_accept = true;
                    } else {
                        found_denial = true;
                    }

                    break;
                }
            }
    
            // now check urls
            List<String> includeUrls = getIncludeUrls(mgt);
            Iterator<String> includeUrlIter = includeUrls.iterator();
            boolean match = false;
            while (!found_denial && !match && includeUrlIter.hasNext()) {
                String url = includeUrlIter.next();
    
                /*
                 * Retrieve address list from url map.
                 * Iterate over addresses looking for target match.
                 */
                for (String saddr : m_urlMap.get(url)) {
                    InetAddress addr;
                    try {
                        addr = InetAddress.getByName(saddr);
                    } catch (UnknownHostException e) {
                        log().info("Failed to convert address '" + saddr + "' from include URL '" + url + "' to an InetAddress: " + e, e);
                        continue;
                    }

                    if (addr.equals(target)) {
                        if (mgt.getPolicy() == null || mgt.getPolicy().equalsIgnoreCase("managed")) {
                            found_accept = true;
                        } else {
                            found_denial = true;
                        }

                        match = true;
                        break;
                    }
                }
            }
    
        }
    
        boolean result = !managedByDefault;
        if (found_denial) {
            result = true;
        } else if (found_accept) {
            result = false;
        }
    
        return result;
    }

