    /**
     * Determines if a user is on duty at a given time. If a user has no duty
     * schedules listed in the config file, that user is assumed to always be on
     * duty.
     * 
     * @param user
     *            the user id
     * @param time
     *            the time to check for a duty schedule
     * @return boolean, true if the user is on duty, false otherwise.
     */
    public boolean isUserOnDuty(String user, Calendar time) throws IOException, MarshalException, ValidationException {
    
        update();
    
        // if the user has no duty schedules then he is on duty
        if (!m_dutySchedules.containsKey(user))
            return true;
    
        boolean result = false;
        List dutySchedules = (List) m_dutySchedules.get(user);
    
        for (int i = 0; i < dutySchedules.size(); i++) {
            DutySchedule curSchedule = (DutySchedule) dutySchedules.get(i);
    
            result = curSchedule.isInSchedule(time);
    
            // don't continue if the time is in this schedule
            if (result)
                break;
        }
    
        return result;
    }

