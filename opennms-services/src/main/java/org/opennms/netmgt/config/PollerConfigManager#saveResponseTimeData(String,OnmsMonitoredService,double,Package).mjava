    /** {@inheritDoc} */
    public void saveResponseTimeData(final String locationMonitor, final OnmsMonitoredService monSvc, final double responseTime, final Package pkg) {
        getReadLock().lock();
        try {
            final String svcName = monSvc.getServiceName();
            final Service svc = getServiceInPackage(svcName, pkg);
            
            final String dsName = getServiceParameter(svc, "ds-name");
            if (dsName == null) {
                return;
            }
            
            final String rrdRepository = getServiceParameter(svc, "rrd-repository");
            if (rrdRepository == null) {
                return;
            }
            
            final String rrdDir = rrdRepository+File.separatorChar+"distributed"+File.separatorChar+locationMonitor+File.separator+monSvc.getIpAddressAsString();
    
            try {
                final File rrdFile = new File(rrdDir, dsName);
                if (!rrdFile.exists()) {
                    RrdUtils.createRRD(locationMonitor, rrdDir, dsName, getStep(pkg), "GAUGE", 600, "U", "U", getRRAList(pkg));
                }
                RrdUtils.updateRRD(locationMonitor, rrdDir, dsName, System.currentTimeMillis(), String.valueOf(responseTime));
            } catch (final RrdException e) {
                throw new PermissionDeniedDataAccessException("Unable to store rrdData from "+locationMonitor+" for service "+monSvc, e);
            }
        } finally {
            getReadLock().unlock();
        }
    }

