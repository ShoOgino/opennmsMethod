    private static void instantiateClasses(MBeanServer server,
                                           InvokerService[] invokerServices) {
        /*
         * Preload the classes and register a new instance with the
         * MBeanServer.
         */
        for (InvokerService invokerService : invokerServices) {
            Service service = invokerService.getService();
            try {
                // preload the class
                if (log().isDebugEnabled()) {
                    log().debug("loading class " + service.getClassName());
                }

                Class cinst = Class.forName(service.getClassName());

                // Get a new instance of the class
                if (log().isDebugEnabled()) {
                    log().debug("create new instance of "
                            + service.getClassName());
                }
                Object bean = cinst.newInstance();

                // Register the mbean
                if (log().isDebugEnabled()) {
                    log().debug("registering mbean instance "
                            + service.getName());
                }
                ObjectName name = new ObjectName(service.getName());
                invokerService.setMbean(server.registerMBean(bean, name));

                // Set attributes
                org.opennms.netmgt.config.service.Attribute[] attribs =
                    service.getAttribute();
                if (attribs != null) {
                    for (int j = 0; j < attribs.length; j++) {
                        if (log().isDebugEnabled()) {
                            log().debug("setting attribute "
                                    + attribs[j].getName());
                        }

                        server.setAttribute(name, getAttribute(attribs[j]));
                    }
                }
            } catch (Throwable t) {
                log().error("An error occured loading the mbean "
                          + service.getName() + " of type "
                          + service.getClassName() + " it will be skipped",
                          t);
                invokerService.setBadThrowable(t);
            }
        }
    }

