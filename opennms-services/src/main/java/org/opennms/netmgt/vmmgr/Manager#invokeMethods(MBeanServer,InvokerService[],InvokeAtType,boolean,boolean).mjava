    private static List<InvokerResult> invokeMethods(MBeanServer server,
            InvokerService[] invokerServices,
            InvokeAtType at, boolean reverse,
            boolean failFast) {
        Integer[] serviceIndexes = new Integer[invokerServices.length];
        for (int i = 0; i < invokerServices.length; i++) {
            if (!reverse) {
                serviceIndexes[i] = new Integer(i);
            } else {
                serviceIndexes[i] = new Integer(invokerServices.length - 1 - i);
            }
        }

        List<InvokerResult> resultInfo = new ArrayList<InvokerResult>(invokerServices.length);
        for (int pass = 0, end = getEndPass(invokerServices); pass <= end; pass++) {
            if (log().isDebugEnabled()) {
                log().debug("starting pass " + pass);
            }

            for (Integer serviceIndex : serviceIndexes) {
                String name = invokerServices[serviceIndex].getService().getName();
                if (invokerServices[serviceIndex].isBadService()) {
                    if (log().isDebugEnabled()) {
                        log().debug("pass " + pass + " on service " + name
                                + " is bad: not invoking any more methods"); 
                    }
                    break;
                }
                Invoke[] todo = invokerServices[serviceIndex].getService().getInvoke();
                for (Invoke todoItem : todo) {
                    if (todoItem.getPass() != pass || !at.equals(todoItem.getAt())) {
                        continue;
                    }

                    Service service = invokerServices[serviceIndex].getService();
                    ObjectInstance mbean = invokerServices[serviceIndex].getMbean();

                    if (log().isDebugEnabled()) {
                        log().debug("pass " + pass + " on service " + name
                                + " will invoke method \""
                                + todoItem.getMethod() + "\""); 
                    }

                    try {
                        Object result = invoke(server, todoItem, mbean);
                        resultInfo.add(new InvokerResult(service, mbean, result, null));
                    } catch (Throwable t) {
                        resultInfo.add(new InvokerResult(service, mbean, null, t));
                        if (failFast) {
                            return resultInfo;
                        }
                    }
                }
            }
            if (log().isDebugEnabled()) {
                log().debug("completed pass " + pass);
            }
        }

        return resultInfo;
    }

