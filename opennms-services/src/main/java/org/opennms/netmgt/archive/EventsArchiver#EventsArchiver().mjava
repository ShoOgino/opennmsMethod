    /**
     * The events archiver constructor - reads required properties, initializes
     * the database connection and the prepared statements to select and delete
     * events
     *
     * @throws org.opennms.netmgt.archive.ArchiverException if any.
     */
    public EventsArchiver() throws ArchiverException {
        // call init
        init();

        // initialize the prepared statements
        try {
            m_eventsGetStmt = m_conn.prepareStatement(DB_SELECT_EVENTS_TO_ARCHIVE);
            m_eventDeleteStmt = m_conn.prepareStatement(DB_DELETE_EVENT);
        } catch (SQLException e) {
            m_logCat.error("EventsArchiver: Exception in opening the database "
                           + "connection or in the prepared statement for the "
                           + "get events");
            m_logCat.error(e.getMessage());
            throw new ArchiverException("EventsArchiver: " + e.getMessage());
        }
    }

