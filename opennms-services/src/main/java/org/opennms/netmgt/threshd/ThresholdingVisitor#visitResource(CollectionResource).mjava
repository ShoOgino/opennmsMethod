    /**
     * When called, we're starting a new resource.  Clears out any stored attribute values from previous resource visits
     */
    public void visitResource(CollectionResource resource) {
        log().debug(this+" visiting resource "+resource);
        //Should only refresh our thresholds when we start checking a new collection; do the check now
        if (m_needsRefresh) {
            log().debug(this + " needs refresh of state; refreshing now");
            m_thresholdGroupList = new ArrayList<ThresholdGroup>();
            for (String groupName : m_groupNameList) {
                ThresholdGroup thresholdGroup = s_thresholdsDao.get(groupName);
                if (thresholdGroup == null) {
                    log().error("Could not get threshold group with name " + groupName);
                }
                m_thresholdGroupList.add(thresholdGroup);
                m_needsRefresh = false;
                if (log().isDebugEnabled()) {
                    StringBuffer resDebugMsg = new StringBuffer("Resource types after refresh are [");
                    resDebugMsg.append("node: { ");
                    if (thresholdGroup.getNodeResourceType() != null) {
                        resDebugMsg.append(thresholdGroup.getNodeResourceType());
                    }
                    resDebugMsg.append(" }; iface: { ");
                    if (thresholdGroup.getIfResourceType() != null) {
                        resDebugMsg.append(thresholdGroup.getIfResourceType());
                    }
                    resDebugMsg.append(" }; generic: { ");
                    if (thresholdGroup.getGenericResourceTypeMap() != null) {
                        for (String rType : thresholdGroup.getGenericResourceTypeMap().keySet()) {
                            resDebugMsg.append(rType + " ");
                        }
                    }
                    resDebugMsg.append(" } ]");
                    log().debug(resDebugMsg.toString());
                }
            }
        }
        m_numericAttributeValues=new HashMap<String,Double>();
        m_stringAttributeValues=new HashMap<String, String>();
    }

