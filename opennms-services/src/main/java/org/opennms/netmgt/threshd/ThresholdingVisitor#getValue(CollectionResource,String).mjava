    /*
     * Handle the difference between counters and gauges;  for the former, the value we threshold on
     * is the difference (current-last), for the latter, it's the absolute value.  
     */
    private Double getValue(final CollectionResource resource, final String ds) {
        if (m_numericAttributeValues.get(ds) == null) {
            log().warn("getValue: can't find attribute called " + ds + " on " + resource);
            return null;
        }
        String numValue = m_numericAttributeValues.get(ds).getNumericValue();
        if (numValue == null) {
            log().warn("getValue: can't find numeric value for " + ds + " on " + resource);
            return null;
        }
        String id = resource.toString() + "." + ds;
        Double current = Double.parseDouble(numValue);
        if (m_numericAttributeValues.get(ds).getType().toLowerCase().startsWith("counter") == false) {
            if (log().isDebugEnabled()) {
                log().debug("getValue: " + id + "(gauge) value= " + current);
            }
            return current;
        }
        Double last = m_cache.get(id);
        if (log().isDebugEnabled()) {
            log().debug("getValue: " + id + "(counter) last=" + last + ", current=" + current);
        }
        m_cache.put(id, current);
        if (last == null) {
            return Double.NaN;
        }
        if (current < last) {
        	log().info("getValue: counter reset detected, ignoring value");
        	return Double.NaN;
        }
        return current - last;
    }

