    void initialize() {
        
        Querier querier = new Querier(DataSourceFactory.getDataSource(), SnmpThresholder.SQL_GET_NODEID, new RowProcessor() {
        
            public void processRow(ResultSet rs) throws SQLException {
                setNodeId(SnmpThresholdInterface.getInteger(rs, 1));
                setPrimaryIfIndex(SnmpThresholdInterface.getInteger(rs, 2));
                setIsSnmpPrimary(rs.getString(3));
            }
            
        });
        querier.execute(getIpAddress());
        
        
        
        if (log().isDebugEnabled())
            log().debug("initialize: db retrieval info: nodeid = " + getNodeId() + ", address = " + getIpAddress() + ", ifIndex = " + getPrimaryIfIndex() + ", isSnmpPrimary = " + getIsSnmpPrimary());
        
        // RuntimeException is thrown if any of the following are true:
        // - node id is invalid
        // - primaryIfIndex is invalid
        // - Interface is not the primary SNMP interface for the node
        //
        if (getNodeId() == null)
            throw new RuntimeException("Unable to retrieve node id for interface " + getIpAddress());
        
        if (getPrimaryIfIndex() == null)
            // allow this for nodes without ipAddrTables
            // throw new RuntimeException("Unable to retrieve ifIndex for interface " + ipAddr.getHostAddress());
            if (log().isDebugEnabled())
                log().debug("initialize: db retrieval info: node " + getNodeId() + " does not have a legitimate primaryIfIndex. Assume node does not supply ipAddrTable and continue...");
        
        if (getIsSnmpPrimary() != DbIpInterfaceEntry.SNMP_PRIMARY)
            throw new RuntimeException("Interface " + getIpAddress() + " is not the primary SNMP interface for nodeid " + getNodeId());
        // Add nodeId as an attribute of the interface for retrieval
        // by the check() method.
        //
    }

