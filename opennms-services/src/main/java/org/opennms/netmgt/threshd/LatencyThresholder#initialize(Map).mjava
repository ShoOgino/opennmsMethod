    /**
     * <P>
     * Initialize the service thresholder.
     * </P>
     * 
     * @param parameters
     *            Parameter map which contains (currently) a single entry, the
     *            name of the service which this thresholder is responsible for
     *            latency threshold checking keyed by the String "svcName"
     * 
     * @exception RuntimeException
     *                Thrown if an unrecoverable error occurs that prevents the
     *                plug-in from functioning.
     * 
     */
    public void initialize(Map parameters) {
        // Service name
        //
        m_svcName = (String) parameters.get("svcName");
        if (log().isDebugEnabled())
            log().debug("initialize: latency thresholder for service '" + m_svcName + "'");

        // Get local host name (used when generating threshold events)
        //
        try {
            m_host = InetAddress.getLocalHost().getHostName();
        } catch (UnknownHostException e) {
            if (log().isEnabledFor(Priority.WARN))
                log().warn("initialize: Unable to resolve local host name.", e);
            m_host = "unresolved.host";
        }

        try {
            RrdUtils.initialize();
        } catch (RrdException e) {
            if (log().isEnabledFor(Priority.ERROR))
                log().error("initialize: Unable to initialize RrdUtils", e);
            throw new RuntimeException("Unable to initialize RrdUtils", e);
        }

        if (log().isDebugEnabled())
            log().debug("initialize: successfully instantiated JNI interface to RRD...");

        return;
    }

