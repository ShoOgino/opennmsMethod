    /**
     * {@inheritDoc}
     *
     * Perform threshold checking.
     */
    @Override
    public int check(ThresholdNetworkInterface netIface, EventProxy eproxy, Map<?,?> parms) {
        SnmpThresholdNetworkInterface snmpThresholdNetworkInterface = m_snmpThresholdNetworkInterfaces.get(netIface);
        if (snmpThresholdNetworkInterface == null) {
            LOG.warn("check: interface has not been initialized in this thresholder: {}", netIface);
            return THRESHOLDING_FAILED;
        }

        SnmpThresholdConfiguration config = snmpThresholdNetworkInterface.getThresholdConfiguration();

        // Get configuration parameters
        LOG.debug("check: service= " + serviceName() + " address= " + snmpThresholdNetworkInterface.getIpAddress() + " thresholding-group=" + config.getGroupName() + " interval=" + config.getInterval() + "ms range=" + config.getRange() + " mS");

        // RRD Repository attribute
        LOG.debug("check: rrd repository=", config.getRrdRepository());


        /*
         * -----------------------------------------------------------
         * 
         * Perform node-level threshold checking
         *
         * -----------------------------------------------------------
         */

        // Get File object representing the node directory
        File nodeDirectory = new File(config.getRrdRepository(), snmpThresholdNetworkInterface.getNodeId().toString());
        if (!RrdFileConstants.isValidRRDNodeDir(nodeDirectory)) {
            LOG.info("Node directory for " + snmpThresholdNetworkInterface.getNodeId() + "/" + snmpThresholdNetworkInterface.getIpAddress() + " does not exist or is not a valid RRD node directory.");
            LOG.info("Threshold checking failed for primary SNMP interface {}", snmpThresholdNetworkInterface.getIpAddress());
            return THRESHOLDING_FAILED;
        }

        // Create empty Events object to hold any threshold events generated during the thresholding check
        Events events = new Events();

        // Date stamp for all outgoing events
        Date date = new Date();

        try {
        	checkNodeDir(nodeDirectory, snmpThresholdNetworkInterface, date, events);
        } catch (IllegalArgumentException e) {
            LOG.info("check: Threshold checking failed for primary SNMP interface " + snmpThresholdNetworkInterface.getIpAddress(), e);
            return THRESHOLDING_FAILED;
        }

        /*
         * -----------------------------------------------------------
         * 
         * Perform interface-level threshold checking
         *
         * -----------------------------------------------------------
         */

        /*
         * Iterate over node directory contents and call
         * checkInterfaceDirectory() for any/all RRD interface
         * directories.
         */
        File[] files = nodeDirectory.listFiles(RrdFileConstants.INTERFACE_DIRECTORY_FILTER);
        if (files != null) {
            for (File file : files) {
                try {
                    // Found interface directory...
                    checkIfDir(file, snmpThresholdNetworkInterface, date, events);
                } catch (IllegalArgumentException e) {
                    LOG.info("check: Threshold checking failed for primary SNMP interface " + snmpThresholdNetworkInterface.getIpAddress(), e);
                    return THRESHOLDING_FAILED;
                }
            }
        }

        /*
         * -----------------------------------------------------------
         * 
         * Perform generic resources threshold checking
         *
         * -----------------------------------------------------------
         */

        /*
         * Iterate over generic resource directory contents and call
         * checkGenericResourceDirectory() for any/all RRD interface
         * directories.
         */
        if (config.getGenericResourceTypeMap().size() > 0) {
            for (String resourceType : config.getGenericResourceTypeMap().keySet()) {
                File file = new File(nodeDirectory, resourceType);
                try {
                    // Found resource directory...
                    checkResourceDir(file, snmpThresholdNetworkInterface, date, events);
                } catch (IllegalArgumentException e) {
                    LOG.info("check: Threshold checking failed for primary SNMP interface " + snmpThresholdNetworkInterface.getIpAddress(), e);
                    return THRESHOLDING_FAILED;
                }
            }
        }

        
        // Send created events
        if (events.getEventCount() > 0) {
            try {
                Log eventLog = new Log();
                eventLog.setEvents(events);
                eproxy.send(eventLog);
            } catch (EventProxyException e) {
                LOG.info("check: Failed sending threshold events", e);
                return THRESHOLDING_FAILED;
            }
        }

        return THRESHOLDING_SUCCEEDED;
    }

