    /**
     * <p>getLabelValue</p>
     *
     * @param ds a {@link java.lang.String} object.
     * @return a {@link java.lang.String} object.
     */
    public String getLabelValue(String ds) {
        if (ds == null || "".equals(ds)) {
            return null;
        }

        if (log().isDebugEnabled()) {
            log().debug("getLabelValue: Getting Value for " + m_resource.getResourceTypeName() + "::" + ds);
        }

        if ("nodeid".equals(ds)) {
            return Integer.toString(m_nodeId);
        } else if ("ipaddress".equals(ds)) {
            return m_hostAddress;
        } else if ("iflabel".equals(ds)) {
            return getIfLabel();
        } else if ("ID".equals(ds)) {
            try {
                File resourceDirectory = m_resource.getResourceDir(m_repository);
                return resourceDirectory.getName();
            } catch (FileNotFoundException e) {
                log().debug("getLabelValue: cannot find resource directory: " + e.getMessage(), e);
            }
        }

        try {
            String retval = null;

            // Get Value from ifInfo only for Interface Resource
            if (isAnInterfaceResource()) {
                retval = getIfInfoValue(ds);
                if (retval != null) {
                    return retval;
                }
            }

            // Find value on saved string attributes
            File resourceDirectory = m_resource.getResourceDir(m_repository);
            retval = ResourceTypeUtils.getStringProperty(resourceDirectory, ds);
            if (retval != null) {
                return retval;
            }
        } catch (FileNotFoundException e) {
            log().debug("getLabelValue: Can't find resource directory: " + e.getMessage(), e);
        } catch (Throwable e) {
            log().info("getLabelValue: Can't get value for attribute " + ds + " for resource " + m_resource + ": " + e, e);
        }

        log().debug("getLabelValue: The field " + ds + " is not a string property. Trying to parse it as numeric metric.");
        Double d = getAttributeValue(ds);
        if (d != null) {
            return d.toString();
        }

        return null;
    }

