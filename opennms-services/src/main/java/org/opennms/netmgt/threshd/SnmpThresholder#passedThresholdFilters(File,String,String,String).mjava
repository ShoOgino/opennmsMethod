    /*
     * If Threshold has Filters defined for selected ThresholdGroup/DataSource/ResourceType then, apply filter rules.
     * TODO: What happend if getAttributeValue returns null ?
     */
    /**
     * <p>passedThresholdFilters</p>
     *
     * @param resourceDir a {@link java.io.File} object.
     * @param thresholdGroup a {@link java.lang.String} object.
     * @param resourceType a {@link java.lang.String} object.
     * @param dataSource a {@link java.lang.String} object.
     * @return a boolean.
     */
    protected boolean passedThresholdFilters(File resourceDir, String thresholdGroup, String resourceType, String dataSource) {

        // Find the filters for threshold definition for selected group/dataSource
        ResourceFilter[] filters = getThresholdFilters(thresholdGroup, dataSource);
        if (filters.length == 0) return true;

        // Threshold definition with filters must match ThresholdEntity (checking DataSource and ResourceType)
        LOG.debug("checkFilters: resource={}, group={}, type={}, filters={}", resourceDir.getName(), thresholdGroup, resourceType, filters.length);
        int count = 1;
        for (ResourceFilter f : filters) {
            LOG.debug("checkFilters: filter #{}: field={}, regex={}", count, f.getField(), f.getContent());
            count++;
            // Read Resource Attribute and apply filter rules if attribute is not null
            String attr = getAttributeValue(resourceDir, resourceType, f.getField());
            if (attr != null) {
                Pattern p = Pattern.compile(f.getContent());
                Matcher m = p.matcher(attr);
                boolean pass = m.find();
                LOG.debug("checkFilters: the value of {} is {}. Pass filter? {}", dataSource, attr, pass);
                if (pass) return true;
            }
        }
        return false;
    }

