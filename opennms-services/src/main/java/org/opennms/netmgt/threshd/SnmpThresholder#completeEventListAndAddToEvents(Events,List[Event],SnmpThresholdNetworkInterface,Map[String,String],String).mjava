    private void completeEventListAndAddToEvents(Events events, List<Event> eventList, SnmpThresholdNetworkInterface snmpIface, Map<String, String> ifDataMap, String dsLabelValue) {
        // TODO: do more specific and thorough assertions on arguments
        for (Event event : eventList) {
            /*
            Integer nodeId = snmpIface.getNodeId();
            InetAddress primary = snmpIface.getInetAddress();
            if (nodeId == null || primary == null) {
                throw new IllegalArgumentException("nodeid, primary, and threshold cannot be null.");
            }
    
            if (log().isDebugEnabled()) {
                log().debug("createEvent: nodeId=" + nodeId + " primaryAddr=" + primary + " ds=" + threshold.getDsName() + " uei=" + uei);
    
                if (ifDataMap != null) {
                    log().debug("createEvent: specific interface data: ifAddr=" + ifDataMap.get("ipaddr") + " macAddr=" + ifDataMap.get("snmpphysaddr") + " ifName=" + ifDataMap.get("snmpifname") + " ifDescr=" + ifDataMap.get("snmpifdescr") + " ifIndex=" + ifDataMap.get("snmpifindex") + " ifLabel=" + ifDataMap.get("iflabel"));
                }
            }
            */
    
            // create the event to be sent
            event.setNodeid(snmpIface.getNodeId().longValue());
            event.setService(this.serviceName());
    
            // Set event interface
            if (ifDataMap == null || ifDataMap.get("ipaddr") == null) {
                // Node level datasource
                if (snmpIface.getInetAddress() != null) {
                    event.setInterfaceAddress(snmpIface.getInetAddress());
                }
            } else {
                /*
                 * Interface-level datasource
                 * 
                 * NOTE: Non-IP interfaces will have an
                 * address of "0.0.0.0".
                 */
                String ifAddr = ifDataMap.get("ipaddr");
                event.setInterface(ifAddr);
            }
        
            // Add appropriate parms
            final List<Parm> eventParms = event.getParmCollection();
            
            Parm eventParm;
            Value parmValue;
    
            // Add datasource label
            if (dsLabelValue != null) {
                eventParm = new Parm();
                eventParm.setParmName("label");
                parmValue = new Value();
                parmValue.setContent(dsLabelValue);
                eventParm.setValue(parmValue);
                eventParms.add(eventParm);
            }
    
            // Add interface parms if available
            if (ifDataMap != null && ifDataMap.get("iflabel") != null) {
                // Add ifLabel
                eventParm = new Parm();
                eventParm.setParmName("ifLabel");
                parmValue = new Value();
                parmValue.setContent(ifDataMap.get("iflabel"));
                eventParm.setValue(parmValue);
                eventParms.add(eventParm);
            }
    
            if (ifDataMap != null && ifDataMap.get("snmpifindex") != null) {
                // Add ifIndex
                eventParm = new Parm();
                eventParm.setParmName("ifIndex");
                parmValue = new Value();
                parmValue.setContent(ifDataMap.get("snmpifindex"));
                eventParm.setValue(parmValue);
                eventParms.add(eventParm);
            }

            events.addEvent(event);
        }
    }

