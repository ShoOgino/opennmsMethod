    /**
     * Performs threshold checking on an SNMP RRD node directory.
     * 
     * @param directory
     *            RRD repository directory
     * @param snmpIface TODO
     * @param date
     *            Source for timestamp to be used for all generated events
     * @param events
     *            Castor events object containing any events to be generated as
     *            a result of threshold checking.
     * @param interval
     *            Configured thresholding interval
     * @param range
     *            Time interval before last possible PDP is considered
     *            "out of date"
     * @param thresholdMap
     *            Map of node level ThresholdEntity objects keyed by datasource
     *            name.
     * @param nodeId
     *            Node identifier
     * @param primary
     *            Primary SNMP interface address
     * @throws IllegalArgumentException
     *             if path parameter is not a directory.
     */
    protected void checkNodeDir(File directory, SnmpThresholdNetworkInterface thresholdNetworkInterface, Date date, Events events) throws IllegalArgumentException {
        Assert.notNull(directory, "directory argument cannot be null");
        Assert.notNull(thresholdNetworkInterface, "thresholdNetworkInterface argument cannot be null");
        Assert.notNull(date, "date argument cannot be null");
        Assert.notNull(events, "events argument cannot be null");
        
        SnmpThresholdConfiguration config = thresholdNetworkInterface.getThresholdConfiguration();
        Assert.notNull(config, "getThresholdConfiguration() of thresholdNetworkInterface argument cannot be null");
        Assert.notNull(thresholdNetworkInterface.getNetworkInterface(), "getNetworkInterface() of thresholdNetworkInterface argument cannot be null");
        Assert.notNull(thresholdNetworkInterface.getNodeId(), "getNodeId() of thresholdNetworkInterface argument cannot be null");
        Assert.notNull(thresholdNetworkInterface.getInetAddress(), "getInetAddress() of thresholdNetworkInterface argument cannot be null");

        if (log().isDebugEnabled()) {
            log().debug("checkNodeDir: threshold checking node dir: " + directory.getAbsolutePath());
        }
        
        Map<String, ThresholdEntity> thresholdMap = thresholdNetworkInterface.getNodeThresholdMap();
        
        for(String threshKey  :thresholdMap.keySet()) {
            processThresholdForNode(directory, thresholdNetworkInterface, date, events, thresholdMap.get(threshKey));
        }
    }

