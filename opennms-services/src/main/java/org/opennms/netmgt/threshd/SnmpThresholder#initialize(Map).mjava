    /**
     * <P>
     * Initialize the service thresholder.
     * </P>
     * 
     * @param parameters
     *            Not currently used.
     * 
     * @exception RuntimeException
     *                Thrown if an unrecoverable error occurs that prevents the
     *                plug-in from functioning.
     * 
     */
    public void initialize(Map parameters) {
        
        m_serviceName = (String)parameters.get("svcName");
        
        DefaultThresholdsDao defaultThresholdsDao = new DefaultThresholdsDao();
        
        try {
            defaultThresholdsDao.setThresholdingConfigFactory(ThresholdingConfigFactory.getInstance());
            defaultThresholdsDao.afterPropertiesSet();
        } catch (Throwable t) {
            log().error("initialize: Could not initialize DefaultThresholdsDao: " + t, t);
            throw new RuntimeException("Could not initialize DefaultThresholdsDao: " + t, t);
        }
        
        setThresholdsDao(defaultThresholdsDao);
        
        try {
            RrdUtils.initialize();
        } catch (RrdException e) {
            log().error("initialize: Unable to initialize RrdUtils: " + e, e);
            throw new RuntimeException("Unable to initialize RrdUtils: " + e, e);
        }

        log().debug("initialize: successfully instantiated RRD subsystem");
        
        m_snmpThresholdNetworkInterfaces = Collections.synchronizedMap(new HashMap<NetworkInterface, SnmpThresholdNetworkInterface>()); 
    }

