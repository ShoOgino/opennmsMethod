	/**
	 * Creates a new threshold event from the specified parms.
	 * @param dsValue
	 *            Data source value which triggered the threshold event
	 * @param threshold
	 *            Configured threshold
	 * @param uei
	 *            Event identifier
	 * @param date
	 *            source of event's timestamp
	 * @param m_nodeId
	 *            Node identifier of the affected interface
	 * @param ipAddr
	 *            IP address of the affected interface
	 * @param thresholder TODO
	 * @return new threshold event to be sent to Eventd
	 * @throws ThresholdingException 
	 */
	Event createEvent(double dsValue, Threshold threshold, String uei, Date date) throws ThresholdingException {
		int nodeId = getNodeId();
		InetAddress ipAddr = getInetAddress();
		
		if (threshold == null)
	        throw new IllegalArgumentException("threshold cannot be null.");
	
	    LOG.debug("createEvent: ds={} uei={}", threshold.getDsName(), uei);
	
	    // create the event to be sent
	    EventBuilder bldr = new EventBuilder(uei, "OpenNMS.Threshd:" + threshold.getDsName(), date);
	    bldr.setNodeid(nodeId);
	    bldr.setInterface(ipAddr);
	    bldr.setService(getServiceName());
	
	
	    // Set event host
        bldr.setHost(InetAddressUtils.getLocalHostName());
	    
	    bldr.addParam("ds", threshold.getDsName());
	    bldr.addParam("value", dsValue);
	    bldr.addParam("threshold", threshold.getValue());
	    bldr.addParam("trigger", threshold.getTrigger());
	    bldr.addParam("rearm", threshold.getRearm());
	
	    return bldr.getEvent();
	}

