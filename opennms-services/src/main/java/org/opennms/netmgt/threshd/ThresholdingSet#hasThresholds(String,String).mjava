    /*
     * Returns true if the specified attribute is involved in any of defined thresholds for node/address/service
     * 
     * @param resourceTypeName a {@link java.lang.String} object.
     * @param attributeName a {@link java.lang.String} object.
     * @return a boolean.
     */
    public boolean hasThresholds(final String resourceTypeName, final String attributeName) {
        boolean ok = false;
        synchronized(m_thresholdGroups) {
            for (ThresholdGroup group : m_thresholdGroups) {
                Map<String,Set<ThresholdEntity>> entityMap = getEntityMap(group, resourceTypeName);
                if (entityMap != null) {
                    for (final Entry<String, Set<ThresholdEntity>> entry : entityMap.entrySet()) {
                        final Set<ThresholdEntity> value = entry.getValue();
                        for (final ThresholdEntity thresholdEntity : value) {
                            final Collection<String> requiredDatasources = thresholdEntity.getRequiredDatasources();
                            if (requiredDatasources.contains(attributeName)) {
                                ok = true;
                                LOG.debug("hasThresholds: {}@{}? {}", resourceTypeName, attributeName, ok);
                            } else {
                                LOG.trace("hasThresholds: {}@{}? {}", resourceTypeName, attributeName, ok);
                            }
                        }
                    }
                }
            }
        }
        return ok;
    }

