    private Map<String, Double> getThresholdValues(File directory, int range, int interval, Collection<String> requiredDatasources) {
        Map<String, Double> values=new HashMap<String,Double>();
        for(String ds: requiredDatasources) {
            File dsFile=new File(directory,ds+RrdUtils.getExtension());
            Double thisValue=null;
            if(dsFile.exists()) {
                try {
                    if (range != 0) {
                        LOG.debug("checking values within " + range + " mS of last possible PDP");
                        thisValue = RrdUtils.fetchLastValueInRange(dsFile.getAbsolutePath(), ds, interval, range);
                    } else {
                        LOG.debug("checking value of last possible PDP only");
                        thisValue = RrdUtils.fetchLastValue(dsFile.getAbsolutePath(), ds, interval);
                    }
                } catch (NumberFormatException e) {
                    LOG.warn("Unable to convert retrieved value for datasource '" + ds + "' to a double, skipping evaluation.");
                } catch (RrdException e) {
                    LOG.info("An error occurred retriving the last value for datasource '" + ds + "': " + e, e);
                }
            }
        
            if (thisValue == null || thisValue.isNaN()) {
                return null;
            }
            values.put(ds,thisValue);
        }
        return values;
    }

