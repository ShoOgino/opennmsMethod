	private Map<String, ThresholdEntity> createThresholdStateMap(String type, String groupName) {
	    Map<String, ThresholdEntity> thresholdMap = new HashMap<String, ThresholdEntity>();
        
            for (Basethresholddef thresh : getThresholdingConfigFactory().getThresholds(groupName)) {
                // See if map entry already exists for this datasource
                // If not, create a new one.
                if (thresh.getDsType().equals(type)) {
                    try {
                        BaseThresholdDefConfigWrapper wrapper=BaseThresholdDefConfigWrapper.getConfigWrapper(thresh);
                        ThresholdEntity thresholdEntity = thresholdMap.get(wrapper.getDatasourceExpression());
                
                        // Found entry?
                        if (thresholdEntity == null) {
                            // Nope, create a new one
                            thresholdEntity = new ThresholdEntity();
                            thresholdMap.put(wrapper.getDatasourceExpression(), thresholdEntity);
                        }
                
                        try {
                            thresholdEntity.addThreshold(wrapper);
                        } catch (IllegalStateException e) {
                            log().warn("Encountered duplicate " + thresh.getType() + " for datasource " + wrapper.getDatasourceExpression() + ": " + e, e);
                        } 
                    }
                    catch (ThresholdExpressionException e) {
                        log().warn("Could not parse threshold expression: "+e.getMessage(), e);
                    }

                }
            }
            
	    return thresholdMap;
	}

