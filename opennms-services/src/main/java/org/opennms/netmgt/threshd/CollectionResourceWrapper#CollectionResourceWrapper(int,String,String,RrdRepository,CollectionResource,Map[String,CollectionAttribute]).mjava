    public CollectionResourceWrapper(int nodeId, String hostAddress, String serviceName, RrdRepository repository, CollectionResource resource, Map<String, CollectionAttribute> attributes) {
        m_nodeId = nodeId;
        m_hostAddress = hostAddress;
        m_serviceName = serviceName;
        m_repository = repository;
        m_resource = resource;
        m_attributes = attributes;
        if (isAnInterfaceResource()) {
            File resourceDir = getResourceDir();
            if (resourceDir != null) {
                JdbcIfInfoGetter ifInfoGetter = new JdbcIfInfoGetter();
                if (resource instanceof LatencyCollectionResource) {
                    m_iflabel = ifInfoGetter.getIfLabel(getNodeId(), resourceDir.getName());
                } else {
                    m_iflabel = resourceDir.getName();
                }
                m_ifInfo = ifInfoGetter.getIfInfoForNodeAndLabel(getNodeId(), m_iflabel);
                if (m_ifInfo != null) {
                    m_hostAddress = m_ifInfo.get("ipaddr"); // See Bug 2711
                    m_ifindex = m_ifInfo.get("snmpifindex");
                } else {
                    log().info("Can't find ifInfo for " + m_iflabel);
                }
            } else {
                log().info("Can't find resource directory for " + m_resource);
            }        
        }
    }    

