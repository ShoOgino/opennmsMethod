    /**
     * Process the event.
     * 
     * This event is generated when a managed node which supports SNMP gains a
     * new interface. In this situation the ThresholdableService object
     * representing the primary SNMP interface of the node must be
     * reinitialized.
     * 
     * The ThresholdableService object associated with the primary SNMP
     * interface for the node will be marked for reinitialization.
     * Reinitializing the ThresholdableService object consists of calling the
     * ServiceThresholder.release() method followed by the
     * ServiceThresholder.initialize() method which will refresh attributes such
     * as the interface key list and number of interfaces (both of which most
     * likely have changed).
     * 
     * Reinitialization will take place the next time the ThresholdableService
     * is popped from an interval queue for thresholding.
     * 
     * If any errors occur scheduling the service no error is returned.
     * 
     * @param event
     *            The event to process.
     */
    private void reinitializePrimarySnmpInterfaceHandler(Event event) {
        Category log = ThreadCategory.getInstance(getClass());

        if (event.getInterface() == null) {
            log.error("reinitializePrimarySnmpInterface event is missing an interface.");
            return;
        }
        // Mark the primary SNMP interface for reinitialization in
        // order to update any modified attributes associated with
        // the collectable service..
        //
        // Iterate over the ThresholdableService objects in the
        // updates map and mark any which have the same interface
        // address for reinitialization
        //
        synchronized (m_thresholdableServices) {
            Iterator iter = m_thresholdableServices.iterator();
            while (iter.hasNext()) {
                ThresholdableService tSvc = (ThresholdableService) iter.next();

                InetAddress addr = (InetAddress) tSvc.getAddress();
                if (addr.getHostAddress().equals(event.getInterface())) {
                    synchronized (tSvc) {
                        // Got a match! Retrieve the ThresholderUpdates object
                        // associated
                        // with this ThresholdableService.
                        ThresholderUpdates updates = tSvc.getThresholderUpdates();
                        // Now set the reinitialization flag
                        updates.markForReinitialization();
                        if (log.isDebugEnabled())
                            log.debug("markServicesForReinit: marking " + event.getInterface() + " for reinitialization for service SNMP.");
                    }
                }
            }
        }
 
    }

