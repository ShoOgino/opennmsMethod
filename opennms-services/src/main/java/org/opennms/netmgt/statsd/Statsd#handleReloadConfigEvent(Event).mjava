    @EventHandler(uei=EventConstants.RELOAD_DAEMON_CONFIG_UEI)
    public void handleReloadConfigEvent(Event e) {
        
        if (isReloadConfigEventTarget(e)) {
            log().info("handleReloadConfigEvent: reloading configuration...");
            EventBuilder ebldr = null;
            try {
                log().debug("handleReloadConfigEvent: remarshaling config...");
                m_reportDefinitionBuilder.reload();
                log().debug("handleReloadConfigEvent: config remarshaled, unscheduling current reports...");
                unscheduleReports();
                log().debug("handleReloadConfigEvent: reports unscheduled, rescheduling...");
                start();
                log().debug("handleRelodConfigEvent: reports rescheduled.");
                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, "Statsd");
                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, "Statsd");
            } catch (Exception exception) {
                log().error("handleReloadConfigurationEvent: Error reloading configuration:"+exception, exception);
                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, "Statsd");
                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, "Statsd");
                ebldr.addParam(EventConstants.PARM_REASON, exception.getLocalizedMessage().substring(1, 128));
            }
            if (ebldr != null) {
                getEventForwarder().sendNow(ebldr.getEvent());
            }
        }
        
    }

