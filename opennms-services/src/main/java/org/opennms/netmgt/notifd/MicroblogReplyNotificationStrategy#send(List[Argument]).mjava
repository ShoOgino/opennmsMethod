    /** {@inheritDoc} */
    @Override
    public int send(final List<Argument> arguments) {
        final Twitter svc = buildUblogService(arguments);
        String destUser = findDestName(arguments);
        Status response;

        if (destUser == null || "".equals(destUser)) {
            LOG.error("Cannot send a microblog reply notice to a user with no microblog username set. Either set a microblog username for this OpenNMS user or use the MicroblogUpdateNotificationStrategy instead.");
            return 1;
        }
        
        // In case the user tried to be helpful, avoid a double @@
        if (destUser.startsWith("@"))
            destUser = destUser.substring(1);
        
        final String fullMessage = String.format("@%s %s", destUser, buildMessageBody(arguments));
        
        LOG.debug("Dispatching microblog reply notification at base URL '{}' with message '{}'", svc.getConfiguration().getClientURL(), fullMessage);
        try {
            response = svc.updateStatus(fullMessage);
        } catch (final TwitterException e) {
            LOG.error("Microblog notification failed at service URL '{}'", svc.getConfiguration().getClientURL(), e);
            return 1;
        }

        LOG.info("Microblog reply notification succeeded: reply update posted with ID {}", response.getId());
        return 0;
    }

