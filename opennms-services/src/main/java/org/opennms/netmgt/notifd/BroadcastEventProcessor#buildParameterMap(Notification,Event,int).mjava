    /**
     *
     */
    protected Map<String, String> buildParameterMap(Notification notification, Event event, int noticeId) {
        Map<String, String> paramMap = new HashMap<String, String>();

        NotificationManager.addNotificationParams(paramMap, notification);

        // expand the event parameters for the messages
        // call the notif expansion method before the event expansion because
        // event expansion will
        // throw away any expansion strings it doesn't recognize!

        paramMap.put("noticeid", Integer.toString(noticeId));
        // Replace the %noticeid% param
        String textMessage = NotificationManager.expandNotifParms((nullSafeTextMsg(notification)), paramMap);
        String numericMessage = NotificationManager.expandNotifParms((nullSafeNumerMsg(notification, noticeId)), paramMap);
        String subjectLine = NotificationManager.expandNotifParms((nullSafeSubj(notification, noticeId)), paramMap);

        Map<String, Map<String, String>> decodeMap = getVarbindsDecodeMap(event.getUei());
        nullSafeExpandedPut(NotificationManager.PARAM_TEXT_MSG, textMessage, event, paramMap, decodeMap);
        nullSafeExpandedPut(NotificationManager.PARAM_NUM_MSG, numericMessage, event, paramMap, decodeMap);
        nullSafeExpandedPut(NotificationManager.PARAM_SUBJECT, subjectLine, event, paramMap, decodeMap);
        paramMap.put(NotificationManager.PARAM_NODE, event.hasNodeid() ? String.valueOf(event.getNodeid()) : "");
        paramMap.put(NotificationManager.PARAM_INTERFACE, event.getInterface());
        paramMap.put(NotificationManager.PARAM_SERVICE, event.getService());
        paramMap.put("eventID", String.valueOf(event.getDbid()));
        paramMap.put("eventUEI", event.getUei());

        final Integer nodeId = event.getNodeid() != null ? event.getNodeid().intValue() : null;

        paramMap = new HashMap(Interpolator.interpolateStrings(paramMap, new FallbackScope(
            m_entityScopeProvider.getScopeForNode(nodeId),
            m_entityScopeProvider.getScopeForInterface(nodeId, event.getInterface()),
            m_entityScopeProvider.getScopeForService(nodeId, event.getInterfaceAddress(), event.getService()),
            MapScope.singleContext("notification",
                    new ImmutableMap.Builder<String,String>()
                            .put("eventID", String.valueOf(event.getDbid()))
                            .put("eventUEI", event.getUei())
                            .put("noticeid", String.valueOf(noticeId))
                            .build())
                    )
            )
        );

        m_eventUtil.expandMapValues(paramMap, event);

        return Collections.unmodifiableMap(paramMap);
    }

