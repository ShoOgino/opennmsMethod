    /**
     * <p>buildUblogService</p>
     *
     * @param arguments a {@link java.util.List} object.
     * @return a {@link twitter4j.Twitter} object.
     */
    protected Twitter buildUblogService(List<Argument> arguments) {
        MicroblogProfile profile = null;
        String serviceUrl = "";
        String authenUser = "";
        String authenPass = "";
        
        // First try to get a microblog profile called "notifd", falling back to the default if that fails
        profile = m_microblogConfigurationDao.getProfile("notifd");
        if (profile == null)
            profile = m_microblogConfigurationDao.getDefaultProfile();

        if (profile == null) {
            LOG.error("Unable to find a microblog profile called '{}', and default profile does not exist; we cannot send microblog notifications!", UBLOG_PROFILE_NAME);
            throw new RuntimeException("Could not find a usable microblog profile.");
        }
        
        LOG.info("Using microblog profile with name '{}'", profile.getName());
        
        serviceUrl = profile.getServiceUrl();
        authenUser = profile.getAuthenUsername();
        authenPass = profile.getAuthenPassword();

        if (authenUser == null || "".equals(authenUser))
            LOG.warn("Working with a blank username, perhaps you forgot to set this in the microblog configuration?");
        if (authenPass == null || "".equals(authenPass))
            LOG.warn("Working with a blank password, perhaps you forgot to set this in the microblog configuration?");
        if (serviceUrl == null || "".equals(serviceUrl))
            throw new IllegalArgumentException("Cannot use a blank microblog service URL, perhaps you forgot to set this in the microblog configuration?");
        
        Twitter svc = new Twitter();
        svc.setBaseURL(serviceUrl);
        svc.setSource("OpenNMS");
        svc.setUserId(authenUser);
        svc.setPassword(authenPass);
        return svc;
    }

