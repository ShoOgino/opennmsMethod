    private void sendResolvedNotifications(Collection notifIDs, Event event, String acknowledge, 
            String[] match, String resolutionPrefix) throws Exception {
        Category log = log();
        for (Iterator it = notifIDs.iterator(); it.hasNext();) {
            int notifId = ((Integer) it.next()).intValue();
            boolean wa = false;
            if(notifId < 0) {
                notifId *= -1;
                wa = true;
                log.debug("Conditional autoNotify for notifId " + notifId);
            }
            final boolean wasAcked = wa;
            final Map<String, String> parmMap = rebuildParameterMap(notifId, resolutionPrefix);
            
            NotificationManager.expandMapValues(parmMap, 
                    getNotificationManager().getEvent(Integer.parseInt(parmMap.get("eventID"))));
            
            String queueID = getNotificationManager().getQueueForNotification(notifId);

            final Map<String, List<String>> userNotifitcations = new HashMap<String, List<String>>();
            RowProcessor ackNotifProcessor = new RowProcessor() {
                public void processRow(ResultSet rs) throws SQLException {
                    String userID = rs.getString("userID");
                    String contactInfo = rs.getString("contactinfo");
                    String autoNotifyChar = rs.getString("autonotify");
                    if(userID.equals("email-address")) {
                        userID = contactInfo;
                    }
                    String cmd = rs.getString("media");
                    if(autoNotifyChar == null) {
                        autoNotifyChar = "C";
                    }
                    if(autoNotifyChar.equals("Y") || (autoNotifyChar.equals("C") && !wasAcked)) {
                        List<String> cmdList = (List<String>) userNotifitcations.get(userID);
                        if (cmdList == null) {
                            cmdList = new ArrayList<String>();
                            userNotifitcations.put(userID, cmdList);
                        }
                        cmdList.add(cmd);
                    }
                }
            };
            getNotificationManager().forEachUserNotification(notifId, ackNotifProcessor);

            for (Iterator userIt = userNotifitcations.keySet().iterator(); userIt.hasNext();) {
                String userID = (String) userIt.next();
                List<String> cmdList = (List<String>) userNotifitcations.get(userID);
                String[] cmds = (String[]) cmdList.toArray(new String[cmdList.size()]);
                log.debug("Sending " + resolutionPrefix + " notification to userID = " + userID + " for notice ID " + notifId);
                sendResolvedNotificationsToUser(queueID, userID, cmds, parmMap);
            }

        }
    }

