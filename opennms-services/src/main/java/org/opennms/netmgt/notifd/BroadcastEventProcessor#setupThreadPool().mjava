    private void setupThreadPool() throws IOException {
        // determine the size of the thread pool
        final int maxThreads = getNotifdConfigManager().getConfiguration().getMaxThreads();
        // enforce no limit when the value is <= 0
        final int effectiveMaxThreads = maxThreads > 0 ?  maxThreads : Integer.MAX_VALUE;
        // make it easier to identify the notification task threads
        final ThreadFactory threadFactory = new ThreadFactoryBuilder()
                .setNameFormat("NotificationTask-%d")
                .build();
        // use an unbounded queue to hold any additional tasks
        // this may not ideal, but it's safer than the previous approach of immediately
        // creating a thread for every task
        final BlockingQueue<Runnable> queue = new LinkedBlockingQueue<>();
        // create the thread pool that enforces a ceiling on the number of concurrent threads
        m_notificationTaskExecutor = new ThreadPoolExecutor(effectiveMaxThreads, effectiveMaxThreads,
                60L, TimeUnit.SECONDS,
                queue,
                threadFactory);
        m_notificationTaskExecutor.allowCoreThreadTimeOut(true);
    }

