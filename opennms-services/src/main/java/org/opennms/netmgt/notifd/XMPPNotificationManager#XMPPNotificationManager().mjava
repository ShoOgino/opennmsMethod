	protected XMPPNotificationManager() {

		// get the category logger
		
		ThreadCategory.setPrefix(LOG4J_CATEGORY);
		
		// Load up some properties

		try {
			this.props.load(new FileInputStream(ConfigFileConstants
					.getFile(ConfigFileConstants.XMPP_CONFIG_FILE_NAME)));
			xmppServer = this.props.getProperty("xmpp.server");
			xmppUser = this.props.getProperty("xmpp.user");
			xmppPassword = this.props.getProperty("xmpp.pass");
			if (this.props.containsKey("xmpp.port")) {
				xmppPort = Integer.valueOf(this.props.getProperty("xmpp.port")).intValue();
			} else {
				xmppPort = XMPP_PORT;
			}
		        xmppConfig = new ConnectionConfiguration(xmppServer, xmppPort);
			if (this.props.containsKey("xmpp.TLSEnabled")
					&& this.props.getProperty("xmpp.TLSEnabled").equals("true")) {
				xmppConfig.setTLSEnabled(true);
				log().debug("XMPPManager Enabling TLS");
			} else {
				xmppConfig.setTLSEnabled(false);
			}
			if (this.props.containsKey("xmpp.selfSignedCertificateEnabled")
					&& this.props.getProperty("xmpp.selfSignedCertificateEnabled").equals("true")) {
				xmppConfig.setSelfSignedCertificateEnabled(true);
				log().debug("XMPPManager Enabling self-signed certificates");
			} else {
				xmppConfig.setSelfSignedCertificateEnabled(false);
			}
			if (this.props.containsKey("xmpp.truststorePassword")) {
				xmppConfig.setTruststorePassword(this.props.getProperty("xmpp.truststorePassword"));
				log().debug("XMPPManager set non-default truststore password");
			} else {
				log().debug("XMPPManager set default truststore password");
				xmppConfig.setTruststorePassword(TRUST_STORE_PASSWORD);
			}
			if (this.props.containsKey("xmpp.debuggerEnabled") 
					&& this.props.getProperty("xmpp.debuggerEnabled").equals("true")) {
				xmppConfig.setDebuggerEnabled(true);
				log().debug("XMPPManager set debugger enabled");
			} else {
				xmppConfig.setDebuggerEnabled(false);
				log().debug("XMPPManager set debugger disabled");
			}
			xmppConfig.setSASLAuthenticationEnabled(true);
			log().debug("XMPP Manager connection config: " + xmppConfig.toString());
			log().debug("never get here");
		} catch (Exception e) {
			log().error("XMPP Manager couldn't configure connection : ", e);
		}

		// dump some settings:



		// Connect to xmpp server

		try {
			log().debug("Attempting vanilla XMPP Connection to " + xmppServer + ":" + xmppPort);
			xmpp = new XMPPConnection(xmppConfig);
			if (xmpp.isConnected()) {
				log().debug("XMPP Manager successfully connected");
				// Following requires a later version of the library
				if (xmpp.isSecureConnection()) 
					log().debug("XMPP Manager successfully nogotiated a secure connection");
				if (xmpp.isUsingTLS()) 
					log().debug("XMPP Manager successfully nogotiated a TLS connection");
				log().debug("XMPP Manager Connected"); 
				login();
				// Add connection listener
				xmpp.addConnectionListener(conlistener);
			} else {
				log().debug("XMPP Manager Not Connected");
			}
		} catch (Exception e) {
			log().fatal("XMPP Manager unable to connect : ", e);
		}

	}

