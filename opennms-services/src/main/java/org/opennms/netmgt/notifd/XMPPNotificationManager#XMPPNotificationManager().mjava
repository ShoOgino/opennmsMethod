	protected XMPPNotificationManager() {

		// get the category logger
		
		ThreadCategory.setPrefix(LOG4J_CATEGORY);
		
		// Load up some properties

	    File config = null;
	    try {
	        config = ConfigFileConstants.getFile(ConfigFileConstants.XMPP_CONFIG_FILE_NAME);
	    } catch (IOException e) {
	        log().warn(ConfigFileConstants.XMPP_CONFIG_FILE_NAME + " not readable", e);
	    }
		if (Boolean.getBoolean("useSystemXMPPConfig") || !config.canRead()) {
		    this.props = System.getProperties();
		} else {
		    FileInputStream fis = null;
		    try {
		        fis = new FileInputStream(config);
		        this.props.load(fis);
		    } catch (IOException e) {
		        log().warn("unable to load " + config, e);
		    } finally {
		        IOUtils.closeQuietly(fis);
		    }
		}

		xmppServer = this.props.getProperty("xmpp.server");
		xmppServiceName = this.props.getProperty("xmpp.servicename", xmppServer);
		xmppUser = this.props.getProperty("xmpp.user");
		xmppPassword = this.props.getProperty("xmpp.pass");
		xmppPort = Integer.valueOf(this.props.getProperty("xmpp.port", XMPP_PORT));

		xmppConfig = new ConnectionConfiguration(xmppServer, xmppPort, xmppServiceName);

		boolean debuggerEnabled = Boolean.parseBoolean(props.getProperty("xmpp.debuggerEnabled"));
		xmppConfig.setDebuggerEnabled(debuggerEnabled);
		if (debuggerEnabled) {
		    log().setLevel(Level.DEBUG);
		}

		xmppConfig.setSASLAuthenticationEnabled(Boolean.parseBoolean(props.getProperty("xmpp.SASLEnabled", "true")));
		xmppConfig.setSelfSignedCertificateEnabled(Boolean.parseBoolean(props.getProperty("xmpp.selfSignedCertificateEnabled")));

		if (Boolean.parseBoolean(props.getProperty("xmpp.TLSEnabled"))) {
			xmppConfig.setSecurityMode(SecurityMode.enabled);
		} else {
		    xmppConfig.setSecurityMode(SecurityMode.disabled);
		}
		if (this.props.containsKey("xmpp.truststorePassword")) {
			xmppConfig.setTruststorePassword(this.props.getProperty("xmpp.truststorePassword"));
		} else {
			xmppConfig.setTruststorePassword(TRUST_STORE_PASSWORD);
		}

		if (log().isDebugEnabled()) {
		    log().debug("XMPP Manager connection config: " + xmppConfig.toString());
		}

        xmpp = new XMPPConnection(xmppConfig);

        // Connect to xmpp server
		connectToServer();

	}

