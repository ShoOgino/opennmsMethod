    private void automaticAcknowledge(Event event, boolean notifsOn) {
        try {
            Collection<AutoAcknowledge> autoAcks = getNotifdConfigManager().getAutoAcknowledges();

            // see if this event has an auto acknowledge for a notice
            boolean processed = false;
            for (AutoAcknowledge curAck : autoAcks) {
                if (curAck.getUei().equals(event.getUei())) {
                    try {
                        LOG.debug("Acknowledging event {} {}:{}:{}", curAck.getAcknowledge(), event.getNodeid(), event.getInterface(), event.getService());
                        
                        Collection<Integer> notifIDs = getNotificationManager().acknowledgeNotice(event, curAck.getAcknowledge(), curAck.getMatch());
                        processed = true;
                        try {
                            // only send resolution notifications if notifications are globally turned on
                            if (curAck.getNotify() && notifsOn) {
                                sendResolvedNotifications(notifIDs, event, curAck.getResolutionPrefix(), getNotifdConfigManager().getConfiguration().isNumericSkipResolutionPrefix());
                            }
                        } catch (Throwable e) {
                            LOG.error("Failed to send resolution notifications.", e);
                        }
                    } catch (SQLException e) {
                        LOG.error("Failed to auto acknowledge notice.", e);
                    }
                }
            }

            // see if this event has an auto acknowledge alarm for a notice
            if (processed) {
                return;
            }
            final AutoAcknowledgeAlarm autoAck = getNotifdConfigManager().getConfiguration().getAutoAcknowledgeAlarm();
            if (autoAck == null) {
                return;
            }
            if (!autoAck.getUeiCollection().isEmpty() && !autoAck.getUeiCollection().contains(event.getUei())) {
                return;
            }
            Collection<Integer> notifIDs = getNotificationManager().acknowledgeNoticeBasedOnAlarms(event);
            try {
                // only send resolution notifications if notifications are globally turned on
                if (autoAck.getNotify() && !notifIDs.isEmpty() && notifsOn) {
                    sendResolvedNotifications(notifIDs, event, autoAck.getResolutionPrefix(), getNotifdConfigManager().getConfiguration().isNumericSkipResolutionPrefix());
                }
            } catch (Throwable e) {
                LOG.error("Failed to send resolution notifications.", e);
            }
        } catch (Throwable e) {
            LOG.error("Unable to auto acknowledge notice due to exception.", e);
        }
    }

