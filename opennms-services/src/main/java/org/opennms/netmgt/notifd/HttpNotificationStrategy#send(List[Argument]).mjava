    /* (non-Javadoc)
     * @see org.opennms.netmgt.notifd.NotificationStrategy#send(java.util.List)
     */
    /** {@inheritDoc} */
    @Override
    public int send(List<Argument> arguments) {

        m_arguments = arguments;

        String url = getUrl();
        if (url == null) {
            LOG.warn("send: url argument is null, HttpNotification requires a URL");
            return 1;
        }

        final HttpClientWrapper clientWrapper = HttpClientWrapper.create()
                .setConnectionTimeout(3000)
                .setSocketTimeout(3000);
        if(getUseSystemProxy()) {
             clientWrapper.useSystemProxySettings();
        }
        HttpUriRequest method = null;
        final List<NameValuePair> posts = getPostArguments();

        if (posts == null) {
            method = new HttpGet(url);
            LOG.info("send: No \"post-\" arguments..., continuing with an HTTP GET using URL: {}", url);
        } else {
            LOG.info("send: Found \"post-\" arguments..., continuing with an HTTP POST using URL: {}", url);
            for (final NameValuePair post : posts) {
                LOG.debug("send: post argument: {} = {}", post.getName(), post.getValue());
            }
            method = new HttpPost(url);
            final UrlEncodedFormEntity entity = new UrlEncodedFormEntity(posts, StandardCharsets.UTF_8);
            ((HttpPost)method).setEntity(entity);
        }

        String contents = null;
        int statusCode = -1;
        try {
            CloseableHttpResponse response = clientWrapper.execute(method);
            statusCode = response.getStatusLine().getStatusCode();
            contents = EntityUtils.toString(response.getEntity());
            LOG.info("send: Contents is: {}", contents);
        } catch (IOException e) {
            LOG.error("send: IO problem with HTTP post/response: {}", e);
            throw new RuntimeException("Problem with HTTP post: "+e.getMessage());
        } finally {
            IOUtils.closeQuietly(clientWrapper);
        }

        doSql(contents);

        return statusCode;
    }

