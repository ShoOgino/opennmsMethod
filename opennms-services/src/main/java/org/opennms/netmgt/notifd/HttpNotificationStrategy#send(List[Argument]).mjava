    /* (non-Javadoc)
     * @see org.opennms.netmgt.notifd.NotificationStrategy#send(java.util.List)
     */
    /** {@inheritDoc} */
    public int send(List<Argument> arguments) {
        
        m_arguments = arguments;
        
        String url = getUrl();
        if (url == null) {
        		log().warn("send: url argument is null, HttpNotification requires a URL");
        		return 1;
        }
        
        DefaultHttpClient client = new DefaultHttpClient();
        HttpUriRequest method = null;
        List<NameValuePair> posts = getPostArguments();
                
        if (posts == null) {
            method = new HttpGet(url);
            log().info("send: No \"post-\" arguments..., continuing with an HTTP GET using URL: "+url);
        } else {
            log().info("send: Found \"post-\" arguments..., continuing with an HTTP POST using URL: "+url);
            for (final NameValuePair post : posts) {
                log().debug("send: post argument: "+post.getName() +" = "+post.getValue());
            }
            method = new HttpPost(url);
            try {
                UrlEncodedFormEntity entity = new UrlEncodedFormEntity(posts, "UTF-8");
                ((HttpPost)method).setEntity(entity);
            } catch (UnsupportedEncodingException e) {
                // Should never happen
            }
        }

        String contents = null;
        int statusCode = -1;
        try {
            HttpResponse response = client.execute(method);
            statusCode = response.getStatusLine().getStatusCode();
            contents = EntityUtils.toString(response.getEntity());
            log().info("send: Contents is: "+contents);
        } catch (IOException e) {
            log().error("send: IO problem with HTTP post/response: "+e);
            throw new RuntimeException("Problem with HTTP post: "+e.getMessage());
        } finally {
            // Do we need to do any cleanup?
            // method.releaseConnection();
        }
        
        doSql(contents);
        
        return statusCode;
    }

