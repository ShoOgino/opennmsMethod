	void scheduleExistingInterfaces() throws SQLException {
		// Load the list of IP addresses from the config file and schedule
		// them in the appropriate level

		VulnscandConfigFactory configFactory = VulnscandConfigFactory.getInstance();
		VulnscandConfiguration config = VulnscandConfigFactory.getConfiguration();

		// If the status of the daemon is "true" (meaning "on")...
		if (config.getStatus()) {
			Enumeration<ScanLevel> scanLevels = config.enumerateScanLevel();

			while (scanLevels.hasMoreElements()) {
				ScanLevel scanLevel = scanLevels.nextElement();
				int level = scanLevel.getLevel();

				// Grab the list of included addresses for this level
				//Set levelAddresses = configFactory.getAllIpAddresses(scanLevel);
				Set levelAddresses = new TreeSet();

				// If scanning of the managed IPs is enabled...
				if (configFactory.getManagedInterfacesStatus()) {
					// And the managed IPs are set to be scanned at the current
					// level...
					if (configFactory.getManagedInterfacesScanLevel() == level) {
						// Then schedule those puppies to be scanned
						levelAddresses.addAll(getAllManagedInterfaces());
						log().info("Scheduled the managed interfaces at scan level " + level + ".");
					}
				}

				// Remove all of the excluded addresses (the excluded
				// addresses are cached, so this operation is lighter
				// than constructing the exclusion list each time)
				// JOHAN - THINK....
				levelAddresses.removeAll(configFactory.getAllExcludes());

				log().info("Adding " + levelAddresses.size() + " addresses to the vulnerability scan scheduler.");

				Iterator itr = levelAddresses.iterator();
				while (itr.hasNext()) {
					Object next = itr.next();
					String nextAddress = null;
					if (next instanceof String) {
						nextAddress = (String) next;
						// REMOVE SLASHES.... - 
						//nextAddress = nextAddress.replaceAll("/", "");
						//nextAddress = nextAddress + "/" + nextAddress;
						log().debug("JOHAN LevelAddresses : " + nextAddress);
					}
					try {
						// All we know right now is the IP.....
						InetAddress frump = InetAddress.getByName(nextAddress);
						addToKnownAddresses(frump, level);
					} catch (UnknownHostException ex) {
						log().error("Could not add invalid address to schedule: " + nextAddress, ex);
					}
				}
			}
		} else {
			log().info("Vulnerability scanning is DISABLED.");
		}
	}

