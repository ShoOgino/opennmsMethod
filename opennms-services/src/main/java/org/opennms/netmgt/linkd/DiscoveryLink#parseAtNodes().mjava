	private void parseAtNodes() {
		
		Iterator<LinkableNode> ite = atNodes.iterator();
		while (ite.hasNext()) {
			Iterator<AtInterface> at_ite = ite.next().getAtInterfaces().iterator();
			while (at_ite.hasNext()) {
				AtInterface at = (AtInterface) at_ite.next();
				String macAddress = at.getMacAddress();
				if (isMacIdentifierOfBridgeNode(macAddress)) {
					if (log().isInfoEnabled()) 
					log()
					.info("parseAtNodes: at interface "
							+ at.toString()
							+ " belongs to bridge node! Not adding to discoverable atinterface.");
					continue;
				} 
				List<AtInterface> ats = macToAtinterface.get(macAddress);
				if (ats == null) ats = new ArrayList<AtInterface>();
				if (log().isInfoEnabled()) 
					log()
					.info("parseAtNodes: at interface "
							+ at.toString()
							+ " not belongs to bridge node! Adding to discoverable atinterface.");
				ats.add(at);
				macToAtinterface.put(macAddress, ats);
				if (log().isDebugEnabled())
					log().debug("parseAtNodes: mac:" + macAddress + " has now atinterface reference: " + ats.size());
			}		
		}
	}
	/* 
	 * This method is useful to get forwarding table
	 * for switch failed
	 */

