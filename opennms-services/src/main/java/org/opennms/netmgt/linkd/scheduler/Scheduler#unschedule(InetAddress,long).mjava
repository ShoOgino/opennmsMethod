	public synchronized void unschedule(InetAddress ipAddr, long interval)
			throws UnknownHostException {
		Category log = ThreadCategory.getInstance(getClass());

		if (log.isDebugEnabled()) {
			log.debug("unschedule: Removing Ready Runnable(s) with ip "
					+ ipAddr.getHostAddress() + " at interval " + interval);
		}
		Long key = new Long(interval);
		synchronized(m_queues) {
		if (!m_queues.containsKey(key)) {
			if (log.isDebugEnabled())
				log.debug("unschedule: interval queue did not exist, exit");
			return;
		}

		PeekableFifoQueue in = (PeekableFifoQueue) m_queues.get(key);
		if (in.isEmpty()) {
			if (log.isDebugEnabled())
				log.debug("unschedule: interval queue is empty, exit");
			return;
		}
		
		ReadyRunnable readyRun = null;
		int maxLoops = in.size();
		boolean first = true;
		do {
			try {
				readyRun = (ReadyRunnable) in.remove();
				if (in.size() == maxLoops && first) {
					maxLoops++;
				}
				first = false;
				if (readyRun != null && readyRun.getTarget().equals(ipAddr)) {
					if (log.isDebugEnabled()) {
						log
								.debug("unschedule: removing found ready runnable "
										+ readyRun);
					}

					// Pop the interface/readyRunnable from the
					// queue for execution.
					//
					m_scheduled--;
				} else {
					in.add(readyRun);
				}
			} catch (InterruptedException ie) {
				if (log.isInfoEnabled())
					log.info(
							"unschedule: failed to remove ready runnable instance "
									+ ipAddr.getHostAddress()
									+ " from scheduler", ie);
				Thread.currentThread().interrupt();
			} catch (FifoQueueException ex) {
				if (log.isInfoEnabled())
					log.info(
							"unschedule: failed to remove ready runnable instance "
									+ ipAddr.getHostName()
									+ " from scheduler", ex);
				throw new UndeclaredThrowableException(ex);
			}
		} while ( --maxLoops > 0) ; 
		}
	}

