    private List<NodeToNodeLink> getCdpLinks(LinkableNode node1, LinkableNode node2) {
        int node1Id = node1.getNodeId();
        int node2Id = node2.getNodeId();
        LogUtils.infof(this,
                       "getCdpLinks: checking cdp links between node1 %d and node2 %d",
                       node1Id, 
                       node2Id);
        
        List<NodeToNodeLink> cdplinks = new ArrayList<NodeToNodeLink>();
        for (final CdpInterface cdpIface : node1.getCdpInterfaces()) {
            LogUtils.debugf(this,
                    "getCdpLinks: parsing cdp interface %s on node %d.", cdpIface,node1Id);
            if (cdpIface.getCdpTargetNodeId() != node2Id ||
            		!cdpIface.getCdpTargetDeviceId().equals(node2.getCdpDeviceId())) {
                LogUtils.debugf(this,
                        "getCdpLinks: target node %d with cdpDeviceId %s is not node2 %d with cdpdeviceId %s Skipping.", 
                        cdpIface.getCdpTargetNodeId(),cdpIface.getCdpTargetDeviceId(),node2Id,node2.getCdpDeviceId());
            	continue;
            }
            if (isBridgeNode(node1Id)) {
                LinkableNode node = m_bridgeNodes.get(node1Id);
                if (node.isBackBoneBridgePort(node.getBridgePort(cdpIface.getCdpIfIndex()))) {
                    LogUtils.debugf(this,
                                    "getCdpLinks: source node is bridge node, and port %d is backbone port! Skipping.", cdpIface.getCdpIfIndex());
                    continue;
                }
            }
            if (isBridgeNode(node2Id)) {
                LinkableNode node = m_bridgeNodes.get(node2Id);
                if (node.isBackBoneBridgePort(node.getBridgePort(cdpIface.getCdpTargetIfIndex()))) {
                    LogUtils.debugf(this,
                                    "getCdpLinks: target node is bridge node, and port %d is backbone port! Skipping.", cdpIface.getCdpTargetIfIndex() );
                    continue;
                }
            }

            final NodeToNodeLink link = new NodeToNodeLink(
                                                           cdpIface.getCdpTargetNodeId(),
                                                           cdpIface.getCdpTargetIfIndex());
        	link.setNodeparentid(node1Id);
        	link.setParentifindex(cdpIface.getCdpIfIndex());
        	cdplinks.add(link);
        }
        return cdplinks;
    }

