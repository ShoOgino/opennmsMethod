    private void getLinksFromRouteTable() {
        if (m_routerNodes.size() > 0) {
            LOG.info("getLinksFromRouteTable: finding non-ethernet links on Router nodes");
        }

        for (final LinkableNode curNode : m_routerNodes) {
            final int curNodeId = curNode.getNodeId();
            InetAddress curIpAddr = curNode.getSnmpPrimaryIpAddr();
            LOG.info("getLinksFromRouteTable: parsing router node with ID {} IP address {} and {} router interfaces", curNodeId, str(curIpAddr), curNode.getRouteInterfaces().size());

            for (final RouterInterface routeIface : curNode.getRouteInterfaces()) {
                LOG.debug("getLinksFromRouteTable: parsing RouterInterface: {}", routeIface.toString());

                final NodeToNodeLink lk = new NodeToNodeLink(
                							routeIface.getNextHopNodeid(),
                                            routeIface.getNextHopIfindex());
                lk.setNodeparentid(curNodeId);
                lk.setParentifindex(routeIface.getIfindex());
                LOG.info("getLinksFromRouteTable: saving route link: {}", lk.toString());
                addNodetoNodeLink(lk);
            }
            LOG.info("getLinksFromRouteTable: done parsing router node with ID {} IP address {} and {} router interfaces", curNodeId, str(curIpAddr), curNode.getRouteInterfaces().size());
        }

        if (m_routerNodes.size() > 0) {
            LOG.info("getLinksFromRouteTable: done finding non-ethernet links on Router nodes");
        }

    }

