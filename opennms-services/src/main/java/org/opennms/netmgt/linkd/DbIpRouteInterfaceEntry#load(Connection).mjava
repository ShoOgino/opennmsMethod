	/**
	 * Load the current interface from the database. If the interface
	 * was modified, the modifications are lost. The nodeid
	 * and ip address must be set prior to this call.
	 *
	 * @param c	The connection used to load the data.
	 *
	 * @throws java.sql.SQLException Thrown if an error occurs
	 * 	with the connection
	 */
	private boolean load(Connection c) throws SQLException {
		if (!m_fromDb)
			throw new IllegalStateException(
					"The record does not exists in the database");

		Category log = ThreadCategory.getInstance(getClass());

		// create the Prepared statment and then
		// start setting the result values
		//
		PreparedStatement stmt = null;
		stmt = c.prepareStatement(SQL_LOAD_IPROUTEINTERFACE);
		stmt.setInt(1, m_nodeId);
		stmt.setString(2, m_routedest);

		if (log.isDebugEnabled())
			log.debug("IpRouteInterfaceEntry.load: SQL statement "
				+ stmt.toString());

		// Run the select
		//
		ResultSet rset = stmt.executeQuery();
		if (!rset.next()) {
			rset.close();
			stmt.close();
			if (log.isDebugEnabled())
				log.debug("IpRouteInterfaceEntry.load: no result found");
			return false;
		}

		// extract the values.
		//
		int ndx = 1;

		// get the route netmask
		//
		m_routemask = rset.getString(ndx++);
		if (rset.wasNull())
			m_routemask = null;

		// get the next hop ip address
		//
		m_routenexthop = rset.getString(ndx++);
		if (rset.wasNull())
			m_routenexthop = null;

		// get the interface ifindex for routing info
		//
		m_routeifindex = rset.getInt(ndx++);
		if (rset.wasNull())
			m_routeifindex = -1;
		// get the metrics
		m_routemetric1 = rset.getInt(ndx++);
		if (rset.wasNull())
			m_routemetric1 = -1;

		m_routemetric2 = rset.getInt(ndx++);
		if (rset.wasNull())
			m_routemetric2 = -1;

		m_routemetric3 = rset.getInt(ndx++);
		if (rset.wasNull())
			m_routemetric3 = -1;
		
		m_routemetric4 = rset.getInt(ndx++);
		if (rset.wasNull())
			m_routemetric4 = -1;

		m_routemetric5 = rset.getInt(ndx++);
		if (rset.wasNull())
			m_routemetric5 = -1;
		
		m_routetype = rset.getInt(ndx++);
		if (rset.wasNull())
			m_routetype = -1;
		
		m_routeproto = rset.getInt(ndx++);
		if (rset.wasNull())
			m_routeproto = -1;
		
		// the entry status
		//
		String str = rset.getString(ndx++);
		if (str != null && !rset.wasNull())
			m_status = str.charAt(0);
		else
			m_status = STATUS_UNKNOWN;

		m_lastPollTime = rset.getTimestamp(ndx++);

		rset.close();
		stmt.close();

		// clear the mask and mark as backed
		// by the database
		//
		if (log.isDebugEnabled())
			log.debug("IpRouteInterfaceEntry.load: result found");
		m_changed = 0;
		return true;
	}

