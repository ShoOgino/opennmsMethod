    public boolean scheduleNodeCollection(int nodeid) {

        LinkableNode node = getNode(nodeid);
        if (node != null) {
            LogUtils.debugf(this,
                            "scheduleNodeCollection: Found Scheduled Linkable node %d. Skipping ",
                            nodeid);
            return false;
        }
        // database changed need reload packageiplist
        m_linkdConfig.update();

        // First of all get Linkable Node
        LogUtils.debugf(this,
                        "scheduleNodeCollection: Loading node %d from database",
                        nodeid);
        node = m_queryMgr.getSnmpNode(nodeid);
        if (node == null) {
            LogUtils.warnf(this,
                           "scheduleNodeCollection: Failed to get linkable node from database with ID %d. Exiting",
                           nodeid);
            return false;
        }

        synchronized (m_nodes) {
            LogUtils.debugf(this, "adding node %s to the collection", node);
            m_nodes.add(node);
        }

        scheduleCollectionForNode(node);
        return true;
    }

