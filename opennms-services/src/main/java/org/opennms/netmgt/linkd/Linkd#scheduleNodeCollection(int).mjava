	public boolean scheduleNodeCollection(int nodeid) {

		LinkableNode node = null;
		// database changed need reload packageiplist
		m_linkdConfig.updatePackageIpListMap();
		

		// First of all get Linkable Node
		LogUtils.debugf(this, "scheduleNodeCollection: Loading node %d from database", nodeid);
		try {

			node = m_queryMgr.getSnmpNode(nodeid);
			if (node == null) {
			    LogUtils.warnf(this, "scheduleNodeCollection: Failed to get linkable node from database with ID %d. Exiting", nodeid);
				return false;
			}
		} catch (final SQLException sqlE) {
		    LogUtils.errorf(this, sqlE, "scheduleNodeCollection: SQL Exception while syncing node object with ID %d with database information.", nodeid);
			return false;
		}
		synchronized (m_nodes) {
		    LogUtils.debugf(this, "adding node %s to the collection", node);
	        m_nodes.add(node);
        }
		
		scheduleCollectionForNode(node);
		return true;
	}

