	/**
	 * Load the current interface from the database. If the interface was
	 * modified, the modifications are lost. The nodeid and ip address must be
	 * set prior to this call.
	 * 
	 * @param c
	 *            The connection used to load the data.
	 * 
	 * @throws java.sql.SQLException
	 *             Thrown if an error occurs with the connection
	 */
	private boolean load(Connection c) throws SQLException {
		if (!m_fromDb)
			throw new IllegalStateException("The record does not exists in the database");

		// create the Prepared statment and then
		// start setting the result values
		//
		PreparedStatement stmt = null;
		DBUtils d = new DBUtils(getClass());
		
		try {
            stmt = c.prepareStatement(SQL_LOAD_STPINTERFACE);
            d.watch(stmt);
            stmt.setInt(1, m_nodeId);
            stmt.setInt(2, m_bridgeport);
            stmt.setInt(3, m_stpportvlan);

            // Run the select
            ResultSet rset = stmt.executeQuery();
            d.watch(rset);
            if (!rset.next()) {
                LogUtils.debugf(this, "StpInterfaceEntry.load: no result found");
            	return false;
            }

            // extract the values.
            //
            int ndx = 1;

            // get the base bridge address
            //
            m_ifindex = rset.getInt(ndx++);
            if (rset.wasNull())
            	m_ifindex = -1;

            m_stpportstate = rset.getInt(ndx++);
            if (rset.wasNull())
            	m_stpportstate = STP_PORT_DISABLED;

            m_stpportpathcost = rset.getInt(ndx++);
            if (rset.wasNull())
            	m_stpportpathcost = -1;

            m_stpportdesignatedroot = rset.getString(ndx++);
            if (rset.wasNull())
            	m_stpportdesignatedroot = null;

            m_stpportdesignatedcost = rset.getInt(ndx++);
            if (rset.wasNull())
            	m_stpportdesignatedcost = -1;

            m_stpportdesignatedbridge = rset.getString(ndx++);
            if (rset.wasNull())
            	m_stpportdesignatedbridge = null;

            m_stpportdesignatedport = rset.getString(ndx++);
            if (rset.wasNull())
            	m_stpportdesignatedport = null;

            String str = rset.getString(ndx++);
            if (str != null && !rset.wasNull())
            	m_status = str.charAt(0);
            else
            	m_status = STATUS_UNKNOWN;

            m_lastPollTime = rset.getTimestamp(ndx++);
		} finally {
		    d.cleanUp();
        }

		// clear the mask and mark as backed
		// by the database
		//
		LogUtils.debugf(this, "StpInterfaceEntry.load: result found");
		m_changed = 0;
		return true;
	}

