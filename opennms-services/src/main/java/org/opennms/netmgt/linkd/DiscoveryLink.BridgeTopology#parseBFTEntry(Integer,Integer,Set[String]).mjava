        public void parseBFTEntry(Integer nodeid, Integer bridgePort, Set<String> macs) {
            LOG.info("parseBFTEntry: parsing node {}, port {}, macs {}", nodeid, bridgePort,macs);
            BridgeTopologyPortCandidate bridgeportcandidate = new BridgeTopologyPortCandidate(nodeid, bridgePort, macs);
            // first check if there is an entry for this from stp 
            if ( parsed(bridgeportcandidate)) {
                LOG.info("parseBFTEntry: node {}, port {} has been previuosly parsed. Skipping.", nodeid, bridgePort);
                return;
            }
            
            for (String mac : macs) {
                LOG.info("parseBFTEntry: parsing node {}, port {}, mac {}",
                         nodeid, bridgePort, mac);
                if (bridgeAssociatedMacAddressMap.containsKey(mac)) {
                    Integer targetNodeid = bridgeAssociatedMacAddressMap.get(mac);
                    LOG.info("parseBFTEntry: parsing node {}, port {}, mac {}: mac belong to bridge {}",
                             nodeid, bridgePort, mac, targetNodeid);
                    for (BridgeTopologyLink link : bridgelinks) {
                        if (link.contains(targetNodeid)) {
                            for (String macsOnTarget : link.getMacs()) {
                                if (bridgeAssociatedMacAddressMap.containsKey(macsOnTarget)
                                        && bridgeAssociatedMacAddressMap.get(macsOnTarget).intValue() == nodeid.intValue()) {
                                    link.setDesignatedbridgePort(bridgeportcandidate);
                                    LOG.info("parseBFTEntry: parsing node {}, port {}, mac {}: linked to bridge {}, port {}",
                                             nodeid,
                                             bridgePort,
                                             mac,
                                             targetNodeid,
                                             link.getBridgeTopologyPort().getBridgePort());
                                    return;
                                }
                            }
                        }
                    }
                }
            }
            LOG.info("parseBFTEntry: node {}, port {}, mac {}:: added to topology",
                     nodeid,
                     bridgePort,
                     macs);
            bridgelinks.add(new BridgeTopologyLink(bridgeportcandidate));
            //     is backbone?
            //     is local?
            // found designated bridge...I have to found designated port
        }

