    private void addCdpLinks(LinkableNode curNode) {
        int curCdpNodeId = curNode.getNodeId();
        final InetAddress curCdpIpAddr = curNode.getSnmpPrimaryIpAddr();

        LogUtils.infof(this,
                       "run: parsing nodeid %d IP address %s with %d CDP interfaces.",
                       curCdpNodeId, curCdpIpAddr,
                       curNode.getCdpInterfaces().size());

        for (final CdpInterface cdpIface : curNode.getCdpInterfaces()) {

            final InetAddress targetIpAddr = cdpIface.getCdpTargetIpAddr();
            final String hostAddress = str(targetIpAddr);
            if (!m_linkd.isInterfaceInPackage(targetIpAddr, getPackageName())) {
                LogUtils.debugf(this,
                                "run: IP address %s Not in package: %s.  Skipping.",
                                hostAddress, getPackageName());
                continue;
            }

            final int targetCdpNodeId = cdpIface.getCdpTargetNodeId();
            if (targetCdpNodeId == curCdpNodeId) {
                LogUtils.debugf(this,
                                "run: node id found for IP address %s is itself.  Skipping.",
                                hostAddress);
                continue;
            }

            final NodeToNodeLink link = new NodeToNodeLink(
                                                           cdpIface.getCdpTargetNodeId(),
                                                           cdpIface.getCdpTargetIfIndex());
            link.setNodeparentid(curNode.getNodeId());
            link.setParentifindex(cdpIface.getCdpIfIndex());
            addCdpLink(link);
        }

    }

