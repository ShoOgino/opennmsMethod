	void deleteNode(int nodeid) {

		if (log().isDebugEnabled())
			log().debug("deleteNode: deleting LinkableNode for node "
					+ nodeid);

		try {
			m_queryMgr.update(nodeid, QueryManager.ACTION_DELETE);
		} catch (SQLException sqlE) {
			log().error("scheduleNodeCollection: " +
				"SQL Exception while syncing node object with database information.",sqlE);
		} 
		

		LinkableNode node = removeNode(nodeid);

		if (node == null) {
			log().warn("deleteNode: node not found: " + nodeid);
		} else {
			Iterator<SnmpCollection> ite = m_linkdConfig.getSnmpCollections(node.getSnmpPrimaryIpAddr(), node.getSysoid()).iterator();
			if (log().isDebugEnabled())
				log().debug("deleteNode: get Snmp Collection from Scratch! Iterating on found.");

			while (ite.hasNext()) {
				ReadyRunnable rr = getReadyRunnable(ite.next());
				
				if (rr == null) {
					log().warn("deleteNode: found null ReadyRunnable");
					return;
				} else {
					rr.unschedule();
				}	

			}
			
		}

		// database changed need reload packageiplist
		m_linkdConfig.createPackageIpListMap();

	}

