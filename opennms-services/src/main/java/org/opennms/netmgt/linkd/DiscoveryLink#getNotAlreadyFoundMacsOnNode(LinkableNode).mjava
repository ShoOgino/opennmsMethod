    private List<String> getNotAlreadyFoundMacsOnNode(LinkableNode node) {
        LogUtils.debugf(this,
                        "getNotAlreadyFoundMacsOnNode: Searching Not Yet Found Bridge Identifier Occurrence on Node: %d",
                        node.getNodeId());
        List<String> macs = new ArrayList<String>();
        for (LinkableNode curNode : m_bridgeNodes.values()) {
            if (node.getNodeId() == curNode.getNodeId())
                continue;
            for (String curMac : curNode.getBridgeIdentifiers()) {
                if (node.hasMacAddress(curMac))
                    continue;
                if (macs.contains(curMac))
                    continue;
                LogUtils.debugf(this,
                                "getNotAlreadyFoundMacsOnNode: Found a node/Bridge Identifier %d/%s that was not found in bridge forwarding table for bridge node: %d",
                                curNode.getNodeId(), curMac, node.getNodeId());
                macs.add(curMac);
            }
        }

        LogUtils.debugf(this,
                        "getNotAlreadyFoundMacsOnNode: Searching Not Yet Found MAC Address Occurrence on Node: %d",
                        node.getNodeId());

        if (getLinkd().getAtInterfaces(getPackageName()) != null) { 
            for (String curMac : getLinkd().getAtInterfaces(getPackageName()).keySet()) {
                if (node.hasMacAddress(curMac))
                    continue;
                if (macs.contains(curMac))
                    continue;
                LogUtils.debugf(this,
                            "getNotAlreadyFoundMacsOnNode: Found a MAC Address %s that was not found in bridge forwarding table for bridge node: %d",
                            curMac, node.getNodeId());
                macs.add(curMac);
            }
        }
        return macs;
    }

