    // We use a simple algoritm
    // to find links.
    // If node1 has a lldp rem entry for node2
    // then node2 mast have an lldp rem entry for node1
    // the parent node is that with nodeid1 < nodeid2
    private void getLinksFromLldp(Collection<LinkableNode> linkableNodes) {
        LOG.info("getLinksFromLldp: adding links using Layer Link Discovery Protocol");
        List<LinkableNode> lldpNodes = new ArrayList<LinkableNode>();
        for (LinkableNode linkableNode: linkableNodes) {
            if (linkableNode.getLldpChassisId() != null
                    && linkableNode.getLldpChassisIdSubtype() != null) {
                LOG.debug("getLinksFromLldp: adding to lldp node list: node with nodeid/sysname/chassisid {}/{}/{}", linkableNode.getNodeId(),linkableNode.getLldpSysname(),linkableNode.getLldpChassisId());
                lldpNodes.add(linkableNode);
            }
        }
        int i = 0;
        for (LinkableNode linknode1 : lldpNodes) {
            for (LldpRemInterface lldpremiface : linknode1.getLldpRemInterfaces()) {
                LOG.debug("getLinksFromLldp: found LLDP interface {}", lldpremiface.toString());
                NodeToNodeLink link = new NodeToNodeLink(
                                                         lldpremiface.getLldpRemNodeid(),
                                                         lldpremiface.getLldpRemIfIndex(),DiscoveryProtocol.lldp);
                link.setNodeparentid(linknode1.getNodeId());
                link.setParentifindex(lldpremiface.getLldpLocIfIndex());
                addNodetoNodeLink(link);
                i++;
            }
        }

        LOG.info("getLinksFromLldp: done LLDP. Found links # {}.", i);

    }

