    protected void populateMacToAtInterface() {
        LOG.debug("populateMacToAtInterface: using atNodes to populate macToAtinterface");
        final Set<String> macAddresses = getLinkd().getMacAddressesOnPackage(getPackageName());
        if (macAddresses == null || macAddresses.isEmpty()) return;
        for (final String macAddress : macAddresses) {
            final List<AtInterface> atInterfaces = getLinkd().getAtInterfaces(getPackageName(), macAddress);
            LOG.debug("populateMacToAtInterface: MAC {} now has atinterface reference: {}", macAddress, atInterfaces.size());
            for (final AtInterface at : atInterfaces) {
                final int nodeid = at.getNodeid();
                LOG.debug("populateMacToAtInterface: Parsing AtInterface nodeid/ipaddr/macaddr: {}/{}/{}", nodeid, at.getIpAddress(), macAddress);
                if ((macAddress.indexOf("00000c07ac") == 0) || (macAddress.indexOf("00000c9ff") == 0)) {
                    LOG.debug("populateMacToAtInterface: AtInterface {} is Cisco HSRP address! Not adding to discoverable atinterface.", macAddress);
                    macsExcluded.add(macAddress);
                    continue;
                }
            }
        }
        LOG.debug("populateMacToAtInterface: end populateMacToAtinterface");
    }

