    protected void populateMacToAtInterface() {
        LogUtils.debugf(this, "populateMacToAtInterface: using atNodes to populate macToAtinterface");
        final Set<String> macAddresses = getLinkd().getMacAddressesForPackage(getPackageName());
        if (macAddresses == null || macAddresses.isEmpty()) return;
        for (final String macAddress : macAddresses) {
            final List<AtInterface> atInterfaces = getLinkd().getAtInterfaces(getPackageName(), macAddress);
            LogUtils.debugf(this, "populateMacToAtInterface: MAC %s now has atinterface reference: %d", macAddress, atInterfaces.size());
            for (final AtInterface at : atInterfaces) {
                final int nodeid = at.getNodeid();
                LogUtils.debugf(this, "populateMacToAtInterface: Parsing AtInterface nodeid/ipaddr/macaddr: %d/%s/%s", nodeid, at.getIpAddress(), macAddress);
                if (!m_linkd.isInterfaceInPackage(at.getIpAddress(), getPackageName())) {
                    LogUtils.debugf(this, "populateMacToAtInterface: at interface: %s does not belong to package: %s! Not adding to discoverable atinterface.", at.getIpAddress(), getPackageName());
                    macsExcluded.add(macAddress);
                    continue;
                }
                if (isMacIdentifierOfBridgeNode(macAddress)) {
                    LogUtils.debugf(this, "populateMacToAtInterface: AtInterface %s belongs to bridge node! Not adding to discoverable atinterface.", macAddress);
                    macsExcluded.add(macAddress);
                    continue;
                }
                if ((macAddress.indexOf("00000c07ac") == 0) || (macAddress.indexOf("00000c9ff") == 0)) {
                    LogUtils.debugf(this, "populateMacToAtInterface: AtInterface %s is Cisco HSRP address! Not adding to discoverable atinterface.", macAddress);
                    macsExcluded.add(macAddress);
                    continue;
                }
            }
        }
        LogUtils.debugf(this, "populateMacToAtInterface: end populateMacToAtinterface");
    }

