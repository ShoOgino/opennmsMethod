    // We use a simple algoritm
    // to find links.
    // If node1 has a ospf nbr entry for node2
    // then node2 mast have an ospf nbr entry for node1
    // the parent node is that with nodeid1 < nodeid2
    private void getLinksFromOspf(Collection<LinkableNode> linkableNodes) {
        LOG.info("getLinksFromOspf: adding links using Open Short Path First Protocol");
        List<LinkableNode> ospfNodes = new ArrayList<LinkableNode>();
        for (LinkableNode linkableNode: linkableNodes) {
            if (linkableNode.getOspfRouterId() != null && linkableNode.getOspfinterfaces() != null ) {
                LOG.debug("getLinksFromOspf: adding to ospf node list: node with nodeid/ospfrouterid/#ospfinterface {}/{}/#{}", linkableNode.getNodeId(),str(linkableNode.getOspfRouterId()),linkableNode.getOspfinterfaces().size());
                ospfNodes.add(linkableNode);
            }   
        }
        int i = 0;
        for (LinkableNode linknode1 : ospfNodes) {
            for (LinkableNode linknode2 : ospfNodes) {
                if (linknode1.getNodeId() >= linknode2.getNodeId())
                    continue;
                for (NodeToNodeLink ospfLink : getOspfLink(linknode1,
                                                           linknode2)) {
                    addNodetoNodeLink(ospfLink);
                    i++;
                }
            }
        }
        LOG.info("getLinksFromOspf: done OSPF. Found links # {}.", i);
    }

