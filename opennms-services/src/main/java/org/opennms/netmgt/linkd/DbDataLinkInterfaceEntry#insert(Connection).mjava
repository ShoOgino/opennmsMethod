		/**
		 * Inserts the new row into the DataLinkInterface table
		 * of the OpenNMS database.
		 *
		 * @param c	The connection to the database.
		 *
		 * @throws java.sql.SQLException Thrown if an error occurs
		 * 	with the connection
		 */
		private void insert(Connection c) throws SQLException {
			if (m_fromDb)
				throw new IllegalStateException(
						"The record already exists in the database");

			Category log = ThreadCategory.getInstance(getClass());

			// first extract the next node identifier
			//
			String queryString = "INSERT INTO DataLinkInterface (nodeid,ifindex,nodeparentid,parentIfIndex,status,lastpolltime) VALUES (?,?,?,?,?,?)";
			
			// create the Prepared statment and then
			// start setting the result values
			//
			PreparedStatement stmt = c.prepareStatement(queryString);
			queryString = null;

			int ndx = 1;
			
			stmt.setInt(ndx++, m_nodeId);

			stmt.setInt(ndx++, m_ifindex);

			stmt.setInt(ndx++, m_nodeparentid);

			stmt.setInt(ndx++, m_parentifindex);

			stmt.setString(ndx++, new String(new char[] { m_status }));

			stmt.setTimestamp(ndx++, m_lastPollTime);

			if (log.isDebugEnabled())
				log.debug("DataLinkInterfaceEntry.insert: SQL statement "
					+ stmt.toString());

			// Run the insert
			//
			int rc = stmt.executeUpdate();
			if (log.isDebugEnabled())
				log.debug("DataLinkInterfaceEntry.insert: row " + rc);
			stmt.close();

			// clear the mask and mark as backed
			// by the database
			//
			m_fromDb = true;
			m_changed = 0;
		}

