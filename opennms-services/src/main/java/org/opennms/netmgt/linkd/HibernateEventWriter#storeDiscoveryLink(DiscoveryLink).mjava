    @Override
    @Transactional
    public void storeDiscoveryLink(final DiscoveryLink discoveryLink) {
        final Date now = new Date();
        String source = Linkd.LOG_PREFIX + "/"
                + discoveryLink.getPackageName();

        for (final NodeToNodeLink lk : discoveryLink.getLinks()) {

            LOG.debug("storeDiscoveryLink: parsing link {}.", lk);
            DataLinkInterface link = getDatabaseLink(m_dataLinkInterfaceDao.findByNodeIdAndIfIndex(Integer.valueOf(lk.getNodeId()),
                                                                                                   Integer.valueOf(lk.getIfindex())),
                                                     lk.getNodeparentid(),
                                                     lk.getParentifindex(),
                                                     lk.getProtocol());

            if (link == null) {
                LOG.info("storeDiscoveryLink: no found interface on database for link {}. Creating a new one",
                         lk);
                final OnmsNode onmsNode = m_nodeDao.get(lk.getNodeId());
                link = new DataLinkInterface(onmsNode, lk.getIfindex(),
                                             lk.getNodeparentid(),
                                             lk.getParentifindex(),
                                             StatusType.ACTIVE, now);
                link.setProtocol(lk.getProtocol());
            } else {
                link.setStatus(StatusType.ACTIVE);
                link.setLastPollTime(now);
            }
            link.setSource(source);

            DataLinkInterface reverselink = getDatabaseLink(m_dataLinkInterfaceDao.findByNodeIdAndIfIndex(Integer.valueOf(lk.getNodeparentid()),
                                                                                                          Integer.valueOf(lk.getParentifindex())),
                                                            lk.getNodeId(),
                                                            lk.getIfindex(),
                                                            lk.getProtocol());
            if (reverselink != null) {
                LOG.info("storeDiscoveryLink: Deleting found reverse link {}.",
                         reverselink);
                m_dataLinkInterfaceDao.delete(reverselink);
            }
            LOG.debug("storeDiscoveryLink: Storing {}", link);
            m_dataLinkInterfaceDao.saveOrUpdate(link);
        }

        m_dataLinkInterfaceDao.deactivateIfOlderThan(now, source);
        m_dataLinkInterfaceDao.deleteIfOlderThan(new Date(now.getTime() - 3
                * discoveryLink.getInterval()), source);
        m_dataLinkInterfaceDao.flush();
    }

