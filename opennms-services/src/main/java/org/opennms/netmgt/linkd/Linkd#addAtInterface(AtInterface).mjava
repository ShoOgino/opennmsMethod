    // Here all the information related to the
    // mapping between ipaddress and mac address are stored
    public void addAtInterface(AtInterface atinterface) {
        LOG.debug("addAtInterface: adding at interface {}/{}", atinterface.getIpAddress().getHostAddress(),atinterface.getMacAddress());
        for (String packageName : m_activepackages) {
        	if (!m_macToAtinterface.containsKey(packageName)) {
        	    LOG.debug("addAtInterface: creating map for package {}.",packageName);
                               m_macToAtinterface.put(packageName,
                                       new HashMap<String, List<AtInterface>>());
            }
        	if (!isInterfaceInPackage(atinterface.getIpAddress(), packageName)) {
        	    
            	LOG.debug("addAtInterface: ip {} not in package {}. Skipping", atinterface.getIpAddress().getHostAddress(),packageName);
            	continue;
            }
            List<AtInterface> atis = new ArrayList<AtInterface>();
            
            if (m_macToAtinterface.get(packageName).containsKey(atinterface.getMacAddress())) {
                atis = m_macToAtinterface.get(packageName).get(atinterface.getMacAddress());
            }
            boolean add = true;
            for (AtInterface at : atis) {
                LOG.debug("addAtInterface: found ip {} on package {}.", atinterface.getIpAddress().getHostAddress(),packageName);
            	if (atinterface.equals(at)) {
            	    LOG.debug("addAtInterface: Interface/package {}/{} found not adding.", atinterface.getIpAddress().getHostAddress(),packageName);
                    add = false;
            	}
            }
            if (add) {
                LOG.debug("addAtInterface: add ip/mac/ifindex {}/{}/{} on package {}.", atinterface.getIpAddress().getHostAddress(), atinterface.getMacAddress(), atinterface.getIfIndex(), packageName);
                atis.add(atinterface);
                m_macToAtinterface.get(packageName).put(atinterface.getMacAddress(),
                                                        atis);
            }
        }

    }

