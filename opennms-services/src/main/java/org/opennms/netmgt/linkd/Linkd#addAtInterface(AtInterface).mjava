    // Here all the information related to the
    // mapping between ipaddress and mac address are stored
    public void addAtInterface(final AtInterface atinterface) {
        LOG.debug("addAtInterface: adding at interface {}/{}", atinterface.getIpAddress().getHostAddress(),atinterface.getMacAddress());
        for (final String packageName : getActivePackages()) {
            final String macAddress = atinterface.getMacAddress();
            final InetAddress ipAddress = atinterface.getIpAddress();

            if (!isInterfaceInPackage(ipAddress, packageName)) {
                LOG.debug("addAtInterface: ip {} not in package {}. Skipping", atinterface.getIpAddress().getHostAddress(),packageName);
                continue;
            }

            synchronized (m_macToAtinterface) {
                if (!m_macToAtinterface.containsKey(packageName)) {
                    LOG.debug("addAtInterface: creating map for package {}.",packageName);
                    m_macToAtinterface.put(packageName, new HashMap<String, List<AtInterface>>());
                }

                final List<AtInterface> atis;
                if (m_macToAtinterface.get(packageName).containsKey(macAddress)) {
                    atis = m_macToAtinterface.get(packageName).get(macAddress);
                } else {
                    atis = new ArrayList<AtInterface>();
                }

                if (atis.contains(atinterface)) {
                    LOG.debug("addAtInterface: Interface/package {}/{} found not adding.", atinterface.getIpAddress().getHostAddress(),packageName);
                } else {
                    LOG.debug("addAtInterface: add ip/mac/ifindex {}/{}/{} on package {}.", atinterface.getIpAddress().getHostAddress(), atinterface.getMacAddress(), atinterface.getIfIndex(), packageName);
                    atis.add(atinterface);
                    m_macToAtinterface.get(packageName).put(macAddress, atis);
                }
            }
        }
    }

