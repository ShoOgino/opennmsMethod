    // SELECT
    // node.nodeid,snmpinterface.snmpifindex,snmpinterface.snmpipadentnetmask
    // FROM node LEFT JOIN ipinterface ON node.nodeid = ipinterface.nodeid
    // LEFT JOIN snmpinterface ON ipinterface.snmpinterfaceid =
    // snmpinterface.id WHERE node.nodetype = 'A' AND ipinterface.ipaddr = ?
    protected List<RouterInterface> getRouteInterface(
            final InetAddress nexthop, int ifindex) {

        List<RouterInterface> routes = new ArrayList<RouterInterface>();

        final List<OnmsIpInterface> interfaces = m_ipInterfaceDao.findByIpAddress(str(nexthop));

        LOG.debug("getRouteInterface: Found {} interface matching ipAddress {}",
                  interfaces.size(), str(nexthop));

        for (OnmsIpInterface ipInterface : interfaces) {
            RouterInterface route = null;
            final OnmsNode node = ipInterface.getNode();
            final OnmsSnmpInterface snmpInterface = ipInterface.getSnmpInterface();
            if (snmpInterface == null || snmpInterface.getNetMask() == null) {
                route = new RouterInterface(node.getId(), -1);
            } else {
                route = new RouterInterface(node.getId(),
                                            snmpInterface.getIfIndex(),
                                            snmpInterface.getNetMask());
            }
            route.setNextHop(nexthop);
            route.setIfindex(ifindex);
            LOG.debug("getRouteInterface: adding {} route interface", route);
            routes.add(route);
        }
        return routes;
    }

