    protected void processIpNetToMediaTable(final LinkableNode node, final SnmpCollection snmpcoll, final Date scanTime) {

    	boolean hasPrimaryIpAsAtinterface = false;
        if (LOG.isDebugEnabled()) {
            if (snmpcoll.getIpNetToMediaTable().size() > 0) {
                LOG.debug("processIpNetToMediaTable: Starting ipNetToMedia table processing for {}/{}", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));
            } else {
                LOG.debug("processIpNetToMediaTable: Zero ipNetToMedia table entries for {}/{}", node.getNodeId(), str(node.getSnmpPrimaryIpAddr()));
            }
        }

        // the AtInterfaces used by LinkableNode where to save info
        for (final IpNetToMediaTableEntry ent : snmpcoll.getIpNetToMediaTable()) {

            final int ifindex = ent.getIpNetToMediaIfIndex();

            if (ifindex < 0) {
                LOG.warn("processIpNetToMediaTable: invalid ifindex {}", ifindex);
                continue;
            }

            final InetAddress ipaddress = ent.getIpNetToMediaNetAddress(); 
            
            if (ipaddress.equals(node.getSnmpPrimaryIpAddr()))
            	hasPrimaryIpAsAtinterface = true;
            final String hostAddress = InetAddressUtils.str(ipaddress);

            if (ipaddress == null || ipaddress.isLoopbackAddress() || m_zeroAddress.equals(ipaddress)) {
                LOG.warn("processIpNetToMediaTable: invalid IP: {}", hostAddress);
                continue;
            }

            final String physAddr = ent.getIpNetToMediaPhysAddress();

            if (physAddr == null || physAddr.equals("000000000000") || physAddr.equalsIgnoreCase("ffffffffffff")) {
                LOG.warn("processIpNetToMediaTable: invalid MAC address {} for IP {}", physAddr, hostAddress);
                continue;
            }

            LOG.debug("processIpNetToMediaTable: trying save ipNetToMedia info: IP address {}, MAC address {}, ifIndex {}", hostAddress, physAddr, ifindex);

            // get an AtInterface but without setting MAC address
            final Collection<OnmsIpInterface> iplist = getIpInterfaceDao().findByIpAddress(hostAddress);
            if (iplist.isEmpty()) {
                LOG.debug("processIpNetToMediaTable: no node found for IP address {}.", hostAddress);
                sendNewSuspectEvent(ipaddress, snmpcoll.getTarget(), snmpcoll.getPackageName());
                continue;
            }

            OnmsIpInterface ipinterface = null;
            if (iplist.size() > 1) {
                LOG.debug("processIpNetToMediaTable: found duplicated  IP address {}.", hostAddress);
                for (OnmsIpInterface ip: iplist) {
                    LOG.debug("processIpNetToMediaTable: parsing duplicated  ip interface {}.", ip);
                    if (ip.getNode().getId() == node.getNodeId()) {
                        LOG.debug("processIpNetToMediaTable: suitable ip interface found. Skipping entry {}", ip);
                        ipinterface=ip;
                        break;
                    }
                }
                if (ipinterface == null) {
                    LOG.debug("processIpNetToMediaTable: no suitable duplicated  arp interface found. Skipping entry {}", ent);
                    continue;
                }
            } else {
                ipinterface = iplist.iterator().next();
            }
            OnmsAtInterface at = new OnmsAtInterface(ipinterface.getNode(),ipinterface.getIpAddress());
            int interfaceindex = getIfIndex(at.getNode().getId(),
                                            hostAddress);
            LOG.debug("processIpNetToMediaTable: found ifindex {} for node {} IP address {}.",
                      interfaceindex, node.getNodeId(), hostAddress);
            at.setSourceNodeId(node.getNodeId());

            if (at.getMacAddress() != null
                    && !at.getMacAddress().equals(physAddr)) {
                LOG.info("processIpNetToMediaTable: Setting OnmsAtInterface MAC address to {} but it used to be '{}' (IP Address = {}, ifIndex = {})",
                         physAddr, at.getMacAddress(), hostAddress,
                         ifindex);
            }
            at.setMacAddress(physAddr);

            if (at.getIfIndex() != null
                    && at.getIfIndex().intValue() != ifindex) {
                LOG.info("processIpNetToMediaTable: Setting OnmsAtInterface ifIndex to {} but it used to be '{}' (IP Address = {}, MAC = {})",
                         ifindex, at.getIfIndex(), hostAddress, physAddr);
            }
            at.setIfIndex(interfaceindex);

            at.setLastPollTime(scanTime);
            at.setStatus(StatusType.ACTIVE);

            saveAtInterface(at);

            // Now store the information that is needed to create link in
            // linkd
            AtInterface atinterface = new AtInterface(
                                                      at.getNode().getId(),
                                                      physAddr,
                                                      at.getIpAddress());
            atinterface.setIfIndex(interfaceindex);
            getLinkd().addAtInterface(atinterface);
            
        }
        
        if (!hasPrimaryIpAsAtinterface)
        	savePrimaryAddressAtInterface(node);
        
    }

