	void suspendNodeCollection(int nid) {
		
		SnmpCollection snmpcoll = null;
		synchronized (nodeid2snmpcollection) {
			if (nodeid2snmpcollection.containsKey(new Integer(nid))) {
				snmpcoll = (SnmpCollection) nodeid2snmpcollection.get(new Integer(nid));
			}
		}

		// work on snmpcollection
		ReadyRunnable rr = m_scheduler.getReadyRunnable(snmpcoll);

		if (rr == null) {
			scheduleNodeCollection(nid);
			synchronized (nodeid2snmpcollection) {
				if (nodeid2snmpcollection.containsKey(new Integer(nid))) {
					snmpcoll = (SnmpCollection) nodeid2snmpcollection.get(new Integer(nid));
				}
			}
			rr = m_scheduler.getReadyRunnable(snmpcoll);
		} 
		
		if (rr != null) rr.suspend();
		nodeid2snmpcollection.put(new Integer(nid), (SnmpCollection)rr);
		
		DbEventWriter dbwriter = new DbEventWriter(nid, DbEventWriter.ACTION_UPTODATE);
		dbwriter.run();
	}

