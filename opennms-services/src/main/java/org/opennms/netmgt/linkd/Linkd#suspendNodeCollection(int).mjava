	void suspendNodeCollection(int nodeid) {
		LogUtils.debugf(this, "suspendNodeCollection: suspend collection LinkableNode for node %d", nodeid);

		try {
			m_queryMgr.update(nodeid, QueryManager.ACTION_UPTODATE);
		} catch (SQLException sqlE) {
		    LogUtils.errorf(this, sqlE, "suspendNodeCollection: SQL Exception while syncing node object with database information.");
		} 

		LinkableNode node = getNode(nodeid);

		if (node == null) {
		    LogUtils.warnf(this, "suspendNodeCollection: found null ReadyRunnable");
		} else {
			// get collections
			// get readyRunnuble
			// suspend RR
		    LogUtils.debugf(this, "suspendNodeCollection: get Snmp Collection from Scratch! Iterating on found.");
			Iterator<SnmpCollection> ite = getSnmpCollections(node.getSnmpPrimaryIpAddr(), node.getSysoid()).iterator();
			while (ite.hasNext()) {
				ReadyRunnable rr = getReadyRunnable(ite.next());
				if (rr == null) {
				    LogUtils.warnf(this, "suspendNodeCollection: suspend: node not found: %d", nodeid);
					return;
				} else {
					rr.suspend();
				}	
			}
		}

	}

