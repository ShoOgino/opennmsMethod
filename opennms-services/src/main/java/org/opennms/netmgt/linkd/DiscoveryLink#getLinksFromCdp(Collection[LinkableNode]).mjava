    private void getLinksFromCdp(Collection<LinkableNode> linkableNodes) {
        LOG.info("getLinksFromCdp: adding links using Cisco Discovery Protocol");
        Map<String,LinkableNode> cdpNodes = new HashMap<String,LinkableNode>();
        for (LinkableNode linkableNode: linkableNodes) {
            if (linkableNode.hasCdpInterfaces()) {
                LOG.debug("getLinksFromCdp: adding to CDP node list: node with nodeid/#cdpinterfaces {}/#{}", linkableNode.getNodeId(),linkableNode.getCdpInterfaces().size());
                cdpNodes.put(linkableNode.getCdpDeviceId(),linkableNode);
            }
        }
        LOG.info("getLinksFromCdp: found # {} nodes using Cisco Discovery Protocol", cdpNodes.size());

        LOG.info("getLinksFromCdp: founding Cisco Discovery Protocol links between Cdp nodes");
        for (LinkableNode linknode1: cdpNodes.values()) {
            LOG.info("getLinksFromCdp: parsing cdp device {} with cdpDeviceId {} using Cisco Discovery Protocol",linknode1.getNodeId(), linknode1.getCdpDeviceId());
            for (CdpInterface cdpiface1: linknode1.getCdpInterfaces()) {
                if (cdpiface1 == null) {
                    LOG.warn("getLinksFromCdp: cdp interface null found on target device node {} for cdpTargetDeviceId {} ", linknode1.getNodeId());
                    continue;
                }
                LOG.info("getLinksFromCdp: parsing cdpInterface {} ", cdpiface1);
                if (cdpiface1.getCdpTargetDeviceId() != null) {
                    LinkableNode linknode2 = cdpNodes.get(cdpiface1.getCdpTargetDeviceId());
                    if (linknode2 == null) {
                        LOG.info("getLinksFromCdp: no cdpdevice found for cdpDeviceId {} ", cdpiface1.getCdpTargetDeviceId());
                        continue;
                    }
                    if (linknode1.getNodeId() >= linknode2.getNodeId())
                        continue;
                    LOG.info("getLinksFromCdp: found node {} for cdpTargetDeviceId {} ", linknode2.getNodeId(), cdpiface1.getCdpTargetDeviceId());
                    
                    for (CdpInterface cdpiface2: linknode2.getCdpInterfaces()) {
                        if (cdpiface2 == null) {
                            LOG.warn("getLinksFromCdp: cdp interface null found on target device node {} for cdpTargetDeviceId {} ", linknode2.getNodeId(), cdpiface1.getCdpTargetDeviceId());
                            continue;
                        }
                        LOG.info("getLinksFromCdp: parsing target cdpInterface {} ", cdpiface2);
                        if ( cdpiface2.getCdpTargetDeviceId() != null 
                                && cdpiface2.getCdpTargetDeviceId().equals(linknode1.getCdpDeviceId())) {
                                if(    (cdpiface1.getCdpIfName() != null && cdpiface1.getCdpIfName().equals(cdpiface2.getCdpTargetIfName()))
                                    || (cdpiface2.getCdpIfName() != null && cdpiface2.getCdpIfName().equals(cdpiface1.getCdpTargetIfName()))
                                    ) {
                            
                                    NodeToNodeLink cdpLink = new NodeToNodeLink(linknode2.getNodeId(), cdpiface2.getCdpIfIndex(),DiscoveryProtocol.cdp);
                                    cdpLink.setNodeparentid(linknode1.getNodeId());
                                    cdpLink.setParentifindex(cdpiface1.getCdpIfIndex());
                                    addNodetoNodeLink(cdpLink);
                                }
                        }
                    }
                } else if (cdpiface1.getCdpTargetNodeId() != null) {
                    LOG.info("getLinksFromCdp: cdpdevice found no snmp target node {} for cdpTargetDeviceId {} ", cdpiface1.getCdpTargetNodeId(), cdpiface1.getCdpTargetDeviceId());
                    NodeToNodeLink link = new NodeToNodeLink(cdpiface1.getCdpTargetNodeId(), -1,DiscoveryProtocol.cdp);
                    link.setNodeparentid(linknode1.getNodeId());
                    link.setParentifindex(cdpiface1.getCdpIfIndex());
                    addNodetoNodeLink(link);
                }
            }
        }
                
    }

