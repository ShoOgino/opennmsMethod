    /** {@inheritDoc} */
    @Override
    public void updateForInterface(int nodeId, String ipAddr, int ifIndex, char status) throws SQLException {
        final DBUtils d = new DBUtils(getClass());
        try {
            Connection dbConn = getConnection();
            d.watch(dbConn);
            PreparedStatement ps = null;
            int i=0;
            if(!EventUtils.isNonIpInterface(ipAddr)) {  
                // update atinterface
                ps = dbConn.prepareStatement("UPDATE atinterface set status = ?  WHERE nodeid = ? AND ipaddr = ?");
                d.watch(ps);
                ps.setString(1, new String(new char[] { status }));
                ps.setInt(2, nodeId);
                ps.setString(3, ipAddr);
                i = ps.executeUpdate();
                LogUtils.infof(this, "updateForInterface: atinterface: node = " + nodeId
                               + ", IP Address = " + ipAddr + ", status = " + status + ": updated rows = " + i);
            }
            if(ifIndex > -1) {
                 // update atinterface
                ps = dbConn.prepareStatement("UPDATE atinterface set status = ?  WHERE sourcenodeid = ? AND ifindex = ?");
                d.watch(ps);
                ps.setString(1, new String(new char[] { status }));
                ps.setInt(2, nodeId);
                ps.setInt(3, ifIndex);
                i = ps.executeUpdate();
                LogUtils.infof(this, "updateForInterface: atinterface: source node = " + nodeId
                               + ", ifIndex = " + ifIndex + ", status = " + status + ": updated rows = " + i);
                // update stpinterface
                ps = dbConn.prepareStatement("UPDATE stpinterface set status = ? WHERE nodeid = ? AND ifindex = ?");
                d.watch(ps);
                ps.setString(1, new String(new char[] { status }));
                ps.setInt(2, nodeId);
                ps.setInt(3, ifIndex);
                i = ps.executeUpdate();
                LogUtils.infof(this, "updateForInterface: stpinterface: node = " + nodeId
                               + ", ifIndex = " + ifIndex  + ", status = " + status + ": updated rows = " + i);
    
                // update iprouteinterface
                ps = dbConn.prepareStatement("UPDATE iprouteinterface set status = ? WHERE nodeid = ? AND routeifindex = ?");
                d.watch(ps);
                ps.setString(1, new String(new char[] { status }));
                ps.setInt(2, nodeId);
                ps.setInt(3, ifIndex);
                i = ps.executeUpdate();
                LogUtils.infof(this, "updateForInterface: iprouteinterface: node = " + nodeId
                               + ", rpouteIfIndex = " + ifIndex  + ", status = " + status + ": updated rows = " + i);
    
                // update datalinkinterface
                ps = dbConn.prepareStatement("UPDATE datalinkinterface set status = ? WHERE (nodeid = ? and ifindex = ?) OR (nodeparentid = ? AND parentifindex = ?)");
                d.watch(ps);
                ps.setString(1, new String(new char[] { status }));
                ps.setInt(2, nodeId);
                ps.setInt(3, ifIndex);
                ps.setInt(4, nodeId);
                ps.setInt(5, ifIndex);
                i = ps.executeUpdate();
                LogUtils.infof(this, "updateForInterface: datalinkinterface: node = " + nodeId
                               + ", ifIndex = " + ifIndex  + ", status = " + status + ": updated rows = " + i);
            }
            
        } finally {
            d.cleanUp();
        }
    }

