	private void addLinks(Set macs,int nodeid,int ifindex,Category log) { 
			if (macs == null || macs.isEmpty()) {
				if (log.isDebugEnabled())
					log
							.debug("run: mac's list on link is empty.");
			} else {
				Iterator mac_ite = macs.iterator();

				if (log.isDebugEnabled())
					log
							.debug("run: finding ethernet link on bridges node link");

				while (mac_ite.hasNext()) {
					String curMacAddress = (String) mac_ite
							.next();
					if (macsParsed.contains(curMacAddress)) {
						log
								.warn("run: mac address "
										+ curMacAddress
										+ " just found on other bridge port! Possible Ethernet Loop. ");
						continue;

					}
					macsParsed.add(curMacAddress);
					if (log.isDebugEnabled())
						log
								.debug("run: find ethernet mac address "
										+ curMacAddress
										+ " on link");

					if (macToAtinterface.containsKey(curMacAddress)) {
						AtInterface at = macToAtinterface.get(curMacAddress);
						NodeToNodeLink lNode = new NodeToNodeLink(at.getNodeId(),at.getIfindex());
						lNode.setNodeparentid(nodeid);
						lNode.setParentifindex(ifindex);
						links.add(lNode);
					} else {
						MacToNodeLink lMac = new MacToNodeLink(
								curMacAddress);
						lMac.setNodeparentid(nodeid);
						lMac.setParentifindex(ifindex);
						maclinks.add(lMac);
					}
				}
			}
	}

