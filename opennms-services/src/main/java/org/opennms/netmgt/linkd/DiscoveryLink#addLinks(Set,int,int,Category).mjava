	private void addLinks(Set macs,int nodeid,int ifindex,Category log) { 
		if (macs == null || macs.isEmpty()) {
			if (log.isDebugEnabled())
				log
						.debug("addLinks: mac's list on link is empty.");
		} else {
			Iterator mac_ite = macs.iterator();

			while (mac_ite.hasNext()) {
				String curMacAddress = (String) mac_ite
						.next();
				if (macsParsed.contains(curMacAddress)) {
					log
							.warn("addLinks: mac address "
									+ curMacAddress
									+ " just found on other bridge port! Skipping...");
					continue;
				}
				macsParsed.add(curMacAddress);
				if (log.isDebugEnabled())
					log
							.debug("run: find ethernet mac address "
									+ curMacAddress
									+ " on port");

				if (macToAtinterface.containsKey(curMacAddress)) {
					AtInterface at = macToAtinterface.get(curMacAddress);
					NodeToNodeLink lNode = new NodeToNodeLink(at.getNodeId(),at.getIfindex());
					lNode.setNodeparentid(nodeid);
					lNode.setParentifindex(ifindex);
					addNodetoNodeLink(lNode, log);
				} else {
					if (log.isDebugEnabled())
						log
								.debug("run: no nodeid found, saving as mac link");
					MacToNodeLink lMac = new MacToNodeLink(
							curMacAddress);
					lMac.setNodeparentid(nodeid);
					lMac.setParentifindex(ifindex);
					maclinks.add(lMac);
				}
			}
		}
	}

