	/**
	 * Send a newSuspect event for the interface
	 * 
	 * @param trapInterface
	 *            The interface for which the newSuspect event is to be
	 *            generated
	 */
	void sendNewSuspectEvent(String ipInterface,String ipowner, String pkgName) {
		// construct event with 'linkd' as source

		org.opennms.netmgt.config.linkd.Package pkg = m_linkdConfig.getPackage(pkgName);

		if (m_linkdConfig.autoDiscovery() || (pkg.hasAutoDiscovery() && pkg.getAutoDiscovery() && m_linkdConfig.interfaceInPackage(ipInterface, pkg))) {
			// first of all verify that ipaddress has been not sent
			if (!newSuspenctEventsIpAddr.contains(ipInterface)) {
				
				Event event = new Event();
				event.setSource("linkd");
				event.setUei(org.opennms.netmgt.EventConstants.NEW_SUSPECT_INTERFACE_EVENT_UEI);
				event.setHost(ipowner);
				event.setInterface(ipInterface);
				event.setTime(org.opennms.netmgt.EventConstants.formatToString(new java.util.Date()));

				// send the event to eventd
				m_eventMgr.sendNow(event);
				
				newSuspenctEventsIpAddr.add(ipInterface);
			}
			
		}
	}

