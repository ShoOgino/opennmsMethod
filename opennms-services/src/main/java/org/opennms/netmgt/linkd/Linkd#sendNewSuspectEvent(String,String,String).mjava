	/**
	 * Send a newSuspect event for the interface
	 * construct event with 'linkd' as source
	 * 
	 * @param ipInterface
	 *            The interface for which the newSuspect event is to be
	 *            generated
	 * @param ipowner
	 * 			  The host that hold this ipInterface information           
	 * @pkgName
	 * 		      The package Name of the ready runnable involved
	 */
	void sendNewSuspectEvent(String ipInterface,String ipowner, String pkgName) {
		if (newSuspenctEventsIpAddr.contains(ipInterface)) {
			return;
		}

		org.opennms.netmgt.config.linkd.Package pkg = m_linkdConfig.getPackage(pkgName);

		boolean autodiscovery = false;
		if (pkg.hasAutoDiscovery() && m_linkdConfig.interfaceInPackage(ipInterface, pkg)) autodiscovery = pkg.getAutoDiscovery(); 
		else autodiscovery = m_linkdConfig.autoDiscovery();
		
		if ( autodiscovery ) {
				
			Event event = new Event();
			event.setSource("linkd");
			event.setUei(org.opennms.netmgt.EventConstants.NEW_SUSPECT_INTERFACE_EVENT_UEI);
			event.setHost(ipowner);
			event.setInterface(ipInterface);
			event.setTime(org.opennms.netmgt.EventConstants.formatToString(new java.util.Date()));

			// send the event to eventd
			m_eventMgr.sendNow(event);
			
			newSuspenctEventsIpAddr.add(ipInterface);
			
		}
	}

