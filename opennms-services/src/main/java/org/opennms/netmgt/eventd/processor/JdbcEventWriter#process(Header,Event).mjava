    /**
     * {@inheritDoc}
     *
     * The method that inserts the event into the database
     */
    @Override
    public void process(final Header eventHeader, final Event event) throws SQLException, DataAccessException {
        if (!checkEventSanityAndDoWeProcess(event, "JdbcEventWriter")) {
            return;
        }

        LogUtils.debugf(this, "JdbcEventWriter: processing %s nodeid: %d ipaddr: %s serviceid: %s time: %s", event.getUei(), event.getNodeid(), event.getInterface(), event.getService(), event.getTime());

        final Connection connection = getDataSource().getConnection();

        try {
            connection.setAutoCommit(false);

            try {
                insertEvent(eventHeader, event, connection);

                connection.commit();
            } catch (final SQLException e) {
                LogUtils.warnf(this, e, "Error inserting event into the datastore.");
                try {
                    connection.rollback();
                } catch (final Throwable e2) {
                    LogUtils.warnf(this, e2, "Rollback of transaction failed.");
                }

                throw e;
            } catch (final DataAccessException e) {
                LogUtils.warnf(this, e, "Error inserting event into the datastore.");
                try {
                    connection.rollback();
                } catch (final Throwable e2) {
                    LogUtils.warnf(this, e2, "Rollback of transaction failed.");
                }

                throw e;
            }
        } finally {
            try {
                connection.close();
            } catch (final SQLException e) {
                LogUtils.warnf(this, e, "SQLException while closing database connection.");
            }
        }

        LogUtils.debugf(this, "EventWriter finished for : %s", event.getUei());
    }

