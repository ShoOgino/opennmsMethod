    /**
     * Constructor for this class
     * 
     * @param event
     *            the config event that this will be the key for
     */
    public EventKey(org.opennms.netmgt.xml.eventconf.Event event) {
        super();

        m_hashCode = 1;

        org.opennms.netmgt.xml.eventconf.Mask mask = event.getMask();
        if ((mask == null) || (mask != null && mask.getMaskelementCount() == 0)) {
            String uei = event.getUei();
            if (uei != null) {
                put(TAG_UEI, new EventMaskValueList(uei));
            }
        } else {
            Enumeration en = mask.enumerateMaskelement();
            while (en.hasMoreElements()) {
                org.opennms.netmgt.xml.eventconf.Maskelement maskelement = (org.opennms.netmgt.xml.eventconf.Maskelement) en.nextElement();

                String name = maskelement.getMename();

                EventMaskValueList value = new EventMaskValueList();
                String[] mevalues = maskelement.getMevalue();
                for (int index = 0; index < mevalues.length; index++) {
                    value.add(mevalues[index]);
                }

                put(name, value);
            }
            if (mask != null && mask.getVarbindCount() != 0) {
                Enumeration varenum = mask.enumerateVarbind();
                while (varenum.hasMoreElements()) {
                    org.opennms.netmgt.xml.eventconf.Varbind varbind = (org.opennms.netmgt.xml.eventconf.Varbind) varenum.nextElement();

                    EventMaskValueList vbvalues = new EventMaskValueList();
                    int vbint = varbind.getVbnumber();
                    String vbnumber = Integer.toString(vbint);
                    String[] vbvaluelist = varbind.getVbvalue();
                    for (int index = 0; index < vbvaluelist.length; index++) {
                        vbvalues.add(vbvaluelist[index]);
                    }

                    put(vbnumber, vbvalues);
                }
            }
        }

    }

