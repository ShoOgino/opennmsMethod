    /**
     * Called by eventd to send an event to all interested listeners
     */
    public synchronized void broadcastNow(Event event) {
        if (log().isDebugEnabled()) {
            log().debug("Event to be broadcasted: " + event.getUei());
        }

        if (m_listeners.size() <= 0) {
            if (log().isDebugEnabled()) {
                log().debug("No listeners interested in all events");
            }

        }

        // send to listeners interested in receiving all events
        for (EventListener listener : m_listeners) {
            ListenerThread listenerThr = m_listenerThreads.get(listener.getName());
            try {
                listenerThr.getQueue().add(event);
                if (log().isDebugEnabled()) {
                    log().debug("Queued event to listener: " + listener.getName());
                }
            } catch (FifoQueueException e) {
                log().error("Error queueing event " + event.getUei() + " to listener thread " + listener.getName() + ": " + e, e);
            } catch (InterruptedException e) {
                log().error("Error queueing event " + event.getUei() + " to listener thread " + listener.getName() + ": " + e, e);
            }
        }

        // get event UEI
        String uei = event.getUei();
        if (uei == null) {
            return;
        }

        // send to listeners who are interested in this event uei
        //Loop to get partial wild card "directory" matches
        while (uei.length() > 0) {
            List<EventListener> listenerList = m_ueiListeners.get(uei);
            if (listenerList != null) {
                for (EventListener listener : listenerList) {
                    ListenerThread listenerThread = m_listenerThreads.get(listener.getName());
                    try {
                        listenerThread.getQueue().add(event);
                        if (log().isDebugEnabled()) {
                            log().debug("Queued event "+uei+" to listener: " + listener.getName());
                        }
                    } catch (FifoQueueException e) {
                        log().error("Error queueing event " + event.getUei() + " to listener thread " + listener.getName() + ": " + e, e);
                    } catch (InterruptedException e) {
                        log().error("Error queueing event " + event.getUei() + " to listener thread " + listener.getName() + ": " + e, e);
                    }
                }
            } else {
                if (log().isDebugEnabled()) {
                    log().debug("No listener interested in event: " + uei);
                }
            }
            
            //Try wild cards: Find / before last character
            int i = uei.lastIndexOf("/",uei.length()-2);
            if (i > 0) {
                //Split at "/", including the /
                uei = uei.substring (0, i+1);
            } else {
                //No more wild cards to match
                uei="";
                break;
            }
        }
    }

