    /**
     * The method that inserts the event into the database
     * 
     * @param eventHeader
     *            the event header
     * @param event
     *            the actual event to be inserted
     */
    public void persistEvent(Header eventHeader, Event event) throws SQLException {
        if (event != null) {
            // Check value of <logmsg> attribute 'dest', if set to
            // "donotpersist" then simply return, the uei is not to be
            // persisted to the database
            String logdest = event.getLogmsg().getDest();
            if (logdest.equals("donotpersist")) {
                log().debug("EventWriter: uei '" + event.getUei() + "' marked as 'doNotPersist'.");
                return;
            } else {
                if (log().isDebugEnabled()) {
                    log().debug("EventWriter dbRun for : " + event.getUei() + " nodeid: " + event.getNodeid() + " ipaddr: " + event.getInterface() + " serviceid: " + event.getService());
                }
            }

            try {
                insertEvent(eventHeader, event);

                // commit
                m_dsConn.commit();
            } catch (SQLException e) {
                log().warn("Error inserting event into the datastore", e);
                try {
                    m_dsConn.rollback();
                } catch (Exception e2) {
                    log().warn("Rollback of transaction failed!", e2);
                }

                throw e;
            }

            if (log().isDebugEnabled()) {
                log().debug("EventWriter finished for : " + event.getUei());
            }
        }
    }

