    /**
     * Allocates a new stream
     */
    private void newStream() throws IOException {
        LogUtils.debugf(this, "Opening new PipedOutputStream and adding it to the queue");

        // create a new piped writer
        final PipedOutputStream pipeOut = new PipedOutputStream();
        try {
            synchronized (pipeOut) {
                synchronized (m_xchange) {
                    m_xchange.add(pipeOut);
                    m_xchange.notify();
                }
                LogUtils.debugf(this, "Added pipe to the xchange list");

                pipeOut.wait();

                LogUtils.debugf(this, "Pipe Signaled");
            }
        } catch (final InterruptedException e) {
        	LogUtils.debugf(this, e, "An I/O error occured.");
            throw new IOException("The thread was interrupted");
        }

        LogUtils.debugf(this, "PipedOutputStream connected");

        m_out = pipeOut;
    }

