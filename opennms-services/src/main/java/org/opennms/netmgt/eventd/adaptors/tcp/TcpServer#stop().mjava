    /**
     * This is called inform the current execution of this object is stopped.
     * Once called the object cannot be reused in another thread.
     */
    public void stop() throws InterruptedException {
        Category log = ThreadCategory.getInstance(getClass());
        boolean isTracing = log.isDebugEnabled();

        if (isTracing) {
            log.debug("stop method invoked.");
        }

        // Stop this context
        //
        m_stop = true;
        if (m_context != null) {
            if (isTracing) {
                log.debug("Interrupting and joining context thread " + m_context.getName());
            }

            m_context.interrupt();
            m_context.join();

            if (isTracing) {
                log.debug("Thread context stopped and joined " + m_context.getName());
            }

            m_context = null;
        }

        if (isTracing) {
            log.debug("Attempting to stop and join all stream handlers");
            log.debug("There are " + m_receivers.size() + " receivers");
        }

        // stop all the receivers
        //
        int ndx = 0; // for tracing!
        Iterator<TcpStreamHandler> i = m_receivers.iterator();
        while (i.hasNext()) {
            TcpStreamHandler t = i.next();
            if (t.isAlive()) {
                if (isTracing) {
                    log.debug("Calling stop on handler index " + ndx);
                }

                t.stop();

                if (isTracing) {
                    log.debug("Stopped handler index " + ndx);
                }
            }
            ndx++;
            i.remove();
        }

        if (isTracing) {
            log.debug("All TCP Handlers are stopped and removed");
        }
    }

