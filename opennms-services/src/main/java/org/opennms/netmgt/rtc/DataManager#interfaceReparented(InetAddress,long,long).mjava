    /**
     * Reparent an interface. This effectively means updating the nodelist of
     * the categories and the map
     *
     * Use the ip/oldnodeid combination to get all nodes that will be affected -
     * for each of these nodes, remove the old entry and add a new one with new
     * keys to the map
     *
     * <em>Note:</em> Each of these nodes could belong to more than one
     * category. However, category rule evaluation is done based ONLY on the IP -
     * therefore changing the nodeID on the node should update the categories
     * appropriately
     *
     * @param ip
     *            the interface to reparent
     * @param oldNodeId
     *            the node that the IP belonged to earlier
     * @param newNodeId
     *            the node that the IP now belongs to
     */
    public synchronized void interfaceReparented(InetAddress ip, long oldNodeId, long newNodeId) {
        // get all RTCNodes with the IP/old node ID
    	List<RTCNode> nodesList = m_map.getRTCNodes(oldNodeId, ip);
        ListIterator<RTCNode> listIter = new LinkedList<RTCNode>(nodesList).listIterator();
        while (listIter.hasNext()) {
            RTCNode rtcN = listIter.next();

            // remove the node with the old node id from the map
            m_map.delete(rtcN);

            // change the node ID on the RTCNode
            rtcN.setNodeID(newNodeId);

            // now add the node with the new node ID
            m_map.add(rtcN);

            // remove old node ID from the categories it belonged to
            // and the new node ID
            Iterator<String> catIter = rtcN.getCategories().listIterator();
            while (catIter.hasNext()) {
                String catlabel = catIter.next();

                RTCCategory rtcCat = m_categories.get(catlabel);
                rtcCat.deleteNode(oldNodeId);
                rtcCat.addNode(newNodeId);
            }

        }
    }

