    /**
     * Unsubscribe - remove the recd. URL and related info from the
     * category->Urls map so the sendData() will know when it sends data out
     */
    public synchronized void unsubscribe(String urlStr) {
        URL url = null;
        Category log = ThreadCategory.getInstance(this.getClass());

        try {
            url = new URL(urlStr);
        } catch (MalformedURLException mue) {
            log.warn("ERROR unsubscribing: Invalid URL: " + url);
            return;
        }

        // go through the hashtable entries and remove entries with
        // the specified url
        String key;
        List value;
        Iterator vuIter = m_catUrlMap.keySet().iterator();
        while (vuIter.hasNext()) {
            key = (String) vuIter.next();
            value = (List) m_catUrlMap.get(key);

            if (value == null)
                continue;

            ListIterator listIter = value.listIterator();
            while (listIter.hasNext()) {
                HttpPostInfo postInfo = (HttpPostInfo) listIter.next();
                if (url.equals(postInfo.getURL())) {
                    // remove current entry from list
                    listIter.remove();
                }
            }
        }

        if (log.isDebugEnabled())
            log.debug("Unsubscribed URL: " + url);
    }

