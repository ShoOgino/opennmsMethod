    private static double getOutageTimeInWindow(List<OnmsOutage> outages, Date start, Date end) {
        if (outages == null || outages.size() == 0) {
            return 0.0d;
        }

        final long windowStart = start.getTime();
        final long windowEnd = end.getTime();
        final long windowLength = windowEnd - windowStart;
        Preconditions.checkArgument(0 <= windowStart && windowStart < windowEnd);

        long downtimeInWindow = 0;
        for (final OnmsOutage outage : outages) {
            // When did the service go down?
            // Use the start of the window if the service went down before this
            final long lostAt = Math.max(windowStart, outage.getIfLostService().getTime());

            // When did the service come back up?
            long regainedAt;
            if (outage.getIfRegainedService() == null) {
                // It's still offline - use the end of the window
                regainedAt = windowEnd;
            } else {
                // Use the end of the window if the service came back up after this
                regainedAt = Math.min(windowEnd, outage.getIfRegainedService().getTime());
            }

            downtimeInWindow += (regainedAt - lostAt);
        }

        return downtimeInWindow;
    }

