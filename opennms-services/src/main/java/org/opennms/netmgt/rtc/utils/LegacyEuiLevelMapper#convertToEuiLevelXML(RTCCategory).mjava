    /**
     * Convert the 'RTCCategory' object to a 'EuiLevel' object.
     *
     * @param rtcCat
     *            the RTCCategory to be converted
     * @return a {@link org.opennms.netmgt.xml.rtc.EuiLevel} object.
     */
    public EuiLevel convertToEuiLevelXML(RTCCategory rtcCat) {
        // current time
        Date curDate = new Date();
        long curTime = curDate.getTime();

        // get the rolling window
        long rWindow = 24L * 60L * 60L * 1000L;

        LOG.debug("curdate: {}", curDate);

        // create the data
        EuiLevel level = new EuiLevel();

        // set created in m_header and add to level
        m_header.setCreated(EventConstants.formatToString(curDate));
        level.setHeader(m_header);

        org.opennms.netmgt.xml.rtc.Category levelCat = new org.opennms.netmgt.xml.rtc.Category();

        // get a handle to data
        synchronized (m_dataMgr) {
            // category label
            levelCat.setCatlabel(rtcCat.getLabel());

            // availability value for this category
            levelCat.setCatvalue(m_dataMgr.getValue(rtcCat, curTime, rWindow));

            // nodes in this category
            for (int nodeID : m_dataMgr.getNodes(rtcCat)) {

                Node levelNode = new Node();
                levelNode.setNodeid(nodeID);

                // value for this node for this category
                levelNode.setNodevalue(m_dataMgr.getValue(nodeID, rtcCat, curTime, rWindow));

                // node service count
                levelNode.setNodesvccount(m_dataMgr.getServiceCount(nodeID, rtcCat));

                // node service down count
                levelNode.setNodesvcdowncount(m_dataMgr.getServiceDownCount(nodeID, rtcCat));

                // add the node
                levelCat.getNode().add(levelNode);
            }
        }

        // add category
        level.getCategory().add(levelCat);

        return level;
    }

