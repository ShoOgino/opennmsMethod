    /**
     * <p>onStop</p>
     */
    protected synchronized void onStop() {
		try {
            if (log().isDebugEnabled())
                log().debug("Beginning shutdown process");

            //
            // Close connection to the event subsystem and free associated
            // resources.
            //
            m_eventReceiver.close();

            if (log().isDebugEnabled())
                log().debug("Shutting down the data sender");

            // shutdown the data sender
            m_dataSender.stop();

            if (log().isDebugEnabled())
                log().debug("DataSender shutdown");

            if (log().isDebugEnabled())
                log().debug("sending shutdown to updaters");

            m_updaterPool.shutdown();

            if (log().isDebugEnabled())
                log().debug("RTC Updaters shutdown");

            // cancel the timer and the timer tasks
            if (m_lowTtask != null)
                m_lowTtask.cancel();

            if (m_highTtask != null)
                m_highTtask.cancel();

            if (m_userTask != null)
                m_userTask.cancel();

            if (log().isDebugEnabled())
                log().debug("shutdown: Timer tasks Canceled");

            m_timer.cancel();

            if (log().isDebugEnabled())
                log().debug("shutdown: Timer Canceled");

        } catch (Throwable e) {
            log().error(e.getLocalizedMessage(), e);
        }
	}

