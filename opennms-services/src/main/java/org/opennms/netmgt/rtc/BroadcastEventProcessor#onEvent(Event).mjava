    @EventHandler(ueis={
        // add the outageCreated event
        EventConstants.OUTAGE_CREATED_EVENT_UEI,
        // add the outageResolved event
        EventConstants.OUTAGE_RESOLVED_EVENT_UEI,
        // add the nodeGainedService event
        EventConstants.NODE_GAINED_SERVICE_EVENT_UEI,
        // add the nodeCategoryMembershipChanged event
        EventConstants.NODE_CATEGORY_MEMBERSHIP_CHANGED_EVENT_UEI,
        // add the interfaceUp event
        EventConstants.SERVICE_DELETED_EVENT_UEI,
        // add the serviceDeleted event
        EventConstants.SERVICE_UNMANAGED_EVENT_UEI,
        // add the interfaceReparented event
        EventConstants.INTERFACE_REPARENTED_EVENT_UEI,
        // add the asset info changed event
        EventConstants.ASSET_INFO_CHANGED_EVENT_UEI
    })
    public void onEvent(Event event) {
        if (event == null) {
            return;
        }

        LOG.debug("About to start processing recd. event");

        try {

            String uei = event.getUei();
            if (uei == null) {
                return;
            }

            m_updater.execute(new DataUpdater(m_dataManager, event));

            LOG.debug("Event {} added to updater queue", uei);

        } catch (RejectedExecutionException ex) {
            LOG.error("Failed to process event", ex);
            return;
        } catch (Throwable t) {
            LOG.error("Failed to process event", t);
            return;
        }

    } // end onEvent()

