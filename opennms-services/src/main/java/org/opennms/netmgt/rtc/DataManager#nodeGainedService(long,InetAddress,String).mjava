    /**
     * Handles a node gained service event. Add a new entry to the map and the
     * categories on a 'serviceGained' event
     *
     * @param nodeid
     *            the node id
     * @param ip
     *            the IP address
     * @param svcName
     *            the service name
     */
    public synchronized void nodeGainedService(long nodeid, InetAddress ip, String svcName) {
        //
        // check the 'status' flag for the service
        //
        char svcStatus = getServiceStatus(nodeid, ip, svcName);

        //
        // Include only service status 'A' and where service is not SNMP
        //
        if (svcStatus != 'A') {
            LOG.info("nodeGainedSvc: " + nodeid + "/" + ip + "/" + svcName + " IGNORED because status is not active: " + svcStatus);
        } else {
            LOG.debug("nodeGainedSvc: " + nodeid + "/" + ip + "/" + svcName + "/" + svcStatus);

            // I ran into problems with adding new services, so I just ripped
            // all that out and added
            // a call to the rescan method. -T

            // Hrm - since the rules can be based on things other than the
            // service name
            // we really need to rescan every time a new service is discovered.
            // For
            // example, if I have a category where the rule is "ipaddr =
            // 10.1.1.1 & isHTTP"
            // yet I only have ICMP in the service list, the node will not be
            // added when
            // HTTP is discovered, because it is not in the services list.
            // 
            // This is mainly useful when SNMP is discovered on a node.

            LOG.debug("rtcN : Rescanning services on : " + ip);
            try {
                rtcNodeRescan(nodeid);
            } catch (FilterParseException ex) {
                LOG.warn("Failed to unmarshall database config", ex);
                throw new UndeclaredThrowableException(ex);
            } catch (SQLException ex) {
                LOG.warn("Failed to get database connection", ex);
                throw new UndeclaredThrowableException(ex);
            } catch (RTCException ex) {
                LOG.warn("Failed to get database connection", ex);
                throw new UndeclaredThrowableException(ex);
            }

        }

    }

