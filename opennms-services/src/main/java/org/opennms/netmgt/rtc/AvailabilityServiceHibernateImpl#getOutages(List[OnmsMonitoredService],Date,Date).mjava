    private Map<Integer, List<OnmsOutage>> getOutages(List<OnmsMonitoredService> services, Date start, Date end) {
        if (services == null || services.size() == 0) {
            return Maps.newHashMap();
        }

        final CriteriaBuilder builder = new CriteriaBuilder(OnmsOutage.class)
            // The outage must have started before the end of the window
            .le("ifLostService", end)
            .or(new NullRestriction("ifRegainedService"), // The outage is ongoing
                new AllRestriction( // or the outage was cleared somewhere in the window
                    new GtRestriction("ifRegainedService", start),
                    new LeRestriction("ifRegainedService", end))
            )
            .in("monitoredService", services);

        // Retrieve the outages and group them by monitored service id
        return m_outageDao.findMatching(builder.toCriteria()).stream()
            .collect(Collectors.groupingBy(outage -> outage.getMonitoredService().getId()));
    }

