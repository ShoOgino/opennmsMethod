    /**
     * Return the downtime (difference between the regained and lost times) in
     * the last rolling window
     *
     * @return the downtime (difference between the regained and lost times) in
     *         the last rolling window
     * @param curTime a long.
     * @param rollingWindow a long.
     */
    public long getDownTime(long curTime, long rollingWindow) {

        // make sure the lost time is not later than current time!
        if (curTime < m_svcLostTime) {
            return 0;
        }

        // the start of the rolling window
        long startTime = curTime - rollingWindow;

        if (m_svcRegainedTime < 0 || m_svcRegainedTime >= curTime) {
            // node yet to regain service
            if (m_svcLostTime < startTime) {
                // if svclosttime is less than the rolling window
                // means its been down throughout
                return rollingWindow; // curTime - startTime
            } else {
                return curTime - m_svcLostTime;
            }
        } else {
            // node has regained service
            if (m_svcLostTime < startTime) {
                return m_svcRegainedTime - startTime;
            } else {
                return m_svcRegainedTime - m_svcLostTime;
            }
        }
    }

