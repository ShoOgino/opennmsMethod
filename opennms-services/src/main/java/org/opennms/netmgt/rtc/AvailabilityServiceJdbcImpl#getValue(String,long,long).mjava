	/**
	 * Get the value (uptime) for the category in the last 'rollingWindow'
	 * starting at current time
	 *
	 * @param catLabel
	 *            the category to which the node should belong to
	 * @param curTime
	 *            the current time
	 * @param rollingWindow
	 *            the window for which value is to be calculated
	 * @return the value(uptime) for the category in the last 'rollingWindow'
	 *         starting at current time
	 */
	@Override
	public double getValue(String catLabel, long curTime, long rollingWindow) {
		double outageTime = 0.0;
		Criteria criteria = createServiceCriteriaForCategory(getCategories().get(catLabel));
		List<OnmsMonitoredService> services = m_monitoredServiceDao.findMatching(criteria);
		for (OnmsMonitoredService service : services) {
			try {
				outageTime += RTCUtils.getOutageTimeInWindow(service.getNodeId(), service.getIpAddressAsString(), service.getServiceId(), new Date(curTime - rollingWindow), new Date(curTime));
			} catch (SQLException e) {
				LOG.warn("Cannot calculate availability for service " + service.toString() + ": " + e.getMessage(), e);
			}
		}
		return RTCUtils.getOutagePercentage(outageTime, rollingWindow, services.size());
	}

