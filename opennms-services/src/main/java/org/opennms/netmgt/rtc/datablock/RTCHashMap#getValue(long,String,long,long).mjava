    /**
     * Get the value (uptime) for the a node that belongs to the category in the
     * last 'rollingWindow' starting at current time
     *
     * @param nodeid
     *            the node for which value is to be calculated
     * @param catLabel
     *            the category to which the node should belong to
     * @param curTime
     *            the current time
     * @param rollingWindow
     *            the window for which value is to be calculated
     * @return the value(uptime) for the node
     */
    public double getValue(long nodeid, String catLabel, long curTime, long rollingWindow) {
        // total outage time
        double outageTime = 0.0;

        // number of entries for this node
        int count = 0;

        // get nodeslist
        for (RTCNode node : getRTCNodes(nodeid)) {
            if (node.getNodeID() == nodeid) {
                long downTime = node.getDownTime(catLabel, curTime, rollingWindow);
                if (downTime < 0)
                // node does not belong to category
                // or RTCConstants.SERVICE_NOT_FOUND_VALUE
                // or node / interface / service unmanaged
                {
                    continue;
                }

                outageTime += downTime;

                count++;

            }
        }

        if (count > 0) {
            return 100 * (1 - (outageTime / ((double)rollingWindow * (double)count)));
        } else {
            return 100.0;
        }
    }

