    /**
     * Get the value (uptime) for the a node that belongs to the category in the
     * last 'rollingWindow' starting at current time
     *
     * @param nodeid
     *            the node for which value is to be calculated
     * @param catLabel
     *            the category to which the node should belong to
     * @param curTime
     *            the current time
     * @param rollingWindow
     *            the window for which value is to be calculated
     * @return the value(uptime) for the node
     */
    public double getValue(long nodeid, String catLabel, long curTime, long rollingWindow) {
        // total outage time
        double outageTime = 0.0;

        // number of entries for this node
        int count = 0;

        // get nodeslist
        for (RTCNode node : getRTCNodes(nodeid)) {
            if (node.getNodeID() == nodeid) {
                try {
                    long[] downTime = node.getDownTime(catLabel, curTime, rollingWindow);
                    count += downTime[0];
                    outageTime += downTime[1];
                } catch (NodeNotInCategoryException e) {
                    continue;
                }
            }
        }

        return getOutagePercentage(outageTime, rollingWindow, count);
    }

