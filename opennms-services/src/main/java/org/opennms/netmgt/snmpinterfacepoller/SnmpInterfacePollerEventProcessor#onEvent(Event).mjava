    /**
     * This method is invoked by the EventIpcManager when a new event is
     * available for processing. Each message is examined for its Universal
     * Event Identifier and the appropriate action is taking based on each UEI.
     * 
     * @param event
     *            The event
     */
    public void onEvent(Event event) {
        if (event == null)
            return;

        Category log = ThreadCategory.getInstance(getClass());

        // print out the uei
        //
        log.debug("SnmpInterfacePollerEventProcessor: received event, uei = " + event.getUei());


        if(event.getUei().equals(EventConstants.SNMPPOLLERCONFIG_CHANGED_EVENT_UEI)) {
            reloadConfig();
        } else if(event.getUei().equals(EventConstants.NODE_DOWN_EVENT_UEI)) {
    		nodeDownHandler(event);
    	} else if(event.getUei().equals(EventConstants.NODE_UP_EVENT_UEI)) {
            nodeUpHandler(event);
        } else if(event.getUei().equals(EventConstants.INTERFACE_DOWN_EVENT_UEI)) {
            interfaceDownHandler(event);
        } else if(event.getUei().equals(EventConstants.INTERFACE_UP_EVENT_UEI)) {
            interfaceUpHandler(event);
        } else if(event.getUei().equals(EventConstants.NODE_LOST_SERVICE_EVENT_UEI)) {
            serviceDownHandler(event);
        } else if(event.getUei().equals(EventConstants.NODE_REGAINED_SERVICE_EVENT_UEI) ) {
            serviceUpHandler(event);
        } else if(event.getUei().equals(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI)) {
            serviceGainedHandler(event);        
        } else if(event.getUei().equals(EventConstants.NODE_DELETED_EVENT_UEI)) {
            nodeDeletedHandler(event);        
        } else if(event.getUei().equals(EventConstants.PRIMARY_SNMP_INTERFACE_CHANGED_EVENT_UEI)) {
            primarychangeHandler(event);        
        } else if(event.getUei().equals(EventConstants.DELETE_INTERFACE_EVENT_UEI) || 
                event.getUei().equals(EventConstants.ADD_INTERFACE_EVENT_UEI) ||
                event.getUei().equals(EventConstants.PROVISION_SCAN_COMPLETE_UEI) ) {
            refreshInterfaceHandler(event);        
        } // end single event process

    } // end onEvent()

