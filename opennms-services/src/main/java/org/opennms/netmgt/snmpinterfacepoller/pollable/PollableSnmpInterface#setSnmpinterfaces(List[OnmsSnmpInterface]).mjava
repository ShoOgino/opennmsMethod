    /**
     * <p>setSnmpinterfaces</p>
     *
     * @param snmpinterfaces a {@link java.util.List} object.
     */
    public void setSnmpinterfaces(List<OnmsSnmpInterface> snmpinterfaces) {
    	if (snmpinterfaces == null) {
    		LOG.debug("setting snmpinterfaces: got null, thread instantiated but at moment no interface found");
    		return;
    	}

    	// ifIndex -> operstatus
    	final Map<Integer, Integer> oldStatuses = new HashMap<Integer, Integer>();
    	for (final Integer ifIndex : m_snmpinterfaces.keySet()) {
    		final OnmsSnmpInterface iface = m_snmpinterfaces.get(ifIndex);
    		if (iface != null && iface.getIfOperStatus() != null) {
    			oldStatuses.put(ifIndex, iface.getIfOperStatus());
    		}
    	}
    	
    	m_snmpinterfaces.clear();
        for (OnmsSnmpInterface iface: snmpinterfaces) {
        	LOG.debug("setting snmpinterface:" + iface.toString());

        	if (iface != null && iface.getIfIndex() != null && iface.getIfIndex() > 0) {
        		final Integer oldStatus = oldStatuses.get(iface.getIfIndex());
                        log().debug("setting snmpinterface (oldStatus=" + oldStatus + "):" + iface.toString());
                        // Note: If OpenNMS is restarted, the event is going to be sent no matter if it was sent before, if the current status of the interface is down.        
                        m_snmpinterfaces.put(iface.getIfIndex(), iface);
        		if (iface.getIfAdminStatus() != null &&
        				iface.getIfAdminStatus().equals(SnmpMinimalPollInterface.IF_UP) && 
        				iface.getIfOperStatus() != null &&
        				iface.getIfOperStatus().equals(SnmpMinimalPollInterface.IF_DOWN) &&
        				(oldStatus == null || (iface.getIfOperStatus().intValue() != oldStatus.intValue()))) {
        			sendOperDownEvent(iface);
        		}
        	}
        }
    }

