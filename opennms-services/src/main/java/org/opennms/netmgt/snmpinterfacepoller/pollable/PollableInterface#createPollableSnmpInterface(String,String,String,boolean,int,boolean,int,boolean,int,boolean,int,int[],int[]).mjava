  /**
   * <p>createPollableSnmpInterface</p>
   *
   *
   * @param location
   * @param name a {@link String} object.
   * @param criteria a {@link String} object.
   * @param hasPort a boolean.
   * @param port a int.
   * @param hasTimeout a boolean.
   * @param timeout a int.
   * @param hasRetries a boolean.
   * @param retries a int.
   * @param hasMaxVarsPerPdu a boolean.
   * @param maxVarsPerPdu a int.
   * @return a {@link org.opennms.netmgt.snmpinterfacepoller.pollable.PollableSnmpInterface} object.
   */
  public PollableSnmpInterface createPollableSnmpInterface(String location, String name, String criteria, boolean hasPort, 
                                                           int port, boolean hasTimeout, int timeout, boolean hasRetries, int retries, 
                                                           boolean hasMaxVarsPerPdu,int maxVarsPerPdu,
                                                           int[] upValues, int[] downValues) {

        PollableSnmpInterface iface = new PollableSnmpInterface(this);
        iface.setName(name);
        iface.setCriteria(criteria);
        iface.setUpValues(SnmpInterfaceStatus.getStatuses(upValues));
        iface.setDownValues(SnmpInterfaceStatus.getStatuses(downValues));
        InetAddress ipAddr = null;
        ipAddr = InetAddressUtils.addr(getIpaddress());
        SnmpAgentConfig agentConfig = SnmpPeerFactory.getInstance().getAgentConfig(ipAddr, location);
        if (hasPort) agentConfig.setPort(port);
        if (hasTimeout) agentConfig.setTimeout(timeout);
        if (hasRetries) agentConfig.setRetries(retries);
        if (hasMaxVarsPerPdu) agentConfig.setMaxVarsPerPdu(maxVarsPerPdu);

        iface.setAgentConfig(agentConfig);
               
        m_pollablesnmpinterface.put(name,iface);
        return iface;
    }

