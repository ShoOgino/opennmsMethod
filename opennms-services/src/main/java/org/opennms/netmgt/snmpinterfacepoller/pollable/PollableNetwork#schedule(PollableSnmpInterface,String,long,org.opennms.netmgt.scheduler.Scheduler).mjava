    /**
     * <p>schedule</p>
     *
     * @param node a {@link org.opennms.netmgt.snmpinterfacepoller.pollable.PollableSnmpInterface} object.
     * @param criteria a {@link java.lang.String} object.
     * @param interval a long.
     * @param scheduler a {@link org.opennms.netmgt.scheduler.Scheduler} object.
     */
    public void schedule(PollableSnmpInterface node, String criteria, long interval, org.opennms.netmgt.scheduler.Scheduler scheduler) {

        getContext().updatePollStatus(node.getParent().getNodeid(), criteria, "P");

        node.setSnmpinterfaces(getContext().get(node.getParent().getNodeid(), criteria));
        

        PollableSnmpInterfaceConfig nodeconfig = new PollableSnmpInterfaceConfig(scheduler,interval);

        node.setSnmppollableconfig(nodeconfig);

        synchronized(node) {
            if (node.getSchedule() == null) {
                Schedule schedule = new Schedule(node, nodeconfig, scheduler);
                node.setSchedule(schedule);
            }
        }
        
            node.schedule();
    }

