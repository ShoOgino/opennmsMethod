    protected void runCollection() {

    	final Date now = new Date(); 
        LOG.debug("run: collecting : {}", getPeer());

        try {
        final LldpLocalGroupTracker lldpLocalGroup = new LldpLocalGroupTracker();

            try {
                m_linkd.getLocationAwareSnmpClient().walk(getPeer(),
                                                          lldpLocalGroup).withDescription("lldpLocalGroup").atLocation(getLocation()).execute().get();
            } catch (ExecutionException e) {
                // pass
            }
            if (lldpLocalGroup.getLldpLocChassisid() == null) {
                LOG.info("lldp mib not supported on: {}",
                         str(getPeer().getAddress()));
                return;
            } else {
                LOG.info("found lldp identifier : {}",
                         lldpLocalGroup.getLldpElement());
            }

            m_linkd.getQueryManager().store(getNodeId(),
                                            lldpLocalGroup.getLldpElement());

            if (getSysoid() == null || getSysoid().equals(DW_SYSOID)) {
                if (lldpLocalGroup.getLldpLocChassisid().toHexString().equals(DW_NULL_CHASSIS_ID)
                        && lldpLocalGroup.getLldpLocChassisidSubType() == LldpChassisIdSubType.LLDP_CHASSISID_SUBTYPE_CHASSISCOMPONENT.getValue()) {
                    LOG.info("lldp not active for Dragon Wave Device identifier : {}",
                             lldpLocalGroup.getLldpElement());
                    return;
                }

                if (lldpLocalGroup.getLldpLocSysname().equals(DW_NULL_SYSOID_ID)) {
                    LOG.info("lldp not active for Dragon Wave Device identifier : {}",
                             lldpLocalGroup.getLldpElement());
                    return;
                }
            }

        } catch (final InterruptedException e) {
            LOG.error("run: Lldp Linkd node collection interrupted, exiting", e);
            return;
        }
        
        try {
            final LldpLocPortGetter lldpLocPort = new LldpLocPortGetter(getPeer());
            LldpRemTableTracker lldpRemTable = new LldpRemTableTracker() {
    
            	public void processLldpRemRow(final LldpRemRow row) {
            	    m_linkd.getQueryManager().store(getNodeId(),row.getLldpLink(lldpLocPort));
            	}
            };
            try {
                m_linkd.getLocationAwareSnmpClient().walk(getPeer(),
                                                          lldpRemTable).withDescription("lldpRemTable").atLocation(getLocation()).execute().get();
            } catch (ExecutionException e) {
                // pass
            }

        } catch (final InterruptedException e) {
            LOG.error("run: collection interrupted, exiting",e);
            return;
        }
        m_linkd.getQueryManager().reconcileLldp(getNodeId(),now);
    }

