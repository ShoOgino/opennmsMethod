	protected void runCollection() {

	        LOG.info("run: start: node discovery operations for bridge: '{}'",getNodeId());
		final Date now = new Date();

		LOG.debug("run: collecting: {}", getPeer());
		Map<Integer,String> vlanmap = getVtpVlanMap();
		Map<Integer,Integer> bridgeifindex = new HashMap<Integer, Integer>();
		
		if (vlanmap.isEmpty())
			bridgeifindex.putAll(walkDot1d(null,null));
		else {
			String community = getPeer().getReadCommunity();
			for (Entry<Integer, String> entry: vlanmap.entrySet()) {
				LOG.debug("run: cisco vlan collection setting peer community: {} with VLAN {}",
						community, entry.getKey());
				getPeer().setReadCommunity(community + "@" + entry.getKey());
				bridgeifindex.putAll(walkDot1d(entry.getKey(), entry.getValue()));
			}
			getPeer().setReadCommunity(community);
		}
		LOG.debug("run: found on node: '{}' bridge ifindex map {}",getNodeId(), bridgeifindex);
		walkDot1qTpFdb(bridgeifindex);
                LOG.debug("run: reconciling bridge: '{}' time {}",getNodeId(), now);
		m_linkd.getQueryManager().reconcileBridge(getNodeId(), now);
                LOG.debug("run: updating topology bridge: '{}'",getNodeId());
		m_linkd.getQueryManager().updateBridgeTopology(getNodeId());
                LOG.info("run: end: node discovery operations for bridge: '{}'",getNodeId());
	}

