        @Override
        public void storeBridgeTopology(int nodeId) {
            
            BroadcastDomain domain = m_bridgeTopologyDao.getBroadcastDomain(nodeId);
            if (!domain.topologyChanged(nodeId))
                return;
            for (SharedSegment segment: domain.getTopology()) {
                if (segment.noMacsOnSegment()) {
                    for (BridgeBridgeLink link: segment.getBridgeBridgeLinks()) 
                        saveBridgeBridgeLink(nodeId, link);
                } else {
                    for (BridgeMacLink link: segment.getBridgeMacLinks())
                        saveBridgeMacLink(nodeId,link);
                }
            }
            
            Date updatedate=domain.getUpdateTime(nodeId);
            for (Integer curNodeId: domain.getUpdatedNodes(nodeId)) {
                m_bridgeMacLinkDao.deleteByNodeIdOlderThen(curNodeId, updatedate);
                m_bridgeMacLinkDao.flush();
                m_bridgeBridgeLinkDao.deleteByNodeIdOlderThen(curNodeId, updatedate);
                m_bridgeBridgeLinkDao.deleteByDesignatedNodeIdOlderThen(curNodeId, updatedate);
                m_bridgeBridgeLinkDao.flush();
            }

        }

