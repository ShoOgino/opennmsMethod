        @Override
        public void storeBridgeTopology(int nodeId) {
            if (!m_bridgeTopologyDao.topologyChanged(nodeId))
                return;
            BridgeTopology topology=m_bridgeTopologyDao.getTopology(nodeId);
            for (BridgeBridgeLink link: topology.getBridgeBridgeLinks()) 
                saveBridgeBridgeLink(link);
            for (BridgeMacLink link: topology.getBridgeMacLinks())
                saveBridgeMacLink(link);
            Date updatedate=m_bridgeTopologyDao.getUpdateTime(nodeId);
            for (Integer curNodeId: m_bridgeTopologyDao.getUpdatedNodes(nodeId)) {
                m_bridgeMacLinkDao.deleteByNodeIdOlderThen(curNodeId, updatedate);
                m_bridgeMacLinkDao.flush();
                m_bridgeBridgeLinkDao.deleteByNodeIdOlderThen(curNodeId, updatedate);
                m_bridgeBridgeLinkDao.deleteByDesignatedNodeIdOlderThen(curNodeId, updatedate);
                m_bridgeBridgeLinkDao.flush();
            }
        }

