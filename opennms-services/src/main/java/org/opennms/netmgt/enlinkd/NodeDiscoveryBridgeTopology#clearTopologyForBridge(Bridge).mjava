    public void clearTopologyForBridge(Bridge bridge) {
        if (bridge.isRootBridge()) {
            for (SharedSegment segment: m_domain.getSharedSegmentOnTopologyForBridge(bridge.getId())) {
                Integer newRootId = segment.getFirstNoDesignatedBridge();
                if (newRootId == null)
                    continue;
                Bridge newRootBridge=null;
                for (Bridge curBridge: m_domain.getBridges()) {
                    if (curBridge.getId().intValue() == newRootId.intValue()) {
                        newRootBridge=curBridge;
                        break;
                    }
                }
                if (newRootBridge == null)
                    continue;
                m_rootBridgeBFT = getBFT(newRootBridge);
                m_domain.hierarchySetUp(newRootBridge);
                break;
            }
        }
        LOG.debug("calculate: clearTopologyForBridge: bridge {}, bridge root port {}",
                  bridge.getId(), bridge.getRootPort());
        //all the topology will be merged with the segment for bridge designated port
        SharedSegment topsegment = m_domain.getSharedSegment(bridge.getId(), bridge.getRootPort());
        if (topsegment != null) {
            LOG.debug("calculate: clearTopologyForBridge: removing {} : top segment nodes {}, macs {}",
                      bridge.getId(),topsegment.getBridgeIdsOnSegment(),topsegment.getMacsOnSegment());
                LOG.debug("calculate: clearTopologyForBridge: removing {}: top segment designated {}, port {}",
                      bridge.getId(),topsegment.getDesignatedBridge(),topsegment.getDesignatedPort());
            topsegment.removeBridge(bridge.getId());
            LOG.debug("calculate: clearTopologyForBridge: removed {} : top segment nodes {}, macs {}",
                      bridge.getId(),topsegment.getBridgeIdsOnSegment(),topsegment.getMacsOnSegment());
            LOG.debug("calculate: clearTopologyForBridge: removed {}: top segment designated {}, port {}",
                      bridge.getId(),topsegment.getDesignatedBridge(),topsegment.getDesignatedPort());
        } else {
            LOG.debug("calculate: clearTopologyForBridge {} : no top segment found",
                      bridge.getId());
            
        }

        for (SharedSegment segment: m_domain.removeSharedSegmentOnTopologyForBridge(bridge.getId())) {
            LOG.debug("calculate: clearTopologyForBridge {} : segment nodes {}, macs {}",
                      bridge.getId(),segment.getBridgeIdsOnSegment(),segment.getMacsOnSegment());
            LOG.debug("calculate: clearTopologyForBridge {}:  segment designated {}, port {}",
                      bridge.getId(),segment.getDesignatedBridge(),segment.getDesignatedPort());
            if (topsegment != null)
                topsegment.mergeBridge(segment,bridge.getId());
        }        

    }

