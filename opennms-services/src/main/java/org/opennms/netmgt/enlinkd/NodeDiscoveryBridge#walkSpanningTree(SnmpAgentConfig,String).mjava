    private List<BridgeStpLink> walkSpanningTree(SnmpAgentConfig peer,
            final String baseBridgeAddress) {

        final List<BridgeStpLink> stplinks = new ArrayList<BridgeStpLink>();
        Dot1dStpPortTableTracker stpPortTableTracker = new Dot1dStpPortTableTracker() {

            @Override
            public void processDot1dStpPortRow(final Dot1dStpPortRow row) {
                BridgeStpLink link = row.getLink();
                if (isValidStpBridgeId(link.getDesignatedRoot())
                        && isValidStpBridgeId(link.getDesignatedBridge())
                        && !baseBridgeAddress.equals(link.getDesignatedBridgeAddress())) {
                    stplinks.add(link);
                }
            }
        };

        try {
            m_linkd.getLocationAwareSnmpClient().walk(getPeer(),
                                                      stpPortTableTracker).withDescription("dot1dStpPortTable").atLocation(getLocation()).execute().get();
        } catch (ExecutionException e) {
            LOG.error("run: collection execution failed, exiting", e);
        } catch (final InterruptedException e) {
            LOG.error("run: Bridge Linkd node collection interrupted, exiting",
                      e);
        }
        return stplinks;
    }

