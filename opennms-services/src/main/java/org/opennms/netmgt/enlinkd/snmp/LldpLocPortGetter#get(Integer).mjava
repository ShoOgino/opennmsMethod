    public LldpLink get(Integer lldpRemLocalPortNum) {
        SnmpObjId instance = SnmpObjId.get(lldpRemLocalPortNum.toString());
        SnmpObjId[] oids = new SnmpObjId[] {
                SnmpObjId.get(LLDP_LOC_PORTID_SUBTYPE, instance),
                SnmpObjId.get(LLDP_LOC_PORTID, instance),
                SnmpObjId.get(LLDP_LOC_DESCR, instance) };

        SnmpValue[] val = SnmpUtils.get(m_agentConfig, oids);

        LldpLink lldplink = new LldpLink();
        lldplink.setLldpLocalPortNum(lldpRemLocalPortNum);
        if (val == null || val.length != 3) {
            LOG.warn("get: cannot find local instance for lldp local port number {}",
                     lldpRemLocalPortNum);
            LOG.warn("get: setting default not found Values: portidtype \"InterfaceAlias\", portid=\"Not Found On lldpLocPortTable\"");
            lldplink.setLldpPortIdSubType(LldpPortIdSubType.LLDP_PORTID_SUBTYPE_INTERFACEALIAS);
            lldplink.setLldpPortId("\"Not Found On lldpLocPortTable\"");
            lldplink.setLldpPortDescr("");
            return lldplink;
        }

        if (val[0] == null || val[0].isError() || !val[0].isNumeric()) {
            LOG.warn("get: port id subtype is null or invalid for lldp local port number {}",
                     lldpRemLocalPortNum);
            LOG.warn("get: setting default not found Values: portidtype \"InterfaceAlias\"");
            lldplink.setLldpPortIdSubType(LldpPortIdSubType.LLDP_PORTID_SUBTYPE_INTERFACEALIAS);
        } else {
            lldplink.setLldpPortIdSubType(LldpPortIdSubType.get(val[0].toInt()));
        }
        if (val[1] == null || val[1].isError()) {
            LOG.warn("get: port id is null for lldp local port number {}",
                     lldpRemLocalPortNum);
            LOG.warn("get: setting default not found Values: portid=\"Not Found On lldpLocPortTable\"");
            lldplink.setLldpPortId("\"Not Found On lldpLocPortTable\"");
        } else {
            lldplink.setLldpPortId(LldpRemTableTracker.decodeLldpPortId(lldplink.getLldpPortIdSubType().getValue(),
                                                                        val[1]));
        }
        if (val[2] != null && !val[2].isError())
            lldplink.setLldpPortDescr((val[2].toDisplayString()));
        else
            lldplink.setLldpPortDescr("");
        if (val[0].isNumeric()
                && val[0].toInt() == LldpPortIdSubType.LLDP_PORTID_SUBTYPE_LOCAL.getValue().intValue()) {
            try {
                lldplink.setLldpPortIfindex((val[1].toInt()));
            } catch (Exception e) {
                LOG.debug("get: failed to convert to ifindex local port id {}",
                          val[1]);
            }
        }
        return lldplink;
    }

