    protected void runCollection() {

    	final Date now = new Date(); 

	LOG.debug( "run: collecting : {}", getPeer());

        IpNetToMediaTableTracker ipNetToMediaTableTracker = new IpNetToMediaTableTracker() {
            public void processIpNetToMediaRow(final IpNetToMediaRow row) {
                IpNetToMedia macep = row.getIpNetToMedia();
                if (macep.getPhysAddress() != null
                        && (macep.getIpNetToMediaType() == IpNetToMediaType.IPNETTOMEDIA_TYPE_DYNAMIC 
                        || macep.getIpNetToMediaType() == IpNetToMediaType.IPNETTOMEDIA_TYPE_STATIC))
                    m_linkd.getQueryManager().store(getNodeId(), macep);
            }
        };

        try {
            m_linkd.getLocationAwareSnmpClient().walk(getPeer(),
                                                      ipNetToMediaTableTracker).withDescription("ipNetToMedia").withLocation(getLocation()).execute().get();
        } catch (ExecutionException e) {
            LOG.info("run: Agent error while scanning the ipNetToMedia table", e);
            return;
        } catch (final InterruptedException e) {
            LOG.info("run: collection interrupted, exiting",e);
            return;       
        }

        m_linkd.getQueryManager().reconcileIpNetToMedia(getNodeId(), now);
    }

