    public static String decodeLldpChassisId(final SnmpValue lldpchassisid, Integer lldpLocChassisidSubType) {
        try {
        LldpChassisIdSubType type = LldpChassisIdSubType.get(lldpLocChassisidSubType);
        
        /*
         *  If the associated LldpChassisIdSubtype object has a value of
         *  'chassisComponent(1)', then the octet string identifies
         *  a particular instance of the entPhysicalAlias object
         *  (defined in IETF RFC 2737) for a chassis component (i.e.,
         *  an entPhysicalClass value of 'chassis(3)').
         *
         *  If the associated LldpChassisIdSubtype object has a value
         *  of 'interfaceAlias(2)', then the octet string identifies
         *  a particular instance of the ifAlias object (defined in
         *  IETF RFC 2863) for an interface on the containing chassis.
         *  If the particular ifAlias object does not contain any values,
         *  another chassis identifier type should be used.
         *
         *  If the associated LldpChassisIdSubtype object has a value
         *  of 'portComponent(3)', then the octet string identifies a
         *  particular instance of the entPhysicalAlias object (defined
         *  in IETF RFC 2737) for a port or backplane component within
         *  the containing chassis.
         *
         *  If the associated LldpChassisIdSubtype object has a value of
         *  'macAddress(4)', then this string identifies a particular
         *  unicast source address (encoded in network byte order and
         *  IEEE 802.3 canonical bit order), of a port on the containing
         *  chassis as defined in IEEE Std 802-2001.
         *
         *  If the associated LldpChassisIdSubtype object has a value of
         *  'networkAddress(5)', then this string identifies a particular
         *  network address, encoded in network byte order, associated
         *  with one or more ports on the containing chassis. The first
         *  octet contains the IANA Address Family Numbers enumeration
         *  value for the specific address type, and octets 2 through
         *  N contain the network address value in network byte order.
         *
         *  If the associated LldpChassisIdSubtype object has a value
         *  of 'interfaceName(6)', then the octet string identifies
         *  a particular instance of the ifName object (defined in
         *  IETF RFC 2863) for an interface on the containing chassis.
         *  If the particular ifName object does not contain any values,
         *  another chassis identifier type should be used.
         *
         * If the associated LldpChassisIdSubtype object has a value of
         * 'local(7)', then this string identifies a locally assigned
         * Chassis ID.
         * 
         * 
         */
            switch (type) {
        /*
         *  entPhysicalAlias          SnmpAdminString
         *
         *   SnmpAdminString ::= TEXTUAL-CONVENTION
         *       DISPLAY-HINT "255a"
         *       STATUS       current
         *       DESCRIPTION "An octet string containing administrative
         *           information, preferably in human-readable form.
         *
         *           To facilitate internationalization, this
         *           information is represented using the ISO/IEC
         *           IS 10646-1 character set, encoded as an octet
         *           string using the UTF-8 transformation format
         *           described in [RFC2279].
         *
         *           Since additional code points are added by
         *           amendments to the 10646 standard from time
         *           to time, implementations must be prepared to
         *           encounter any code point from 0x00000000 to
         *           0x7fffffff.  Byte sequences that do not
         *           correspond to the valid UTF-8 encoding of a
         *           code point or are outside this range are
         *           prohibited.
         *
         *           The use of control codes should be avoided.
         * 
         *           When it is necessary to represent a newline,
         *           the control code sequence CR LF should be used.
         *
         *           The use of leading or trailing white space should
         *           be avoided.
         *
         *           For code points not directly supported by user
         *           interface hardware or software, an alternative
         *           means of entry and display, such as hexadecimal,
         *           may be provided.
         *
         *           For information encoded in 7-bit US-ASCII,
         *           the UTF-8 encoding is identical to the
         *           US-ASCII encoding.
         *
         *           UTF-8 may require multiple bytes to represent a
         *           single character / code point; thus the length
         *           of this object in octets may be different from
         *           the number of characters encoded.  Similarly,
         *           size constraints refer to the number of encoded
         *           octets, not the number of characters represented
         *           by an encoding.
         *           Note that when this TC is used for an object that
         *           is used or envisioned to be used as an index, then
         *           a SIZE restriction MUST be specified so that the
         *           number of sub-identifiers for any object instance
         *           does not exceed the limit of 128, as defined by
         *           [RFC1905].
         * 
         *           Note that the size of an SnmpAdminString object is
         *           measured in octets, not characters.
         *          "
         *      SYNTAX       OCTET STRING (SIZE (0..255))
         */
             case LLDP_CHASSISID_SUBTYPE_CHASSISCOMPONENT:
             case LLDP_CHASSISID_SUBTYPE_PORTCOMPONENT:                 
             case LLDP_CHASSISID_SUBTYPE_INTERFACEALIAS:
             case LLDP_CHASSISID_SUBTYPE_INTERFACENAME:  
             case LLDP_CHASSISID_SUBTYPE_LOCAL:
                 if (lldpchassisid.isDisplayable())
                     return lldpchassisid.toDisplayString();
                 else 
                     return lldpchassisid.toHexString();
             case LLDP_CHASSISID_SUBTYPE_MACADDRESS:
                 return lldpchassisid.toHexString();
             case LLDP_CHASSISID_SUBTYPE_NETWORKADDRESS:
                 LldpUtils.decodeNetworkAddress(lldpchassisid.toDisplayString());
            }
        } catch (IllegalArgumentException iae) {
            iae.printStackTrace();
        } catch (IndexOutOfBoundsException ioe) {
            ioe.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return lldpchassisid.toHexString();
    }

