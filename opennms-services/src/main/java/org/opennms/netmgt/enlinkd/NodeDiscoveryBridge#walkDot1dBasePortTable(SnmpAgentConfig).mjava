    private Map<Integer, Integer> walkDot1dBasePortTable(SnmpAgentConfig peer) {
        final Map<Integer, Integer> bridgetoifindex = new HashMap<Integer, Integer>();
        try {
            Dot1dBasePortTableTracker dot1dBasePortTableTracker = new Dot1dBasePortTableTracker() {
                @Override
                public void processDot1dBasePortRow(final Dot1dBasePortRow row) {
                    bridgetoifindex.put(row.getBaseBridgePort(),
                                        row.getBaseBridgePortIfindex());
                }
            };
    
            try {
                m_linkd.getLocationAwareSnmpClient().walk(getPeer(), dot1dBasePortTableTracker).
                withDescription("dot1dBasePortTable").
                atLocation(getLocation()).
                execute().
                get();
            } catch (ExecutionException e) {
                    // pass
            }                
        } catch (final InterruptedException e) {
            LOG.error("run: Bridge Linkd node collection interrupted, exiting",
                      e);
        }
        return bridgetoifindex;
    }

