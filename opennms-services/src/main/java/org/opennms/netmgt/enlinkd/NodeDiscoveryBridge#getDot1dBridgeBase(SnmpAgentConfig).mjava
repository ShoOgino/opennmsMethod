    private BridgeElement getDot1dBridgeBase(SnmpAgentConfig peer) {
        final Dot1dBaseTracker dot1dbase = new Dot1dBaseTracker();

        try {
            m_linkd.getLocationAwareSnmpClient().walk(getPeer(), dot1dbase).withDescription("dot1dbase").withLocation(getLocation()).execute().get();
        } catch (ExecutionException e) {
            LOG.info("run: Agent error while scanning the dot1dbase table", e);
            return null; 
        } catch (final InterruptedException e) {
            LOG.error("run: Bridge Linkd node collection interrupted, exiting",
                      e);
            return null;
        }

        BridgeElement bridge = dot1dbase.getBridgeElement();
        if (bridge.getBaseBridgeAddress() == null) {
            LOG.info("run: base bridge address is null: bridge mib not supported on: {}",
                     getNodeId());
            return null;
        }

        if (!isValidBridgeAddress(bridge.getBaseBridgeAddress())) {
            LOG.info("run: bridge not supported, base address identifier {} is not valid on: {}",
                     dot1dbase.getBridgeAddress(), getNodeId());
            return null;
        }

        if (bridge.getBaseNumPorts() == null
                || bridge.getBaseNumPorts().intValue() == 0) {
            LOG.info("run: bridge {} has 0 port active, on: {}",
                     dot1dbase.getBridgeAddress(), getNodeId());
            return null;
        }
        LOG.info("run: bridge {} has is if type {}, on: {}",
                 dot1dbase.getBridgeAddress(),
                 BridgeDot1dBaseType.getTypeString(dot1dbase.getBridgeType()),
                 getNodeId());

        if (bridge.getBaseType() == BridgeDot1dBaseType.DOT1DBASETYPE_SOURCEROUTE_ONLY) {
            LOG.info("run: {}: source route only type bridge, on: {}",
                     dot1dbase.getBridgeAddress(), getNodeId());
            return null;
        }
        return bridge;
    }

