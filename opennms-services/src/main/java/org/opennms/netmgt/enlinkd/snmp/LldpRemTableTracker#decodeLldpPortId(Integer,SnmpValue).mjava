    public static String decodeLldpPortId(Integer lldpPortIdSubType,SnmpValue lldpportid) {
        try {
            LldpPortIdSubType type=LldpPortIdSubType.get(lldpPortIdSubType);
        /*
         * 
         *       If the associated LldpPortIdSubtype object has a value of
         *       'interfaceAlias(1)', then the octet string identifies a
         *       particular instance of the ifAlias object (defined in IETF
         *       RFC 2863). If the particular ifAlias object does not contain
         *       any values, another port identifier type should be used.
         *
         *       If the associated LldpPortIdSubtype object has a value of
         *       'portComponent(2)', then the octet string identifies a
         *       particular instance of the entPhysicalAlias object (defined
         *       in IETF RFC 2737) for a port or backplane component.
         *
         *       If the associated LldpPortIdSubtype object has a value of
         *       'macAddress(3)', then this string identifies a particular
         *       unicast source address (encoded in network byte order
         *       and IEEE 802.3 canonical bit order) associated with the port
         *       (IEEE Std 802-2001).
         *
         *       If the associated LldpPortIdSubtype object has a value of
         *       'networkAddress(4)', then this string identifies a network
         *       address associated with the port. The first octet contains
         *       the IANA AddressFamilyNumbers enumeration value for the
         *       specific address type, and octets 2 through N contain the
         *       networkAddress address value in network byte order.
         *
         *       If the associated LldpPortIdSubtype object has a value of
         *       'interfaceName(5)', then the octet string identifies a
         *       particular instance of the ifName object (defined in IETF
         *       RFC 2863). If the particular ifName object does not contain
         *       any values, another port identifier type should be used.
         *
         *       If the associated LldpPortIdSubtype object has a value of
         *       'agentCircuitId(6)', then this string identifies a agent-local
         *       identifier of the circuit (defined in RFC 3046).
         *
         *       If the associated LldpPortIdSubtype object has a value of
         *       'local(7)', then this string identifies a locally
         *       assigned port ID."
         */
            switch (type) {
            case LLDP_PORTID_SUBTYPE_PORTCOMPONENT:
            case LLDP_PORTID_SUBTYPE_AGENTCIRCUITID:
            case LLDP_PORTID_SUBTYPE_INTERFACEALIAS:
            case LLDP_PORTID_SUBTYPE_INTERFACENAME:
            case LLDP_PORTID_SUBTYPE_LOCAL:
                if (lldpportid.isDisplayable())
                    return lldpportid.toDisplayString();
                else 
                    return lldpportid.toHexString();
            case LLDP_PORTID_SUBTYPE_MACADDRESS:
                return lldpportid.toHexString();
            case LLDP_PORTID_SUBTYPE_NETWORKADDRESS:
                LldpUtils.decodeNetworkAddress(lldpportid.toDisplayString());
           }
        } catch (IllegalArgumentException iae) {
            iae.printStackTrace();
        } catch (IndexOutOfBoundsException ioe) {
            ioe.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } 
        return lldpportid.toHexString();
    }

