    private List<BridgeMacLink> walkDot1qTpFdb(SnmpAgentConfig peer,
            final Map<Integer, Integer> bridgeifindex,
            final List<BridgeMacLink> bft) {

        Dot1qTpFdbTableTracker dot1qTpFdbTableTracker = new Dot1qTpFdbTableTracker() {

            @Override
            public void processDot1qTpFdbRow(final Dot1qTpFdbRow row) {
                BridgeMacLink link = row.getLink();

                if (link.getBridgeDot1qTpFdbStatus() == null) {
                    LOG.warn("processDot1qTpFdbRow: node [{}]: mac {}: on port {}. row has null status.",
                    		getNodeId(),
                             row.getDot1qTpFdbAddress(),
                             row.getDot1qTpFdbPort());
                    return;
                }
                if (link.getBridgePort() == null) {
                    LOG.warn("processDot1qTpFdbRow: node [{}]: mac {}: on port {} status {}. row has null bridge port.",
                    		getNodeId(),
                             row.getDot1qTpFdbAddress(),
                             row.getDot1qTpFdbPort(),
                             link.getBridgeDot1qTpFdbStatus());
                    return;
                }
                if (link.getMacAddress() == null
                        || !isValidBridgeAddress(link.getMacAddress())) {
                    LOG.warn("processDot1qTpFdbRow: node [{}]: mac {}: on port {} ifindex {} status {}. row has invalid mac.",
                    		getNodeId(),
                             row.getDot1qTpFdbAddress(),
                             row.getDot1qTpFdbPort(),
                             link.getBridgePortIfIndex(),
                             link.getBridgeDot1qTpFdbStatus());
                    return;
                }
                if (!bridgeifindex.containsKey(link.getBridgePort())
                        && link.getBridgeDot1qTpFdbStatus() != BridgeDot1qTpFdbStatus.DOT1D_TP_FDB_STATUS_SELF) {
                    LOG.warn("processDot1qTpFdbRow: node [{}]: mac {}: on port {} ifindex {} status {}. row has invalid bridgeport. No ifindex found.",
                    		getNodeId(),
                             row.getDot1qTpFdbAddress(),
                             row.getDot1qTpFdbPort(),
                             link.getBridgePortIfIndex(),
                             link.getBridgeDot1qTpFdbStatus());
                    return;
                }

                link.setBridgePortIfIndex(bridgeifindex.get(link.getBridgePort()));
                LOG.debug("processDot1qTpFdbRow: node [{}]: mac {}: vlan {}: on port {} ifindex {} status {}. row processed.",
                		getNodeId(),
                         link.getMacAddress(), link.getVlan(),
                         link.getBridgePort(), link.getBridgePortIfIndex(),
                         link.getBridgeDot1qTpFdbStatus());
                bft.add(link);
            }

        };
        try {
            m_linkd.getLocationAwareSnmpClient().walk(peer,
                                                      dot1qTpFdbTableTracker).withDescription("dot1qTbFdbPortTable").withLocation(getLocation()).execute().get();
        } catch (ExecutionException e) {
            LOG.error("run: collection execution failed, exiting", e);
        } catch (final InterruptedException e) {
            LOG.error("run: Bridge Linkd node collection interrupted, exiting",
                      e);
        }
        return bft;
    }

