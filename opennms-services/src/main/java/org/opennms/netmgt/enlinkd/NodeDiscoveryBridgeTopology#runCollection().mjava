    @Override
    protected void runCollection() {
        
        Date now = new Date();
        m_domain = m_linkd.getQueryManager().getBridgeTopologyBroadcastDomain(getNodeId());
        if (m_domain == null ) {
            LOG.warn("run: no broadcast domain found for node: {}", getNodeId());
            return;
        }
        if (m_domain.isLocked()) {
            LOG.info("run: broadcast domain is locked for calculation either on node {}....", getNodeId());
            return;
        }
        setBridgeElements(m_linkd.getQueryManager().getBridgeElements(m_domain));
        m_rootBridgeId = m_linkd.getQueryManager().getBridgeTopologyRootId(m_domain);
        if (m_rootBridgeId == null) {
            LOG.info("run: node: {}, broadcast domain has no root bridge.", getNodeId());
        }  else {
            LOG.info("run: node: {}, broadcast domain with root bridge: {}.", getNodeId(),m_rootBridgeId);
            m_rootBridgeBFT = m_linkd.getQueryManager().getBridgeTopologyRootBFT(m_domain);
            LOG.info("run: node: {}, broadcast domain has root bridge with bft size: {}.", getNodeId(),m_rootBridgeBFT.size());
        }        
        m_notYetParsedBFTMap = m_linkd.getQueryManager().getBridgeTopologyUpdateBFT(m_domain);
        if (m_notYetParsedBFTMap.isEmpty()) {
            LOG.info("run: node: {}, broadcast domain has no topology updates. No more action is needed.", getNodeId());
            return;
        }
        LOG.info("run: node: {}, getLock broadcast domain with topology change found.", getNodeId());
        m_domain.getLock();
        LOG.info("run: broadcast domain topology for node: {}. start: topology calculation.", getNodeId());
        calculate();
        LOG.info("run: broadcast domain topology for node: {}. stop: topology calculated.", getNodeId());

        LOG.info("run: saving broadcast domain topology for node: {}.", getNodeId());
        m_linkd.getQueryManager().store(m_domain,m_rootBridgeId,m_rootBridgeBFT);
        LOG.info("run: saved broadcast domain topology for node: {}.", getNodeId());
        
        for (Integer nodeid: m_domain.getBridgeNodesOnDomain()) {
           LOG.info("run: reconcile topology for node: {} on Broadcast Domain",nodeid);
           m_linkd.getQueryManager().reconcileBridgeTopology(nodeid, now);
        }
        m_domain.releaseLock();
        LOG.info("run: node: {}, releaseLock broadcast domain.", getNodeId());
    }

