    @Override
    public void delete(int nodeId) {

        m_lldpElementDao.deleteByNodeId(nodeId);
        m_lldpLinkDao.deleteByNodeId(nodeId);
        m_lldpElementDao.flush();
        m_lldpLinkDao.flush();

        m_cdpElementDao.deleteByNodeId(nodeId);
        m_cdpLinkDao.deleteByNodeId(nodeId);
        m_cdpElementDao.flush();
        m_cdpLinkDao.flush();

        m_ospfElementDao.deleteByNodeId(nodeId);
        m_ospfLinkDao.deleteByNodeId(nodeId);
        m_ospfElementDao.flush();
        m_ospfLinkDao.flush();

        m_isisElementDao.deleteByNodeId(nodeId);
        m_isisLinkDao.deleteByNodeId(nodeId);
        m_isisElementDao.flush();
        m_isisLinkDao.flush();

        m_ipNetToMediaDao.deleteBySourceNodeId(nodeId);
        m_ipNetToMediaDao.flush();

        m_bridgeElementDao.deleteByNodeId(nodeId);
        m_bridgeElementDao.flush();

        m_bridgeBridgeLinkDao.deleteByDesignatedNodeId(nodeId);
        m_bridgeBridgeLinkDao.deleteByNodeId(nodeId);
        m_bridgeBridgeLinkDao.flush();

        m_bridgeMacLinkDao.deleteByNodeId(nodeId);
        m_bridgeMacLinkDao.flush();

        m_bridgeStpLinkDao.deleteByNodeId(nodeId);
        m_bridgeStpLinkDao.flush();
        
        for (BroadcastDomain domain : m_bridgeTopologyDao.getAll()) {
            synchronized(domain) {
                if (domain.containBridgeId(nodeId)) {
                    domain.removeBridge(nodeId);
                    break;
                }
            }
        }

    }

