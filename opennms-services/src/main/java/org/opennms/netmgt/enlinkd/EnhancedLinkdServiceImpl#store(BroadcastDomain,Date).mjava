        @Override
        public void  store(BroadcastDomain domain, Date now) {
            for (SharedSegment segment: domain.getTopology()) {
                LOG.debug("store: shared segment designated root: {}, designated port: {}", segment.getDesignatedBridge(),segment.getDesignatedPort());
                if (segment.noMacsOnSegment()) {
                    for (BridgeBridgeLink link: segment.getBridgeBridgeLinks()) {
                        link.setBridgeBridgeLinkLastPollTime(new Date());
                        saveBridgeBridgeLink(link);
                    }
                } else {
                    for (BridgeMacLink link: segment.getBridgeMacLinks()) {
                        LOG.debug("store: link: node: {}, port: {}, mac: {}", link.getNode().getId(),link.getBridgePort(), link.getMacAddress());
                        link.setBridgeMacLinkLastPollTime(new Date());
                        saveBridgeMacLink(link);
                    }
                }
            }
            
            for (Integer curNodeId: domain.getUpdatedNodes()) {
                m_bridgeMacLinkDao.deleteByNodeIdOlderThen(curNodeId, now);
                m_bridgeMacLinkDao.flush();
                m_bridgeBridgeLinkDao.deleteByNodeIdOlderThen(curNodeId, now);
                m_bridgeBridgeLinkDao.deleteByDesignatedNodeIdOlderThen(curNodeId, now);
                m_bridgeBridgeLinkDao.flush();
            }

        }

