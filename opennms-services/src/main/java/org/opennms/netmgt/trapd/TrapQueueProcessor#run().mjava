    /**
     * Reads off of the input queue and depending on the type (V1 or V2 trap) of
     * object read, process the traps to convert them to events and send them
     * out
     */
    public void run() {
        Category log = log();

        synchronized (this) {
            m_status = RUNNING;
        }

        while (statusOK()) {
            TrapNotification o = null;
            try {
                o = (TrapNotification)m_backlogQ.remove(1000);
            } catch (InterruptedException iE) {
                log.debug("Trapd.QueueProcessor: caught interrupted exception");

                o = null;

                m_status = STOP_PENDING;
            } catch (FifoQueueException qE) {
                log.debug("Trapd.QueueProcessor: caught fifo queue exception");
                log.debug(qE.getLocalizedMessage(), qE);

                o = null;

                m_status = STOP_PENDING;
            }

            if (o != null && statusOK()) {
                try {
                    process(o);
                } catch (Throwable t) {
                    log.error("Unexpected error processing trap", t);
                }
            }
        }
    }

