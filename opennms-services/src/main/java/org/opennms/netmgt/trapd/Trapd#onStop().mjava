    /**
     * Stops the currently running service. If the service is not running then
     * the command is silently discarded.
     */
    public synchronized void onStop() {
        m_status = STOP_PENDING;

        // shutdown and wait on the background processing thread to exit.
        log().debug("exit: closing communication paths.");

        try {
            if (m_registeredForTraps) {
                log().debug("stop: Closing SNMP trap session.");
                SnmpUtils.unregisterForTraps(this, getSnmpTrapPort());
                log().debug("stop: SNMP trap session closed.");
            } else {
                log().debug("stop: not attemping to closing SNMP trap session--it was never opened");
            }

        } catch (IOException e) {
            log().warn("stop: exception occurred closing session: " + e, e);
        } catch (IllegalStateException e) {
            log().debug("stop: The SNMP session was already closed");
        }

        log().debug("stop: Stopping queue processor.");

        // interrupt the processor daemon thread
        m_processor.stop();

        m_eventReader.close();

        m_status = STOPPED;

        log().debug("stop: Trapd stopped");
    }

