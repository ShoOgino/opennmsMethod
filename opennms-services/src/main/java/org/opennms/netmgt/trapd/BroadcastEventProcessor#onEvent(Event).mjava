    /**
     * This method is invoked by the EventIpcManager when a new event is
     * available for processing. Each message is examined for its Universal
     * Event Identifier and the appropriate action is taking based on each UEI.
     * 
     * @param event
     *            The event
     * 
     */
    public void onEvent(Event event) {
        Category log = ThreadCategory.getInstance(getClass());

        String eventUei = event.getUei();
        if (eventUei == null) {
            log.warn("Received an unexpected event with a null UEI");
            return;
        }

        if (log.isDebugEnabled()) {
            log.debug("Received event: " + eventUei);
        }

        if (eventUei.equals(EventConstants.NODE_GAINED_INTERFACE_EVENT_UEI)
            || eventUei.equals(EventConstants.INTERFACE_REPARENTED_EVENT_UEI)) {
            String action = eventUei.equals(EventConstants.INTERFACE_REPARENTED_EVENT_UEI) ?
                "reparent" : "add";
            if (Long.toString(event.getNodeid()) == null) {
                log.warn("Not " + action + "ing interface to known node list: "
                    + "nodeId is null");
            } else if (event.getInterface() == null) {
                log.warn("Not " + action + "ing interface to known node list: "
                    + "interface is null");
            } else {
                TrapdIPMgr.setNodeId(event.getInterface(), event.getNodeid());
                if (log.isDebugEnabled()) {
                    log.debug("Successfully " + action + "ed "
                              + event.getInterface() + " to known node list");
                }
            }
        } else if (eventUei.equals(EventConstants.INTERFACE_DELETED_EVENT_UEI)) {
            if (event.getInterface() != null) {
                TrapdIPMgr.removeNodeId(event.getInterface());
            }
            if (log.isDebugEnabled()) {
                log.debug("Removed " + event.getInterface()
                    + " from known node list");
            }
        } else {
            log.warn("Received an unexpected event with UEI of \""
                     + eventUei + "\"");
        }
    }

