    /**
     * <p>processTrapEvent</p>
     *
     * @param event a {@link org.opennms.netmgt.xml.event.Event} object.
     */
    private void processTrapEvent(final Event event) {
    	final InetAddress trapInterface = event.getInterfaceAddress();

    	final org.opennms.netmgt.xml.eventconf.Event econf = m_eventConfDao.findByEvent(event);
        if (econf == null || econf.getUei() == null) {
            event.setUei("uei.opennms.org/default/trap");
        } else {
            event.setUei(econf.getUei());
        }

        if (econf != null) {
            final Snmp snmp = econf.getSnmp();
            if (snmp != null) {
                if ("v1".equals(snmp.getVersion())) {
                    s_v1TrapsReceived++;
                } else if ("v2c".equals(snmp.getVersion())) {
                    s_v2cTrapsReceived++;
                } else if ("v3".equals(snmp.getVersion())) {
                    s_v3TrapsReceived++;
                }
            }
            final Logmsg logmsg = econf.getLogmsg();
            if (logmsg != null) {
                final String dest = logmsg.getDest();
                if ("discardtraps".equals(dest)) {
                    log().debug("Trap discarded due to matching event having logmsg dest == discardtraps");
                    s_trapsDiscarded++;
                    return;
                }
            }
        }

        // send the event to eventd
        m_eventMgr.sendNow(event);

        log().debug("Trap successfully converted and sent to eventd with UEI " + event.getUei());

        if (!event.hasNodeid() && m_newSuspect) {
            sendNewSuspectEvent(InetAddressUtils.str(trapInterface));

            if (log().isDebugEnabled()) {
                log().debug("Sent newSuspectEvent for interface: " + trapInterface);
            }
        }
    }

