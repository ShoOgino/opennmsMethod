    /**
     * Stops the currently running service. If the service is not running then
     * the command is silently discarded.
     */
    public synchronized void stop() {
        Category log = ThreadCategory.getInstance(getClass());

        m_status = STOP_PENDING;

        // shutdown and wait on the background processing thread to exit.
        log.debug("exit: closing communication paths.");

        try {
            log.debug("stop: Closing SNMP trap session.");

            SnmpUtils.unregisterForTraps(this,
                                         m_trapdConfig.getSnmpTrapPort());

            log.debug("stop: SNMP trap session closed.");
        } catch (IOException e) {
            log.warn("stop: exception occurred closing session", e);
        } catch (IllegalStateException e) {
            log.debug("stop: The SNMP session was already closed");
        }

        log.debug("stop: Stopping queue processor.");

        // interrupt the processor daemon thread
        m_processor.stop();

        m_status = STOPPED;

        log.debug("stop: Trapd stopped");
    }

