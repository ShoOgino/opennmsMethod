        void execute(HttpClient client, MonitoredService svc) {
            try {
                URI uri = getURI(svc);
                HttpMethod method = getMethod();
                method.setURI(uri);

                if (getVirtualHost() != null) {
                	method.getParams().setVirtualHost(getVirtualHost());
                }
                
                if (getUserAgent() != null) {
                	method.addRequestHeader("User-Agent", getUserAgent());
                }

                if (m_parms.length > 0) {
                	method.setQueryString(m_parms);
                }

                int code = client.executeMethod(method);
                
                if (!getRange().contains(code)) {
                    throw new PageSequenceMonitorException("response code out of range for uri:"+uri+". Expected "+getRange()+" but received "+code);
                }
                
                String responseString = method.getResponseBodyAsString();
                
                if (getFailurePattern() != null) {
                	Matcher matcher = getFailurePattern().matcher(responseString);
                	if (matcher.find()) {
                		throw new PageSequenceMonitorException(getResolvedFailureMessage(matcher));
                	}
                }
                
                if (getSuccessPattern() != null) {
                	Matcher matcher = getSuccessPattern().matcher(responseString);
                	if (!matcher.find()) {
                		throw new PageSequenceMonitorException("failed to find '"+getSuccessPattern()+"' in page content at "+uri);
                	}
                }
                

            } catch (URIException e) {
                throw new IllegalArgumentException("unable to construct URL for page: "+e, e);
            } catch (HttpException e) {
                throw new PageSequenceMonitorException("HTTP Error "+e, e);
            } catch (IOException e) {
                throw new PageSequenceMonitorException("I/O Error "+e, e);
            }
        }

