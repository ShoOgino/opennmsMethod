    /**
     * <p>
     * Retrieve all the nodes in a critical path
     * from the database
     *
     * @param criticalPathIp
     *            IP address of the critical path
     * @param criticalPathServiceName
     *            service name for the critical path
     * @return a {@link java.util.List} object.
     * @throws java.sql.SQLException if any.
     */
    public static List<String> getNodesInPath(String criticalPathIp, String criticalPathServiceName) throws SQLException {
        final Connection conn = DataSourceFactory.getInstance().getConnection();
        final DBUtils d = new DBUtils(PathOutageFactory.class, conn);

        final List<String> pathNodes = new ArrayList<String>();

        try {
            final PreparedStatement stmt = conn.prepareStatement(GET_NODES_IN_PATH);
            d.watch(stmt);
            stmt.setString(1, criticalPathIp);
            stmt.setString(2, criticalPathServiceName);

            final ResultSet rs = stmt.executeQuery();
            d.watch(rs);

            while (rs.next()) {
                pathNodes.add(rs.getString(1));
            }
        } finally {
            d.cleanUp();
        }
        return pathNodes;
    }

