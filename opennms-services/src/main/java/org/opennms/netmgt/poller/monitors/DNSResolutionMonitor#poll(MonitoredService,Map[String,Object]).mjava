    @Override
    public PollStatus poll(MonitoredService svc, Map<String, Object> parameters) {

        String nodeLabel = svc.getNodeLabel();
        
        String resolutionType = ParameterMap.getKeyedString(parameters, RESOLUTION_TYPE_PARM, RESOLUTION_TYPE_DEFAULT);
        boolean requireV4 = RT_V4.equalsIgnoreCase(resolutionType) || RT_BOTH.equals(resolutionType);
        boolean requireV6 = RT_V6.equalsIgnoreCase(resolutionType) || RT_BOTH.equals(resolutionType);
        

        try {
            long start = System.currentTimeMillis();
            InetAddress[] addrs = resolve(nodeLabel);
            long end = System.currentTimeMillis();

            boolean v4found = false;
            boolean v6found = false;
            for(InetAddress addr : addrs) {
                LOG.debug("Resolved " + nodeLabel + " to " + addr);
                if (addr instanceof Inet4Address) {
                    v4found = true;
                } else if(addr instanceof Inet6Address) {
                    v6found = true;
                }
            }

            if (!v4found && !v6found) {
                String reason = "Unable to resolve " + nodeLabel;
                LOG.debug(reason);
                return PollStatus.unavailable(reason);
            } 
            if (requireV4 && !v4found) {
                String reason = nodeLabel + " could only be resolved to an IPv6 address";
                LOG.debug(reason);
                return PollStatus.unavailable(reason);
            }
            if (requireV6 && !v6found) {
                String reason = nodeLabel + " could only be resolved to an IPv4 address";
                LOG.debug(reason);
                return PollStatus.unavailable(reason);
            }
            LOG.debug("Resolved " + nodeLabel + " correctly!");
            return PollStatus.available((double)(end - start));

        } catch (TextParseException e) {
            String reason = "Unable to resolve "+nodeLabel+": "+e.getMessage();
            LOG.debug(reason);
            return PollStatus.unavailable(reason);
        }

    }

