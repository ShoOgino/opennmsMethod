    public PollStatus poll(MonitoredService svc, Map parameterMap) {
        
    	HttpClient client = null;
        try {
            PageSequenceMonitorParameters parms = PageSequenceMonitorParameters.get(parameterMap);
            
			client = parms.createHttpClient();

            long startTime = System.currentTimeMillis();
            
            parms.getPageSequence().execute(client, svc);

            long endTime = System.currentTimeMillis();
            return PollStatus.available(endTime - startTime);

        } catch (PageSequenceMonitorException e) {
            return PollStatus.unavailable(e.getMessage());
        } catch (IllegalArgumentException e) {
            log().error("Invalid parameters to monitor.", e);
            return PollStatus.unavailable("Invalid parameter to monitor: "+e.getMessage()+". See log for details.");
        } finally {
        	if (client != null) client.getHttpConnectionManager().closeIdleConnections(0);
        }
    }

