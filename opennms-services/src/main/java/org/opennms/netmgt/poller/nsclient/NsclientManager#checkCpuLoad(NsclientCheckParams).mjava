    /**
     * This method is used to perform a check of the CPU percent in use it
     * higher than the warning and critical percent thresholds.
     * 
     * @param param
     *            The param warning and critical percent members are used for
     *            validating CPU load results.
     * @return the processed <code>NsclientPacket</code>.
     * @throws NsclientException
     *             this method rethrows the exception thrown by
     *             <code>sendCheckRequest</code>
     */
    private NsclientPacket checkCpuLoad(NsclientCheckParams param)
            throws NsclientException {
        NsclientPacket pack = null;
        try {
            // get the packet from the server and assume it is okay. We'll
            // rule it out as we go.
            pack = sendCheckRequest(m_Password + "&" + CHECK_CPULOAD
                    + "&1&1&1");
            pack.setResultCode(NsclientPacket.RES_STATE_OK);

            // Check for "ERROR" string.
            if (pack.getResponse().matches(".*ERROR.*")) {
                pack.setResultCode(NsclientPacket.RES_STATE_UNKNOWN);
                return pack;
            }
            // if a warning percent was configured, check it.
            if (param.getWarningPercent() != 0) {
                if (Integer.parseInt(pack.getResponse()) > param.getWarningPercent()) {
                    pack.setResultCode(NsclientPacket.RES_STATE_WARNING);
                }
            }

            // if a crtical percent was configured, check it, overriding
            // warning percent.
            if (param.getCriticalPercent() != 0) {
                if (Integer.parseInt(pack.getResponse()) > param.getCriticalPercent()) {
                    pack.setResultCode(NsclientPacket.RES_STATE_CRIT);
                }
            }

            return pack;
        } catch (NsclientException e) {
            throw e;
        }
    }

