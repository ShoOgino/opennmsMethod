    public void reportResult(final int locationMonitorID, final int serviceId, final PollStatus pollResult) {
        if (pollResult == null) {
            throw new IllegalArgumentException("pollResult argument cannot be null");
        }

        final OnmsLocationMonitor locationMonitor = m_locMonDao.get(locationMonitorID);
        if (locationMonitor == null) {
            LogUtils.infof(this, "reportResult was called for location monitor ID %d which does not exist", locationMonitorID);
            return;
        }

        final OnmsMonitoredService monSvc = m_monSvcDao.get(serviceId);
        if (monSvc == null) {
            LogUtils.infof(this, "reportResult was called for service %d which does not exist on location monitor ID %d", serviceId, locationMonitorID);
            return;
        }

        final OnmsLocationSpecificStatus newStatus = new OnmsLocationSpecificStatus(locationMonitor, monSvc, pollResult);

        if (newStatus.getPollResult().getResponseTime() != null) {
            final Package pkg = getPollingPackageForMonitor(locationMonitor);
            m_pollerConfig.saveResponseTimeData(Integer.toString(locationMonitorID), monSvc, newStatus.getPollResult().getResponseTime(), pkg);
        }

        final OnmsLocationSpecificStatus currentStatus = m_locMonDao.getMostRecentStatusChange(locationMonitor, monSvc);

        processStatusChange(currentStatus, newStatus);
    }

