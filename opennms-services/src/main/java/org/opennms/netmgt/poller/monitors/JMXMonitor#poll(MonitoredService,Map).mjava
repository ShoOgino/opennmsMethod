    /* (non-Javadoc)
     * @see org.opennms.netmgt.poller.monitors.ServiceMonitor#poll(org.opennms.netmgt.poller.monitors.NetworkInterface, java.util.Map, org.opennms.netmgt.config.poller.Package)
     */
    public PollStatus poll(MonitoredService svc, Map map) {
        
        NetworkInterface iface = svc.getNetInterface();

        PollStatus     serviceStatus = PollStatus.unavailable();
        String         dsName        = null;
        InetAddress    ipv4Addr      = (InetAddress)iface.getAddress();
        
        ConnectionWrapper connection = null;


        try {
            
            int    retry     = ParameterMap.getKeyedInteger(map, "retry",            3);

            long t0 = 0;
            for (int attempts=0; attempts <= retry && !serviceStatus.isAvailable(); attempts++)    {

                try {
                    
                     t0 = System.nanoTime();
                    
                     connection = getMBeanServerConnection(map, ipv4Addr);
                     if (connection != null) {

                         connection.getMBeanServer().getMBeanCount();
                       
                         long nanoResponseTime = System.nanoTime() - t0;

                         serviceStatus = PollStatus.available(nanoResponseTime / 1000000.0);

                     }
                    
                     break;
                }      
                catch(Exception e) {
                	serviceStatus = logDown(Level.DEBUG, dsName+": IOException while polling address: " + ipv4Addr);
                    break;
                }
            }  // of for
         } catch (Exception e) {
         	serviceStatus = logDown(Level.DEBUG, dsName+" Monitor - failed! " + ipv4Addr.getHostAddress());
        } finally {
            if (connection != null) {
                connection.close();
            }
        }
        
        return serviceStatus;
    }

