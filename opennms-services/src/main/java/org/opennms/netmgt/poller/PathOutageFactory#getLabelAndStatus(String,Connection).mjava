    /**
     * This method is responsible for determining the
     * node label of a node, and the up/down status
     * and status color
     *
     * @param nodeIDStr a {@link java.lang.String} object.
     * @param conn a {@link java.sql.Connection} object.
     * @return an array of {@link java.lang.String} objects.
     * @throws java.sql.SQLException if any.
     */
    @Override
    public String[] getLabelAndStatus(String nodeIDStr, Connection conn) throws SQLException {
        final DBUtils d = new DBUtils(PathOutageFactory.class);

        try {
            int countManagedSvcs = 0;
            int countOutages = 0;
            String[] result = new String[3];
            result[1] = "Cleared";
            result[2] = "Unmanaged";

            int nodeID = WebSecurityUtils.safeParseInt(nodeIDStr);

            PreparedStatement stmt = conn.prepareStatement(GET_NODELABEL_BY_NODEID);
            d.watch(stmt);
            stmt.setInt(1, nodeID);

            ResultSet rs = stmt.executeQuery();
            d.watch(rs);

            while (rs.next()) {
                result[0] = rs.getString(1);
            }

            rs.close();
            stmt.close();

            stmt = conn.prepareStatement(COUNT_MANAGED_SVCS);
            d.watch(stmt);
            stmt.setInt(1, nodeID);

            rs = stmt.executeQuery();
            d.watch(rs);

            while (rs.next()) {
                countManagedSvcs = rs.getInt(1);
            }

            rs.close();
            stmt.close();

            if(countManagedSvcs > 0) {
                stmt = conn.prepareStatement(COUNT_OUTAGES);
                d.watch(stmt);
                stmt.setInt(1, nodeID);

                rs = stmt.executeQuery();
                d.watch(rs);

                while (rs.next()) {
                    countOutages = rs.getInt(1);
                }

                rs.close();
                stmt.close();

                if(countManagedSvcs == countOutages) {
                    result[1] = "Critical";
                    result[2] = "All Services Down";
                } else if(countOutages == 0) {
                    result[1] = "Normal";
                    result[2] = "All Services Up";
                } else {
                    result[1] = "Minor";
                    result[2] = "Some Services Down";
                }
            }
            return result;
        } finally {
            d.cleanUp();
        }
    }

