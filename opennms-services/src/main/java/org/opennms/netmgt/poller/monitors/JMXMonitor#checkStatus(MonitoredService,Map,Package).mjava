    /* (non-Javadoc)
     * @see org.opennms.netmgt.poller.monitors.ServiceMonitor#poll(org.opennms.netmgt.poller.monitors.NetworkInterface, java.util.Map, org.opennms.netmgt.config.poller.Package)
     */
    public int checkStatus(MonitoredService svc, Map map, Package pkg) {
        NetworkInterface iface = svc.getNetInterface();


        Category       log           = ThreadCategory.getInstance(getClass());
        /*
         * TODO: Use it or loose it.
         * Commented out because it is not currently used in this monitor
         */
        //boolean        res           = false;
        //InitialContext ctx           = null;
        int            serviceStatus = ServiceMonitor.SERVICE_UNAVAILABLE;
        String         dsName        = null;
        InetAddress    ipv4Addr      = (InetAddress)iface.getAddress();
        
        ConnectionWrapper connection = null;


        try {
            
            int    retry     = ParameterMap.getKeyedInteger(map, "retry",            3);
            String rrdPath   = ParameterMap.getKeyedString(map,  "rrd-repository",   null);
                   dsName    = ParameterMap.getKeyedString(map,  "ds-name",          "jmx");

            long t0 = 0;
            for (int attempts=0; attempts <= retry && serviceStatus != ServiceMonitor.SERVICE_AVAILABLE; attempts++)    {
                /*
                 * TODO: Use it or loose it.
                 * Commented out because it is not currently used in this monitor
                 */
                //URL jmxLink = null;
                try {
                    
                     t0 = System.currentTimeMillis();
                    
                     connection = getMBeanServerConnection(map, ipv4Addr);
                     if (connection != null) {
                         /*
                          * TODO: Use it or loose it.
                          * Commented out because it is not currently used in this monitor
                          */
                         //Integer result = connection.getMBeanServer().getMBeanCount();
                         connection.getMBeanServer().getMBeanCount();
                         serviceStatus = ServiceMonitor.SERVICE_AVAILABLE;
                       
                         long responseTime = System.currentTimeMillis() - t0;
                        
                         if (responseTime >= 0 && rrdPath != null) {
                             this.updateRRD(rrdPath, ipv4Addr, dsName, responseTime, pkg);
                         }
                     }
                    
                     break;
                }      
                catch(Exception e) {
                    log.debug(dsName + "poll: IOException while polling address: " + ipv4Addr);
                    break;
                }
            }  // of for
         } catch (Exception e) {
            log.debug(dsName + " Monitor - failed! " + ipv4Addr.getHostAddress());
        } finally {
            if (connection != null) {
                connection.close();
            }
        }
        
        return serviceStatus;
    }

