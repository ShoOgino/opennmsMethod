    /**
     * This method performs a check of the memory space used on the remote
     * server. The warning and critical thresholds defined by 'warningPercent'
     * and 'criticalPercent' are used to validate the percent of used memory.
     * 
     * @param param
     *            The params warning and critical should contain non-zero
     *            percentages.
     * @return the processed <code>NsclientPacket</code>.
     * @throws NsclientException
     *             this method rethrows the exception thrown by
     *             <code>sendCheckRequest</code>
     */
    private NsclientPacket checkMemoryUsage(NsclientCheckParams param)
            throws NsclientException {
        NsclientPacket pack = null;
        try {
            // send/receive the request
            pack = sendCheckRequest(m_Password + "&" + CHECK_MEMUSE + "&7");
            pack.setResultCode(NsclientPacket.RES_STATE_OK);

            // Check for "ERROR" string.
            if (pack.getResponse().matches(".*ERROR.*")) {
                pack.setResultCode(NsclientPacket.RES_STATE_UNKNOWN);
                return pack;
            }

            // parse out the response
            String[] results = pack.getResponse().split("&");
            float memCommitLimit = Float.parseFloat(results[0]);
            float memCommitByte = Float.parseFloat(results[1]);
            float memUsedPerc = (memCommitByte / memCommitLimit) * 100;

            // if a warning percent was configured, check it.
            if (param.getWarningPercent() != 0) {
                if (memUsedPerc > (float) param.getWarningPercent()) {
                    pack.setResultCode(NsclientPacket.RES_STATE_WARNING);
                }
            }

            // if a crtical percent was configured, check it, overriding
            // warning percent.
            if (param.getCriticalPercent() != 0) {
                if (memUsedPerc > (float) param.getCriticalPercent()) {
                    pack.setResultCode(NsclientPacket.RES_STATE_CRIT);
                }
            }
            return pack;
        } catch (NsclientException e) {
            throw e;
        }
    }

