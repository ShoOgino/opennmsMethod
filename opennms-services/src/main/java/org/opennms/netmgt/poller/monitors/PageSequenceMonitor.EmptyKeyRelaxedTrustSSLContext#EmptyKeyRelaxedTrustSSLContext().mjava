        public EmptyKeyRelaxedTrustSSLContext() {
            SSLContext customContext = null;

            try {
                // Use a blank list of key managers so no SSL keys will be available
                KeyManager[] keyManager = null;
                TrustManager[] trustManagers = { new X509TrustManager() {

                    public void checkClientTrusted(X509Certificate[] chain,
                            String authType) throws CertificateException {
                        // Perform no checks
                    }

                    public void checkServerTrusted(X509Certificate[] chain,
                            String authType) throws CertificateException {
                        // Perform no checks
                    }

                    public X509Certificate[] getAcceptedIssuers() {
                        return null;
                    }}
                };
                customContext = SSLContext.getInstance("SSL");
                customContext.init(keyManager, trustManagers, new java.security.SecureRandom());
            } catch (NoSuchAlgorithmException e) {
                // Should never happen
                ThreadCategory.getInstance(this.getClass()).error("Could not find SSL algorithm in JVM", e);
            } catch (KeyManagementException e) {
                // Should never happen
                ThreadCategory.getInstance(this.getClass()).error("Could not find SSL algorithm in JVM", e);
            }
            m_delegate = customContext;
        }

