    /**
     * <p>poll</p>
     *
     * @return a {@link org.opennms.netmgt.poller.PollStatus} object.
     */
    @Override
    public PollStatus poll() {
        try {
            String packageName = getPackageName();
            LOG.debug("Polling {} using pkg {}", m_service, packageName);

            PollStatus result = m_locationAwarePollerClient.poll()
                .withService(m_service)
                .withMonitor(m_serviceMonitor)
                .withAttributes(getParameters())
                .withAdaptor(m_latencyStoringServiceMonitorAdaptor)
                .withAdaptor(m_invertedStatusServiceMonitorAdaptor)
                .execute()
                .get().getPollStatus();
            LOG.debug("Finish polling {} using pkg {} result = {}", m_service, packageName, result);
            return result;
        } catch (Throwable e) {
            LOG.error("Unexpected exception while polling {}. Marking service as DOWN", m_service, e);
            return PollStatus.down("Unexpected exception while polling "+m_service+". "+e);
        }
    }

