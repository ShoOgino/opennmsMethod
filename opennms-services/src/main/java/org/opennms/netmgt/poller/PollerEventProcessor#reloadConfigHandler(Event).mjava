    private void reloadConfigHandler(Event event) {
        final String daemonName = "Pollerd";
        boolean isPoller = false;
        for (Parm parm : event.getParmCollection()) {
            if (EventConstants.PARM_DAEMON_NAME.equals(parm.getParmName()) && daemonName.equalsIgnoreCase(parm.getValue().getContent())) {
                isPoller = true;
                break;
            }
        }
        if (isPoller) {
            LOG.info("reloadConfigHandler: reloading poller configuration");
            final String targetFile = ConfigFileConstants.getFileName(ConfigFileConstants.POLLER_CONF_FILE_NAME);
            EventBuilder ebldr = null;
            try {
                getPollerConfig().update();
                rescheduleAllServices(event);
                // Preparing successful event
                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI, daemonName);
                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, daemonName);
                ebldr.addParam(EventConstants.PARM_CONFIG_FILE_NAME, targetFile);
            } catch (Throwable e) {
                // Preparing failed event
                LOG.error("reloadConfigHandler: Error reloading/processing poller configuration: {}", e.getMessage(), e);
                ebldr = new EventBuilder(EventConstants.RELOAD_DAEMON_CONFIG_FAILED_UEI, daemonName);
                ebldr.addParam(EventConstants.PARM_DAEMON_NAME, daemonName);
                ebldr.addParam(EventConstants.PARM_CONFIG_FILE_NAME, targetFile);
                ebldr.addParam(EventConstants.PARM_REASON, e.getMessage());
            }
            finally {
                if (ebldr != null) {
                    getEventManager().sendNow(ebldr.getEvent());
                }
            }
        } else {
            LOG.warn("reloadConfigHandler: invalid parameters");
        }
    }

