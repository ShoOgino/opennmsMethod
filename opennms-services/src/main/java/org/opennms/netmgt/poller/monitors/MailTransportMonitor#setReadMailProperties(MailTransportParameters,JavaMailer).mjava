    /**
     * This sets up the properties for the read mail portion of the service poll.  These properties
     * are derived from configuration elements vs. being hardcoded javamail properties.  Elements
     * that conflict with javamail defined properties always win.
     * 
     * @param mailParms
     * @param readMailer
     */
    private void setReadMailProperties(final MailTransportParameters mailParms, final JavaMailer readMailer) {
        Properties sendMailProps = readMailer.getSession().getProperties();

        String protocol = mailParms.getReadTestProtocol();
        sendMailProps.put("mail." + protocol + ".host", mailParms.getReadTestHost());
        sendMailProps.put("mail." + protocol + ".user", mailParms.getReadTestUserName());
        sendMailProps.put("mail." + protocol + ".port", mailParms.getReadTestPort());
        sendMailProps.put("mail." + protocol + ".starttls.enable", mailParms.isReadTestStartTlsEnabled());
        sendMailProps.put("mail.smtp.auth", "true");

        if (mailParms.isReadTestSslEnabled()) {
            sendMailProps.put("mail." + protocol + ".socketFactory.port", mailParms.getReadTestPort());
            sendMailProps.put("mail." + protocol + ".socketFactory.class", "javax.net.ssl.SSLSocketFactory");
            sendMailProps.put("mail." + protocol + ".socketFactory.fallback", "false");
        }

        sendMailProps.put("mail." + protocol + ".connectiontimeout", mailParms.getTimeout());
        sendMailProps.put("mail." + protocol + ".timeout", mailParms.getTimeout());

        sendMailProps.put("mail.store.protocol", protocol);
    }

