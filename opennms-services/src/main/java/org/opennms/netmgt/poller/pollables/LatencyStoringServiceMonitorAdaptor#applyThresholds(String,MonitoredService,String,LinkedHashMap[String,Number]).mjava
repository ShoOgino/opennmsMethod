    private void applyThresholds(String rrdPath, MonitoredService service, String dsName, LinkedHashMap<String, Number> entries) {
	try {
        if (m_thresholdingSet == null) {
            RrdRepository repository = new RrdRepository();
            repository.setRrdBaseDir(new File(rrdPath));
            // Interval does not make sense for Latency Thresholding, because all values are gauge.
            m_thresholdingSet = new LatencyThresholdingSet(service.getNodeId(), service.getIpAddr(), service.getSvcName(), repository);
        }
        LinkedHashMap<String, Double> attributes = new LinkedHashMap<String, Double>();
        for (String ds : entries.keySet()) {
            attributes.put(ds, entries.get(ds).doubleValue());
        }
        if (m_thresholdingSet.hasThresholds(attributes)) {
            List<Event> events = m_thresholdingSet.applyThresholds(dsName, attributes);
            if (events.size() > 0) {
                ThresholdingEventProxy proxy = new ThresholdingEventProxy();
                proxy.add(events);
                proxy.sendAllEvents();
            }
        }

	} catch(Throwable e) {
	    log().error("Failed to threshold on " + service + " for " + dsName + " because of an exception", e);
	}
    }

