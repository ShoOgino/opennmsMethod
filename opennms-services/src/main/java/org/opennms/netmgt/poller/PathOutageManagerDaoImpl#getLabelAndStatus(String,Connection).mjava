    /**
     * This method is responsible for determining the
     * node label of a node, and the up/down status
     * and status color
     *
     * @param nodeIDStr a {@link java.lang.String} object.
     * @param conn a {@link java.sql.Connection} object.
     * @return an array of {@link java.lang.String} objects.
     * @throws java.sql.SQLException if any.
     */
    public String[] getLabelAndStatus(String nodeIDStr, Connection conn) {
    	int countManagedSvcs = 0;
        int countOutages = 0;
        String[] result = new String[3];
        result[1] = "Cleared";
        result[2] = "Unmanaged";

        int nodeID = WebSecurityUtils.safeParseInt(nodeIDStr);

        OnmsNode node = nodeDao.get(nodeID);
        result[0] = node.getLabel();
            
        List<OnmsMonitoredService> serve = monitoredServiceDao.findAll();
           
            
        for (OnmsMonitoredService cur: serve) {
        	if ("A".equals(cur.getStatus()) && nodeID == cur.getNodeId()) {
          		countManagedSvcs++;
          	}
        }
            
        if(countManagedSvcs > 0) {
            	
           	List<OnmsOutage> out = outageDao.findAll();
            	
           	for (OnmsOutage outs: out) {
           		if (outs.getServiceRegainedEvent() == null) {
           			countOutages++;
           		}
           	}
            	
            if(countManagedSvcs == countOutages) {
            	result[1] = "Critical";
                result[2] = "All Services Down";
            } else if(countOutages == 0) {
                result[1] = "Normal";
                result[2] = "All Services Up";
            } else {
                result[1] = "Minor";
                result[2] = "Some Services Down";
            }
        }
        
        return result;
        
    }

