    private SimplePollerConfiguration createPollerConfiguration(
            final OnmsLocationMonitor mon, String pollingPackageName) {
        final Package pkg = getPollingPackage(pollingPackageName, mon.getDefinitionName());
        
        final ServiceSelector selector = m_pollerConfig.getServiceSelectorForPackage(pkg);
        final Collection<OnmsMonitoredService> services = m_monSvcDao.findMatchingServices(selector);
        final List<PolledService> configs = new ArrayList<PolledService>(services.size());

        LogUtils.debugf(this, "found %d services", services.size());

        for (final OnmsMonitoredService monSvc : services) {
            final Service serviceConfig = m_pollerConfig.getServiceInPackage(monSvc.getServiceName(), pkg);
            final long interval = serviceConfig.getInterval();
            final Map<String, Object> parameters = getParameterMap(serviceConfig);
            configs.add(new PolledService(monSvc, parameters, new OnmsPollModel(interval)));
        }

        Collections.sort(configs);
        SimplePollerConfiguration pollerConfiguration = new SimplePollerConfiguration(getConfigurationTimestamp(), configs.toArray(new PolledService[configs.size()]));
        return pollerConfiguration;
    }

