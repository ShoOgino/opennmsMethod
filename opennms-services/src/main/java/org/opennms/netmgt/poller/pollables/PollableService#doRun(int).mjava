    private PollStatus doRun(int timeout) {
        final Map<String, String> mdc = Logging.getCopyOfContextMap();
        try {
            Logging.putThreadContext("service", m_svcName);
            Logging.putThreadContext("ipAddress", m_netInterface.getAddress().getHostAddress());
            Logging.putThreadContext("nodeId", Integer.toString(getNodeId()));
            Logging.putThreadContext("nodeLabel", getNodeLabel());
            long startDate = System.currentTimeMillis();
            LOG.debug("Start Scheduled Poll of service {}", this);
            PollStatus status;
            if (getContext().isNodeProcessingEnabled()) {
                PollRunner r = new PollRunner();
                try {
                    withTreeLock(r, timeout);
                } catch (LockUnavailable e) {
                    LOG.info("Postponing poll for {}", this, e);
                    throw new PostponeNecessary("LockUnavailable postpone poll");
                }
                status = r.getPollStatus();
            }
            else {
                doPoll();
                processStatusChange(new Date());
                status = getStatus();
            }
            LOG.debug("Finish Scheduled Poll of service {}, started at {}", this, new Date(startDate));
            return status;
        } finally {
            Logging.setContextMap(mdc);
        }
    }

