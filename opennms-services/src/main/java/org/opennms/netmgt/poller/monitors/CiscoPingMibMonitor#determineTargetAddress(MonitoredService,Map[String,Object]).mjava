	private InetAddress determineTargetAddress(MonitoredService svc, Map<String, Object> parameters) {
		String rawOverrideTarget = ParameterMap.getKeyedString(parameters, PARM_TARGET_IP_ADDR, null);
		String overrideTarget = rawOverrideTarget;
		if (rawOverrideTarget != null) {
			overrideTarget = PropertiesUtils.substitute(rawOverrideTarget, getServiceProperties(svc));
			LogUtils.debugf(getClass(), "Expanded value '%s' of parameter %s to '%s' for service %s on interface %s", rawOverrideTarget, PARM_TARGET_IP_ADDR, overrideTarget, svc.getSvcName(), svc.getAddress());
		}
		
		if (overrideTarget == null) return svc.getAddress();
		LogUtils.debugf(getClass(), "Using user-specified override target IP address %s instead of service address %s for service %s", overrideTarget, svc.getAddress(), svc.getSvcName());
		try {
			final InetAddress overrideAddr = InetAddress.getByName(overrideTarget);
			LogUtils.debugf(getClass(), "Overriding service address (%s) with user-specified target address (%s) for service %s", svc.getAddress(), overrideAddr, svc.getSvcName());
			return overrideAddr;
		} catch (UnknownHostException e) {
			LogUtils.warnf(getClass(), "Failed to look up %s override value %s for service %s. Using service interface %s instead", PARM_TARGET_IP_ADDR, overrideTarget, svc.getSvcName(), svc.getAddress());
		}
		return svc.getAddress();
	}

