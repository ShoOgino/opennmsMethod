    public PollerConfiguration getPollerConfiguration(int locationMonitorId) {

        OnmsLocationMonitor mon = m_locMonDao.get(locationMonitorId);
        if (mon == null) {
            /* the monitor has been deleted we'll pick this in up on the next
             * config check
             */
            return new EmptyPollerConfiguration();
        }

        Package pkg = getPollingPackageForMonitor(mon);

        ServiceSelector selector = m_pollerConfig.getServiceSelectorForPackage(pkg);

        Collection<OnmsMonitoredService> services = m_monSvcDao.findMatchingServices(selector);

        List<PolledService> configs = new ArrayList<PolledService>(services.size());

        for (OnmsMonitoredService monSvc : services) {
            Service serviceConfig = m_pollerConfig.getServiceInPackage(monSvc.getServiceName(), pkg);
            long interval = serviceConfig.getInterval();
            Map parameters = getParameterMap(serviceConfig);
            configs.add(new PolledService(monSvc, parameters, new OnmsPollModel(interval)));
        }

        PolledService[] polledSvcs = (PolledService[]) configs.toArray(new PolledService[configs.size()]);
        return new SimplePollerConfiguration(getConfigurationTimestamp(), polledSvcs);


    }

