    /**
     * Attempt to connect, based on the parameters which have been set in
     * the object.
     * 
     * @return true if it is able to connect
     * @throws InsufficientParametersException
     */
    protected boolean connect() throws InsufficientParametersException {
        if (getAddress() == null) {
            throw new InsufficientParametersException("you must specify an address");
        }
        if (getPort() == null) {
            throw new InsufficientParametersException("you must specify a port");
        }
        if (getTimeout() == null) {
            throw new InsufficientParametersException("you must specify a timeout");
        }
        
        m_exception = null;
        m_serverVersion = null;
        m_session = null;
        try {
            m_session = m_jsch.getSession("opennms", getAddress().getHostAddress(), getPort());
            m_session.connect(getTimeout());
            m_serverVersion = m_session.getServerVersion();
            return true;
        } catch (JSchException e) {
            m_exception = e;
            if (e.getCause() != null) {
                Class cause = e.getCause().getClass();
                if (cause == ConnectException.class) {
                    log().debug("connection refused", e);
                    return false;
                } else if (cause == NoRouteToHostException.class) {
                    log().debug("no route to host", e);
                    return false;
                } else if (cause == InterruptedIOException.class) {
                    log().debug("connection timeout", e);
                    return false;
                } else if (cause == IOException.class) {
                    log().debug("An I/O exception occurred", e);
                    return false;
                } else if (e.getMessage().matches("^.*(connection is closed by foreign host).*$")) {
                    log().debug("JSCH failed", e);
                    return false;
                }
            } else {
                // ugh, string parse, maybe we can get him to fix this in a newer jsch release
                if (e.getMessage().matches("^.*(socket is not established|connection is closed by foreign host|java.io.(IOException|InterruptedIOException)|java.net.(ConnectException|NoRouteToHostException)).*$")) {
                    log().debug("did not connect enough to verify SSH server", e);
                    return false;
                }
            }
            if (m_session != null) {
                if (m_session.isConnected()) {
                    m_serverVersion = m_session.getServerVersion();
                }
            }
            log().debug("valid SSH server is listening: " + e.getMessage());
            return true;
        }
    }

