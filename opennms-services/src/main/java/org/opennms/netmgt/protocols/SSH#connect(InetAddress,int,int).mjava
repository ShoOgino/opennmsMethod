    private boolean connect(InetAddress address, int port, int timeout) {
        m_exception = null;
        m_serverVersion = null;
        Session session = null;
        try {
            session = m_jsch.getSession("opennms", address.getHostAddress(), port);
            session.connect(timeout);
            m_serverVersion = session.getServerVersion();
            return true;
        } catch (JSchException e) {
            m_exception = e;
            if (e.getCause() != null) {
                log().debug("got a root cause");
                Class cause = e.getCause().getClass();
                if (cause == ConnectException.class) {
                    log().debug("connection refused", e);
                    return false;
                } else if (cause == NoRouteToHostException.class) {
                    log().debug("no route to host", e);
                    return false;
                } else if (cause == InterruptedIOException.class) {
                    log().debug("connection timeout", e);
                    return false;
                } else if (cause == IOException.class) {
                    log().debug("An I/O exception occurred", e);
                    return false;
                } else if (e.getMessage().matches("^.*(connection is closed by foreign host).*$")) {
                    log().debug("JSCH failed", e);
                    return false;
                }
            } else {
                log().debug("did not get a root cause");
                // ugh, string parse, maybe we can get him to fix this in a newer jsch release
                if (e.getMessage().matches("^.*(java.io.(IOException|InterruptedIOException)|java.net.(ConnectException|NoRouteToHostException)).*$")) {
                    log().debug("did not connect enough to verify SSH server", e);
                    return false;
                }
            }
            if (session != null) {
                m_serverVersion = session.getServerVersion();
            }
            log().debug("passed exception: " + e.getMessage());
            return true;
        }
    }

