    private void processEvent(final Event event) {
    	final String uei = event.getUei();
        if (uei == null) {
            LOG.debug("Event received with null UEI, ignoring event");
            return;
        }

        LOG.debug("About to process event: {}", event.getUei());

        LOG.debug(event.toString());

        if (m_useGenericMessages) {
            // new single RPC for all events (subject to config uei filter)
            if (!m_notifier.sendEvent(event)) {
                pushBackEvent(event);
            }
        } else {
            /*
             * original specific RPC calls -- limits us to exporting a max of
             * 6 specific events
             */
            if (uei.equals(EventConstants.NODE_LOST_SERVICE_EVENT_UEI)) {
                if (!m_notifier.sendServiceDownEvent(event)) {
                    pushBackEvent(event);
                }
            } else if (uei.equals(EventConstants.INTERFACE_DOWN_EVENT_UEI)) {
                if (!m_notifier.sendInterfaceDownEvent(event)) {
                    pushBackEvent(event);
                }
            } else if (uei.equals(EventConstants.NODE_DOWN_EVENT_UEI)) {
                if (!m_notifier.sendNodeDownEvent(event)) {
                    pushBackEvent(event);
                }
            } else if (uei.equals(EventConstants.NODE_UP_EVENT_UEI)) {
                if (!m_notifier.sendNodeUpEvent(event)) {
                    pushBackEvent(event);
                }
            } else if (uei.equals(EventConstants.INTERFACE_UP_EVENT_UEI)) {
                if (!m_notifier.sendInterfaceUpEvent(event)) {
                    pushBackEvent(event);
                }
            } else if (uei.equals(EventConstants.NODE_REGAINED_SERVICE_EVENT_UEI)) {
                if (!m_notifier.sendServiceUpEvent(event)) {
                    pushBackEvent(event);
                }
            } 
        }

        if (uei.equals(EventConstants.XMLRPC_NOTIFICATION_EVENT_UEI)) {
            xmlrpcNotificationEventHandler(event);
        }
    }

