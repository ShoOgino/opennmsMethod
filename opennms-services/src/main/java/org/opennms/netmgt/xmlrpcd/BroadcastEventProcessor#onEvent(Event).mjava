    /**
     * {@inheritDoc}
     *
     * This method is invoked by the EventIpcManager when a new event is
     * available for processing. Each message is examined for its Universal
     * Event Identifier and the appropriate action is taking based on each UEI.
     */
    @Override
    public void onEvent(final Event event) {
    	final String eventUei = event.getUei();
        if (eventUei == null) {
            return;
        }

        LOG.debug("Received event: {}", eventUei);

        try {
            if (m_events.contains(eventUei)) {
                if (m_eventQ.size() >= m_maxQSize) {
                    m_eventQ.remove(1000);

                    LOG.debug("Event {} removed from event queue", eventUei);
                }

                m_eventQ.add(event);

                LOG.debug("Event {} added to event queue", eventUei);
            }
        } catch (final InterruptedException ex) {
		LOG.error("Failed to process event", ex);
            return;
        } catch (final FifoQueueException ex) {
            LOG.error("Failed to process event", ex);
            return;
        } catch (final Throwable t) {
            LOG.error("Failed to process event", t);
            return;
        }
    }

