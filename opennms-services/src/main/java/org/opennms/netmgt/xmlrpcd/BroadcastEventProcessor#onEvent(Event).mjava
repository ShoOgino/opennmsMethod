    /**
     * This method is invoked by the EventIpcManager when a new event is
     * available for processing. Each message is examined for its Universal
     * Event Identifier and the appropriate action is taking based on each UEI.
     * 
     * @param event
     *            The event
     * 
     */
    public void onEvent(Event event) {
        Category log = ThreadCategory.getInstance(getClass());

        String eventUei = event.getUei();
        if (eventUei == null)
            return;

        if (log.isDebugEnabled())
            log.debug("Received event: " + eventUei);

        try {
            if (m_events.contains(eventUei)) {
                if (m_eventQ.size() >= m_maxQSize) {
                    m_eventQ.remove(1000);

                    if (log.isDebugEnabled())
                        log.debug("Event " + eventUei + " removed from event queue");
                }

                m_eventQ.add(event);

                if (log.isDebugEnabled())
                    log.debug("Event " + eventUei + " added to event queue");
            }
        } catch (InterruptedException ex) {
            log.error("Failed to process event", ex);
            return;
        } catch (FifoQueueException ex) {
            log.error("Failed to process event", ex);
            return;
        } catch (Throwable t) {
            log.error("Failed to process event", t);
            return;
        }
    }

