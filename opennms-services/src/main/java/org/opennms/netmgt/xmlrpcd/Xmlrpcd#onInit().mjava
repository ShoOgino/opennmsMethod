    protected void onInit() {


        if (log().isDebugEnabled())
            log().debug("start: Creating the xmlrpc event queue processor");

        // set up the event queue processor
        try {
            if (log().isDebugEnabled())
                log().debug("start: Initializing the xmlrpcd config factory");

            XmlrpcdConfigFactory.reload();
            OpennmsServerConfigFactory.reload();

            XmlrpcdConfigFactory xFactory = XmlrpcdConfigFactory.getInstance();
            boolean verifyServer = OpennmsServerConfigFactory.getInstance().verifyServer();
            String localServer = null;

            if (verifyServer)
                localServer = OpennmsServerConfigFactory.getInstance().getServerName();

            // create a BroadcastEventProcessor per server 
            Enumeration servers = xFactory.getSubscribingServerEnumeration();
            int i = 0;
            while (servers.hasMoreElements()) {
                SubscribingServers server = 
                                    (SubscribingServers) servers.nextElement();
                XmlrpcServer[] xServers = server.getXmlrpcServer();
                FifoQueue q = new FifoQueueImpl();
                m_eventlogQs.add(q);
                m_eventReceivers.add(new BroadcastEventProcessor(
                            Integer.toString(i), q, xFactory.getMaxQueueSize(), 
                                    xFactory.getEventList(server)));

                // create an EventQueueProcessor per server 
                m_processors.add( new EventQueueProcessor(q, xServers, server.getRetries(), server.getElapseTime(), verifyServer, localServer, xFactory.getMaxQueueSize()) );
                i++;
            }

        } catch (MarshalException e) {
            log().error("Failed to load configuration", e);
            throw new UndeclaredThrowableException(e);
        } catch (ValidationException e) {
            log().error("Failed to load configuration", e);
            throw new UndeclaredThrowableException(e);
        } catch (IOException e) {
            log().error("Failed to load configuration", e);
            throw new UndeclaredThrowableException(e);
        } catch (Throwable t) {
            log().error("Failed to load configuration", t);
        }
    }

