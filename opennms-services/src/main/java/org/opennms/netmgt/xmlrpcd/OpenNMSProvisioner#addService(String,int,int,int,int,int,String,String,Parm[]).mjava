    private boolean addService(final String serviceId, final int retries, final int timeout, final int interval, final int downTimeInterval, final int downTimeDuration, final String monitor, final String plugin, final Parm[] entries) {
    	final String pkgName = serviceId;
    	final Package pkg = getPackage(pkgName, interval, downTimeInterval, downTimeDuration);

    	final Properties parms = new Properties();
        parms.setProperty("retry", ""+retries);
        parms.setProperty("timeout", ""+timeout);
        
        for(int i = 0; i < entries.length; i++) {
            parms.setProperty(entries[i].getKey(), entries[i].getVal());
        }

        addServiceToPackage(pkg, serviceId, interval, parms);

        if (m_pollerConfig.getPackage(pkg.getName()) == null) {
            m_pollerConfig.addPackage(pkg);
        }
        
        if (m_pollerConfig.getServiceMonitor(serviceId) == null) {
            LOG.debug("Adding a new monitor for {}", serviceId);
            m_pollerConfig.addMonitor(serviceId, monitor);
        } else {
            LOG.debug("No need to add a new monitor for {}", serviceId);
        }
        
        if (m_capsdConfig.getProtocolPlugin(serviceId) == null) {
        	final ProtocolPlugin pPlugin = new ProtocolPlugin();
            pPlugin.setProtocol(serviceId);
            pPlugin.setClassName(plugin);
            pPlugin.setScan("off");
            m_capsdConfig.addProtocolPlugin(pPlugin);
        }
        
        saveConfigs();
        return true;
    }

