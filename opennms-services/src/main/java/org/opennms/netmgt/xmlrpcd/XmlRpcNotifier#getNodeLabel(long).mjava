    /**
     * <p>
     * This method retrieves the nodeLable from the database for a given nodeId.
     * </p>
     * 
     * @param nodeId
     *            the nodeId to retrieve the node label for.
     */
    private String getNodeLabel(final long nodeId) {
        Connection dbConn = null;
        String nodeLabel = null;

        final DBUtils d = new DBUtils(getClass());
        try {
            dbConn = DataSourceFactory.getInstance().getConnection();
            d.watch(dbConn);

            LogUtils.debugf(this, "getNodeLabel: retrieve node label for: %d", nodeId);

            final PreparedStatement stmt = dbConn.prepareStatement("SELECT nodelabel FROM NODE WHERE nodeid = ?");
            d.watch(stmt);
            stmt.setLong(1, nodeId);
            final ResultSet rs = stmt.executeQuery();
            d.watch(rs);

            while (rs.next()) {
                nodeLabel = rs.getString(1);
            }

        } catch (final SQLException sqle) {
            LogUtils.warnf(this, sqle, "SQL exception while retrieving nodeLabel for: %d", nodeId);
        } finally {
            d.cleanUp();
        }

        LogUtils.debugf(this, "getNodeLabel: retrieved node label '%s' for: %d", nodeLabel, nodeId);

        return nodeLabel;
    }

