    /**
     * This method is used to block a thread the generator is in a timed wait.
     * If there is no timed wait then the thread returns immediantly. If the
     * lock is not released in the time passed to the method then a false value
     * is returned.
     * 
     * @param maxWait
     *            The maximum time to wait, or zero for indefinite.
     * 
     * @return True if the wait was successful.
     * 
     */
    private synchronized boolean doWait(long maxWait) throws InterruptedException {
        boolean completed = true;
        if (m_isInitial) {
            Category log = ThreadCategory.getInstance(getClass());
            completed = false;

            long start = System.currentTimeMillis();
            if (log.isDebugEnabled())
                log.debug("doWait(initial): entry time " + start);

            if ((start - m_createTime) >= m_initialWait) {
                // Pre Check completion
                //
                if (log.isDebugEnabled())
                    log.debug("doWait(initial): wait over, setting complete flag");

                completed = true;
                if (m_isInitial)
                    sync();
                m_isInitial = false;
                notifyAll();
            } else {
                // find time to wait
                //
                long max_wait = start - m_createTime + m_initialWait;
                if (0 < maxWait && maxWait < max_wait) // user wait specified
                {
                    max_wait = maxWait;
                }
                if (log.isDebugEnabled())
                    log.debug("doWait(initial): maximum wait = " + max_wait);

                // Wait through notifications
                //
                long finish = start;
                do {
                    wait(max_wait - (finish - start));
                    finish = System.currentTimeMillis();
                } while ((finish - start) < max_wait && m_isInitial);

                if (log.isDebugEnabled())
                    log.debug("doWait(initial): finished wait loop");

                if ((finish - m_createTime) >= m_initialWait) {
                    if (log.isDebugEnabled())
                        log.debug("doWait(initial): wait over, setting complete flag");
                    completed = true;
                    if (m_isInitial)
                        sync();
                    m_isInitial = false;
                    notifyAll();
                }
            }
        } else if (m_isRestarted) {
            Category log = ThreadCategory.getInstance(getClass());
            completed = false;
            // Pre Check completion
            //
            long start = System.currentTimeMillis();
            if (log.isDebugEnabled())
                log.debug("doWait(restart): entry time " + start);

            if ((start - m_restartTime) >= m_restartWait) {
                if (log.isDebugEnabled())
                    log.debug("doWait(restart): wait over, setting complete flag");

                completed = true;
                if (m_isRestarted)
                    sync();
                m_isRestarted = false;
                notifyAll();
            } else {
                // find time to wait
                //
                long max_wait = start - m_restartTime + m_restartWait;
                if (0 < maxWait && maxWait < max_wait) // user wait specified
                {
                    max_wait = maxWait;
                }
                if (log.isDebugEnabled())
                    log.debug("doWait(restart): maximum wait = " + max_wait);

                // Wait through notifications
                //
                long finish = start;
                do {
                    wait(max_wait - (finish - start));
                    finish = System.currentTimeMillis();
                } while ((finish - start) < max_wait && m_isRestarted);

                if (log.isDebugEnabled())
                    log.debug("doWait(restart): finished wait loop");

                if ((finish - m_restartTime) >= m_restartWait) {
                    if (log.isDebugEnabled())
                        log.debug("doWait(restart): wait over, setting complete flag");
                    completed = true;
                    if (m_isRestarted)
                        sync();
                    m_isRestarted = false;
                    notifyAll();
                }
            }
        }
        return completed;
    }

