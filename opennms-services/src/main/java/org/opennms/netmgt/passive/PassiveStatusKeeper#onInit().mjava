    /**
     * <p>onInit</p>
     */
    @Override
    protected void onInit() {
        if (m_initialized) return;
        
        checkPreRequisites();
        createMessageSelectorAndSubscribe();
        
        m_statusTable = new HashMap<PassiveStatusKey, PollStatus>();
        
        String sql = "select node.nodeLabel AS nodeLabel, ipInterface.ipAddr AS ipAddr, service.serviceName AS serviceName " +
                "FROM outages " +
                "JOIN ifServices ON outages.ifServiceId = ifServices.id " +
                "JOIN ipInterface ON ifServices.ipInterfaceId = ipInterface.id " +
                "JOIN node ON ipInterface.nodeId = node.nodeId " +
                "JOIN service ON ifServices.serviceId = service.serviceId " +
                "WHERE outages.ifRegainedService is NULL";
        
        Querier querier = new Querier(m_dataSource, sql) {
        
            @Override
            public void processRow(ResultSet rs) throws SQLException {
               
                PassiveStatusKey key = new PassiveStatusKey(rs.getString("nodeLabel"), rs.getString("ipAddr"), rs.getString("serviceName"));
                m_statusTable.put(key, PollStatus.down());
                
                
                
            }
        
        };
        querier.execute();
        
        
        
        m_initialized = true;
    }

