	/**
     * This method is used to verify if there is a same ipaddress existing in
     * two sets of ipaddresses, and return the first ipaddress that is the
     * same in both sets as a string.
     * 
     * @param ipListA
     *            a collection of ip addresses.
     * @param ipListB
     *            a collection of ip addresses.
     * @return the first ipaddress exists in both ipaddress lists.
     */
    private String getDuplicateIpaddress(List<String> ipListA, List<String> ipListB) {
        if (ipListA == null || ipListB == null)
            return null;

        String ipaddr = null;
        Iterator<String> iter = ipListA.iterator();
        while (iter.hasNext()) {
            ipaddr = iter.next();
            if (ipListB.contains(ipaddr)) {
                if (LOG.isDebugEnabled())
                    LOG.debug("getDuplicateIpaddress: get duplicate ip address: " + ipaddr);
                break;
            } else
                ipaddr = null;
        }
        return ipaddr;
    }

