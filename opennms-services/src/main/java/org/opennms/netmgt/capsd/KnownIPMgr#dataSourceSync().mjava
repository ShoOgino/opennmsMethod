    /**
     * Clears and synchronizes the internal known IP address cache with the
     * current information contained in the database. To synchronize the cache
     * the method opens a new connection to the database, loads the address, and
     * then closes it's connection.
     * 
     * @throws java.util.MissingResourceException
     *             Thrown if the method cannot find the database configuration
     *             file.
     * @throws java.sql.SQLException
     *             Thrown if the connection cannot be created or a database
     *             error occurs.
     * 
     */
    static synchronized void dataSourceSync() throws SQLException {

        // Get the database connection
        //
        Connection c = null;
        try {
            // open the connection
            //
            c = DataSourceFactory.getInstance().getConnection();

            // Run with it
            //
            // c.setReadOnly(true);

            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery(IP_LOAD_SQL);

            if (rs != null) {
                m_known.clear();
                while (rs.next()) {
                    // extract the IP address.
                    //
                    String ipstr = rs.getString(1);
                    InetAddress addr = null;
                    addr = InetAddressUtils.addr(ipstr);
                    if (addr == null) {
                        LOG.warn("KnownIPMgr: failed to convert address {}", ipstr);
                        continue;
                    }

                    // get the node identifier
                    //
                    int nid = rs.getInt(2);

                    // get the last check time
                    //
                    Timestamp lastCheck = rs.getTimestamp(3);
                    m_known.put(addr, new IPInterface(addr, nid, lastCheck));
                }
                rs.close();
            }

            s.close();
        } finally {
            try {
                if (c != null)
                    c.close();
            } catch (SQLException sqlE) {
            }
        }
    }

