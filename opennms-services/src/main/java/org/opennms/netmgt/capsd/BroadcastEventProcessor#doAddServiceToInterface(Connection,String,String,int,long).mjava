    /**
     * Helper method used to add a service to an interface.
     * 
     * @param dbConn
     * @param sourceUei
     * @param ipaddr
     * @param serviceName
     * @param serviceId
     * @param txNo
     * @throws SQLException
     * @throws FailedOperationException
     */
    private List<Event> doAddServiceToInterface(Connection dbConn, String ipaddr, String serviceName, int serviceId, long txNo) throws SQLException, FailedOperationException {

        PreparedStatement stmt = null;
        ResultSet rs = null;
        final DBUtils d = new DBUtils(getClass());
        try {
            stmt = dbConn.prepareStatement(SQL_QUERY_IPADDRESS_EXIST);
            d.watch(stmt);
            stmt.setString(1, ipaddr);
            rs = stmt.executeQuery();
            d.watch(rs);
            
            List<Event> eventsToSend = new LinkedList<Event>();
            while (rs.next()) {
                LOG.debug("changeServiceHandler: add service {} to interface: {}", serviceName, ipaddr);

                InetAddress inetAddr;
				try {
					inetAddr = InetAddressUtils.addr(ipaddr);
				} catch (final IllegalArgumentException e) {
					throw new FailedOperationException("unable to resolve host " + ipaddr + ": " + e.getMessage(), e);
				}
                final int nodeId = rs.getInt(1);
                // insert service
				DbIfServiceEntry service = DbIfServiceEntry.create(nodeId, inetAddr, serviceId);
                service.setSource(DbIfServiceEntry.SOURCE_PLUGIN);
                service.setStatus(DbIfServiceEntry.STATUS_ACTIVE);
                service.setNotify(DbIfServiceEntry.NOTIFY_ON);
                service.store(dbConn, true);

                // Create a nodeGainedService event to eventd.
                DbNodeEntry nodeEntry = DbNodeEntry.get(nodeId);
                Event newEvent = EventUtils.createNodeGainedServiceEvent(nodeEntry, inetAddr, serviceName, txNo);
                eventsToSend.add(newEvent);
            }
            return eventsToSend;
        } finally {
            d.cleanUp();
        }        
    }

