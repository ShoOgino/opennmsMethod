    /**
     * This method is responsible for generating a interfaceReparented event and
     * sending it to Eventd.
     * 
     * @param ipAddr
     *            IP address of interface which was reparented
     * @param ipHostName
     *            IP Host Name for the interface
     * @param newNodeId
     *            Interface's new nodeID
     * @param oldNodeId
     *            Interface's old nodeID
     * @param reparentNodeEntry
     *            DbNodeEntry object with all info associated with the reparent
     *            node
     */
    private synchronized void sendInterfaceReparentedEvent(String ipAddr, String ipHostName, int newNodeId, int oldNodeId, DbNodeEntry reparentNodeEntry) {
        ThreadCategory log = ThreadCategory.getInstance(getClass());
        if (log.isDebugEnabled())
            log.debug("sendInterfaceReparentedEvent: ipAddr: " + ipAddr + " ipHostName: " + ipHostName + " newNodeId: " + newNodeId + " oldNodeId: " + oldNodeId);

        // Make sure host name not null
        if (ipHostName == null)
            ipHostName = "";

        // create the event to be sent
        EventBuilder bldr = new EventBuilder(EventConstants.INTERFACE_REPARENTED_EVENT_UEI, "OpenNMS.Capsd");

        bldr.setNodeid(newNodeId);
        bldr.setHost(Capsd.getLocalHostAddress());
        bldr.setInterface(ipAddr);
        
        bldr.addParam(EventConstants.PARM_IP_HOSTNAME, ipHostName);
        bldr.addParam(EventConstants.PARM_OLD_NODEID, oldNodeId);
        bldr.addParam(EventConstants.PARM_NEW_NODEID, newNodeId);
        bldr.addParam(EventConstants.PARM_NODE_LABEL, reparentNodeEntry.getLabel());
        bldr.addParam(EventConstants.PARM_NODE_LABEL_SOURCE, reparentNodeEntry.getLabelSource());
        
        if (reparentNodeEntry.getSystemName() != null) {
            bldr.addParam(EventConstants.PARM_NODE_SYSNAME, reparentNodeEntry.getSystemName());
        }

        if (reparentNodeEntry.getSystemDescription() != null) {
            bldr.addParam(EventConstants.PARM_NODE_SYSDESCRIPTION, reparentNodeEntry.getSystemDescription());
        }

        // Send event to Eventd
        try {
            EventIpcManagerFactory.getIpcManager().sendNow(bldr.getEvent());

        } catch (Throwable t) {
            log.warn("run: unexpected throwable exception caught during send to middleware", t);
        }
    }

