    /**
     * Helper method that takes IP address from the force rescan event,
     * retrieves the nodeid (JDBC) and adds it to the rescan schedule for immediate
     * processing when the next thread is available.
     *
     * @param event a {@link org.opennms.netmgt.xml.event.Event} object.
     * @throws org.opennms.netmgt.capsd.InsufficientInformationException if any.
     */
    @EventHandler(uei=EventConstants.FORCE_RESCAN_EVENT_UEI)
    public void handleForceRescan(Event event) throws InsufficientInformationException {
        // If the event has a node identifier use it otherwise
        // will need to use the interface to lookup the node id
        // from the database
    	Long nodeid = -1L;

        if (event.hasNodeid())
            nodeid = event.getNodeid();
        else {
            // Extract interface from the event and use it to
            // lookup the node identifier associated with the
            // interface from the database.
            //

            // ensure the ipaddr is set
            EventUtils.checkInterface(event);

            // Get database connection and retrieve nodeid
            Connection dbc = null;
            PreparedStatement stmt = null;
            ResultSet rs = null;
            final DBUtils d = new DBUtils(getClass());
            try {
                dbc = getConnection();
                d.watch(dbc);

                // Retrieve node id
                stmt = dbc.prepareStatement(SQL_RETRIEVE_NODEID);
                d.watch(stmt);
                stmt.setString(1, event.getInterface());
                rs = stmt.executeQuery();
                d.watch(rs);
                if (rs.next()) {
                    nodeid = rs.getLong(1);
                }
            } catch (SQLException sqlE) {
                LOG.error("handleForceRescan: Database error during nodeid retrieval for interface {}", event.getInterface(), sqlE);
            } finally {
                d.cleanUp();
            }

        }

        if (nodeid == null || nodeid == -1) {
            LOG.error("handleForceRescan: Nodeid retrieval for interface {} failed.  Unable to perform rescan.", event.getInterface());
            return;
        }
        
        // discard this forceRescan if one is already enqueued for the same node ID
        if (RescanProcessor.isRescanQueuedForNode(nodeid.intValue())) {
            LOG.info("Ignoring forceRescan event for node {} because a forceRescan for that node already exists in the queue", nodeid);
            return;
        }
        
        // Rescan the node.
        m_scheduler.forceRescan(nodeid.intValue());
    }

