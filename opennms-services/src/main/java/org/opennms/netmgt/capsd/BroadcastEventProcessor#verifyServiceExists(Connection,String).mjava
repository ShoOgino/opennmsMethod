    /**
     * JDBC Query using @param serviceName to determine if the serviceName is indeed as
     * service name in the service table.
     * 
     * FIXME: This sucks:
     *  1) No transaction management
     *  2) Such a small table should be cached and accessed via a synchronized call.  Quit
     *  going to the DB for such trivial information.  This is a performance killer.  Especially
     *  since our current db factory (factories) use the synchonized DriverManager JDBC class. 
     * 
     * @param dbConn
     * @param serviceName
     * @return
     * @throws SQLException
     * @throws FailedOperationException
     */
    private int verifyServiceExists(Connection dbConn, String serviceName) throws SQLException, FailedOperationException {
        PreparedStatement stmt = null;
        ResultSet rs = null;
        final DBUtils d = new DBUtils(getClass());
        try {
            // Retrieve the serviceId
            stmt = dbConn.prepareStatement(SQL_RETRIEVE_SERVICE_ID);
            d.watch(stmt);
            stmt.setString(1, serviceName);

            rs = stmt.executeQuery();
            d.watch(rs);
            int serviceId = -1;
            while (rs.next()) {
                LOG.debug("verifyServiceExists: retrieve serviceid for service " + serviceName);
                serviceId = rs.getInt(1);
            }

            if (serviceId < 0) {
                if (LOG.isDebugEnabled())
                    LOG.debug("verifyServiceExists: the specified service: " + serviceName + " does not exist in the database.");
                throw new FailedOperationException("Invalid service: " + serviceName);
            }

            return serviceId;
        } finally {
            d.cleanUp();
        }        
    }

