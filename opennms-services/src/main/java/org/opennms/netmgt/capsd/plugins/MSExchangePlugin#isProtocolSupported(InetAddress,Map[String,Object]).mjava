    /**
     * {@inheritDoc}
     *
     * Returns true if the protocol defined by this plugin is supported. If the
     * protocol is not supported then a false value is returned to the caller.
     * The qualifier map passed to the method is used by the plugin to return
     * additional information by key-name. These key-value pairs can be added to
     * service events if needed.
     */
    public boolean isProtocolSupported(InetAddress address, Map<String, Object> qualifiers) {
        int retries = DEFAULT_RETRY;
        int timeout = DEFAULT_TIMEOUT;
        int pop3port = DEFAULT_POP3_PORT;
        int imapport = DEFAULT_IMAP_PORT;
        int mapiport = DEFAULT_MAPI_PORT;

        if (qualifiers != null) {
            retries = ParameterMap.getKeyedInteger(qualifiers, "retry", DEFAULT_RETRY);
            timeout = ParameterMap.getKeyedInteger(qualifiers, "timeout", DEFAULT_TIMEOUT);
            pop3port = ParameterMap.getKeyedInteger(qualifiers, "pop3 port", DEFAULT_POP3_PORT);
            imapport = ParameterMap.getKeyedInteger(qualifiers, "imap port", DEFAULT_IMAP_PORT);
            mapiport = ParameterMap.getKeyedInteger(qualifiers, "mapi port", DEFAULT_MAPI_PORT);
        }

        boolean[] result = isServer(address, new int[] { pop3port, imapport, mapiport }, retries, timeout);
        if (qualifiers != null) {
            if (result[0] && !qualifiers.containsKey("pop3 port"))
                qualifiers.put("pop3 port", pop3port);

            if (result[1] && !qualifiers.containsKey("imap port"))
                qualifiers.put("imap port", imapport);

            if (result[2] && !qualifiers.containsKey("mapi port"))
                qualifiers.put("mapi port", mapiport);
        }

        return (result[0] || result[1] || result[2]);
    }

