    /**
     * This method is responsible for generating a duplicateNodeDeleted event
     * and adding it to the event list.
     * 
     * @param deletedNode
     *            Entry of duplciate node which was deleted.
     * @return 
     */
    private static Event createDuplicateNodeDeletedEvent(DbNodeEntry deletedNode) {
        if (log().isDebugEnabled()) {
            log().debug("createDuplicateNodeDeletedEvent: delete nodeid: " + deletedNode.getNodeId());
        }

        EventBuilder bldr = nodeEventBuilder(EventConstants.DUP_NODE_DELETED_EVENT_UEI, deletedNode.getNodeId());

        if (log().isDebugEnabled()) {
            log().debug("createDuplicateNodeDeletedEvent: successfully created duplicateNodeDeleted event for nodeid: " + deletedNode.getNodeId());
        }

        // Add event to the list of events to be sent out.
        return bldr.getEvent();
    }

