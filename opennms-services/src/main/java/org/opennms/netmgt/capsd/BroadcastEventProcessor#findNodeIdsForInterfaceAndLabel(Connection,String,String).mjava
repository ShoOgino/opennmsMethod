    /**
     * Helper method for retrieving list of node ids that match @param nodeLabel and @param ipAddr
     * 
     * @param dbConn
     * @param nodeLabel
     * @param ipAddr
     * @return Array of node ids from the db (JDBC)
     * @throws SQLException
     */
    private long[] findNodeIdsForInterfaceAndLabel(Connection dbConn, String nodeLabel, String ipAddr) throws SQLException {
        PreparedStatement stmt = null;
        ResultSet rs = null;
        final DBUtils d = new DBUtils(getClass());

        try {
            stmt = dbConn.prepareStatement("SELECT node.nodeid FROM node, ipinterface WHERE node.nodeid = ipinterface.nodeid AND node.nodelabel = ? AND ipinterface.ipaddr = ? AND isManaged !='D' AND nodeType !='D'");
            d.watch(stmt);
            stmt.setString(1, nodeLabel);
            stmt.setString(2, ipAddr);

            rs = stmt.executeQuery();
            d.watch(rs);
            List<Long> nodeIdList = new LinkedList<Long>();
            while (rs.next()) {
                nodeIdList.add(new Long(rs.getLong(1)));
            }

            long[] nodeIds = new long[nodeIdList.size()];
            int i = 0;
            for(Long nodeId : nodeIdList) {
                nodeIds[i++] = nodeId.longValue();
            }
            return nodeIds;
        } finally {
            d.cleanUp();
        }        
    }

