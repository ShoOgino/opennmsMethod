    private boolean isServer(String hostname, Map<String, Object> qualifiers) {
    	
        String user = ParameterMap.getKeyedString(qualifiers, "user", DBTools.DEFAULT_DATABASE_USER);
        String password = ParameterMap.getKeyedString(qualifiers, "password", DBTools.DEFAULT_DATABASE_PASSWORD);
        String db_url = ParameterMap.getKeyedString(qualifiers, "url", DBTools.DEFAULT_URL);
        int timeout = ParameterMap.getKeyedInteger(qualifiers, "timeout", DEFAULT_TIMEOUT);
        int retries = ParameterMap.getKeyedInteger(qualifiers, "retry", DEFAULT_RETRY);
        String db_driver = ParameterMap.getKeyedString(qualifiers, "driver", DBTools.DEFAULT_JDBC_DRIVER);


        boolean status = false;
        Connection con = null;
        Statement statement = null;
        boolean connected = false;

        for (int attempts = 0; attempts <= retries && !connected;) {
            LOG.info("Trying to detect JDBC server on '{}', attempt #: {}", hostname, (Object) attempts);

            try {
                LOG.info("Loading JDBC driver: '{}'", db_driver);
                Driver driver = (Driver)Class.forName(db_driver).newInstance();
                LOG.debug("JDBC driver loaded: '{}'", db_driver);

                String url = DBTools.constructUrl(db_url, hostname);
                LOG.debug("Constructed JDBC url: '{}'", url);

                Properties props = new Properties();
                props.setProperty("user", user);
                props.setProperty("password", password);
                props.setProperty("timeout", String.valueOf(timeout/1000));
                con = driver.connect(url, props);
                connected = true;
                LOG.debug("Got database connection: '{}' ({}, {}, {})", con, url, user, password);
                
                status = checkStatus(con, qualifiers);

                if (status)
                    LOG.info("JDBC server detected on: '{}', attempt #: {}", hostname, (Object) attempts);
                
            } catch (final Exception e) {
                LOG.info("failed to make JDBC connection", e);
            } finally {
                attempts++;
                closeStmt(statement);
                closeConn(con);
            }
        }
        return status;
    }

