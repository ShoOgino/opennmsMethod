    /**
     * <p>syncServicesTable</p>
     *
     * @param conn a {@link java.sql.Connection} object.
     * @return a {@link java.util.List} object.
     * @throws java.sql.SQLException if any.
     */
    public List<String> syncServicesTable(Connection conn) throws SQLException {
        log().debug("syncServicesTable: synchronizing services list with the database");
        
        List<String> serviceNames;
        final DBUtils d = new DBUtils(getClass());

        try {
            PreparedStatement insStmt = conn.prepareStatement(SVCTBL_ADD_SQL);
            d.watch(insStmt);
            PreparedStatement nxtStmt = conn.prepareStatement(getNextSvcIdSql());
            d.watch(nxtStmt);
            PreparedStatement loadStmt = conn.prepareStatement(SVCTBL_LOAD_SQL);
            d.watch(loadStmt);

            // go ahead and load the table first if it can be loaded
            serviceNames = new ArrayList<String>();
            ResultSet rs = loadStmt.executeQuery();
            d.watch(rs);
            while (rs.next()) {
                Integer id = Integer.valueOf(rs.getInt(1));
                String name = rs.getString(2);
    
                m_serviceIdToName.put(id, name);
                m_serviceNameToId.put(name, id);
                serviceNames.add(name);
            }
    
            /*
             * now iterate over the configured protocols
             * and make sure that each is represented in the database.
             */
            for (String protocol : getCapsdConfig().getConfiguredProtocols()) {
                log().debug("syncServicesTable: checking protocol '" + protocol + "'.");
                if (!serviceNames.contains(protocol)) {
                    log().debug("syncServicesTable: protocol '" + protocol + "' is not in the database... adding.");
                    
                    // get the next identifier
                    rs = nxtStmt.executeQuery();
                    d.watch(rs);
                    rs.next();
                    int id = rs.getInt(1);
                    rs.close();
                    
                    log().debug("syncServicesTable: using id " + id + " for protocol '" + protocol + "'.");
    
                    insStmt.setInt(1, id);
                    insStmt.setString(2, protocol);
                    insStmt.executeUpdate();
    
                    m_serviceIdToName.put(id, protocol);
                    m_serviceNameToId.put(protocol, id);
    
                    serviceNames.add(protocol);
                    
                    log().info("syncServicesTable: added service entry to the database for protocol '" + protocol + "' with id of  " + id);
                }
            }
        } finally {
            d.cleanUp();
        }
        return serviceNames;
    }

