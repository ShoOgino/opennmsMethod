    protected Socket wrapSocket(Socket socket, String hostAddress, int hostPort) throws Exception {
    	if (! m_useSsl) {
    		if (log().isDebugEnabled()) {
    			log().debug("Parameter 'usessl' is unset or false, not using SSL");
    		}
    		return socket;
    	} else {
    		if (log().isDebugEnabled()) {
    			log().debug("Parameter 'usessl' is true, using SSL");
    		}
    	}

    	Socket wrappedSocket;

        // set up the certificate validation. USING THIS SCHEME WILL ACCEPT ALL
        // CERTIFICATES
        SSLSocketFactory sslSF = null;

        TrustManager[] tm = { new RelaxedX509TrustManager() };
        SSLContext sslContext = SSLContext.getInstance("SSL");
        sslContext.init(null, tm, new java.security.SecureRandom());
        sslSF = sslContext.getSocketFactory();
        wrappedSocket = sslSF.createSocket(socket, hostAddress, hostPort, true);
        SSLSocket sslSocket = (SSLSocket) wrappedSocket;
        // Set this socket to use anonymous Diffie-Hellman ciphers. This removes the authentication
        // benefits of SSL, but it's how NRPE rolls so we have to play along.
        sslSocket.setEnabledCipherSuites(ADH_CIPHER_SUITES);
        return wrappedSocket;
    }

