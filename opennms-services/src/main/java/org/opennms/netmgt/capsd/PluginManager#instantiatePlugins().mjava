    /**
     * Now load the plugins!
     */
    private void instantiatePlugins() throws ValidationException {
        List<ProtocolPlugin> plugins = getCapsdConfig().getProtocolPlugins();
        for (ProtocolPlugin plugin : plugins) {
            try {
                if (m_pluginsByClass.containsKey(plugin.getClassName())) {
                    Plugin oplugin = m_pluginsByClass.get(plugin.getClassName());
                    m_pluginsByProtocol.put(plugin.getProtocol(), oplugin);
                } else {
                    Class<?> cplugin = Class.forName(plugin.getClassName());
                    Object oplugin = cplugin.newInstance();
                    if (!(oplugin instanceof Plugin)) {
                        throw new ValidationException("CapsdConfigFactory: successfully to load plugin for protocol " + plugin.getProtocol() + ", class-name = " + plugin.getClassName() + ", however the class is not an instance of " + Plugin.class.getName());
                    }
                    
                    Plugin p = (Plugin) oplugin;
    
                    // map them
                    m_pluginsByClass.put(plugin.getClassName(), p);
                    m_pluginsByProtocol.put(plugin.getProtocol(), p);
                }
            } catch (Throwable t) {
                String message = "CapsdConfigFactory: failed to load plugin for protocol " + plugin.getProtocol() + ", class-name = " + plugin.getClassName() + ", exception = " + t; 
                log().error(message, t);
                throw new ValidationException(message, t);
            }
        }
    }

