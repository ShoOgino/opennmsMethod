    /**
     * This method verify if an ipaddress is existing in other node except in
     * the updating node.
     * 
     * @param dbc
     *            Database Connection
     * @param ifaddr
     *            Ip address being verified.
     * @param nodeId
     *            Node Id of the node being rescanned
     * 
     */
    private boolean isDuplicateInterface(Connection dbc, InetAddress ifaddr, int nodeId) throws SQLException {

        boolean duplicate = false;

        PreparedStatement stmt = null;
        final DBUtils d = new DBUtils(getClass());
        try {
            stmt = dbc.prepareStatement(SQL_DB_RETRIEVE_DUPLICATE_NODEIDS);
            d.watch(stmt);
            stmt.setString(1, ifaddr.getHostAddress());
            stmt.setInt(2, nodeId);

            ResultSet rs = stmt.executeQuery();
            d.watch(rs);
            while (rs.next()) {
                duplicate = true;
            }
            return duplicate;
        } catch (SQLException sqlE) {
            log().error("isDuplicateInterface: SQLException while updating interface: " + ifaddr.getHostAddress() + " on nodeid: " + nodeId);
            throw sqlE;
        } finally {
            d.cleanUp();
        }

    }

