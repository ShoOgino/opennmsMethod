    /**
     * SnmpInterface table updates for non-IP interface.
     */
    private void updateSnmpInfoForNonIpInterface(Connection dbc,
            DbNodeEntry node, int ifIndex, IfSnmpCollector snmpc,
            InetAddress ifAddr) throws SQLException {
        LOG.debug("updateNonIpInterface: updating non-IP SNMP interface with nodeId={} and ifIndex={}", node.getNodeId(), ifIndex);

        // Create and load SNMP Interface entry from the database
        boolean newSnmpIfTableEntry = false;
        DbSnmpInterfaceEntry dbSnmpIfEntry = DbSnmpInterfaceEntry.get(dbc,node.getNodeId(), ifIndex);
        if (dbSnmpIfEntry == null) {
            /*
             * SNMP Interface not found with this nodeId & ifIndex, create new
             * interface
             */
            LOG.debug("updateNonIpInterface: non-IP SNMP interface with ifIndex {} not in database, creating new snmpInterface object.", ifIndex);
            dbSnmpIfEntry = DbSnmpInterfaceEntry.create(node.getNodeId(), ifIndex);
            newSnmpIfTableEntry = true;
        }

        IfTableEntry ifte = findEntryByIfIndex(ifIndex, snmpc);
        IfXTableEntry ifxte = findXEntryByIfIndex(ifIndex, snmpc);

        /*
         * Make sure we have a valid IfTableEntry object and update
         * any values which have changed
         */
        if (ifte != null) {
            // index
            // dbSnmpIfEntry.updateIfIndex(ifIndex);

            /*
             * netmask
             *
             * NOTE: non-IP interfaces don't have netmasks so skip
             */

            updateType(ifte, dbSnmpIfEntry);
            updateDescription(ifIndex, ifte, dbSnmpIfEntry);
            updatePhysicalAddress(ifIndex, ifte, dbSnmpIfEntry);
            updateSpeed(ifIndex, ifte, ifxte, dbSnmpIfEntry);
            updateAdminStatus(ifte, dbSnmpIfEntry);
            updateOperationalStatus(ifte, dbSnmpIfEntry);
            updateName(ifIndex, snmpc, dbSnmpIfEntry);
            updateAlias(ifIndex, snmpc, dbSnmpIfEntry);
        } // end if valid ifTable entry

        /*
         * If this is a new interface or if any of the following
         * key fields have changed set the m_snmpIfTableChangedFlag
         * variable to TRUE. This will potentially trigger an event
         * which will cause the poller to reinitialize the primary
         * SNMP interface for the node.
         */
        // dbSnmpIfEntry.hasIfIndexChanged() ||
        if (!m_snmpIfTableChangedFlag
                && newSnmpIfTableEntry
                || dbSnmpIfEntry.hasTypeChanged()
                || dbSnmpIfEntry.hasNameChanged()
                || dbSnmpIfEntry.hasDescriptionChanged()
                || dbSnmpIfEntry.hasPhysicalAddressChanged()
                || dbSnmpIfEntry.hasAliasChanged()) {
            m_snmpIfTableChangedFlag = true;
        }

        // Update the database
        dbSnmpIfEntry.store(dbc);
    }

