    /**
     * Responsible for setting the value of the 'isSnmpPrimary' field of the
     * ipInterface table to 'P' (Primary) for the primary SNMP interface
     * address.
     * 
     * @param dbc
     *            Database connection.
     * @param node
     *            DbNodeEntry object representing the suspect interface's
     *            parent node table entry
     * @param newPrimarySnmpIf
     *            New primary SNMP interface.
     * @param oldPrimarySnmpIf
     *            Old primary SNMP interface.
     * @throws SQLException
     *             if an error occurs updating the ipInterface table
     */
    static void setPrimarySnmpInterface(Connection dbc, DbNodeEntry node,
            InetAddress newPrimarySnmpIf, InetAddress oldPrimarySnmpIf)
            throws SQLException {
        if (newPrimarySnmpIf == null) {
            if (log().isDebugEnabled())
                log().debug("setPrimarySnmpInterface: newSnmpPrimary is null, nothing to set, returning.");
            return;
        } else {
            if (log().isDebugEnabled())
                log().debug("setPrimarySnmpInterface: newSnmpPrimary = "
                        + newPrimarySnmpIf);
        }

        // Verify that old and new primary interfaces are different
        //
        if (oldPrimarySnmpIf != null
                && oldPrimarySnmpIf.equals(newPrimarySnmpIf)) {
            // Old and new primary interfaces are the same
            if (log().isDebugEnabled())
                log().debug("setPrimarySnmpInterface: Old and new primary interfaces are the same");
        }

        // Set primary SNMP interface 'isSnmpPrimary' field to 'P' for primary
        //
        if (newPrimarySnmpIf != null) {
            if (log().isDebugEnabled())
                log().debug("setPrimarySnmpInterface:  Updating primary SNMP interface "
                        + newPrimarySnmpIf.getHostAddress());

            // Update the appropriate entry in the 'ipInterface' table
            //

            // Prepare SQL statement
            PreparedStatement stmt = dbc.prepareStatement("UPDATE ipInterface SET isSnmpPrimary='P' WHERE nodeId=? AND ipaddr=? AND isManaged!='D'");
            stmt.setInt(1, node.getNodeId());
            stmt.setString(2, newPrimarySnmpIf.getHostAddress());

            // Execute statement
            try {
                stmt.executeUpdate();
                if (log().isDebugEnabled())
                    log().debug("setPrimarySnmpInterface: completed update of new primary interface to PRIMARY.");
            } catch (SQLException sqlE) {
                throw sqlE;
            } finally {
                try {
                    stmt.close();
                } catch (Exception e) {
                    // Ignore
                }
            }
        }
    }

