    /**
     * This method is responsble for inserting a new node into the node table.
     * 
     * @param dbc
     *            Database connection.
     * @param ifaddr
     *            Suspect interface
     * @param collector
     *            Interface collector containing SMB and SNMP info collected
     *            from the remote device.
     * @return DbNodeEntry object associated with the newly inserted node
     *         table entry.
     * @throws SQLException
     *             if an error occurs inserting the new node.
     */
    private DbNodeEntry createNode(Connection dbc, InetAddress ifaddr,
            IfCollector collector) throws SQLException {
        Category log = ThreadCategory.getInstance(getClass());

        // Determine primary interface for the node. Primary interface
        // is needed for determining the node label.
        //
        InetAddress primaryIf = determinePrimaryInterface(collector);

        // Get Snmp and Smb collector objects
        //
        IfSnmpCollector snmpc = collector.getSnmpCollector();
        IfSmbCollector smbc = collector.getSmbCollector();

        // First create a node entry for the new interface
        //
        DbNodeEntry entryNode = DbNodeEntry.create();

        // fill in the node information
        //
        Date now = new Date();
        entryNode.setCreationTime(now);
        entryNode.setLastPoll(now);
        entryNode.setNodeType(DbNodeEntry.NODE_TYPE_ACTIVE);
        entryNode.setLabel(primaryIf.getHostName());
        if (entryNode.getLabel().equals(primaryIf.getHostAddress()))
            entryNode.setLabelSource(DbNodeEntry.LABEL_SOURCE_ADDRESS);
        else
            entryNode.setLabelSource(DbNodeEntry.LABEL_SOURCE_HOSTNAME);

        if (snmpc != null) {
            if (snmpc.hasSystemGroup()) {
                SystemGroup sysgrp = snmpc.getSystemGroup();

                // sysObjectId
                String sysObjectId = sysgrp.getSysObjectID();
                if (sysObjectId != null)
                    entryNode.setSystemOID(sysObjectId);
                else
                    log.warn("SuspectEventProcessor: "
                            + ifaddr.getHostAddress()
                            + " has NO sysObjectId!!!!");

                // sysName
                String str = sysgrp.getSysName();
                if (log.isDebugEnabled())
                    log.debug("SuspectEventProcessor: "
                            + ifaddr.getHostAddress() + " has sysName: "
                            + str);

                if (str != null && str.length() > 0) {
                    entryNode.setSystemName(str);

                    // Hostname takes precedence over sysName so only replace
                    // label if
                    // hostname was not available.
                    if (entryNode.getLabelSource() == DbNodeEntry.LABEL_SOURCE_ADDRESS) {
                        entryNode.setLabel(str);
                        entryNode.setLabelSource(DbNodeEntry.LABEL_SOURCE_SYSNAME);
                    }
                }

                // sysDescription
                str = sysgrp.getSysDescr();
                if (log.isDebugEnabled())
                    log.debug("SuspectEventProcessor: "
                            + ifaddr.getHostAddress()
                            + " has sysDescription: " + str);
                if (str != null && str.length() > 0)
                    entryNode.setSystemDescription(str);

                // sysLocation
                str = sysgrp.getSysLocation();
                if (log.isDebugEnabled())
                    log.debug("SuspectEventProcessor: "
                            + ifaddr.getHostAddress() + " has sysLocation: "
                            + str);
                if (str != null && str.length() > 0)
                    entryNode.setSystemLocation(str);

                // sysContact
                str = sysgrp.getSysContact();
                if (log.isDebugEnabled())
                    log.debug("SuspectEventProcessor: "
                            + ifaddr.getHostAddress() + " has sysContact: "
                            + str);
                if (str != null && str.length() > 0)
                    entryNode.setSystemContact(str);
            }
        }

        // check for SMB information
        //
        if (smbc != null) {
            // Netbios Name and Domain
            // Note: only override if the label source is not HOSTNAME
            if (smbc.getNbtName() != null
                    && entryNode.getLabelSource() != DbNodeEntry.LABEL_SOURCE_HOSTNAME) {
                entryNode.setLabel(smbc.getNbtName());
                entryNode.setLabelSource(DbNodeEntry.LABEL_SOURCE_NETBIOS);
                entryNode.setNetBIOSName(entryNode.getLabel());
                if (smbc.getDomainName() != null) {
                    entryNode.setDomainName(smbc.getDomainName());
                }
            }

            // Operating System
            if (smbc.getOS() != null) {
                entryNode.setOS(smbc.getOS());
            }
        }

        entryNode.store(dbc);
        return entryNode;
    }

