    /**
     * This method is responsible for generating a nodeLabelChanged event and
     * adding it to the event list.
     * 
     * @param updatedEntry
     *            Updated node entry object
     * @param originalEntry
     *            Original node entry object
     */
    private void createNodeLabelChangedEvent(DbNodeEntry updatedEntry, DbNodeEntry originalEntry) {
        if (log().isDebugEnabled()) {
            log().debug("createNodeLabelChangedEvent: nodeId: " + updatedEntry.getNodeId() + " oldLabel: '" + originalEntry.getLabel() + "' oldSource: '" + originalEntry.getLabelSource() + "' newLabel: '" + updatedEntry.getLabel() + "' newLabelSource: '" + updatedEntry.getLabelSource() + "'");
        }

        Event newEvent = new Event();

        newEvent.setUei(EventConstants.NODE_LABEL_CHANGED_EVENT_UEI);

        newEvent.setSource("OpenNMS.Capsd");

        newEvent.setNodeid(updatedEntry.getNodeId());

        newEvent.setHost(Capsd.getLocalHostAddress());

        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));

        // Add appropriate parms
        Parms eventParms = new Parms();
        Parm eventParm = null;
        Value parmValue = null;

        if (originalEntry.getLabel() != null) {
            // Add old node label
            eventParm = new Parm();
            eventParm.setParmName(EventConstants.PARM_OLD_NODE_LABEL);
            parmValue = new Value();
            parmValue.setContent(originalEntry.getLabel());
            eventParm.setValue(parmValue);
            eventParms.addParm(eventParm);

            // Add old node label source
            eventParm = new Parm();
            eventParm.setParmName(EventConstants.PARM_OLD_NODE_LABEL_SOURCE);
            parmValue = new Value();
            parmValue.setContent(String.valueOf(originalEntry.getLabelSource()));
            eventParm.setValue(parmValue);
            eventParms.addParm(eventParm);
        }

        if (updatedEntry.getLabel() != null) {
            // Add new node label
            eventParm = new Parm();
            eventParm.setParmName(EventConstants.PARM_NEW_NODE_LABEL);
            parmValue = new Value();
            parmValue.setContent(updatedEntry.getLabel());
            eventParm.setValue(parmValue);
            eventParms.addParm(eventParm);

            // Add new node label source
            eventParm = new Parm();
            eventParm.setParmName(EventConstants.PARM_NEW_NODE_LABEL_SOURCE);
            parmValue = new Value();
            parmValue.setContent(String.valueOf(updatedEntry.getLabelSource()));
            eventParm.setValue(parmValue);
            eventParms.addParm(eventParm);
        }

        // Add Parms to the event
        newEvent.setParms(eventParms);

        // Add event to the list of events to be sent out.
        m_eventList.add(newEvent);

        if (log().isDebugEnabled()) {
            log().debug("createNodeLabelChangedEvent: successfully created nodeLabelChanged event for nodeid: " + updatedEntry.getNodeId());
        }
    }

