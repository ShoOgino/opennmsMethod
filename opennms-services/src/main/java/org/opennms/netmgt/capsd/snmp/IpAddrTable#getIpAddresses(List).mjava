    /**
     * Returns all Internet addresses in the ipAddrEntry list. If the address
     * cannot be resolved then a null reference is returned.
     * 
     * @param ipAddrEntries
     *            List of IpAddrTableEntry objects to search
     * 
     * @return list of InetAddress objects representing each of the interfaces
     *         IP addresses.
     */
    public static List getIpAddresses(List ipAddrEntries) {
        if (ipAddrEntries == null) {
            return null;
        }

        List addresses = new ArrayList();

        Iterator i = ipAddrEntries.iterator();
        while (i.hasNext()) {
            IpAddrTableEntry entry = (IpAddrTableEntry) i.next();
            Integer ndx = entry.getIpAdEntIfIndex();
            if (ndx != null) {

                InetAddress ifAddr = entry.getIpAdEntAddr();
                if (ifAddr != null) {
                    addresses.add(ifAddr);
                }

            }
        }
        return addresses;
    }

