    /**
     * This method is responsible for generating a primarySnmpInterfaceChanged
     * event and sending it to eventd..
     * 
     * @param nodeId
     *            Nodeid of node being rescanned.
     * @param newPrimaryIf
     *            new primary SNMP interface address
     * @param oldPrimaryIf
     *            old primary SNMP interface address
     */
    private void createAndSendPrimarySnmpInterfaceChangedEvent(int nodeId,
            InetAddress newPrimaryIf, InetAddress oldPrimaryIf) {
        
        
        String oldPrimaryAddr = getHostAddress(oldPrimaryIf);

        String newPrimaryAddr = getHostAddress(newPrimaryIf);

        if (log().isDebugEnabled())
            log().debug("createAndSendPrimarySnmpInterfaceChangedEvent: nodeId: "
                    + nodeId
                    + " oldPrimarySnmpIf: '"
                    + oldPrimaryAddr
                    + "' newPrimarySnmpIf: '" + newPrimaryAddr + "'");

        
        EventBuilder bldr = new EventBuilder(EventConstants.PRIMARY_SNMP_INTERFACE_CHANGED_EVENT_UEI, EVENT_SOURCE);
        bldr.setNodeid(nodeId);
        bldr.setInterface(newPrimaryAddr);
        bldr.setHost(Capsd.getLocalHostAddress());
        bldr.setService("SNMP");
        
        if (oldPrimaryAddr != null) {
            bldr.addParam(EventConstants.PARM_OLD_PRIMARY_SNMP_ADDRESS, oldPrimaryAddr);
        }
        
        if (newPrimaryAddr != null) {
            bldr.addParam(EventConstants.PARM_NEW_PRIMARY_SNMP_ADDRESS, newPrimaryAddr);
        }

        sendEvent(bldr.getEvent());

    }

