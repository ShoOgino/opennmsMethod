    /**
     * This method add a node with the specified node label to the database. If
     * also adds in interface with the given ipaddress to the node, if the
     * ipaddr is not null
     * 
     * @param conn
     *            The JDBC Database connection.
     * @param nodeLabel
     *            the node label to identify the node to create.
     * @param ipaddr
     *            the ipaddress to be added into the ipinterface table.
     * @throws SQLException
     *             if a database error occurs
     * @throws FailedOperationException
     *             if the ipaddr is not resolvable
     */
    private List<Event> createNodeWithInterface(Connection conn, String nodeLabel, String ipaddr) throws SQLException, FailedOperationException {
        if (nodeLabel == null)
            return Collections.emptyList();

        if (log().isDebugEnabled())
            log().debug("addNode:  Add a node " + nodeLabel + " to the database");

        List<Event> eventsToSend = new LinkedList<Event>();
        DbNodeEntry node = DbNodeEntry.create();
        Date now = new Date();
        node.setCreationTime(now);
        node.setNodeType(DbNodeEntry.NODE_TYPE_ACTIVE);
        node.setLabel(nodeLabel);
        node.setLabelSource(DbNodeEntry.LABEL_SOURCE_USER);
        node.store(conn);

        Event newEvent = EventUtils.createNodeAddedEvent(node);
        eventsToSend.add(newEvent);

        if (ipaddr != null)
            if (log().isDebugEnabled())
                log().debug("addNode:  Add an IP Address " + ipaddr + " to the database");

            // add the ipaddess to the database
            InetAddress ifaddress;
			try {
				ifaddress = InetAddress.getByName(ipaddr);
			} catch (final UnknownHostException e) {
				throw new FailedOperationException("unable to resolve host " + ipaddr + ": " + e.getMessage(), e);
			}
            DbIpInterfaceEntry ipInterface = DbIpInterfaceEntry.create(node.getNodeId(), ifaddress);
            ipInterface.setHostname(ifaddress.getHostName());
            ipInterface.setManagedState(DbIpInterfaceEntry.STATE_MANAGED);
            ipInterface.setPrimaryState(DbIpInterfaceEntry.SNMP_NOT_ELIGIBLE);
            ipInterface.store(conn);

            Event gainIfEvent = EventUtils.createNodeGainedInterfaceEvent(node, ifaddress);
            eventsToSend.add(gainIfEvent);
        return eventsToSend;
    }

