    /**
     * This method is responsible for generating an ipHostNameChanged event and
     * adding it to the event list.
     * 
     * @param updatedEntry
     *            updated IP interface database entry
     * @param originalEntry
     *            original IP interface database entry
     */
    private void createIpHostNameChangedEvent(DbIpInterfaceEntry updatedEntry, DbIpInterfaceEntry originalEntry) {
        Category log = ThreadCategory.getInstance(getClass());

        if (log.isDebugEnabled()) {
            log.debug("createIpHostNameChangedEvent: nodeId: " + updatedEntry.getNodeId() + " oldHostName: " + originalEntry.getHostname() + " newHostName: " + updatedEntry.getHostname());
        }

        Event newEvent = new Event();

        newEvent.setUei(EventConstants.INTERFACE_IP_HOSTNAME_CHANGED_EVENT_UEI);

        newEvent.setSource("OpenNMS.Capsd");

        newEvent.setNodeid(updatedEntry.getNodeId());

        newEvent.setHost(Capsd.getLocalHostAddress());

        newEvent.setInterface(updatedEntry.getIfAddress().getHostAddress());

        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));

        // Add appropriate parms
        Parms eventParms = new Parms();
        Parm eventParm = null;
        Value parmValue = null;

        // Add old IP Hostname
        if (originalEntry.getHostname() != null) {
            eventParm = new Parm();
            eventParm.setParmName(EventConstants.PARM_OLD_IP_HOSTNAME);
            parmValue = new Value();
            parmValue.setContent(originalEntry.getHostname());
            eventParm.setValue(parmValue);
            eventParms.addParm(eventParm);
        }

        // Add new IP Hostname
        if (updatedEntry.getHostname() != null) {
            eventParm = new Parm();
            eventParm.setParmName(EventConstants.PARM_IP_HOSTNAME);
            parmValue = new Value();
            parmValue.setContent(updatedEntry.getHostname());
            eventParm.setValue(parmValue);
            eventParms.addParm(eventParm);
        }

        // Add Parms to the event
        newEvent.setParms(eventParms);

        // Add event to the list of events to be sent out.
        m_eventList.add(newEvent);

        if (log.isDebugEnabled()) {
            log.debug("createIpHostNameChangedEvent: successfully created ipHostNameChanged event for nodeid: " + updatedEntry.getNodeId());
        }
    }

