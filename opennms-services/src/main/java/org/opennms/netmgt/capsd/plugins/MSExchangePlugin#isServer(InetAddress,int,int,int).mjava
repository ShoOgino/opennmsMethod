    private boolean isServer(InetAddress host, int port, int retries, int timeout) {
        ThreadCategory log = ThreadCategory.getInstance(getClass());

        boolean isAServer = false;
        for (int attempts = 0; attempts <= retries && !isAServer; attempts++) {
            Socket socket = null;
            try {
                socket = new Socket();
                socket.connect(new InetSocketAddress(host, port), timeout);
                socket.setSoTimeout(timeout);
                log.debug("MSExchangePlugin: connected to host: " + host + " on port: " + port);

                // Allocate a line reader
                //
                BufferedReader lineRdr = new BufferedReader(new InputStreamReader(socket.getInputStream()));

                // Read the banner line and see if it contains the
                // substring "Microsoft Exchange"
                //
                String banner = lineRdr.readLine();
                if (banner != null) {
                    int rc = banner.indexOf(BANNER_STRING);
                    if (rc > -1)
                        isAServer = true;
                }
            } catch (ConnectException e) {
                // Connection refused!! Continue to retry.
                //
                log.debug("isServer: Connection refused to " + InetAddressUtils.str(host) + ":" + port);
            } catch (NoRouteToHostException e) {
                // No Route to host!!!
                //
                e.fillInStackTrace();
                log.info("isServer: Failed to connect to host " + InetAddressUtils.str(host) + ", no route to host", e);
                throw new UndeclaredThrowableException(e);
            } catch (InterruptedIOException e) {
                // ignore this
                log.debug("MSExchangePlugin: did not connect to host within timeout: " + timeout + " attempt: " + attempts);
            } catch (IOException e) {
                log.info("isServer: Unexpected I/O exception occured with host " + InetAddressUtils.str(host) + " on port " + port, e);
            } catch (Throwable t) {
                log.error("isServer: Undeclared throwable caught communicating with host " + InetAddressUtils.str(host) + " on port " + port, t);
            } finally {
                try {
                    if (socket != null) {
                        socket.close();
                        socket = null;
                    }
                } catch (IOException e) {
                }
            }
        }

        return isAServer;
    }

