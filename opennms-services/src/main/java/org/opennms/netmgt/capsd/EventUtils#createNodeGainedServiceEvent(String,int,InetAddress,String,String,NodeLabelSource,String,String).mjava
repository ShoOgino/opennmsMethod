	/**
	 * <p>createNodeGainedServiceEvent</p>
	 *
	 * @param source a {@link java.lang.String} object.
	 * @param nodeId a int.
	 * @param ifaddr a {@link java.net.InetAddress} object.
	 * @param service a {@link java.lang.String} object.
	 * @param nodeLabel a {@link java.lang.String} object.
	 * @param labelSource a {@link java.lang.String} object.
	 * @param sysName a {@link java.lang.String} object.
	 * @param sysDescr a {@link java.lang.String} object.
	 * @return a {@link org.opennms.netmgt.xml.event.Event} object.
	 */
	public static Event createNodeGainedServiceEvent(String source, int nodeId, InetAddress ifaddr, String service, String nodeLabel, NodeLabelSource labelSource, String sysName, String sysDescr) {

	    EventBuilder bldr = createServiceEventBuilder(EventConstants.NODE_GAINED_SERVICE_EVENT_UEI, source, nodeId, InetAddressUtils.str(ifaddr), service, -1);

        bldr.setHost(Capsd.getLocalHostAddress());
        
        bldr.addParam(EventConstants.PARM_IP_HOSTNAME, ifaddr.getHostName());
        bldr.addParam(EventConstants.PARM_NODE_LABEL, nodeLabel);
        if (labelSource != null) {
            bldr.addParam(EventConstants.PARM_NODE_LABEL_SOURCE, labelSource.toString());
        }
        
        // Add sysName if available
		if (sysName != null) {
		    bldr.addParam(EventConstants.PARM_NODE_SYSNAME, sysName);
        }

        // Add sysDescr if available
		if (sysDescr != null) {
		    bldr.addParam(EventConstants.PARM_NODE_SYSDESCRIPTION, sysDescr);
        }

        return bldr.getEvent();
	}

