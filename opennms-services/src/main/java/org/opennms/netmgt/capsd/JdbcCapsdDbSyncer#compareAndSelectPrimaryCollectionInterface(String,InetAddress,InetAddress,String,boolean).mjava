    /**
	 * Utility method which compares two InetAddress objects based on the
	 * provided method (MIN/MAX) and returns the InetAddress which is to be
	 * considered the primary interface.
	 * 
	 * NOTE: In order for an interface to be considered primary, if strict is
	 * true, it must be included by a Collectd package which supports the
	 * specified service. This method will return null if the 'oldPrimary'
	 * address is null and the 'currentIf' address does not pass the Collectd
	 * package check, if strict is true..
     * @param svcName
	 *            Service name
     * @param currentIf
	 *            Interface with which to compare the 'oldPrimary' address.
     * @param oldPrimary
	 *            Primary interface to be compared against the 'currentIf'
	 *            address.
     * @param method
	 *            Comparison method to be used (either "min" or "max")
     * @param strict
	 *            require interface to be part of a Collectd package
	 * 
	 * @return InetAddress object of the primary interface based on the provided
	 *         method or null if neither address is eligible to be primary.
	 */
	private InetAddress compareAndSelectPrimaryCollectionInterface(String svcName, InetAddress currentIf, InetAddress oldPrimary, String method, boolean strict) {
		InetAddress newPrimary = null;

		if (oldPrimary == null && strict) {
			if (m_collectdConfig.isServiceCollectionEnabled(InetAddressUtils.str(currentIf), svcName)) {
				return currentIf;
            } else {
				return oldPrimary;
            }
		}
	
		if (oldPrimary == null) {
			return currentIf;
        }
	
		int comparison = new ByteArrayComparator().compare(currentIf.getAddress(), oldPrimary.getAddress());
		
		if (method.equals(m_collectdConfig.SELECT_METHOD_MIN)) {
			// Smallest address wins
			if (comparison < 0) {
                /*
				 * Replace the primary interface with the current
				 * interface only if the current interface is managed!
                 */
				if (strict) {
					if (m_collectdConfig.isServiceCollectionEnabled(InetAddressUtils.str(currentIf), svcName)) {
						newPrimary = currentIf;
                    }
				} else {
					newPrimary = currentIf;
				}
			}
		} else {
			// Largest address wins
			if (comparison > 0) {
                /*
				 * Replace the primary interface with the current
				 * interface only if the current interface is managed!
                 */
				if (strict) {
					if (m_collectdConfig.isServiceCollectionEnabled(InetAddressUtils.str(currentIf),
							svcName)) {
						newPrimary = currentIf;
                    }
				} else {
					newPrimary = currentIf;
				}
			}
		}
	
		if (newPrimary != null) {
			return newPrimary;
        } else {
			return oldPrimary;
        }
	}

