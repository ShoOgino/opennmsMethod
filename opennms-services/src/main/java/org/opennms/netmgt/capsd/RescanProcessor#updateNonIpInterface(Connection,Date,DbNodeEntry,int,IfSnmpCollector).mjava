    /**
     * This method is responsible for updating the ipInterface table entry for a
     * specific interface.
     * 
     * @param dbc
     *            Database Connection
     * @param now
     *            Date/time to be associated with the update.
     * @param node
     *            Node entry for the node being rescanned
     * @param ifIndex
     *            Interface index of non-IP interface to update
     * @param snmpc
     *            SNMP collector or null if SNMP not supported.
     * 
     * @throws SQLException
     *             if there is a problem updating the ipInterface table.
     */
    private void updateNonIpInterface(Connection dbc, Date now,
            DbNodeEntry node, int ifIndex, IfSnmpCollector snmpc)
    throws SQLException {
        Category log = ThreadCategory.getInstance(getClass());

        if (log.isDebugEnabled()) {
            log.debug("updateNonIpInterface: node= " + node.getNodeId()
                      + " ifIndex= " + ifIndex);
        }

        // Sanity Check
        if (snmpc == null || snmpc.failed()) {
            return;
        }

        // Construct InetAddress object for "0.0.0.0" address
        InetAddress ifAddr = null;
        try {
            ifAddr = InetAddress.getByName("0.0.0.0");
        } catch (UnknownHostException e) {
            log.error("Failed to update non-IP interfaces, unable to construct "
                      + "'0.0.0.0' InetAddress", e);
            return;
        }
        
        updateSnmpInfoForNonIpInterface(dbc, node, ifIndex, snmpc, ifAddr);

        updateIpInfoForNonIpInterface(dbc, now, node, ifIndex, snmpc, ifAddr);
    }

