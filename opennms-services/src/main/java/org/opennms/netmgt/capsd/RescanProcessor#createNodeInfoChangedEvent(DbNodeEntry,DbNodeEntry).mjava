    /**
     * This method is responsible for generating a nodeInfoChanged event and
     * adding it to the event list.
     * 
     * @param updatedEntry
     *            Updated node entry object
     * @param originalEntry
     *            Original node entry object
     */
    private static Event createNodeInfoChangedEvent(DbNodeEntry updatedEntry, DbNodeEntry originalEntry) {
        LOG.debug("createNodeInfoChangedEvent: nodeId: {}", updatedEntry.getNodeId());

        EventBuilder bldr = nodeEventBuilder(EventConstants.NODE_INFO_CHANGED_EVENT_UEI, updatedEntry.getNodeId());

        // SysOID
        if (updatedEntry.getSystemOID() != null) {
            bldr.addParam(EventConstants.PARM_NODE_SYSOID, updatedEntry.getSystemOID());
        }

        // SysName
        if (updatedEntry.getSystemName() != null) {
            bldr.addParam(EventConstants.PARM_NODE_SYSNAME, updatedEntry.getSystemName());
        }

        // SysDescription
        if (updatedEntry.getSystemDescription() != null) {
            bldr.addParam(EventConstants.PARM_NODE_SYSDESCRIPTION, updatedEntry.getSystemDescription());
        }

        // SysLocation
        if (updatedEntry.getSystemLocation() != null) {
            bldr.addParam(EventConstants.PARM_NODE_SYSLOCATION, updatedEntry.getSystemLocation());
        }

        // SysContact
        if (updatedEntry.getSystemContact() != null) {
            bldr.addParam(EventConstants.PARM_NODE_SYSCONTACT, updatedEntry.getSystemContact());
        }

        // NetBIOS name
        if (updatedEntry.getNetBIOSName() != null) {
            bldr.addParam(EventConstants.PARM_NODE_NETBIOS_NAME, updatedEntry.getNetBIOSName());
        }

        // Domain name
        if (updatedEntry.getDomainName() != null) {
            bldr.addParam(EventConstants.PARM_NODE_DOMAIN_NAME, updatedEntry.getDomainName());
        }

        // Operating System
        if (updatedEntry.getOS() != null) {
            bldr.addParam(EventConstants.PARM_NODE_OPERATING_SYSTEM, updatedEntry.getOS());
        }

        LOG.debug("createNodeInfoChangedEvent: successfully created nodeInfoChanged event for nodeid: {}", updatedEntry.getNodeId());

        // Add event to the list of events to be sent out.
        return bldr.getEvent();
    }

