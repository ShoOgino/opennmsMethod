    /**
     * Helper method to add a node from the new suspect event Event to the suspect scan schedule.
     * 
     * @param event
     */
    
    @EventHandler(uei=EventConstants.NEW_SUSPECT_INTERFACE_EVENT_UEI)
    public void handleNewSuspect(Event event) throws InsufficientInformationException {
        // ensure the event has an interface
        EventUtils.checkInterface(event);
        
        // discard this newSuspect if one is already enqueued for the same IP address
        if (SuspectEventProcessor.isScanQueuedForAddress(event.getInterface())) {
        	log().info("Ignoring newSuspect event for interface " + event.getInterface() + " because a newSuspect scan for that interface already exists in the queue");
        	return;
        }
        
        // new suspect event
        try {
            log().debug("onMessage: Adding interface to suspectInterface Q: " + event.getInterface());
            m_suspectQ.add(m_suspectEventProcessorFactory.createSuspectEventProcessor(event.getInterface()));
        } catch (Exception ex) {
            log().error("onMessage: Failed to add interface to suspect queue", ex);
        }
    }

