    /**
     * Builds a list of NodeInfo objects representing each of the nodes in the
     * database capable of being scheduled for rescan.
     * 
     * @throws SQLException
     *             if there is a problem accessing the database.
     */
    private void loadKnownNodes() throws SQLException {
        Connection db = null;

        PreparedStatement nodeStmt = null;
        PreparedStatement ifStmt = null;
        ResultSet rs = null;
        ResultSet rset = null;
        
        final DBUtils d = new DBUtils(getClass());
        try {
            db = DataSourceFactory.getInstance().getConnection();
            d.watch(db);
            // Prepare SQL statements in advance
            //
            nodeStmt = db.prepareStatement(SQL_RETRIEVE_NODES);
            d.watch(nodeStmt);
            ifStmt = db.prepareStatement(SQL_GET_LAST_POLL_TIME);
            d.watch(ifStmt);

            // Retrieve non-deleted nodes from the node table in the database
            //
            rs = nodeStmt.executeQuery();
            d.watch(rs);

            while (rs.next()) {
                // Retrieve an interface from the ipInterface table in
                // the database for its last polled/scanned time

                int nodeId = rs.getInt(1);
                ifStmt.setInt(1, nodeId); // set nodeid
                LOG.debug("loadKnownNodes: retrieved nodeid {}, now getting last poll time.", nodeId);

                rset = ifStmt.executeQuery();
                d.watch(rs);
                if (rset.next()) {
                    Timestamp lastPolled = rset.getTimestamp(1);
                    if (lastPolled != null && rset.wasNull() == false) {
                        LOG.debug("loadKnownNodes: adding node {} with last poll time {}", nodeId, lastPolled);
                        NodeInfo nodeInfo = new NodeInfo(nodeId, lastPolled, m_interval);
                        m_knownNodes.add(nodeInfo);
                    }
                } else {
                    LOG.debug("Node w/ nodeid {} has no managed interfaces from which to retrieve a last poll time...it will not be scheduled.", nodeId);
                }
            }
        } finally {
            d.cleanUp();
        }

    }

