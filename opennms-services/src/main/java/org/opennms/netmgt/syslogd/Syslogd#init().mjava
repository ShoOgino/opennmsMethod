    /**
     * <P>
     * Constructs a new Trapd object that receives and forwards trap messages
     * via JSDT. The session is initialized with the default client name of <EM>
     * OpenNMS.trapd</EM>. The trap session is started on the default port, as
     * defined by the SNMP libarary.
     * </P>
     * 
     * @see org.opennms.protocols.snmp.SyslogMessageSession
     */
    
    public synchronized void init() {
        ThreadCategory.setPrefix(LOG4J_CATEGORY);

        Category log = log();

        try {
            log.debug("start: Initializing the syslogd config factory");
            SyslogdConfigFactory.init();
        } catch (MarshalException e) {
            log.error("Failed to load configuration", e);
            throw new UndeclaredThrowableException(e);
        } catch (ValidationException e) {
            log.error("Failed to load configuration", e);
            throw new UndeclaredThrowableException(e);
        } catch (IOException e) {
            log.error("Failed to load configuration", e);
            throw new UndeclaredThrowableException(e);
        }

        try {
            // clear out the known nodes
            SyslogdIPMgr.dataSourceSync();
        } catch (SQLException e) {
            log.error("Failed to load known IP address list", e);
            throw new UndeclaredThrowableException(e);
        }

          
        SyslogHandler.setSyslogConfig(SyslogdConfigFactory.getInstance());
        log.debug("Starting SyslogProcessor");
          
        m_udpEventReceiver = new SyslogHandler();

    }

