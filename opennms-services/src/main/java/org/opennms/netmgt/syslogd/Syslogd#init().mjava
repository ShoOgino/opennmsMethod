    /**
     * <P>
     * Constructs a new Trapd object that receives and forwards trap messages
     * via JSDT. The session is initialized with the default client name of <EM>
     * OpenNMS.trapd</EM>. The trap session is started on the default port, as
     * defined by the SNMP libarary.
     * </P>
     * 
     * @see org.opennms.protocols.snmp.SyslogMessageSession
     */
    // public Syslogd() {
    // m_name = LOG4J_CATEGORY;
    // }
    

    
    public synchronized void init() {
        ThreadCategory.setPrefix(LOG4J_CATEGORY);

        Category log = ThreadCategory.getInstance();

        try {
            log.debug("start: Initializing the syslogd config factory");
            SyslogdConfigFactory.init();
        } catch (MarshalException e) {
            log.error("Failed to load configuration", e);
            throw new UndeclaredThrowableException(e);
        } catch (ValidationException e) {
            log.error("Failed to load configuration", e);
            throw new UndeclaredThrowableException(e);
        } catch (IOException e) {
            log.error("Failed to load configuration", e);
            throw new UndeclaredThrowableException(e);
        }

        try {
            // clear out the known nodes
            SyslogdIPMgr.dataSourceSync();
        } catch (SQLException e) {
            log.error("Failed to load known IP address list", e);
            throw new UndeclaredThrowableException(e);
        }

          
        SyslogHandler.setSyslogConfig(SyslogdConfigFactory.getInstance());
          log.debug("Starting SyslogProcessor");
          //log.debug("On port : " + m_syslogdConfig.getSyslogPort());
          
          //m_udpEventReceiver = new SyslogHandler(m_syslogdConfig.getSyslogPort());
          m_udpEventReceiver = new SyslogHandler();
          //m_udpEventReceiver.addEventHandler(this);
          
          // A queue for execution

          FifoQueue execQ = new FifoQueueImpl();

          // start the event reader

          try {
              m_eventReader = new BroadcastEventProcessor();
          } catch (Exception ex) {
              log.error("Failed to setup event reader", ex);
              throw new UndeclaredThrowableException(ex);
          }

    }

