    /**
     * The event processing execution context.
     */
    public void run() {
        // get a logger
        ThreadCategory log = ThreadCategory.getInstance(getClass());
        boolean isTracing = log.isEnabledFor(ThreadCategory.Level.TRACE);
        try {
            if (isTracing)  {
                log.trace("Processing a syslog to event dispatch" + m_event.toString());
                String uuid = m_event.getEvent().getUuid();
                log.trace("Event {");
                log.trace("  uuid  = "
                        + (uuid != null && uuid.length() > 0 ? uuid
                        : "<not-set>"));
                log.trace("  uei   = " + m_event.getEvent().getUei());
                log.trace("  src   = " + m_event.getEvent().getSource());
                log.trace("  iface = " + m_event.getEvent().getInterface());
                log.trace("  time  = " + m_event.getEvent().getTime());
                log.trace("  Msg   = "
                        + m_event.getEvent().getLogmsg().getContent());
                log.trace("  Dst   = "
                        + m_event.getEvent().getLogmsg().getDest());
                List<Parm> parms = (m_event.getEvent().getParmCollection() == null ? null : m_event.getEvent().getParmCollection());
                if (parms != null) {
                    log.trace("  parms {");
                    for (Parm parm : parms) {
                        if ((parm.getParmName() != null)
                                && (parm.getValue().getContent() != null)) {
                            log.trace("    ("
                                    + parm.getParmName().trim()
                                    + ", "
                                    + parm.getValue().getContent().trim()
                                    + ")");
                        }
                    }
                    log.trace("  }");
                }
                log.trace("}");
            }

            EventIpcManagerFactory.getIpcManager().sendNow(m_event.getEvent());

            if (m_NewSuspectOnMessage && !m_event.getEvent().hasNodeid()) {
                if (isTracing) {
                    log.trace("Syslogd: Found a new suspect " + m_event.getEvent().getInterface());
                }
                sendNewSuspectEvent(m_localAddr, m_event.getEvent().getInterface());
            }

        } catch (Throwable t) {
            log.error("Unexpected error processing SyslogMessage - Could not send", t);
        }
    }

