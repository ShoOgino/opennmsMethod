    /**
     * The event processing execution context.
     */
    public void run() {
        // The runnable context
        m_context = Thread.currentThread();

        // get a logger
        ThreadCategory.setPrefix(m_logPrefix);
        Category log = ThreadCategory.getInstance(getClass());
        boolean isTracing = log.isEnabledFor(Level.TRACE);

        if (m_stop) {
            if (isTracing)
                log.log(Level.TRACE, "Stop flag set before thread started, exiting");
            return;
        } else if (isTracing)
            log.debug("Thread context started");

        while (!m_stop) {

            ConvertToEvent o = null;

            o = SyslogHandler.queueManager.getFromQueue();

            if (o != null) {
                try {
                    if (isTracing)  {
                        log.log(Level.TRACE, "Processing a syslog to event dispatch" + o.toString());
                        String uuid = o.getEvent().getUuid();
                        log.log(Level.TRACE, "Event {");
                        log.log(Level.TRACE, "  uuid  = "
                                + (uuid != null && uuid.length() > 0 ? uuid
                                : "<not-set>"));
                        log.log(Level.TRACE, "  uei   = " + o.getEvent().getUei());
                        log.log(Level.TRACE, "  src   = " + o.getEvent().getSource());
                        log.log(Level.TRACE, "  iface = " + o.getEvent().getInterface());
                        log.log(Level.TRACE, "  time  = " + o.getEvent().getTime());
                        log.log(Level.TRACE, "  Msg   = "
                                + o.getEvent().getLogmsg().getContent());
                        log.log(Level.TRACE, "  Dst   = "
                                + o.getEvent().getLogmsg().getDest());
                        Parm[] parms = (o.getEvent().getParms() == null ? null
                                : o.getEvent().getParms().getParm());
                        if (parms != null) {
                            log.log(Level.TRACE, "  parms {");
                            for (Parm parm : parms) {
                                if ((parm.getParmName() != null)
                                        && (parm.getValue().getContent() != null)) {
                                    log.log(Level.TRACE, "    ("
                                            + parm.getParmName().trim()
                                            + ", "
                                            + parm.getValue().getContent().trim()
                                            + ")");
                                }
                            }
                            log.log(Level.TRACE, "  }");
                        }
                        log.log(Level.TRACE, "}");
                    }

                    EventIpcManagerFactory.getIpcManager().sendNow(o.getEvent());

                    if (m_NewSuspectOnMessage && !o.getEvent().hasNodeid()) {
                        if (isTracing) {
                            log.log(Level.TRACE, "Syslogd: Found a new suspect " + o.getEvent().getInterface());
                        }
                        sendNewSuspectEvent(o.getEvent().getInterface());
                    }

                } catch (Throwable t) {
                    log.error("Unexpected error processing SyslogMessage - Could not send", t);
                }
            }

        }

    }

