    /**
     * The event processing execution context.
     */
    @SuppressWarnings({"UnusedLabel"})
    public void run() {
        // The runnable context
        //
        m_context = Thread.currentThread();

        // get a logger
        //
        ThreadCategory.setPrefix(m_logPrefix);
        Category log = ThreadCategory.getInstance(getClass());
        boolean isTracing = log.isDebugEnabled();

        if (m_stop) {
            if (isTracing)
                log.debug("Stop flag set before thread started, exiting");
            return;
        } else if (isTracing)
            log.debug("Thread context started");

        // This loop is labeled so that it can be
        // exited quickly when the thread is interrupted
        //
        RunLoop:
        while (!m_stop) {

            ConvertToEvent o = null;

            o = SyslogHandler.queueManager.getFromQueue();

            if (o != null) {
                try {
                    log.debug("Processing a syslog to event dispatch"
                            + o.toString());

                    // print out the eui, source, and other
                    // important aspects
                    //
                    String uuid = o.getEvent().getUuid();
                    log.debug("Event {");
                    log.debug("  uuid  = "
                            + (uuid != null && uuid.length() > 0 ? uuid
                            : "<not-set>"));
                    log.debug("  uei   = " + o.getEvent().getUei());
                    log.debug("  src   = " + o.getEvent().getSource());
                    log.debug("  iface = " + o.getEvent().getInterface());
                    log.debug("  time  = " + o.getEvent().getTime());
                    log.debug("  Msg   = "
                            + o.getEvent().getLogmsg().getContent());
                    log.debug("  Dst   = "
                            + o.getEvent().getLogmsg().getDest());
                    Parm[] parms = (o.getEvent().getParms() == null ? null
                            : o.getEvent().getParms().getParm());
                    if (parms != null) {
                        log.debug("  parms {");
                        for (Parm parm : parms) {
                            if ((parm.getParmName() != null)
                                    && (parm.getValue().getContent() != null)) {
                                log.debug("    ("
                                        + parm.getParmName().trim()
                                        + ", "
                                        + parm.getValue().getContent().trim()
                                        + ")");
                            }
                        }
                        log.debug("  }");
                    }
                    log.debug("}");

                    EventIpcManagerFactory.getIpcManager().sendNow(
                            o.getEvent());
                    // !event.hasNodeid() && m_newSuspect
                    if (m_NewSuspectOnMessage && !o.getEvent().hasNodeid()) {
                        log.debug("Syslogd: Found a new suspect "
                                + o.getEvent().getInterface());
                        sendNewSuspectEvent(o.getEvent().getInterface());
                    }

                } catch (Throwable t) {
                    log.error(
                            "Unexpected error processing SyslogMessage - Could not send",
                            t);

                }
            }

        }

    } // end run()

