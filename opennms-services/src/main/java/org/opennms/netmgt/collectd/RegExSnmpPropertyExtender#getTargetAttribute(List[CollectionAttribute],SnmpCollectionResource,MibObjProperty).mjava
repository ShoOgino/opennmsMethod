    /* (non-Javadoc)
     * @see org.opennms.netmgt.collectd.SnmpPropertyExtender#getTargetAttribute(java.util.List, org.opennms.netmgt.collectd.SnmpCollectionResource, org.opennms.netmgt.config.datacollection.MibObjProperty)
     */
    @Override
    public SnmpAttribute getTargetAttribute(List<CollectionAttribute> sourceAttributes, SnmpCollectionResource targetResource, MibObjProperty property) {
        if (StringUtils.isBlank(property.getIndexPattern())) {
            LOG.warn("Cannot execute the RegEx property extender because the index-pattern of the property {} is null or empty.", property.getName());
            return null;
        }
        Pattern p = Pattern.compile(property.getIndexPattern());
        Matcher m = p.matcher(targetResource.getInstance());
        Optional<CollectionAttribute> target = null;
        if (m.find()) {
            final String index = m.group(1);
            target = sourceAttributes.stream().filter(a -> matches(property, index, a)).findFirst();
        }
        if (target != null && target.isPresent()) {
            AttributeGroupType groupType = targetResource.getGroupType(property.getGroupName());
            if (groupType != null) {
                MibPropertyAttributeType type = new MibPropertyAttributeType(targetResource.getResourceType(), property, groupType);
                SnmpValue value = SnmpUtils.getValueFactory().getOctetString(target.get().getStringValue().getBytes());
                return new SnmpAttribute(targetResource, type, value);
            }

        }
        return null;
    }

