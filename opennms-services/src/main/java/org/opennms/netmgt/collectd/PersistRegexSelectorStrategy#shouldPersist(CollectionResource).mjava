    @Override
    public boolean shouldPersist(CollectionResource resource) {
        LOG.debug("shouldPersist: checking resource {}", resource);
        if (m_parameterCollection == null) {
            LOG.warn("shouldPersist: no parameters defined; the resource will be persisted.");
            return true;
        }
        EvaluatorContextVisitor visitor = new EvaluatorContextVisitor();
        resource.visit(visitor);
        ExpressionParser parser = new SpelExpressionParser();
        for (Parameter param : m_parameterCollection) {
            if (param.getKey().equals(MATCH_EXPRESSION)) {
                Expression exp = parser.parseExpression(param.getValue());
                boolean shouldPersist = false;
                try {
                    shouldPersist = exp.getValue(visitor.getEvaluationContext(), Boolean.class);
                } catch (Exception e) {
                    LOG.warn("shouldPersist: can't evaluate expression " + param.getValue() + " for resource " + resource + " because: " + e.getMessage());
                }
                LOG.debug("shouldPersist: checking " + param.getValue() + " ? " + shouldPersist);
                if (shouldPersist)
                    return true;
            }
        }
        return false;
    }

