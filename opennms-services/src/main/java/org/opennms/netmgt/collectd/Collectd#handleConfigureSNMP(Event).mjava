    /**
     * This method is responsible for handling configureSNMP events.
     * 
     * @param event
     *            The event to process.
     */
    private void handleConfigureSNMP(Event event) {
        if (log().isDebugEnabled()) {
            log().debug("configureSNMPHandler: processing configure SNMP event..."+event);
        }
        
        SnmpEventInfo info = null;
        try {
            info = new SnmpEventInfo(event);
            
            if (info == null) {
                log().error("configureSNMPHandler: event contained invalid parameters.  "+event);
                return;
            }

            if (StringUtils.isBlank(info.getFirstIPAddress())) {				
                log().error("configureSNMPHandler: event contained invalid firstIpAddress.  "+event);
                return;
            }
            
            log().debug("configureSNMPHandler: processing configure SNMP event: "+info);
            SnmpPeerFactory.getInstance().define(info);
            SnmpPeerFactory.saveCurrent();
            log().debug("configureSNMPHandler: process complete. "+info);
            
        } catch (Exception e) {
            log().error("configureSNMPHandler: ",e);
        }
    }

