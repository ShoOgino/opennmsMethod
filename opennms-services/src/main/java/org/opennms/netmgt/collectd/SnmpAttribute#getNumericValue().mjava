    /**
     * <p>getNumericValue</p>
     *
     * @return a {@link java.lang.String} object.
     */
    @Override
    public String getNumericValue() {
        if (getValue() == null) {
            LOG.debug("No data collected for attribute "+this+". Skipping");
            return null;
        } else if (getValue().isNumeric()) {
            return Long.toString(getValue().toLong());
        } else if (getValue().getBytes().length == 8) {
            return Long.toString(SnmpUtils.getProtoCounter64Value(getValue()));
        } else {
            try {
                return Double.valueOf(getValue().toString()).toString();
            } catch(NumberFormatException e) {
                LOG.trace("Unable to process data received for attribute {} maybe this is not a number? See bug 1473 for more information. Skipping.", this);
		if (getValue().getType() == SnmpValue.SNMP_OCTET_STRING) {
		    try {
			return Long.valueOf(getValue().toHexString(), 16).toString();
		    } catch(NumberFormatException ex) {
			LOG.trace("Unable to process data received for attribute {} maybe this is not a number? See bug 1473 for more information. Skipping.", this);
		    }
		}
	    }
            return null;
        }
    }

