    public void init() {
        
        try {
            PollOutagesConfigFactory.init();
        } catch (Exception e) {
            throw new UndeclaredThrowableException(e, "Unable to initialze PollOutagesConfigFactory"+e.getMessage());
        }
        
        BeanFactoryReference bf = BeanUtils.getBeanFactory("daoContext");
        MonitoredServiceDao monitoredServiceDao = BeanUtils.getBean(bf, "monitoredServiceDao", MonitoredServiceDao.class);
        IpInterfaceDao ipInterfaceDao = BeanUtils.getBean(bf, "ipInterfaceDao", IpInterfaceDao.class);
        NodeDao nodeDao = BeanUtils.getBean(bf, "nodeDao", NodeDao.class);
        TransactionTemplate transTemplate = BeanUtils.getBean(bf, "transactionTemplate", TransactionTemplate.class);

        getBean().setCollectorConfigDao(new CollectorConfigDaoImpl());
        getBean().setMonitoredServiceDao(monitoredServiceDao);
        getBean().setIpInterfaceDao(ipInterfaceDao);
        getBean().setNodeDao(nodeDao);
        getBean().setEventIpcManager(EventIpcManagerFactory.getIpcManager());
        getBean().setTransactionTemplate(transTemplate);

        getBean().init();
    }

