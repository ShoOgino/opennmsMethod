    @SuppressWarnings("unchecked")
    private List<HttpCollectionAttribute> processResponse(final String responseBodyAsString, final HttpCollectionSet collectionSet) {
        log().debug("processResponse: ");
        List<HttpCollectionAttribute> butes = new LinkedList<HttpCollectionAttribute>();
        Pattern p = Pattern.compile(collectionSet.getUriDef().getUrl().getMatches());
        Matcher m = p.matcher(responseBodyAsString);
        
        final boolean matches = m.matches();
        if (matches) {
            log().debug("processResponse: found matching attributes: "+matches);
            List<Attrib> attribDefs = collectionSet.getUriDef().getAttributes().getAttribCollection();
            
            for (Attrib attribDef : attribDefs) {
                try {
                    Number num = NumberFormat.getNumberInstance().parse(m.group(attribDef.getMatchGroup()));
                    HttpCollectionAttribute bute = 
                        new HttpCollectionAttribute(
                                                    collectionSet.getResource(),
                                                    new HttpCollectionAttributeType(attribDef, m_groupType), 
                                                    attribDef.getAlias(),
                                                    attribDef.getType(), 
                                                    num);
                    log().debug("processResponse: adding found attribute: "+bute);
                    butes.add(bute);
                } catch (ParseException e) {
                    log().error("attribute "+attribDef.getAlias()+" failed to match a parsable number! Matched "+m.group(attribDef.getMatchGroup())+" instead.");
                }
            }
        } else {
            log().debug("processResponse: found matching attributes: "+matches);
        }
        return butes;
    }

