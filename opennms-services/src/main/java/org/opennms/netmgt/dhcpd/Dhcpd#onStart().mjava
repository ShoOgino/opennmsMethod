    protected void onStart() {
        boolean relayMode = false;
        log().debug("start: DHCP client daemon starting...");

        // Only allow start to be called once.
        if (m_worker != null && m_worker.isAlive()) {
            throw new IllegalStateException("The server is already running");
        }

        // Unless the worker has died, then stop and continue
        if (m_worker != null) {
            stop();
        }

        // the client list
        m_clients = Collections.synchronizedList(new LinkedList<Client>());

        // load the dhcpd configuration
        DhcpdConfigFactory dFactory = null;
        try {
            DhcpdConfigFactory.reload();
            dFactory = DhcpdConfigFactory.getInstance();
        } catch (MarshalException ex) {
            log().error("Failed to load dhcpd configuration", ex);
            throw new UndeclaredThrowableException(ex);
        } catch (ValidationException ex) {
            log().error("Failed to load dhcpd configuration", ex);
            throw new UndeclaredThrowableException(ex);
        } catch (IOException ex) {
            log().error("Failed to load dhcpd configuration", ex);
            throw new UndeclaredThrowableException(ex);
        }

        // open the server
        //
        try {
            if (log().isDebugEnabled()) {
                log().debug("start: listening on TCP port " + dFactory.getPort() + " for incoming client requests.");
            }
            m_server = new ServerSocket(dFactory.getPort());
        } catch (IOException ex) {
            throw new UndeclaredThrowableException(ex);
        }

        // see if we have a valid relay address
        String myIpStr = DhcpdConfigFactory.getInstance().getMyIpAddress();
        if (log().isDebugEnabled()) {
            log().debug("Checking string \"" + myIpStr + "\" to see if we have an IP address");
        }
        if (myIpStr != null &&  !myIpStr.equals("") && !myIpStr.equalsIgnoreCase("broadcast")) {
            if(IpValidator.isIpValid(myIpStr)) {
                relayMode = true;
            }
        }
        if (log().isDebugEnabled()) {
            log().debug("Setting relay mode " + relayMode);
        }
        
        // open the receiver socket(s)
        if(!relayMode || (dFactory.getExtendedMode() != null && dFactory.getExtendedMode().equalsIgnoreCase("true"))) {
            try {
                log().debug("start: starting receiver thread for port 68");
                m_listener = new Receiver(m_clients);
                m_listener.start();
            } catch (IOException ex) {
                try {
                    m_server.close();
                } catch (IOException ex1) {
                }
                throw new UndeclaredThrowableException(ex);
            }
        }

        if(relayMode) {
            try {
                log().debug("start: starting receiver thread for port 67");
                m_listener2 = new Receiver2(m_clients);
                m_listener2.start();
            } catch (IOException ex) {
                try {
                    m_server.close();
                } catch (IOException ex1) {
                }
                throw new UndeclaredThrowableException(ex);
            }
        }

        m_worker = new Thread(this, getName());
        m_worker.start();
	}

