    /**
     * Return the ifLabel as a string for the given node and ifIndex. Intended for
     * use with non-ip interfaces.
     *
     * @return String
     * @param nodeId a int.
     * @param ifIndex a int.
     */
    public static String getIfLabelfromSnmpIfIndex(final int nodeId, final int ifIndex) {
        
        class LabelHolder {
            private String m_label;

            public void setLabel(String label) {
                m_label = label;
            }

            public String getLabel() {
                return m_label;
            }
        }
        
        final LabelHolder holder = new LabelHolder();
        
        String query = "" +
                "SELECT DISTINCT snmpifname, snmpifdescr,snmpphysaddr " +
                "  FROM snmpinterface " +
                "   WHERE nodeid= "+nodeId+
                "   AND snmpifindex= "+ifIndex;
        
        
        Querier q = new Querier(DataSourceFactory.getDataSource(), query, new RowProcessor() {

            @Override
            public void processRow(ResultSet rs) throws SQLException {
                String name = rs.getString("snmpifname");
                String descr = rs.getString("snmpifdescr");
                String physAddr = rs.getString("snmpphysaddr");

                if (name != null || descr != null) {
                    holder.setLabel(getIfLabel(name, descr, physAddr));
                } else {
                    LOG.warn("Interface (nodeId/ifIndex={}/{}) has no ifName and no ifDescr...setting to label to 'no_ifLabel'.", nodeId, ifIndex);
                    holder.setLabel("no_ifLabel");
                }
            }
            
        });
        q.execute();
        
        return holder.getLabel();
    }    

