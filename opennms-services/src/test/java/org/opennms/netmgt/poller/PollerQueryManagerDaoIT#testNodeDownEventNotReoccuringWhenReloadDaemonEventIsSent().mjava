	@Test
	public void testNodeDownEventNotReoccuringWhenReloadDaemonEventIsSent() {

		startDaemons();

		MockNode node = m_network.getNode(4);
		MockService svc = m_network.getService(4, "192.168.1.6", "SNMP");

		anticipateDown(node);

		node.bringDown();

		verifyAnticipated(5000);

		resetAnticipated();

		EventBuilder builder = MockEventUtil.createEventBuilder("test", "uei.opennms.org/internal/reloadDaemonConfig");
		builder.addParam(EventConstants.PARM_DAEMON_NAME, "Pollerd");
		Event reloadDaemonSuccessfulEvent = MockEventUtil.createEventBuilder("Pollerd", EventConstants.RELOAD_DAEMON_CONFIG_SUCCESSFUL_UEI).getEvent();
        // Anticipate only reload daemon successful event, node down events should not occur again.
		m_eventMgr.getEventAnticipator().anticipateEvent(reloadDaemonSuccessfulEvent);
		m_eventMgr.sendEventToListeners(builder.getEvent());

		verifyAnticipated(5000);

		anticipateUp(svc);
		anticipateUp(node);
		node.bringUp();

		verifyAnticipated(8000);
	}

