    @Test
    public void testLoadInterface() throws Exception {
        anticipateDown(mDot1);

        mDot1.bringDown();

        pDot1Smtp.doPoll();

        m_network.processStatusChange(new Date());

        verifyAnticipated();

        PollEvent ifCause = pDot1.getCause();

        // recreate the pollable network from the database
        m_network = createPollableNetwork(m_db, m_scheduler, m_pollerConfig, m_pollerConfig, m_pollContext);
        assignPollableMembers(m_network);

        assertElementHasCause(pDot1Smtp, ifCause);
        assertElementHasCause(pDot1Icmp, ifCause);
        assertElementHasCause(pDot1, ifCause);
        assertElementHasNullCause(pNode1);

        assertDown(pDot1Smtp);
        assertDown(pDot1Icmp);

        anticipateUp(mDot1);

        mDot1.bringUp();

        pDot1Icmp.doPoll();

        m_network.processStatusChange(new Date());

        verifyAnticipated();


    }

