    @Before
    public void onSetUpInTransactionIfEnabled() throws Exception {
        m_fileAnticipator = new FileAnticipator();

        String filename = m_fileAnticipator.expecting("remote-poller.configuration").getCanonicalPath();
        filename = filename.replace("+", "%2B");
        System.setProperty("opennms.poller.configuration.resource", "file://" + filename);

        m_populator.populateDatabase();

        /**
         * We complete and end the transaction here so that the populated
         * database gets committed.  If we don't do this, the poller back
         * end (setup with the contexts in getConfigLocations) won't see
         * the populated database because it's working in another
         * transaction.  This will cause one of the asserts in testRegister
         * to fail because no services will be monitored by the remote
         * poller.
         */
        /*
        setComplete();
        endTransaction();
         */

        m_frontEndContext = new ClassPathXmlApplicationContext(
                                                               new String[] { 
                                                                       "classpath:/META-INF/opennms/applicationContext-remotePollerBackEnd-rmi.xml",
                                                                       "classpath:/META-INF/opennms/applicationContext-pollerFrontEnd.xml",
                                                               },
                                                               false
        );

        Properties props = new Properties();
        props.setProperty("configCheckTrigger.repeatInterval", "1000");

        PropertyOverrideConfigurer testPropertyConfigurer = new PropertyOverrideConfigurer();
        testPropertyConfigurer.setProperties(props);
        m_frontEndContext.addBeanFactoryPostProcessor(testPropertyConfigurer);

        m_frontEndContext.refresh();
        m_frontEnd = (PollerFrontEnd)m_frontEndContext.getBean("pollerFrontEnd");
        m_settings = (PollerSettings)m_frontEndContext.getBean("pollerSettings");
    }

