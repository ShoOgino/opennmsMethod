	@Test
	public void test() throws SQLException, UnknownHostException {
		final Connection conn = m_db.getConnection();

		String[] ar = getPathOutageManager().getLabelAndStatus("1", conn);
		assertEquals("Router", ar[0]);
		assertEquals("Normal", ar[1]);
		assertEquals("All Services Up", ar[2]);
		String[] cr = getPathOutageManager().getLabelAndStatus("3", conn);
		assertEquals("Firewall", cr[0]);
		assertEquals("Normal", cr[1]);
		assertEquals("All Services Up", cr[2]);
		Set<Integer> lno = getPathOutageManager().getNodesInPath("192.168.1.1", "ICMP");
		assertEquals(new Integer(1), lno.iterator().next());
		Set<Integer> vno = getPathOutageManager().getNodesInPath("192.168.1.4", "SMTP");
		assertEquals(new Integer(3), vno.iterator().next());

		// This list should order by node label so Firewall should precede Router
		List<String[]> all = getPathOutageManager().getAllCriticalPaths();
		assertEquals(2, all.size());

		assertEquals("Firewall",all.get(0)[0]);
		assertEquals("192.168.1.4",all.get(0)[1]);
		assertEquals("SMTP",all.get(0)[2]);

		assertEquals("Router",all.get(1)[0]);
		assertEquals("192.168.1.1",all.get(1)[1]);
		assertEquals("ICMP", all.get(1)[2]);

		String[] dat = getPathOutageManager().getCriticalPathData("192.168.1.1", "ICMP");
		assertEquals("Router", dat[0]);
		assertEquals("1", dat[1]);
		assertEquals("1", dat[2]);
		assertEquals("Normal", dat[3]);
		String mm = getPathOutageManager().getPrettyCriticalPath(1);
		assertEquals("192.168.1.1 ICMP", mm);
		String nn = getPathOutageManager().getPrettyCriticalPath(3);
		assertEquals("192.168.1.4 SMTP", nn);
		CriticalPath pa = getPathOutageManager().getCriticalPath(1);
		assertEquals(InetAddress.getByName("192.168.1.1"), pa.getIpAddress());
		assertEquals("ICMP", pa.getServiceName());
		CriticalPath nc = getPathOutageManager().getCriticalPath(3);
		assertEquals(InetAddress.getByName("192.168.1.4"), nc.getIpAddress());
		assertEquals("SMTP", nc.getServiceName());

		Set<Integer> test = getPathOutageManager().getAllNodesDependentOnAnyServiceOnInterface("192.168.1.1");
		assertEquals(1, test.size());
		
		Set<Integer> less = getPathOutageManager().getAllNodesDependentOnAnyServiceOnNode(3);
		assertEquals(1, less.size());

		conn.close();
	}

