    @Test
    public void testNodeLostServiceIncludesReason() throws Exception {
        MockService element = m_network.getService(1, "192.168.1.1", "SMTP");
        String expectedReason = "Oh No!! An Outage!!";
        startDaemons();

        resetAnticipated();
        anticipateDown(element);

        MockUtil.println("Bringing down element: " + element);
        element.bringDown(expectedReason);
        MockUtil.println("Finished bringing down element: " + element);

        verifyAnticipated(8000);

        Collection<Event> receivedEvents = m_anticipator.getAnticipatedEventsRecieved();

        assertEquals(1, receivedEvents.size());

        Event event = receivedEvents.iterator().next();

        assertEquals(expectedReason, EventUtils.getParm(event, EventConstants.PARM_LOSTSERVICE_REASON));
    }

