    /**
     * Test method for {@link org.opennms.netmgt.poller.monitors.AvailabilityMonitor#poll(org.opennms.netmgt.poller.MonitoredService, Map)}.
     */
    @Test
    public final void testPoll() {
        ServiceMonitor sm = new AvailabilityMonitor();
        Map<String, Object> parameters = new HashMap<String, Object>();
        parameters.put("timeout", "3000");
        MonitoredService svc = new MonitoredService() {
            @Override
            public InetAddress getAddress() {
                final InetAddress addr = InetAddressUtils.addr("127.0.0.1");
                if (addr == null) {
                    throw new IllegalStateException("Error getting localhost address");
                }
                return addr;
            }
            @Override
            public String getIpAddr() {
                return InetAddressUtils.str(getAddress());
            }
            @Override
            public NetworkInterface<InetAddress> getNetInterface() {
                return new InetNetworkInterface(getAddress());
            }
            @Override
            public int getNodeId() {
                return 0;
            }
            @Override
            public String getNodeLabel() {
                return "localhost";
            }
            @Override
            public String getSvcName() {
                return "ICMP";
            }
            @Override
            public String getSvcUrl() {
                return null;
            }
            
        };
        PollStatus status = sm.poll(svc, parameters);
        assertEquals(PollStatus.SERVICE_AVAILABLE, status.getStatusCode());
    }

