    /*
     * @see TestCase#setUp()
     */
    protected void setUp() throws Exception {
        super.setUp();
        
        MockLogAppender.setupLogging();
        
        m_mNetwork = new MockNetwork();
        m_mNetwork.addNode(1, "Router");
        m_mNetwork.addInterface("192.168.1.1");
        m_mNetwork.addService("ICMP");
        m_mNetwork.addService("SMTP");
        m_mNetwork.addInterface("192.168.1.2");
        m_mNetwork.addService("ICMP");
        m_mNetwork.addService("SMTP");
        m_mNetwork.addNode(2, "Server");
        m_mNetwork.addInterface("192.168.1.3");
        m_mNetwork.addService("ICMP");
        m_mNetwork.addService("HTTP");
        m_mNetwork.addNode(3, "Firewall");
        m_mNetwork.addInterface("192.168.1.4");
        m_mNetwork.addService("SMTP");
        m_mNetwork.addService("HTTP");
        m_mNetwork.addInterface("192.168.1.5");
        m_mNetwork.addService("SMTP");
        m_mNetwork.addService("HTTP");
        
        m_mSvc = m_mNetwork.getService(1, "192.168.1.1", "ICMP");

        m_db = new MockDatabase();
        m_db.populate(m_mNetwork);
        
        DefaultQueryManager qm = new DefaultQueryManager();
        qm.setDataSource(m_db);
        
        m_pollerConfig = new MockPollerConfig(m_mNetwork);
        m_pollerConfig.setNodeOutageProcessingEnabled(true);
        m_pollerConfig.setCriticalService("ICMP");
        m_pollerConfig.addPackage("TestPackage");
        m_pollerConfig.addDowntime(1000L, 0L, -1L, false);
        m_pollerConfig.setDefaultPollInterval(1000L);
        m_pollerConfig.populatePackage(m_mNetwork);
        m_pollerConfig.addPackage("TestPkg2");
        m_pollerConfig.addDowntime(1000L, 0L, -1L, false);
        m_pollerConfig.setDefaultPollInterval(2000L);
        m_pollerConfig.addService(m_mNetwork.getService(2, "192.168.1.3", "HTTP"));
        m_pollerConfig.setNextOutageIdSql(m_db.getNextOutageIdStatement());
        
        m_anticipator = new EventAnticipator();
        m_outageAnticipator = new OutageAnticipator(m_db);
        
        m_eventMgr = new MockEventIpcManager();
        m_eventMgr.setEventWriter(m_db);
        m_eventMgr.setEventAnticipator(m_anticipator);
        m_eventMgr.addEventListener(m_outageAnticipator);
        
        m_poller = new Poller();
        m_poller.setPollerConfig(m_pollerConfig);
        m_poller.setDataSource(m_db);
        m_poller.setQueryMgr(qm);
        m_poller.setEventManager(m_eventMgr);
        
        
        m_pollContext = new DefaultPollContext(m_poller);
        
        m_pNetwork = new PollableNetwork(m_pollContext);
        m_pSvc = m_pNetwork.createService(1, "Router", InetAddress.getByName("192.168.1.1"), "ICMP");

        m_poller.init();

    }

