    @Test
    public void testReparentOutages() {
        // create some outages in the database
        mDot1.bringDown();

        pDot1Icmp.doPoll();
        m_network.processStatusChange(new Date());

        mDot1.bringUp();

        pDot1Icmp.doPoll();
        m_network.processStatusChange(new Date());

        final String ifOutageOnNode1 = "select * from outages, ifServices, ipInterface where outages.perspective is null and outages.ifServiceId = ifServices.id and ifServices.ipInterfaceId = ipInterface.id and ipInterface.nodeId = 1 and ipInterface.ipAddr = '192.168.1.1'";
        final String ifOutageOnNode2 = "select * from outages, ifServices, ipInterface where outages.perspective is null and outages.ifServiceId = ifServices.id and ifServices.ipInterfaceId = ipInterface.id and ipInterface.nodeId = 2 and ipInterface.ipAddr = '192.168.1.1'";

        m_eventMgr.finishProcessingEvents();

        assertEquals(2, m_db.countRows(ifOutageOnNode1));
        assertEquals(0, m_db.countRows(ifOutageOnNode2));

        m_db.reparentInterface(pDot1.getIpAddr(), pDot1.getNodeId(), pNode2.getNodeId());
        pDot1.reparentTo(pNode2);

        assertEquals(0, m_db.countRows(ifOutageOnNode1));
        assertEquals(2, m_db.countRows(ifOutageOnNode2));

    }

