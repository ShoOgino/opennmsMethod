    @Test
	public void testBug709() {

		m_pollerConfig.setNodeOutageProcessingEnabled(true);

		MockNode node = m_network.getNode(2);
		MockService icmpService = m_network
				.getService(2, "192.168.1.3", "ICMP");
		MockService httpService = m_network
				.getService(2, "192.168.1.3", "HTTP");

		// start the poller
		startDaemons();

		//
		// Bring Down the HTTP service and expect nodeLostService Event
		//

		resetAnticipated();
		anticipateDown(httpService);

		// bring down the HTTP service
		httpService.bringDown();

		verifyAnticipated(10000);

		//
		// Bring Down the ICMP (on the only interface on the node) now expect
		// nodeDown
		// only.
		//

		resetAnticipated();
		anticipateDown(node);

		// bring down the ICMP service
		icmpService.bringDown();

		// make sure the down events are received
		// verifyAnticipated(10000);
		sleep(5000);
		//
		// Bring up both the node and the httpService at the same time. Expect
		// both a nodeUp and a nodeRegainedService
		//

		resetAnticipated();
		// the order matters here
		anticipateUp(httpService);
		anticipateUp(node);

		// bring up all the services on the node
		node.bringUp();

		// make sure the down events are received
		verifyAnticipated(10000);

	}

