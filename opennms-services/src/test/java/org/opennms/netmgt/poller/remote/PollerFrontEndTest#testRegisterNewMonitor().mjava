    public void testRegisterNewMonitor() throws Exception {
        
        // once in afterPropertiesSet
		expect(m_settings.getMonitorId()).andReturn(null);
        
        // once in isRegistered
        expect(m_settings.getMonitorId()).andReturn(null);
        
        // register a new monitor and save the id
        expect(m_backEnd.registerLocationMonitor("OAK")).andReturn(1);
        m_settings.setMonitorId(1);
        PropertyChangeEvent registrationEvent = new PropertyChangeEvent(m_frontEnd, "registered", false, true);
        m_registrationListener.propertyChange(eq(registrationEvent));
        
        // another call to isRegistered;
        expect(m_settings.getMonitorId()).andReturn(1).atLeastOnce();
        
        anticipateNewConfig(pollConfig());
        
        expect(m_backEnd.pollerStarting(1)).andReturn(true);
        
        replayMocks();
        
        m_frontEnd.afterPropertiesSet();
        
        m_frontEnd.addPropertyChangeListener(m_registrationListener);
        
        assertFalse(m_frontEnd.isRegistered());
        
        m_frontEnd.register("OAK");
        
        assertTrue(m_frontEnd.isRegistered());
        
        verifyMocks();
        
	}

