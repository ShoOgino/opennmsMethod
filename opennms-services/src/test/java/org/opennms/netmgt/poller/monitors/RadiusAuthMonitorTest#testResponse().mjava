	@Test
	@Ignore("have to have a radius server set up")
	public void testResponse() throws Exception {
		final Map<String, Object> m = Collections.synchronizedMap(new TreeMap<String, Object>());

		final ServiceMonitor monitor = new RadiusAuthMonitor();
		final MonitoredService svc = MonitorTestUtils.getMonitoredService(99, "192.168.211.11", "RADIUS", false);

        m.put("user", "testing");
        m.put("password", "password");
        m.put("retry", "1");
        m.put("secret", "testing123");
        m.put("authtype", "chap");

        final PollStatus status = monitor.poll(svc, m);
        MockUtil.println("Reason: "+status.getReason());
        assertEquals(PollStatus.SERVICE_AVAILABLE, status.getStatusCode());
	}

