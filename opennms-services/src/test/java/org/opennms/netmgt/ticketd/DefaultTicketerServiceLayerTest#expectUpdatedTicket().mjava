    @SuppressWarnings("unused")
    private void expectUpdatedTicket() {
        try {
            m_ticketerPlugin.saveOrUpdate(m_ticket);
        } catch (PluginException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        EasyMock.expectLastCall().andAnswer(new IAnswer<Object>() {

            public Object answer() throws Throwable {
                Ticket ticket = (Ticket) EasyMock.getCurrentArguments()[0];
                assertEquals(Ticket.State.OPEN, ticket.getState());
                assertEquals(m_alarm.getDescription(), ticket.getDetails());
                return null;
            }

        });
    }

