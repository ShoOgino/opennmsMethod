	@Test
	@Transactional
	public void testWire() {
		assertNotNull(m_ticketerServiceLayer);
		assertNotNull(m_ticketerPlugin);

		OnmsAlarm alarm = m_alarmDao.findAll().get(0);
		assertNull(alarm.getTTicketState());
		assertNull(alarm.getTTicketId());

		final int alarmId = alarm.getId();

		m_ticketerServiceLayer.createTicketForAlarm(alarmId);

		m_alarmDao.flush();

		alarm = m_alarmDao.get(alarmId);
		assertEquals(TroubleTicketState.OPEN, alarm.getTTicketState());
		assertNotNull(alarm.getTTicketId());
		assertEquals("testId", alarm.getTTicketId());

		m_ticketerServiceLayer.updateTicketForAlarm(alarm.getId(), alarm.getTTicketId());

		m_alarmDao.flush();

		alarm = m_alarmDao.get(alarmId);
		assertEquals(TroubleTicketState.OPEN, alarm.getTTicketState());

		m_ticketerServiceLayer.closeTicketForAlarm(alarmId,
				alarm.getTTicketId());

		m_alarmDao.flush();

		alarm = m_alarmDao.get(alarmId);
		assertEquals(TroubleTicketState.CLOSED, alarm.getTTicketState());

	}

