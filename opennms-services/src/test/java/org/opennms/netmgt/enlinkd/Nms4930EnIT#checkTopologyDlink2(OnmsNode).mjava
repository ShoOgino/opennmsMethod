    private void checkTopologyDlink2(OnmsNode dlink2) {
        assertEquals(0,m_bridgeBridgeLinkDao.countAll());
//      INTEGER: 1     35
//    INTEGER: 2      71
//    INTEGER: 3      29
//    INTEGER: 5     142
//    INTEGER: 6      47
//    INTEGER: 7       5
//    INTEGER: 8     123
//    INTEGER: 10     362
//    INTEGER: 12     163
      assertEquals(35, m_bridgeMacLinkDao.findByNodeIdBridgePort(dlink2.getId(), 1).size());
      assertEquals(71, m_bridgeMacLinkDao.findByNodeIdBridgePort(dlink2.getId(), 2).size());
      assertEquals(29, m_bridgeMacLinkDao.findByNodeIdBridgePort(dlink2.getId(), 3).size());
      assertEquals(142, m_bridgeMacLinkDao.findByNodeIdBridgePort(dlink2.getId(), 5).size());
      assertEquals(47, m_bridgeMacLinkDao.findByNodeIdBridgePort(dlink2.getId(), 6).size());
      assertEquals(5, m_bridgeMacLinkDao.findByNodeIdBridgePort(dlink2.getId(), 7).size());
      assertEquals(123, m_bridgeMacLinkDao.findByNodeIdBridgePort(dlink2.getId(), 8).size());
      assertEquals(362, m_bridgeMacLinkDao.findByNodeIdBridgePort(dlink2.getId(), 10).size());
      assertEquals(163, m_bridgeMacLinkDao.findByNodeIdBridgePort(dlink2.getId(), 12).size());
//      total number of entry in bridgemaclink: 977
      assertEquals(977,m_bridgeMacLinkDao.countAll());
      assertEquals(1,m_bridgeMacLinkDao.getAllBridgeLinksToIpAddrToNodes().size());
      assertEquals(0,m_bridgeMacLinkDao.getAllBridgeLinksToBridgeNodes().size());

      for (BridgeMacLink maclink: m_bridgeMacLinkDao.findAll()) {
              assertEquals(null, maclink.getBridgeDot1qTpFdbStatus());
              assertNotNull(maclink.getBridgePortIfIndex());
              assertNotNull(maclink.getBridgePort());
              assertNotNull(maclink.getNode());
              assertNotNull(maclink.getMacAddress());
      }

    }

