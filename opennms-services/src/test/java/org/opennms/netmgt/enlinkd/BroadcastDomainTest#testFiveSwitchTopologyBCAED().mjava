    @Test
    public void testFiveSwitchTopologyBCAED() throws BridgeTopologyException {

        FiveSwitchTopology topology = new FiveSwitchTopology();

        BroadcastDomain domain = new BroadcastDomain();
        Bridge.create(domain,topology.nodeAId);
        Bridge.create(domain,topology.nodeBId);
        Bridge.create(domain,topology.nodeCId);
        Bridge.create(domain,topology.nodeDId);
        Bridge.create(domain,topology.nodeEId);
        setBridgeElements(domain,topology.elemlist);
        
        DiscoveryBridgeTopology ndbtB= new DiscoveryBridgeTopology(linkd,domain);
        ndbtB.addUpdatedBFT((topology.nodeBId),topology.bftB);
        ndbtB.calculate();
        ndbtB.addUpdatedBFT((topology.nodeCId),topology.bftC);
        ndbtB.calculate();
        ndbtB.addUpdatedBFT((topology.nodeAId),topology.bftA);
        ndbtB.calculate();
        topology.checkAcalcBCA(domain.getForwarders(topology.nodeAId));
        topology.checkBcalcBCA(domain.getForwarders(topology.nodeBId));
        topology.checkCcalcBCA(domain.getForwarders(topology.nodeCId));
        assertEquals(0, domain.getForwarders(topology.nodeDId).size());
        assertEquals(0, domain.getForwarders(topology.nodeEId).size());

        DiscoveryBridgeTopology ndbtE= new DiscoveryBridgeTopology(linkd,domain);
        ndbtE.addUpdatedBFT((topology.nodeEId),topology.bftE);
        ndbtE.calculate();
        topology.checkAcalcBCAE(domain.getForwarders(topology.nodeAId));
        topology.checkBcalcBCAE(domain.getForwarders(topology.nodeBId));
        topology.checkCcalcBCAE(domain.getForwarders(topology.nodeCId));
        assertEquals(0, domain.getForwarders(topology.nodeDId).size());
        topology.checkEcalcBCAE(domain.getForwarders(topology.nodeEId));

        DiscoveryBridgeTopology ndbtD= new DiscoveryBridgeTopology(linkd,domain);
        ndbtD.addUpdatedBFT((topology.nodeDId),topology.bftD);
        ndbtD.calculate();
        topology.check(domain);
    }

