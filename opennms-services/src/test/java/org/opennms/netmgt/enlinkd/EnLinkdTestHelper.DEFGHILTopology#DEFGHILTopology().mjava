        public DEFGHILTopology() {
            nodeD.setId(nodeDId);
            elementD.setNode(nodeD);
            elementD.setBaseBridgeAddress("dddddddddddd");
            elemlist.add(elementD);
    
            nodeE.setId(nodeEId);
            elementE.setNode(nodeE);
            elementE.setBaseBridgeAddress("ddddddddeddd");
            elemlist.add(elementE);
    
            nodeF.setId(nodeFId);
            elementF.setNode(nodeF);
            elementF.setBaseBridgeAddress("ddddddddfddd");
            elemlist.add(elementF);

            nodeG.setId(nodeGId);
            elementG.setNode(nodeG);
            elementG.setBaseBridgeAddress("ddddddd1dddd");
            elemlist.add(elementG);

            nodeI.setId(nodeIId);
            elementI.setNode(nodeI);
            elementI.setBaseBridgeAddress("ddddddd2dddd");
            elemlist.add(elementI);

            nodeH.setId(nodeHId);
            elementH.setNode(nodeH);
            elementH.setBaseBridgeAddress("ddddddd3dddd");
            elemlist.add(elementH);
            
            nodeL.setId(nodeLId);
            elementL.setNode(nodeL);
            elementL.setBaseBridgeAddress("ddddddd4dddd");
            elemlist.add(elementL);

            bftD =addBridgeForwardingTableEntry(nodeD,portD,  mac1,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portD,  mac2,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac3,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac4,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac5,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac6,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac7,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac8,bftD);

            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac1,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac2,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac3,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac4,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portE,  mac5,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portE,  mac6,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac7,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac8,bftE);

            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac1,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac2,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portF,  mac3,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portF,  mac4,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac5,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac6,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac7,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac8,bftF);

            bftG =addBridgeForwardingTableEntry(nodeG,portGD, mac1,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGD, mac2,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGF, mac3,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGF, mac4,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGE, mac5,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGE, mac6,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portG7, mac7,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portG8, mac8,bftG);

            bftH =addBridgeForwardingTableEntry(nodeH,portH1, mac1,bftH);
            bftH =addBridgeForwardingTableEntry(nodeH,portH2, mac2,bftH);
            bftH =addBridgeForwardingTableEntry(nodeH,portHH, mac3,bftH);
            bftH =addBridgeForwardingTableEntry(nodeH,portHH, mac4,bftH);
            bftH =addBridgeForwardingTableEntry(nodeH,portHH, mac5,bftH);
            bftH =addBridgeForwardingTableEntry(nodeH,portHH, mac6,bftH);
            bftH =addBridgeForwardingTableEntry(nodeH,portHH, mac7,bftH);
            bftH =addBridgeForwardingTableEntry(nodeH,portHH, mac8,bftH);

            bftI =addBridgeForwardingTableEntry(nodeI,portII, mac1,bftI);
            bftI =addBridgeForwardingTableEntry(nodeI,portII, mac2,bftI);
            bftI =addBridgeForwardingTableEntry(nodeI,portI3, mac3,bftI);
            bftI =addBridgeForwardingTableEntry(nodeI,portI4, mac4,bftI);
            bftI =addBridgeForwardingTableEntry(nodeI,portII, mac5,bftI);
            bftI =addBridgeForwardingTableEntry(nodeI,portII, mac6,bftI);
            bftI =addBridgeForwardingTableEntry(nodeI,portII, mac7,bftI);
            bftI =addBridgeForwardingTableEntry(nodeI,portII, mac8,bftI);

            bftL =addBridgeForwardingTableEntry(nodeL,portLL, mac1,bftL);
            bftL =addBridgeForwardingTableEntry(nodeL,portLL, mac2,bftL);
            bftL =addBridgeForwardingTableEntry(nodeL,portLL, mac3,bftL);
            bftL =addBridgeForwardingTableEntry(nodeL,portLL, mac4,bftL);
            bftL =addBridgeForwardingTableEntry(nodeL,portL5, mac5,bftL);
            bftL =addBridgeForwardingTableEntry(nodeL,portL6, mac6,bftL);
            bftL =addBridgeForwardingTableEntry(nodeL,portLL, mac7,bftL);
            bftL =addBridgeForwardingTableEntry(nodeL,portLL, mac8,bftL);
          }

