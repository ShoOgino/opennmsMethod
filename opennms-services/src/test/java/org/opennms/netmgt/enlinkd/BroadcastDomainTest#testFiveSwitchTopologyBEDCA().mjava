    @Test
    public void testFiveSwitchTopologyBEDCA() {

        FiveSwitchTopology topology = new FiveSwitchTopology();

        BroadcastDomain domain = new BroadcastDomain();
        domain.addBridge(new Bridge(topology.nodeAId));
        domain.addBridge(new Bridge(topology.nodeBId));
        domain.addBridge(new Bridge(topology.nodeCId));
        domain.addBridge(new Bridge(topology.nodeDId));
        domain.addBridge(new Bridge(topology.nodeEId));
        domain.setBridgeElements(topology.elemlist);
        
        NodeDiscoveryBridgeTopology ndbtB= new NodeDiscoveryBridgeTopology(linkd, new Node(topology.nodeBId, null, null, null,location));
        ndbtB.setDomain(domain);
        ndbtB.addUpdatedBFT(domain.getBridge(topology.nodeBId),topology.bftB);
        ndbtB.calculate();

        NodeDiscoveryBridgeTopology ndbtE= new NodeDiscoveryBridgeTopology(linkd, new Node(topology.nodeEId, null, null, null,location));
        ndbtE.setDomain(domain);
        ndbtE.addUpdatedBFT(domain.getBridge(topology.nodeEId),topology.bftE);
        ndbtE.calculate();

        NodeDiscoveryBridgeTopology ndbtD= new NodeDiscoveryBridgeTopology(linkd, new Node(topology.nodeDId, null, null, null,location));
        ndbtD.setDomain(domain);
        ndbtD.addUpdatedBFT(domain.getBridge(topology.nodeDId),topology.bftD);
        ndbtD.calculate();

        NodeDiscoveryBridgeTopology ndbtC= new NodeDiscoveryBridgeTopology(linkd, new Node(topology.nodeCId, null, null, null,location));
        ndbtC.setDomain(domain);
        ndbtC.addUpdatedBFT(domain.getBridge(topology.nodeCId),topology.bftC);
        ndbtC.calculate();

        NodeDiscoveryBridgeTopology ndbtA= new NodeDiscoveryBridgeTopology(linkd, new Node(topology.nodeAId, null, null, null,location));
        ndbtA.setDomain(domain);
        ndbtA.addUpdatedBFT(domain.getBridge(topology.nodeAId),topology.bftA);
        ndbtA.calculate();

        topology.check(domain);

    }

