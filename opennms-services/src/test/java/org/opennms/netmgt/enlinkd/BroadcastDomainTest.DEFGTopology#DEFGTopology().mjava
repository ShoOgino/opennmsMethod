        public DEFGTopology() {
            nodeD.setId(nodeDId);
            BridgeElement elementD = new BridgeElement();
            elementD.setNode(nodeD);
            elementD.setBaseBridgeAddress("dddddddddddd");
            elemDlist.add(elementD);
    
            nodeE.setId(nodeEId);
            BridgeElement elementE = new BridgeElement();
            elementE.setNode(nodeE);
            elementE.setBaseBridgeAddress("ddddddddeddd");
            elemElist.add(elementE);
    
            nodeF.setId(nodeFId);
            BridgeElement elementF = new BridgeElement();
            elementF.setNode(nodeF);
            elementF.setBaseBridgeAddress("ddddddddfddd");
            elemFlist.add(elementF);

            nodeG.setId(nodeGId);
            BridgeElement elementG = new BridgeElement();
            elementG.setNode(nodeG);
            elementG.setBaseBridgeAddress("ddddddd1dddd");
            elemGlist.add(elementG);

            bftD =addBridgeForwardingTableEntry(nodeD,portD,  mac1,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portD,  mac2,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac3,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac4,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac5,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac6,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac7,bftD);
            bftD =addBridgeForwardingTableEntry(nodeD,portDD, mac8,bftD);

            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac1,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac2,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac3,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac4,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portE,  mac5,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portE,  mac6,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac7,bftE);
            bftE =addBridgeForwardingTableEntry(nodeE,portEE, mac8,bftE);

            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac1,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac2,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portF,  mac3,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portF,  mac4,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac5,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac6,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac7,bftF);
            bftF =addBridgeForwardingTableEntry(nodeF,portFF, mac8,bftF);

            bftG =addBridgeForwardingTableEntry(nodeG,portGD, mac1,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGD, mac2,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGF, mac3,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGF, mac4,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGE, mac5,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portGE, mac6,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portG7, mac7,bftG);
            bftG =addBridgeForwardingTableEntry(nodeG,portG8, mac8,bftG);

        }

