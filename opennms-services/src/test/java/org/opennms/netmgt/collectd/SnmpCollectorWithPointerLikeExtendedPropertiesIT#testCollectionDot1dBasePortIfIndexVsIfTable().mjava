    /**
     * Test collection for dot1d-bridge base port entry with indirectly-referenced property
     * pulled over from ifTable, using the value of dot1dBasePortIfIndex as a pointer.
     * 
     * MIB dump provided by Jean-Marie Kubek
     * 
     * @throws Exception the exception
     */
    @Test
    @JUnitCollector(datacollectionType = "snmp", datacollectionConfig = "/org/opennms/netmgt/config/datacollection-config-dot1d-bridge-base-iftable.xml")
    @JUnitSnmpAgent(resource = "/org/opennms/netmgt/snmp/cisco-dot1dbridge-iftable-system-snmpwalk.properties")
    public void testCollectionDot1dBasePortIfIndexVsIfTable() throws Exception {
        System.setProperty("org.opennms.netmgt.collectd.SnmpCollector.limitCollectionToInstances", "true");
        
        CollectionSet collectionSet = m_collectionSpecification.collect(m_collectionAgent);
        assertEquals("collection status", CollectionStatus.SUCCEEDED, collectionSet.getStatus());
        CollectorTestUtils.persistCollectionSet(m_rrdStrategy, m_resourceStorageDao, m_collectionSpecification, collectionSet);

        Map<String, String> map = m_resourceStorageDao.getStringAttributes(ResourcePath.get("snmp", "1", "dot1dBasePortEntry", "46"));
        assertEquals("GigabitEthernet1/0/46", map.get("dot1dBasePortIfDescr"));
        
        map = m_resourceStorageDao.getStringAttributes(ResourcePath.get("snmp", "1", "dot1dBasePortEntry", "52"));
        assertEquals("GigabitEthernet1/0/52", map.get("dot1dBasePortIfDescr"));
        assertEquals("Gi1/0/52", map.get("dot1dBasePortIfName"));
        assertEquals("This is an ifAlias", map.get("dot1dBasePortIfAlias"));
    }

