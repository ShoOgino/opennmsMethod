    public void testCollect() throws Exception {
//        initializeAgent("/org/opennms/netmgt/snmp/bigrouter-walk.properties");
        initializeAgent("/org/opennms/netmgt/snmp/snmpTestData1.properties");

        initializeDataCollectionConfig("/org/opennms/netmgt/config/datacollection-config.xml");

        createSnmpCollector();

        OnmsIpInterface iface = createInterface();

        CollectionSpecification spec = createCollectionSpec("SNMP");

        CollectionAgent agent = createCollectionAgent(iface);
        
        File nodeDir = anticipatePath(getSnmpRrdDirectory(), "1");
        anticipateRrdFiles(nodeDir, "tcpActiveOpens", "tcpAttemptFails");
        anticipateRrdFiles(nodeDir, "tcpPassiveOpens", "tcpRetransSegs");
        anticipateRrdFiles(nodeDir, "tcpCurrEstab", "tcpEstabResets");
        anticipateRrdFiles(nodeDir, "tcpInErrors", "tcpInSegs");
        anticipateRrdFiles(nodeDir, "tcpOutRsts", "tcpOutSegs");
        
        File ifDir = anticipatePath(nodeDir, "fw0");
        anticipateRrdFiles(ifDir, "ifInDiscards", "ifInErrors", "ifInNUcastpkts",
                "ifInOctets", "ifInUcastpkts", "ifOutErrors", "ifOutNUcastPkts",
                "ifOutOctets", "ifOutUcastPkts");
        
        // don't for get to initialize the agent
        spec.initialize(agent);

        // now do the actual collection
        assertEquals("collection status",
                     ServiceCollector.COLLECTION_SUCCEEDED,
                     spec.collect(agent));
        
        
        System.err.println("FIRST COLLECTION FINISHED");
        
        //need a one second time elapse to update the RRD
        Thread.sleep(1000);

        // try collecting again
        assertEquals("collection status",
                ServiceCollector.COLLECTION_SUCCEEDED,
                spec.collect(agent));

        System.err.println("SECOND COLLECTION FINISHED");

        // release the agent
        spec.release(agent);
        
        // Wait for any RRD writes to finish up
        Thread.sleep(1000);
    }

