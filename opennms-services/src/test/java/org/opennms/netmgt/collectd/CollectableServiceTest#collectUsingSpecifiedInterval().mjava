    /**
     * Verifies that CollectableService is rescheduled according
     * to the specification's interval when the "strict interval" property is disabled
     * (which is by default).
     */
    @Test
    public void collectUsingSpecifiedInterval() throws CollectionInitializationException, CollectionException, IOException {
        createCollectableService();

        Long serviceIntervalInMs = 300 * 1000L;
        Long collectionDelayInMs = 1 * 1000L;
        when(spec.getInterval()).thenReturn(serviceIntervalInMs);
        when(spec.collect(any())).then(new Answer<CollectionSet>() {
            @Override
            public CollectionSet answer(InvocationOnMock invocation) throws InterruptedException {
                Thread.sleep(collectionDelayInMs);
                return null;
            }
        });

        ArgumentCaptor<Long> intervalCaptor = ArgumentCaptor.forClass(Long.class);
        service.run();
        verify(scheduler, times(1)).schedule(intervalCaptor.capture(), any());
        assertEquals(serviceIntervalInMs, intervalCaptor.getValue());
    }

