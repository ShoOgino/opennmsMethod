    @Test
    @JUnitCollector(
                    datacollectionConfig = "/org/opennms/netmgt/config/datacollection-config.xml", 
                    datacollectionType = "snmp",
                    anticipateFiles = {
                            "1",
                            "1/fw0"
                    },
                    anticipateRrds = {
                            "1/tcpActiveOpens",
                            "1/tcpAttemptFails",
                            "1/tcpPassiveOpens",
                            "1/tcpRetransSegs",
                            "1/tcpCurrEstab",
                            "1/tcpEstabResets",
                            "1/tcpInErrors",
                            "1/tcpInSegs",
                            "1/tcpOutRsts",
                            "1/tcpOutSegs",
                            "1/fw0/ifInDiscards",
                            "1/fw0/ifInErrors",
                            "1/fw0/ifInNUcastpkts",
                            "1/fw0/ifInOctets",
                            "1/fw0/ifInUcastpkts",
                            "1/fw0/ifOutErrors",
                            "1/fw0/ifOutNUcastPkts",
                            "1/fw0/ifOutOctets",
                            "1/fw0/ifOutUcastPkts"
                    }
            )
    @JUnitSnmpAgent(resource = "/org/opennms/netmgt/snmp/snmpTestData1.properties")
    public void testCollect() throws Exception {
        System.setProperty("org.opennms.netmgt.collectd.SnmpCollector.limitCollectionToInstances", "true");

        // don't forget to initialize the agent
        m_collectionSpecification.initialize(m_collectionAgent);

        // now do the actual collection
        CollectionSet collectionSet = m_collectionSpecification.collect(m_collectionAgent);
        assertEquals("collection status",
                     ServiceCollector.COLLECTION_SUCCEEDED,
                     collectionSet.getStatus());
        CollectorTestUtils.persistCollectionSet(m_rrdStrategy, m_resourceStorageDao, m_collectionSpecification, collectionSet);

        System.err.println("FIRST COLLECTION FINISHED");

        //need a one second time elapse to update the RRD
        Thread.sleep(1000);

        // try collecting again
        assertEquals("collection status",
                     ServiceCollector.COLLECTION_SUCCEEDED,
                     m_collectionSpecification.collect(m_collectionAgent).getStatus());

        System.err.println("SECOND COLLECTION FINISHED");

        // release the agent
        m_collectionSpecification.release(m_collectionAgent);
    }

