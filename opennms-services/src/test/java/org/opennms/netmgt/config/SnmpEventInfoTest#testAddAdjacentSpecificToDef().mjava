    /**
     * This tests the merging of a new specific into a definition that already contains a specific
     * that is adjacent.  The two specifics should be converted to a single range in the definition.
     * 
     * @throws MarshalException
     * @throws ValidationException
     * @throws IOException 
     */
    public final void testAddAdjacentSpecificToDef() throws IOException {
        
        String snmpConfigXml = "<?xml version=\"1.0\"?>\n" + 
        "<snmp-config retry=\"3\" timeout=\"800\"\n" + 
        "   read-community=\"public\" write-community=\"private\">\n" + 
        "   <definition version=\"v2c\">\n" + 
        "       <specific>192.168.0.5</specific>\n" + 
        "   </definition>\n" + 
        "\n" + 
        "</snmp-config>\n" + 
        "";

        SnmpPeerFactory.setInstance(new SnmpPeerFactory(new ByteArrayResource(snmpConfigXml.getBytes())));
        SnmpConfig config = SnmpPeerFactory.getSnmpConfig();
        
        SnmpEventInfo info = new SnmpEventInfo();
        info.setVersion("v2c");
        info.setFirstIPAddress("192.168.0.6");
        
        MergeableDefinition configDef = new MergeableDefinition(SnmpPeerFactory.getSnmpConfig().getDefinition(0));
        MergeableDefinition matchingDef = SnmpConfigManager.findDefMatchingAttributes(config, info.createDef());
        assertNotNull(matchingDef);
        assertFalse(matchingDef.hasMatchingSpecific(info.getFirstIPAddress()));
        assertEquals(1, matchingDef.getConfigDef().getSpecificCount());
        assertEquals(0, matchingDef.getConfigDef().getRangeCount());
        assertNull(configDef.getConfigDef().getReadCommunity());
        
        SnmpConfigManager.mergeIntoConfig(config, info.createDef());
//      String config = SnmpPeerFactory.marshallConfig();
//      System.err.println(config);
        
        assertEquals(matchingDef.getConfigDef(), SnmpConfigManager.findDefMatchingAttributes(config, info.createDef()).getConfigDef());
        assertFalse(matchingDef.hasMatchingSpecific(info.getFirstIPAddress()));
        assertEquals(0, matchingDef.getConfigDef().getSpecificCount());
        assertEquals(1, matchingDef.getConfigDef().getRangeCount());
        assertEquals("192.168.0.5", matchingDef.getConfigDef().getRange(0).getBegin());
        assertEquals("192.168.0.6", matchingDef.getConfigDef().getRange(0).getEnd());
        assertNull(configDef.getConfigDef().getReadCommunity());
    }

