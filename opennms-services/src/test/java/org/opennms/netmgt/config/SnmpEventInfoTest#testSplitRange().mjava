    /**
     * This tests the ability to add a new range of IPs that create a new definition and these IPs
     * were previously defined withing the a range of a current definition.  The result should be
     * that the previous range is split into 2 ranges and the new range is now contained in a new
     * separate definition.
     * 
     * @throws MarshalException
     * @throws ValidationException
     * @throws IOException 
     */
    public void testSplitRange() throws MarshalException, ValidationException, IOException {
        
        String snmpConfigXml = "<?xml version=\"1.0\"?>\n" + 
        "<snmp-config retry=\"3\" timeout=\"800\"\n" + 
        "   read-community=\"public\" write-community=\"private\">\n" + 
        "   <definition version=\"v2c\">\n" + 
        "       <range begin=\"192.168.1.100\" end=\"192.168.1.200\"/>" + 
        "   </definition>\n" + 
        "\n" + 
        "</snmp-config>\n" + 
        "";

        Reader rdr = new StringReader(snmpConfigXml);
        SnmpPeerFactory.setInstance(new SnmpPeerFactory(rdr));
        SnmpConfigManager mgr = new SnmpConfigManager(SnmpPeerFactory.getSnmpConfig());

        SnmpEventInfo info = new SnmpEventInfo();
        info.setVersion("v1");
        info.setFirstIPAddress("192.168.1.120");
        info.setLastIPAddress("192.168.1.130");

        mgr.mergeIntoConfig(info.createDef());
        
//        String config = SnmpPeerFactory.marshallConfig();
//        System.err.println(config);
        
        assertEquals(2, mgr.getConfig().getDefinitionCount());
        assertEquals("192.168.1.100", mgr.getConfig().getDefinition(0).getRange(0).getBegin());
        assertEquals("192.168.1.119", mgr.getConfig().getDefinition(0).getRange(0).getEnd());
        
        assertEquals("192.168.1.131", mgr.getConfig().getDefinition(0).getRange(1).getBegin());
        assertEquals("192.168.1.200", mgr.getConfig().getDefinition(0).getRange(1).getEnd());
        
        assertEquals("192.168.1.120", mgr.getConfig().getDefinition(1).getRange(0).getBegin());
        assertEquals("192.168.1.130", mgr.getConfig().getDefinition(1).getRange(0).getEnd());
        
    }

