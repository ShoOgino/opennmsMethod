    /**
     * This tests the addition of a new specific definition that is the same address as the beginning of
     * a range in a current definition.
     * 
     * @throws MarshalException
     * @throws ValidationException
     * @throws IOException 
     */
    public final void testNewSpecificSameAsBeginInOldDef() throws MarshalException, ValidationException, IOException {

        String amiConfigXml = "<?xml version=\"1.0\"?>\n" + 
        "<nsclient-config retry=\"3\" timeout=\"800\"\n" + 
        "   password=\"password\">\n" + 
        "   <definition>\n" + 
        "       <range begin=\"192.168.0.6\" end=\"192.168.0.12\"/>\n" + 
        "       <specific>192.168.0.6</specific>\n" + 
        "   </definition>\n" + 
        "\n" + 
        "</nsclient-config>\n" + 
        "";

        NSClientPeerFactory factory = new NSClientPeerFactory(new StringReader(amiConfigXml));

        assertEquals(1, factory.getConfig().getDefinitionCount());
        assertEquals(1, factory.getConfig().getDefinition(0).getSpecificCount());
        assertEquals(1, factory.getConfig().getDefinition(0).getRangeCount());

        factory.optimize();

        assertEquals(1, factory.getConfig().getDefinitionCount());
        assertEquals(0, factory.getConfig().getDefinition(0).getSpecificCount());
        assertEquals(1, factory.getConfig().getDefinition(0).getRangeCount());
        assertEquals("192.168.0.6", factory.getConfig().getDefinition(0).getRange(0).getBegin());
        assertEquals("192.168.0.12", factory.getConfig().getDefinition(0).getRange(0).getEnd());
    }

