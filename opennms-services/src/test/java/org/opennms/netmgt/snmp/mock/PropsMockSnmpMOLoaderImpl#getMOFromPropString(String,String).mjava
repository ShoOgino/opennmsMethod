	protected static ManagedObject getMOFromPropString(String oidStr, String valStr) {
		OID moOID = new OID(oidStr);
		String moTypeStr = valStr.substring(0, valStr.indexOf(":"));
		String moValStr = valStr.substring(valStr.indexOf(":") + 2);
		ManagedObject newMO;
		if (moTypeStr.equals("STRING")) {
			newMO = new MOScalar(moOID, MOAccessImpl.ACCESS_READ_ONLY, new OctetString(moValStr));
		} else if (moTypeStr.equals("Hex-STRING")) {
			newMO = new MOScalar(moOID, MOAccessImpl.ACCESS_READ_ONLY, OctetString.fromHexString(moValStr));
		} else if (moTypeStr.equals("INTEGER") || moTypeStr.equals("Gauge32") || moTypeStr.equals("Counter32")) {
			newMO = new MOScalar(moOID, MOAccessImpl.ACCESS_READ_ONLY, new Integer32(Integer.parseInt(moValStr)));			
		} else if (moTypeStr.equals("TimeTicks")) {
			Integer ticksInt = Integer.parseInt( moValStr.substring( moValStr.indexOf("(") + 1, moValStr.indexOf(")") ) );
			newMO = new MOScalar(moOID, MOAccessImpl.ACCESS_READ_ONLY, new Integer32(ticksInt));
		} else if (moTypeStr.equals("OID")) {
			newMO = new MOScalar(moOID, MOAccessImpl.ACCESS_READ_ONLY, new OID(moValStr));
		} else {
			// Punt, assume it's a String
			newMO = new MOScalar(moOID, MOAccessImpl.ACCESS_READ_ONLY, new OctetString(moValStr)); 
		}
		return newMO;
	}

