    public void FIXMEtestPersistAlarm() throws Exception {
        
        //there should be no alarms in the alarms table
        assertEquals(0, m_db.countRows("select * from alarms"));
        
        MockNode node = m_network.getNode(1);
        sendNodeDownEvent(null, node);
        sleep(1000);
        
        //this should be the first occurrence of this alarm
        //there should be 1 alarm now
        assertEquals(1, m_db.countRows("select * from alarms"));

        //this should be the second occurrence and shouldn't create another row
        //there should still be only 1 alarm
        sendNodeDownEvent(null, node);
        sleep(1000);
        assertEquals(1, m_db.countRows("select * from alarms"));
        
        //this should be a new alarm because of the new key
        //there should now be 2 alarms
        sendNodeDownEvent("DontReduceThis", node);
        sleep(1000);
        assertEquals(2, m_db.countRows("select * from alarms"));
        
        MockUtil.println("Going for the print of the counter column");

        //TODO: Change this to use Querier class
        Connection conn = null;
        PreparedStatement stmt = null;
        try {
            conn = m_db.getConnection();
            stmt = conn.prepareStatement("select reductionKey, sum(counter) from alarms group by reductionKey");
            ResultSet rs = stmt.executeQuery();
            
            //should be 2 rows
            while( rs.next()) {
                MockUtil.println("count for reductionKey: "+rs.getString(1)+" is: "+rs.getObject(2));
            }
            
        } finally {
            stmt.close();
            conn.close();
        }
    }

