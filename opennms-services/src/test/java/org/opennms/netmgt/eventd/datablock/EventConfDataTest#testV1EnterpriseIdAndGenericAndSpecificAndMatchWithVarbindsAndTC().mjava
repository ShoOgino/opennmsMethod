	// FIXME
	public void testV1EnterpriseIdAndGenericAndSpecificAndMatchWithVarbindsAndTC()
	throws Exception {
		
		/*
		 * This tests fails because the varbind in this example needs to have a
		 * SNMP Textual Convention applied to correctly turn the octects from the
		 * varbind into a display string formatted as a macaddress of the form
		 * xx:xx:xx:xx:xx:xx per the DISPLAY-HINT in the mib. There are two problems
		 * with the current method for doing this:
		 * 1.  The resulting octet value is decoded from Base64 and placed into a 
		 *     String which consequently get decodec to unicode characters and loses
		 *     info.
		 * 2.  The DISPLAY-HINT  information that is encoded in the event conf file is 
		 *     lost due to the data and code structures of the matching code in 
		 *     EventConfData.getEvent() this needs to be enhanced to use a 'wrapped' object
		 *     style to allow the matching and decoding to remain close to the data
		 *     that can be used to do the the decoding properly
		 */

		LinkedHashMap<String, String> varbinds = new LinkedHashMap <String, String>();
		byte[] macAddr = new byte[]{(byte)0x00,(byte)0x14,(byte)0xf1,(byte)0xad,(byte)0xa7,(byte)0x50};

		String encoded = new String(Base64.encodeBase64(macAddr));

		varbinds.put(".1.3.6.1.4.1.14179.2.6.2.20.0", encoded);
		
		anticipateAndSend("uei.opennms.org/vendor/cisco/bsnAPNoiseProfileUpdatedToPass",
				"v1", ".1.3.6.1.4.1.14179.2.6.3", 6, 38, "192.168.2.1", varbinds);
	}

