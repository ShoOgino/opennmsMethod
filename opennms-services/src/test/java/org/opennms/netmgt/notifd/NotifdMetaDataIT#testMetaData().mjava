    @Test
    @Transactional
    public void testMetaData() throws Exception {
        // get the entities
        final OnmsNode node = databasePopulator.getNodeDao().get(1);
        final OnmsIpInterface ipInterface = node.getInterfaceWithAddress(InetAddress.getByName("192.168.1.1"));
        final OnmsMonitoredService monitoredService = ipInterface.getMonitoredServiceByServiceType("ICMP");

        // assure that all are non-null
        Assert.assertNotNull(node);
        Assert.assertNotNull(ipInterface);
        Assert.assertNotNull(monitoredService);

        // add specific meta-data to node, interface and service
        node.addMetaData("test", "virtual", "awesome");
        ipInterface.addMetaData("test", "devjam", "text");
        monitoredService.addMetaData("test", "2020", "message");

        // create a dummy notification
        final Notification notification = new Notification();
        notification.setTextMessage("This is an ${test:virtual} ${test:devjam} ${test:2020}.");

        // construct the event with node, interface and service associated
        final Event event = new EventBuilder()
                .setUei(EventConstants.NODE_LOST_SERVICE_EVENT_UEI)
                .setMonitoredService(monitoredService)
                .getEvent();

        // process the data
        final Map<String, String> map = m_eventProcessor.buildParameterMap(notification, event, 42);

        // check for correct message
        Assert.assertEquals("This is an awesome text message.", map.get(NotificationManager.PARAM_TEXT_MSG));
    }

