    public void testQueryManager() throws Exception {
        MockQueryManager queryManager = new MockQueryManager(m_network);
        assertNotNull(queryManager);

        assertTrue(queryManager.activeServiceExists("Test", 1, "192.168.1.1", "ICMP"));
        assertFalse(queryManager.activeServiceExists("Test", 1, "192.168.1.17", "ICMP"));

        MockInterface iface = m_network.getInterface(1, "192.168.1.2");
        Collection<MockService> expectedSvcs = getServicesForInterface(iface);

        List<Integer> svcs = queryManager.getActiveServiceIdsForInterface("192.168.1.2");

        for (MockService svc : expectedSvcs) {
            assertTrue(svcs.contains(Integer.valueOf(svc.getId())));
        }

        List<IfKey> ifKeys = queryManager.getInterfacesWithService("HTTP");
        MockInterface httpIf = m_network.getInterface(2, "192.168.1.3");
        assertEquals(2, ifKeys.size());
        IfKey key = ifKeys.get(0);
        assertEquals(httpIf.getNode().getNodeId(), key.getNodeId());
        assertEquals(httpIf.getIpAddr(), key.getIpAddr());

        int findNodeId = queryManager.getNodeIDForInterface("192.168.1.3");
        assertEquals(httpIf.getNode().getNodeId(), findNodeId);

        assertEquals("Router", queryManager.getNodeLabel(1));

        assertEquals(2, queryManager.getServiceCountForInterface("192.168.1.1"));

    }

