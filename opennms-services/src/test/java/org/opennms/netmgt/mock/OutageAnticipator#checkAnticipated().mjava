    public synchronized boolean checkAnticipated() {
        int openCount = m_db.countOpenOutages();
        int outageCount = m_db.countOutages();
        
        if (openCount != m_expectedOpenCount || outageCount != m_expectedOutageCount) {
            return false;
        } 
        
        if (m_pendingOpens.size() != 0 || m_pendingCloses.size() != 0) 
            return false;
        
        Set currentOutages = new HashSet(m_db.getOutages());
        if (!m_expectedOutages.equals(currentOutages)) {
            for (Iterator expectedIt = m_expectedOutages.iterator(); expectedIt.hasNext();) {
                Outage expectedOutage = (Outage) expectedIt.next();
                if (currentOutages.contains(expectedOutage)) {
                    currentOutages.remove(expectedOutage);
                } else {
                    System.err.println("Expected outage "+expectedOutage.toDetailedString()+" not in current Set");
                }
            }
            for (Iterator unexpectedId = currentOutages.iterator(); unexpectedId.hasNext();) {
                Outage unexpecedOutage = (Outage) unexpectedId.next();
                System.err.println("Unexpected outage "+unexpecedOutage.toDetailedString()+" in database");
            }
            return false;
        }
        return true;
    }

