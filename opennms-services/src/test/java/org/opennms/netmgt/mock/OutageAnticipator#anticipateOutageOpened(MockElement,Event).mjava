    /**
     * @param element
     * @param lostService
     */
    public synchronized List<Event> anticipateOutageOpened(MockElement element, final Event lostService) {
        final List<Event> outageCreatedEvents = new ArrayList<Event>();
        MockVisitor outageCounter = new MockVisitorAdapter() {
            @Override
            public void visitService(MockService svc) {
                if (!m_db.hasOpenOutage(svc) || anticipatesClose(svc)) {
                    m_expectedOpenCount++;
                    m_expectedOutageCount++;
                    outageCreatedEvents.add(svc.createOutageCreatedEvent());
                    Outage outage = new Outage(svc);
                    MockUtil.println("Anticipating outage open: "+outage);
                    addToOutageList(m_pendingOpens, lostService, outage);
                }
            }
        };
        element.visit(outageCounter);
        return outageCreatedEvents;
    }

