    /*
     * cisco1700 --- cisco1700b ??????
     * cisco1700b clearly does not have relation with this net...it has the same address
     * of cisco2691......and the link is between cisco1700 and cisco2691
     * what a fake....very interesting test.....
     * CDP now fails....but iproute discovery found a right route information 
     * no way of fixing this in the actual code implementation
     * 
     */
	@Test
    @JUnitSnmpAgents(value={
        @JUnitSnmpAgent(host=CISCO1700B_IP, port=161, resource=CISCO1700B_SNMP_RESOURCE),
        @JUnitSnmpAgent(host=CISCO1700_IP, port=161, resource=CISCO1700_SNMP_RESOURCE)
    })
    public void testSimpleFakeConnection() throws Exception {
	m_nodeDao.save(builder.getCisco1700());
	m_nodeDao.save(builder.getCisco1700b());
	m_nodeDao.save(builder.getExampleCom());
        m_nodeDao.flush();

        final OnmsNode cisco1700 = m_nodeDao.findByForeignId("linkd", CISCO1700_NAME);
        final OnmsNode cisco1700b = m_nodeDao.findByForeignId("linkd", CISCO1700B_NAME);

        assertTrue(m_linkd.scheduleNodeCollection(cisco1700.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(cisco1700b.getId()));

        assertTrue(m_linkd.runSingleSnmpCollection(cisco1700.getId()));
        assertTrue(m_linkd.runSingleSnmpCollection(cisco1700b.getId()));

        for (LinkableNode node: m_linkd.getLinkableNodesOnPackage("example1")) {
        	int nodeid = node.getNodeId();
        	printNode(m_nodeDao.get(nodeid));
        	for (RouterInterface route: node.getRouteInterfaces()) {
        		printRouteInterface(nodeid, route);
        	}
        	
        	for (CdpInterface cdp: node.getCdpInterfaces()) {
        		printCdpInterface(nodeid, cdp);
        	}
        		
        }
        assertTrue(m_linkd.runSingleLinkDiscovery("example1"));
        
        final List<DataLinkInterface> ifaces = m_dataLinkInterfaceDao.findAll();
        for (final DataLinkInterface link: ifaces) {
            printLink(link);
        }
        assertEquals("we should have found 1 data link", 1, ifaces.size());
    }

