    @Test
    @JUnitSnmpAgents(value={
            @JUnitSnmpAgent(host=SWITCH1_IP, port=161, resource=SWITCH1_SNMP_RESOURCE)
    })
    public void testSwicth1CiscoVlanTableCollection() throws Exception {
        
        String name = "vlanTable";
        CiscoVlanTable m_vlan = new CiscoVlanTable(InetAddressUtils.addr(SWITCH1_IP));
        CollectionTracker[] tracker = new CollectionTracker[0];
        tracker = new CollectionTracker[] {m_vlan};
        SnmpAgentConfig snmpAgent = SnmpPeerFactory.getInstance().getAgentConfig(InetAddressUtils.addr(SWITCH1_IP));
        SnmpWalker walker = SnmpUtils.createWalker(snmpAgent, name, tracker);
        walker.start();

        try {
                walker.waitFor();
        } catch (final InterruptedException e) {

        }

        for (SnmpStore store: m_vlan) {
                CiscoVlanTableEntry ent = (CiscoVlanTableEntry) store;
            System.out.println("VLAN-----Start");
                System.out.println("vlan index: " + ent.getVlanIndex());
            System.out.println("vlan name: " + ent.getVlanName());
            System.out.println("vlan type: " + ent.getVlanType());
            System.out.println("vlan status: " + ent.getVlanStatus()); 
            System.out.println("VLAN-----End");
            
        }

        
        assertEquals(10, m_vlan.size());
        assertEquals(6, m_vlan.getVlansForSnmpCollection().size());
    }        

