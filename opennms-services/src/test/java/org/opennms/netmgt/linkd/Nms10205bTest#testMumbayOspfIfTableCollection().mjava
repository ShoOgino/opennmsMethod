    @Test
    @JUnitSnmpAgents(value = {
            @JUnitSnmpAgent(host = MUMBAI_IP, port = 161, resource = MUMBAI_SNMP_RESOURCE_B)
    })
    public void testMumbayOspfIfTableCollection() throws Exception {

        String name = "ospfIfTable";
        OspfIfTable m_ospfIfTable = new OspfIfTable(InetAddressUtils.addr(MUMBAI_IP));
        CollectionTracker[] tracker = new CollectionTracker[0];
        tracker = new CollectionTracker[]{m_ospfIfTable};
        SnmpAgentConfig snmpAgent = SnmpPeerFactory.getInstance().getAgentConfig(InetAddressUtils.addr(MUMBAI_IP));
        SnmpWalker walker = SnmpUtils.createWalker(snmpAgent, name, tracker);
        walker.start();

        try {
            walker.waitFor();
        } catch (final InterruptedException e) {

        }

        final Collection<OspfIfTableEntry> ospfifTableCollection = m_ospfIfTable.getEntries();
        assertEquals(6, ospfifTableCollection.size());
        for (final OspfIfTableEntry entry : ospfifTableCollection) {
            assertEquals(0, entry.getOspfAddressLessIf().intValue());
            InetAddress ospfIpAddress = entry.getOspfIpAddress();
            assertEquals(true, MUMBAI_IP_IF_MAP.containsKey(ospfIpAddress));
        }
    }

