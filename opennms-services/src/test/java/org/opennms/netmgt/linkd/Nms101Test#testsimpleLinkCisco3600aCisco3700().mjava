    /*
     *  Discover the following topology
     *  The CDP protocol must found all the links
     *  Either Ip Route must found links
     * 
     *  laptop
     *     |
     *  cisco7200a (2) --- (4) cisco7200b (1) --- (4) cisco2691 (2) --- (2) cisco1700
     *                     (2)                    (1)    
     *                      |                      |
     *                     (1)                    (2)
     *                  cisco3700  (3) --- (1)  cisco3600      
     */	
    @Test
    @JUnitSnmpAgents(value={
            @JUnitSnmpAgent(host=CISCO3700_IP, port=161, resource=CISCO3700_SNMP_RESOURCE),
            @JUnitSnmpAgent(host=CISCO3600_IP, port=161, resource=CISCO3600_SNMP_RESOURCE)
    })
    public void testsimpleLinkCisco3600aCisco3700() throws Exception {

    	m_nodeDao.save(builder.getCisco3700());
    	m_nodeDao.save(builder.getCisco3600());
    	m_nodeDao.flush();
    	
        final OnmsNode cisco3600 = m_nodeDao.findByForeignId("linkd", CISCO3600_NAME);
        final OnmsNode cisco3700 = m_nodeDao.findByForeignId("linkd", CISCO3700_NAME);
        assertTrue(m_linkd.scheduleNodeCollection(cisco3700.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(cisco3600.getId()));
 
        assertTrue(m_linkd.runSingleSnmpCollection(cisco3700.getId()));
        assertTrue(m_linkd.runSingleSnmpCollection(cisco3600.getId()));
 
        assertTrue(m_linkd.runSingleLinkDiscovery("example1"));
        
        final List<DataLinkInterface> ifaces = m_dataLinkInterfaceDao.findAll();
        for (final DataLinkInterface link: ifaces) {
            if (link.getProtocol() == DiscoveryProtocol.iproute)
                checkLink(cisco3600, cisco3700, 1, 3, link);
            else if (link.getProtocol() ==  DiscoveryProtocol.cdp)
                checkLink(cisco3600, cisco3700, 1, 3, link);
        }

        assertEquals("we should have found 2 data links", 2, ifaces.size());
    }

