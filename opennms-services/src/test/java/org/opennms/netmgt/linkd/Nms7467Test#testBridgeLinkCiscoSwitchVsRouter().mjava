    // mrmakay:172.20.1.1:13      -------- ciscoswitch:172.20.1.7:52 ---bridge
    // mrmakay:172.20.2.1:12      -------- ciscoswitch:172.20.1.7:52 ---bridge 
    // the point is that all three interface share the same mac address "001f6cd034e7"
    @Test
    @JUnitSnmpAgents(value={
            @JUnitSnmpAgent(host=CISCO_WS_C2948_IP, port=161, resource=CISCO_WS_C2948_SNMP_RESOURCE),
            @JUnitSnmpAgent(host=CISCO_C870_IP, port=161, resource=CISCO_C870_SNMP_RESOURCE)
    })
    public void testBridgeLinkCiscoSwitchVsRouter() throws Exception {

        Package example1 = m_linkdConfig.getPackage("example1");
        example1.setUseBridgeDiscovery(true);
        example1.setUseLldpDiscovery(false);
        example1.setUseOspfDiscovery(false);
        example1.setUseIsisDiscovery(false);
        example1.setUseIpRouteDiscovery(false);
        example1.setUseCdpDiscovery(false);
        example1.setForceIpRouteDiscoveryOnEthernet(false);
        example1.setSaveRouteTable(false);
        example1.setSaveStpNodeTable(false);
        example1.setSaveStpInterfaceTable(false);

        m_nodeDao.save(builder.getCiscoC870());
        m_nodeDao.save(builder.getCiscoWsC2948());

        m_nodeDao.flush();


        final OnmsNode ciscorouter = m_nodeDao.findByForeignId("linkd", CISCO_C870_NAME);
        final OnmsNode ciscows = m_nodeDao.findByForeignId("linkd", CISCO_WS_C2948_NAME);

        assertTrue(m_linkd.scheduleNodeCollection(ciscows.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(ciscorouter.getId()));

        assertTrue(m_linkd.runSingleSnmpCollection(ciscorouter.getId()));
        assertTrue(m_linkd.runSingleSnmpCollection(ciscows.getId()));
        
        assertTrue(m_linkd.runSingleLinkDiscovery("example1"));

        for (OnmsAtInterface onmsat: m_atInterfaceDao.findAll()) {
            printAtInterface(onmsat);
        }
        for (DataLinkInterface link: m_dataLinkInterfaceDao.findAll())
            printLink(link);
        
        assertEquals(2,m_dataLinkInterfaceDao.countAll());

    }

