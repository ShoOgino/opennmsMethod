    @Test
    @JUnitSnmpAgents(value={
            @JUnitSnmpAgent(host=NETGEAR_SW_108_IP, port=161, resource="classpath:linkd/"+NETGEAR_SW_108_IP+"-walk.txt"),
    })
    @Transactional
    public final void testNETGEARSW108CapsdCollection() throws MarshalException, ValidationException, IOException {
        m_capsd.init();
        m_capsd.start();
        m_capsd.scanSuspectInterface(NETGEAR_SW_108_IP);
        
        List<OnmsIpInterface> ips = m_interfaceDao.findByIpAddress(NETGEAR_SW_108_IP);
        assertTrue("Has only one ip interface", ips.size() == 1);

        OnmsIpInterface ip = ips.get(0);

        assertTrue("The ifindex " + ip.getIfIndex() +" is not equal to 1", ip.getIfIndex() == 1);
        assertTrue("The snmp interface is null",ip.getSnmpInterface() != null);
        assertTrue("The mac address is null",ip.getSnmpInterface().getPhysAddr() != null);
        assertTrue("The mac address: " + ip.getSnmpInterface().getPhysAddr() +",  is not corresponding to 00223ff00b7c"
                   ,ip.getSnmpInterface().getPhysAddr().equals("00223ff00b7c"));

        for (OnmsSnmpInterface snmpinterface: ip.getNode().getSnmpInterfaces()) {
            assertTrue("The mac address is null", snmpinterface.getPhysAddr() != null);
            assertTrue("The mac must be valid", snmpinterface.getPhysAddr().length() == 12);
            assertTrue("The mac for ifindex must correspond", 
                       snmpinterface.getPhysAddr().equals(NETGEAR_SW_108_IF_MAC_MAP.get(snmpinterface.getIfIndex())));
        }
        
//        assertTrue(!m_linkd.scheduleNodeCollection(ip.getNode().getId()));
//        assertTrue(m_linkd.runSingleSnmpCollection(ip.getNode().getId()));

        m_capsd.stop();

        
    }

