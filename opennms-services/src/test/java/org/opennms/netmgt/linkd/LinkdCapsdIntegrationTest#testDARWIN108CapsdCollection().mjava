    @Test
    @JUnitSnmpAgents(value={
            @JUnitSnmpAgent(host=DARWIN_10_8_IP, port=161, resource="classpath:linkd/"+DARWIN_10_8_IP+"-walk.txt"),
    })
    @Transactional
    public final void testDARWIN108CapsdCollection() throws MarshalException, ValidationException, IOException {
        m_capsd.init();
        m_capsd.start();
        m_capsd.scanSuspectInterface(DARWIN_10_8_IP);
        

        List<OnmsIpInterface> ips = m_interfaceDao.findByIpAddress(DARWIN_10_8_IP);
        assertTrue("Has one ip primary interface", ips.size() == 1);

        OnmsIpInterface ip = ips.get(0);

        assertTrue("ipinterface is not null", ip != null);
        assertTrue("has ifindex", ip.getIfIndex() != null);
        assertTrue("The ifindex" + ip.getIfIndex() +" is not equal to 4", ip.getIfIndex() == 4);
        assertTrue("The snmp interface is null",ip.getSnmpInterface() != null);
        assertTrue("The mac address is null",ip.getSnmpInterface().getPhysAddr() != null);
        assertTrue("The mac address: " + ip.getSnmpInterface().getPhysAddr() +",  is not corresponding to 0026b0ed8fb8"
                   ,ip.getSnmpInterface().getPhysAddr().equals("0026b0ed8fb8"));

        for (OnmsSnmpInterface snmpinterface: ip.getNode().getSnmpInterfaces()) {
            if (snmpinterface.getIfIndex() <= 3)
                assertTrue("The mac address is not null for ifindex "+ snmpinterface.getIfIndex(), snmpinterface.getPhysAddr() == null);
            else {
            assertTrue("The mac address is null", snmpinterface.getPhysAddr() != null);
            assertTrue("The mac must be valid", snmpinterface.getPhysAddr().length() == 12);
            assertTrue("The mac for ifindex must correspond: " + snmpinterface.getPhysAddr(), 
                       snmpinterface.getPhysAddr().equals(DARWIN_10_8_IF_MAC_MAP.get(snmpinterface.getIfIndex())));
            }
        }
        m_capsd.stop();        
    }

