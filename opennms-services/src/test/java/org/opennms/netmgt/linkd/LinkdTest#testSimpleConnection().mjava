    @Test
    @JUnitSnmpAgents(value={
        @JUnitSnmpAgent(host="10.1.5.1", port=161, resource="classpath:linkd/cisco1700b.properties"),
        @JUnitSnmpAgent(host="10.1.5.2", port=161, resource="classpath:linkd/cisco1700.properties")
    })
    public void testSimpleConnection() throws Exception {
        m_nodeDao.delete(m_nodeDao.findByForeignId("linkd", "cisco2691"));
        m_nodeDao.flush();

        final NetworkBuilder nb = new NetworkBuilder();
        nb.addNode("cisco1700b").setForeignSource("linkd").setForeignId("cisco1700b").setSysObjectId(".1.3.6.1.4.1.9.1.200").setType("A");
        nb.addInterface("10.1.5.1").setIsSnmpPrimary("P").setIsManaged("M")
            .addSnmpInterface(2).setIfType(6).setCollectionEnabled(false).setIfSpeed(100000000).setPhysAddr("c00397a70000");
        m_nodeDao.save(nb.getCurrentNode());
        m_nodeDao.flush();

        final OnmsNode cisco1700 = m_nodeDao.findByForeignId("linkd", "cisco1700");
        final OnmsNode cisco1700b = m_nodeDao.findByForeignId("linkd", "cisco1700b");

        LogUtils.debugf(this, "cisco1700  = %s", cisco1700);
        LogUtils.debugf(this, "cisco1700b = %s", cisco1700b);

        assertTrue(m_linkd.scheduleNodeCollection(cisco1700.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(cisco1700b.getId()));

        assertTrue(m_linkd.runSingleCollection(cisco1700.getId()));
        assertTrue(m_linkd.runSingleCollection(cisco1700b.getId()));

        final List<DataLinkInterface> ifaces = m_dataLinkInterfaceDao.findAll();
        assertEquals("we should have found 1 data link", 1, ifaces.size());
        for (final DataLinkInterface link: ifaces) {
            printLink(link);
        }
    }

