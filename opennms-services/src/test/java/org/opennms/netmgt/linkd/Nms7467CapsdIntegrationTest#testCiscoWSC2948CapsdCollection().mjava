    @Test
    @JUnitSnmpAgents(value={
            @JUnitSnmpAgent(host=CISCO_WS_C2948_IP, port=161, resource="classpath:linkd/nms7467"+CISCO_WS_C2948_IP+"-walk.txt")
    })
    @Transactional
    public final void testCiscoWSC2948CapsdCollection() throws MarshalException, ValidationException, IOException {
        m_capsd.init();
        m_capsd.start();
        m_capsd.scanSuspectInterface(CISCO_WS_C2948_IP);
        

        List<OnmsIpInterface> ips = m_interfaceDao.findByIpAddress(CISCO_WS_C2948_IP);
        assertTrue("Has only one ip interface", ips.size() == 1);

        OnmsIpInterface ip = ips.get(0);

        assertTrue("The ifindex" + ip.getIfIndex() +" is not equal to 3", ip.getIfIndex() == 3);
        assertTrue("The snmp interface is null",ip.getSnmpInterface() != null);
        assertTrue("The mac address is null",ip.getSnmpInterface().getPhysAddr() != null);
        assertTrue("The mac address: " + ip.getSnmpInterface().getPhysAddr() +",  is not corresponding to 0002baaacffe"
                   ,ip.getSnmpInterface().getPhysAddr().equals("0002baaacffe"));

        for (OnmsSnmpInterface snmpinterface: ip.getNode().getSnmpInterfaces()) {
            assertTrue("The mac address is null", snmpinterface.getPhysAddr() != null);
            assertTrue("The mac must be valid", snmpinterface.getPhysAddr().length() == 12);
            assertTrue("The mac for ifindex" + snmpinterface.getIfIndex() + " must correspond: " + snmpinterface.getPhysAddr(), 
                       snmpinterface.getPhysAddr().equals(CISCO_WS_C2948_IF_MAC_MAP.get(snmpinterface.getIfIndex())));
        }
        
        m_capsd.stop();

        
    }

