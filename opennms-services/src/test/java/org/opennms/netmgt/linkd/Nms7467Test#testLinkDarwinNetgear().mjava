    /*
     *  DARWIN_10_8:port4   ------> port 1 :NETGEAR_SW_108
     */
    @Test
    @JUnitSnmpAgents(value={
            @JUnitSnmpAgent(host=DARWIN_10_8_IP, port=161, resource="classpath:linkd/nms7467/"+DARWIN_10_8_IP+"-walk.txt"),
            @JUnitSnmpAgent(host=NETGEAR_SW_108_IP, port=161, resource="classpath:linkd/nms7467/"+NETGEAR_SW_108_IP+"-walk.txt")
    })
    public void testLinkDarwinNetgear() throws Exception {
        m_nodeDao.save(getNetGearSw108());
        m_nodeDao.save(getDarwin108());
        m_nodeDao.flush();

        final OnmsNode mac = m_nodeDao.findByForeignId("linkd", DARWIN_10_8_NAME);
        final OnmsNode ngsw108 = m_nodeDao.findByForeignId("linkd", NETGEAR_SW_108_NAME);

        assertTrue(m_linkd.scheduleNodeCollection(mac.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(ngsw108.getId()));

        assertTrue(m_linkd.runSingleSnmpCollection(mac.getId()));
        assertTrue(m_linkd.runSingleSnmpCollection(ngsw108.getId()));
        
        assertEquals(0,m_dataLinkInterfaceDao.countAll());
        
        String macpackageName = m_linkdConfig.getFirstPackageMatch(InetAddress.getByName(DARWIN_10_8_IP)).getName();
        String ngsw108packageName = m_linkdConfig.getFirstPackageMatch(InetAddress.getByName(NETGEAR_SW_108_IP)).getName();

        assertEquals("example1", macpackageName);
        assertEquals("example1", ngsw108packageName);
        
        
        assertTrue(m_linkd.runSingleLinkDiscovery("example1"));
        
        final List<DataLinkInterface> links = m_dataLinkInterfaceDao.findAll();
        assertEquals(1,links.size());
        
        final DataLinkInterface mactongsw108link = links.get(0);
        
        assertEquals(mac.getId(), mactongsw108link.getNode().getId());
        assertEquals(4,mactongsw108link.getIfIndex().intValue());
        assertEquals(ngsw108.getId(), mactongsw108link.getNodeParentId());
        assertEquals(1, mactongsw108link.getParentIfIndex().intValue());        
        
    }

