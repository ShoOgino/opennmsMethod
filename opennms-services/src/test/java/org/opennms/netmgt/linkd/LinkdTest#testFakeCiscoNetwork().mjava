    @Test
    @JUnitSnmpAgents(value={
        @JUnitSnmpAgent(host="10.1.1.1", port=161, resource="classpath:linkd/cisco7200a.properties"),
        @JUnitSnmpAgent(host="10.1.1.2", port=161, resource="classpath:linkd/laptop.properties"),
        @JUnitSnmpAgent(host="10.1.2.2", port=161, resource="classpath:linkd/cisco7200b.properties"),
        @JUnitSnmpAgent(host="10.1.3.2", port=161, resource="classpath:linkd/cisco3700.properties"),
        @JUnitSnmpAgent(host="10.1.4.2", port=161, resource="classpath:linkd/cisco2691.properties"),
        @JUnitSnmpAgent(host="10.1.5.2", port=161, resource="classpath:linkd/cisco1700.properties"),
        @JUnitSnmpAgent(host="10.1.6.2", port=161, resource="classpath:linkd/cisco3600.properties")
    })
    public void testFakeCiscoNetwork() throws Exception {
        final OnmsNode laptop = m_nodeDao.findByForeignId("linkd", "laptop");
        final OnmsNode cisco7200a = m_nodeDao.findByForeignId("linkd", "cisco7200a");
        final OnmsNode cisco7200b = m_nodeDao.findByForeignId("linkd", "cisco7200b");
        final OnmsNode cisco3700 = m_nodeDao.findByForeignId("linkd", "cisco3700");
        final OnmsNode cisco2691 = m_nodeDao.findByForeignId("linkd", "cisco2691");
        final OnmsNode cisco1700 = m_nodeDao.findByForeignId("linkd", "cisco1700");
        final OnmsNode cisco3600 = m_nodeDao.findByForeignId("linkd", "cisco3600");

        assertTrue(m_linkd.scheduleNodeCollection(laptop.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(cisco7200a.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(cisco7200b.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(cisco3700.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(cisco2691.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(cisco1700.getId()));
        assertTrue(m_linkd.scheduleNodeCollection(cisco3600.getId()));

        assertTrue(m_linkd.runSingleCollection(laptop.getId()));
        assertTrue(m_linkd.runSingleCollection(cisco7200a.getId()));
        assertTrue(m_linkd.runSingleCollection(cisco7200b.getId()));
        assertTrue(m_linkd.runSingleCollection(cisco3700.getId()));
        assertTrue(m_linkd.runSingleCollection(cisco2691.getId()));
        assertTrue(m_linkd.runSingleCollection(cisco1700.getId()));
        assertTrue(m_linkd.runSingleCollection(cisco3600.getId()));

        final List<DataLinkInterface> ifaces = m_dataLinkInterfaceDao.findAll();
        for (final DataLinkInterface link: ifaces) {
            printLink(link);
        }

        assertEquals("we should have found 6 data links", 6, ifaces.size());
    }

