    @Test
    @JUnitSnmpAgents(value={
            @JUnitSnmpAgent(host="10.1.1.2", port=161, resource="classpath:linkd/nms4930/dlink_DES-3026.properties")
    })
    public void testDot1qTpFdbTableWalk() throws Exception {

    	String trackerName = "dot1qTpFdbTable";
    	QBridgeDot1dTpFdbTable dot1qTpFdbTable = new QBridgeDot1dTpFdbTable(InetAddressUtils.addr("10.1.1.2"));
        CollectionTracker[] tracker = new CollectionTracker[0];
        tracker = new CollectionTracker[] {dot1qTpFdbTable};
    	SnmpAgentConfig  config = SnmpPeerFactory.getInstance().getAgentConfig(InetAddress.getByName("10.1.1.2"));

        SnmpWalker walker =  SnmpUtils.createWalker(config, trackerName, tracker);

        walker.start();

        try {
            walker.waitFor();
            if (walker.timedOut()) {
                assertEquals(false, true);
            }  else if (walker.failed()) {
                assertEquals(false, true);
           }
        } catch (final InterruptedException e) {
            assertEquals(false, true);
            return;
        }

        final Collection<QBridgeDot1dTpFdbTableEntry> entries = dot1qTpFdbTable.getEntries();
        assertEquals(61, entries.size());

        for (QBridgeDot1dTpFdbTableEntry link: entries) {
        	System.out.println(link.getQBridgeDot1dTpFdbAddress());
        	System.out.println(link.getQBridgeDot1dTpFdbPort());
        	System.out.println(link.getQBridgeDot1dTpFdbStatus());
        }
    }

