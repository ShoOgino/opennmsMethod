    /*
     * This test has been designed to verify the workaround for using the IP address on the SNMP
     * Interface based Criteria, because in 1.8, the ipaddr was a valid column of the snmpinterface
     * table, and that column has been removed in order to promote the usage of the ipinterface table.
     */
    @Test
    public void testCriterias() throws Exception {
        Assert.assertNotNull(m_pollContext);

        OnmsNode node = m_nodeDao.findByForeignId("linkd", "cisco2691");
        Assert.assertNotNull(node);

        List<OnmsIpInterface> ipInterfaces = m_pollContext.getPollableNodes();
        Assert.assertNotNull(ipInterfaces);
        Assert.assertEquals(2, ipInterfaces.size());

        ipInterfaces = m_pollContext.getPollableNodesByIp("10.1.4.2"); // Primary Interface
        Assert.assertNotNull(ipInterfaces);
        Assert.assertEquals(1, ipInterfaces.size());

        ipInterfaces = m_pollContext.getPollableNodesByIp("10.1.5.1"); // Secondary Interface
        Assert.assertNotNull(ipInterfaces);
        Assert.assertEquals(0, ipInterfaces.size());

        // Because the criteria is an SQL restriction, the access to ipinterface table is through the
        // internal alias created by hibernate, in this case ipinterfac1_.
        String criteria = "snmpifdescr like '%Ethernet%' and ipinterfac1_.ipaddr like '10.1.5.%'";
        List<OnmsSnmpInterface> snmpInterfaces = m_pollContext.get(node.getId(), criteria);
        Assert.assertNotNull(snmpInterfaces);
        Assert.assertEquals(1, snmpInterfaces.size());
    }

