    public void testFilteredResourceAttributeFilteringWithMatch() throws Exception {
        OnmsAttribute rrdAttribute = new RrdGraphAttribute("IfInOctets", "something", "something else");
        ExternalValueAttribute externalValueAttribute = new ExternalValueAttribute("ifSpeed", "100000000");

        Set<OnmsAttribute> attributes = new HashSet<>();
        attributes.add(rrdAttribute);
        attributes.add(externalValueAttribute);

        final OnmsNode node = new OnmsNode();
        node.setId(1);
        node.setLabel("Node One");
        EasyMock.expect(m_nodeDao.load(1)).andReturn(node);
        
        MockResourceType resourceType = new MockResourceType();
        resourceType.setName("interfaceSnmp");
        OnmsResource resource = new OnmsResource(node.getId().toString(), node.getLabel(), resourceType, attributes, ResourcePath.get("foo"));

        ReportDefinition def = createReportDefinition();
        def.getReport().getPackage().setFilter("");
        def.setResourceAttributeKey(externalValueAttribute.getName());
        def.setResourceAttributeValueMatch(externalValueAttribute.getValue());
        ReportInstance report = def.createReport(m_nodeDao, m_resourceDao, m_fetchStrategy, m_filterDao);

        SortedMap<Integer,String> sortedNodeMap = new TreeMap<Integer, String>();
        sortedNodeMap.put(node.getId(), node.getLabel());
        EasyMock.expect(m_filterDao.getNodeMap("")).andReturn(sortedNodeMap);

        EasyMock.expect(m_resourceDao.getResourceForNode(node)).andReturn(resource);

        Source source = new Source();
        source.setLabel("result");
        source.setResourceId(resource.getId().toString());
        source.setAttribute(rrdAttribute.getName());
        source.setAggregation("AVERAGE");
        FetchResults results = new FetchResults(new long[] {report.getStartTime()},
                                                Collections.singletonMap("result", new double[] {100.0}),
                                                report.getEndTime() - report.getStartTime(),
                                                Collections.emptyMap(),
                                                null);
        EasyMock.expect(m_fetchStrategy.fetch(report.getStartTime(),
                                              report.getEndTime(),
                                              1,
                                              0,
                                              null,
                                              null,
                                              Collections.singletonList(source),
                                              false))
                .andReturn(results);


        m_mocks.replayAll();
        
        report.walk();
        
        assertEquals("results size", 1, report.getResults().size());
    }

