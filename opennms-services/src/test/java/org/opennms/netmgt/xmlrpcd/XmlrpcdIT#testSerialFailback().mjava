    public void testSerialFailback() throws Exception {
        XmlrpcdConfigFactory.setInstance(new XmlrpcdConfigFactory(m_configTwo));
        
        Date date = new Date();
        anticipateNotifyReceivedEvent(m_anticipator1);
        m_anticipator2 = new XmlrpcAnticipator(m_port2);
        anticipateNotifyReceivedEvent(m_anticipator2);
        m_xmlrpcd.init();
        m_xmlrpcd.start();

        anticipateRouterServiceCall(m_anticipator1, "sendServiceDownEvent", date);
        
        Event nodeOneEvent = svcEvent(EventConstants.NODE_LOST_SERVICE_EVENT_UEI, 1, "192.168.1.1", "ICMP", date);
        getEventIpcManager().sendNow(nodeOneEvent);

        Thread.sleep(1500);
        
        m_anticipator1.verifyAnticipated();
        m_anticipator1.shutdown();
        
        anticipateServerServiceCall(m_anticipator2, "sendServiceDownEvent", date);

        Event nodeTwoEvent = svcEvent(EventConstants.NODE_LOST_SERVICE_EVENT_UEI, 2, "192.168.1.2", "SNMP", date);
        getEventIpcManager().sendNow(nodeTwoEvent);
        
        Thread.sleep(1500);

        m_anticipator2.verifyAnticipated();
        m_anticipator2.shutdown();
        
        m_anticipator1 = new XmlrpcAnticipator(m_port1);
        anticipateNotifyReceivedEvent(m_anticipator1);

        m_anticipator1.anticipateCall("sendServiceDownEvent", "Firewall", "192.168.1.3", "Telnet", "Not Available", "null", EventConstants.formatToString(date));

        Event nodeThreeEvent = svcEvent(EventConstants.NODE_LOST_SERVICE_EVENT_UEI, 3, "192.168.1.3", "Telnet", date);
        getEventIpcManager().sendNow(nodeThreeEvent);
        
        Thread.sleep(1500);

        m_xmlrpcd.stop();
        Thread.sleep(2000);
        
        finishUp();
    }

