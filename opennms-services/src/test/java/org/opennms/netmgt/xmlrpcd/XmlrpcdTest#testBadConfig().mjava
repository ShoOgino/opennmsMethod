    public void testBadConfig() throws Exception {
        XmlrpcdConfigFactory.setInstance(new XmlrpcdConfigFactory(m_configBad));
        ThrowableAnticipator ta = new ThrowableAnticipator();
        ta.anticipate(new UndeclaredThrowableException(new ValidationException()));

        try {
            m_xmlrpcd.init();
        } catch (Throwable t) {
            ta.throwableReceived(t);
        }
        
        ta.verifyAnticipated();

        LoggingEvent[] errors = MockLogAppender.getEventsGreaterOrEqual(Level.ERROR);
        /*
         * XXX Hack Reset the events now, otherwise any failures below are
         * masked when MockLogAppender.assertNoWarningsOrGreater() is called in
         * OpenNMSTestCase.
         */
        MockLogAppender.resetEvents();

        if (errors.length == 0) {
            fail("No errors received by log4j, however some errors "
                    + "should have been received while the XML-RPC"
                    + "anticipator was down");
        }
        
        for (int i = 0; i < errors.length; i++) {
            String message = errors[i].getMessage().toString();
            if ("serverSubscription element baseEventsBlah references a subscription that does not exist".equals(message)) {
                continue;
            }
            if ("Failed to load configuration".equals(message)) {
                continue;
            }
            fail("Unexpected error logged: [" + errors[i].getLevel().toString() + "] "
                    + errors[i].getLoggerName() +": " + errors[i].getMessage());
        }

        MockLogAppender.resetEvents();

        finishUp();
    }

