    @Test
    public void testGetCounterValue() throws Exception {
        // Create Resource
        CollectionAgent agent = createCollectionAgent();
        SnmpCollectionResource resource = createNodeResource(agent);

        // Add Counter Attribute
        String attributeName = "myCounter";
        String attributeId = "node[1]." + attributeName;
        Map<String, CollectionAttribute> attributes = new HashMap<String, CollectionAttribute>();
        SnmpAttribute attribute = addAttributeToCollectionResource(resource, attributeName, "counter", "0", 1000);
        attributes.put(attribute.getName(), attribute);
        
        // Get counter value - first time
        CollectionResourceWrapper wrapper = createWrapper(resource, attributes);
        Assert.assertFalse(CollectionResourceWrapper.s_cache.containsKey(attributeId));
        Assert.assertEquals(Double.NaN, wrapper.getAttributeValue(attributeName)); // Last value is null
        Assert.assertEquals(Double.NaN, wrapper.getAttributeValue(attributeName)); // Last value is null
        Assert.assertEquals(1000.0, CollectionResourceWrapper.s_cache.get(attributeId));

        // Increase counter
        attribute = addAttributeToCollectionResource(resource, attributeName, "counter", "0", 2500);
        attributes.put(attribute.getName(), attribute);
        wrapper = createWrapper(resource, attributes);

        // Get counter value - second time
        // Last value is 1000.0, so 2500-1000/300 = 1500/300 =  5;
        Assert.assertEquals(1000.0, CollectionResourceWrapper.s_cache.get(attributeId));
        Assert.assertEquals(5.0, wrapper.getAttributeValue(attributeName));
        Assert.assertEquals(2500.0, CollectionResourceWrapper.s_cache.get(attributeId));
        Assert.assertEquals(5.0, wrapper.getAttributeValue(attributeName));
        Assert.assertEquals(2500.0, CollectionResourceWrapper.s_cache.get(attributeId));
        Assert.assertEquals(5.0, wrapper.getAttributeValue(attributeName));
        Assert.assertEquals(2500.0, CollectionResourceWrapper.s_cache.get(attributeId));

        // Increase counter
        attribute = addAttributeToCollectionResource(resource, attributeName, "counter", "0", 5500);
        attributes.put(attribute.getName(), attribute);
        wrapper = createWrapper(resource, attributes);

        // Get counter value - third time
        // Last value is 2500.0, so 5500-2500/300 = 3000/300 =  10;
        Assert.assertEquals(2500.0, CollectionResourceWrapper.s_cache.get(attributeId));
        Assert.assertEquals(10.0, wrapper.getAttributeValue(attributeName));
        Assert.assertEquals(5500.0, CollectionResourceWrapper.s_cache.get(attributeId));
        Assert.assertEquals(10.0, wrapper.getAttributeValue(attributeName));
        Assert.assertEquals(5500.0, CollectionResourceWrapper.s_cache.get(attributeId));
        Assert.assertEquals(10.0, wrapper.getAttributeValue(attributeName));
        Assert.assertEquals(5500.0, CollectionResourceWrapper.s_cache.get(attributeId));

        EasyMock.verify(agent);
    }

