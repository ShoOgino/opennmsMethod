    @Test
    public void testGetEventForStateDefaultUEIS() {
        Threshold threshold = new Threshold();
        threshold.setType("high");
        threshold.setDsName("ds-name");
        threshold.setDsType("ds-type");
        threshold.setValue(99.0);
        threshold.setRearm(95.0);
        threshold.setTrigger(1);
        ThresholdConfigWrapper wrapper=new ThresholdConfigWrapper(threshold);

        ThresholdEvaluatorStateHighLow item = new ThresholdEvaluatorStateHighLow(wrapper);

        // High exceed, with null instance
        Event event=item.getEventForState(Status.TRIGGERED, new Date(), 100.0, null);
        assertEquals("UEI should be the highThresholdExceededUEI", EventConstants.HIGH_THRESHOLD_EVENT_UEI, event.getUei());
        parmPresentAndValueNonNull(event, "instance");
        
        // High rearm, with null instance
        event=item.getEventForState(Status.RE_ARMED, new Date(), 94.0, null);
        assertEquals("UEI should be the highThresholdRearmedUEI", EventConstants.HIGH_THRESHOLD_REARM_EVENT_UEI, event.getUei());
        parmPresentAndValueNonNull(event, "instance");
        
        // High exceed, with non-null instance
        event=item.getEventForState(Status.TRIGGERED, new Date(), 100.0, new MockCollectionResourceWrapper("testInstance"));
        assertEquals("UEI should be the highThresholdExceededUEI", EventConstants.HIGH_THRESHOLD_EVENT_UEI, event.getUei());
        parmPresentWithValue(event, "instance", "testInstance");
        
        // High rearm, with non-null instance
        event=item.getEventForState(Status.RE_ARMED, new Date(), 94.0, new MockCollectionResourceWrapper("testInstance"));
        assertEquals("UEI should be the highThresholdRearmedUEI", EventConstants.HIGH_THRESHOLD_REARM_EVENT_UEI, event.getUei());
        parmPresentWithValue(event, "instance", "testInstance");
        
        // Set it up again for low tests
        threshold.setType("low");
        threshold.setValue(95.0);
        threshold.setRearm(99.0);
        
        // Low exceed, with null instance
        event=item.getEventForState(Status.TRIGGERED, new Date(), 94.0, null);
        assertEquals("UEI should be the lowThresholdExceededUEI", EventConstants.LOW_THRESHOLD_EVENT_UEI, event.getUei());
        parmPresentAndValueNonNull(event, "instance");
        
        // Low rearm, with null instance
        event=item.getEventForState(Status.RE_ARMED, new Date(), 100.0, null);
        assertEquals("UEI should be the lowThresholdRearmedUEI", EventConstants.LOW_THRESHOLD_REARM_EVENT_UEI, event.getUei());
        parmPresentAndValueNonNull(event, "instance");
        
        // Low exceed, with non-null instance
        event=item.getEventForState(Status.TRIGGERED, new Date(), 94.0, new MockCollectionResourceWrapper("testInstance"));
        assertEquals("UEI should be the lowThresholdExceededUEI", EventConstants.LOW_THRESHOLD_EVENT_UEI, event.getUei());
        parmPresentWithValue(event, "instance", "testInstance");
        
        // Low rearm, with non-null instance
        event=item.getEventForState(Status.RE_ARMED, new Date(), 100.0, new MockCollectionResourceWrapper("testInstance"));
        assertEquals("UEI should be the lowThresholdRearmedUEI", EventConstants.LOW_THRESHOLD_REARM_EVENT_UEI, event.getUei());
        parmPresentWithValue(event, "instance", "testInstance");
    }

