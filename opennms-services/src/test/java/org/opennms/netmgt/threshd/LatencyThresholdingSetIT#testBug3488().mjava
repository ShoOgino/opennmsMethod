    /*
     * Testing custom ThresholdingSet implementation for in-line Latency thresholds processing (Bug 3448)
     */
    @Test
    @JUnitTemporaryDatabase(tempDbClass=MockDatabase.class)
    public void testBug3488() throws Exception {
        String ipAddress = "127.0.0.1";
        setupSnmpInterfaceDatabase(m_db, ipAddress, null);
        LatencyThresholdingSet thresholdingSet = new LatencyThresholdingSet(1, ipAddress, "HTTP", getRepository(), m_resourceStorageDao);
        assertTrue(thresholdingSet.hasThresholds()); // Global Test
        Map<String, Double> attributes = new HashMap<String, Double>();
        attributes.put("http", 200.0);
        assertTrue(thresholdingSet.hasThresholds(attributes)); // Datasource Test

        List<Event> triggerEvents = new ArrayList<Event>();
        for (int i=0; i<5; i++)
            triggerEvents.addAll(thresholdingSet.applyThresholds("http", attributes));
        assertTrue(triggerEvents.size() == 1);

        addEvent(EventConstants.HIGH_THRESHOLD_EVENT_UEI, "127.0.0.1", "HTTP", 5, 100.0, 50.0, 200.0, IfLabel.NO_IFLABEL, "127.0.0.1[http]", "http", IfLabel.NO_IFLABEL, null, m_eventIpcManager.getEventAnticipator(), m_anticipatedEvents);
        ThresholdingEventProxy proxy = new ThresholdingEventProxy();
        proxy.add(triggerEvents);
        proxy.sendAllEvents();
        verifyEvents(0);
    }

