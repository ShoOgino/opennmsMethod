    @Before
    public void setUp() throws Exception {
        m_network = new MockNetwork();
        m_network.createStandardNetwork();

        InputStream is = ConfigurationTestUtils.getInputStreamForResource(this, "/org/opennms/netmgt/vacuumd/vacuumd-configuration.xml");
        try {
            VacuumdConfigFactory.setInstance(new VacuumdConfigFactory(is));
        } finally {
            IOUtils.closeQuietly(is);
        }

        m_eventdIpcMgr.setEventWriter(m_database);

        m_vacuumd = Vacuumd.getSingleton();
        m_vacuumd.setEventManager(m_eventdIpcMgr);
        m_vacuumd.init();

        m_alarmd = new Alarmd();
        m_alarmd.setEventForwarder(m_eventdIpcMgr);
        m_alarmd.setEventSubscriptionService(m_eventdIpcMgr);
        AlarmPersisterImpl persister = new AlarmPersisterImpl();
        persister.setAlarmDao(m_alarmDao);
        persister.setEventDao(m_eventDao);
        m_alarmd.setPersister(persister);
        m_alarmd.afterPropertiesSet();
        // Doesn't do anything yet
        m_alarmd.start();

        // Insert some empty nodes to avoid foreign-key violations on subsequent events/alarms
        OnmsNode node = new OnmsNode();
        node.setId(1);
        m_nodeDao.save(node);

        node = new OnmsNode();
        node.setId(2);
        m_nodeDao.save(node);

        MockUtil.println("------------ Finished setup for: "+ this.getClass().getName() +" --------------------------");
    }

