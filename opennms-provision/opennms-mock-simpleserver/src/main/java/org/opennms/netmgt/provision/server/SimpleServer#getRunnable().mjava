    /**
     * <p>getRunnable</p>
     *
     * @return a {@link java.lang.Runnable} object.
     * @throws java.lang.Exception if any.
     */
    protected Runnable getRunnable() throws Exception {
        return new Runnable(){
            
            public void run(){
                try{
                    if (getTimeout() > 0) {
                        getServerSocket().setSoTimeout(getTimeout());
                    }
                    while (!m_stopped) {
                        setSocket(getServerSocket().accept());
                        if (m_threadSleepLength > 0) {
                            Thread.sleep(m_threadSleepLength);
                        }
                        if (getTimeout() > 0) {
                            getSocket().setSoTimeout(getTimeout());
                        }
                        OutputStream out = getSocket().getOutputStream();
                        if (getBanner() != null) {
                            sendBanner(out);
                        }
                        ;
                        BufferedReader in = new BufferedReader(new InputStreamReader(getSocket().getInputStream()));
                        attemptConversation(in, out);
                    }
                } catch (Exception e){
                    info(e, "SimpleServer Exception on conversation");
                } finally {
                    try {
                        stopServer();
                    } catch (IOException e) {
                        info(e, "SimpleServer Exception on stopping server");
                    }
                }
            }
            
        };
    }

