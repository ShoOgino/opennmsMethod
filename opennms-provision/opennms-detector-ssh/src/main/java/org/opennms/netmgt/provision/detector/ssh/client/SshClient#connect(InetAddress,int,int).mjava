    /** {@inheritDoc} */
    public void connect(InetAddress address, int port, int timeout) throws IOException, Exception {
        TimeoutTracker tracker = new TimeoutTracker(m_parameters, SshClient.DEFAULT_RETRY, SshClient.DEFAULT_TIMEOUT);
        
        String banner = ParameterMap.getKeyedString(m_parameters, "banner", null);
        String match = ParameterMap.getKeyedString(m_parameters, "match", null);
        String clientBanner = ParameterMap.getKeyedString(m_parameters, "client-banner", Ssh.DEFAULT_CLIENT_BANNER);
        PollStatus ps = PollStatus.unavailable();
        
        Ssh ssh = new Ssh(address, port, tracker.getConnectionTimeout());
        ssh.setClientBanner(clientBanner);
        
        RE regex = null;
        if (match == null && (banner == null || banner.equals("*"))) {
            regex = null;
        } else if (match != null) {
            regex = new RE(match);
        } else if (banner != null) {
            regex = new RE(banner);
        }
        
        for (tracker.reset(); tracker.shouldRetry() && !ps.isAvailable(); tracker.nextAttempt()) {
            try {
                ps = ssh.poll(tracker);
            } catch (InsufficientParametersException e) {
                LogUtils.errorf(this, e.getMessage());
                break;
            }
        
        }
        
        // If banner matching string is null or wildcard ("*") then we
        // only need to test connectivity and we've got that!
        
        if (regex != null && ps.isAvailable()) {
            String response = ssh.getServerBanner();
        
            if (response == null) {
                ps = PollStatus.unavailable("server closed connection before banner was recieved.");
            }
        
            if (!regex.match(response)) {
                // Got a response but it didn't match... no need to attempt
                // retries
                LogUtils.debugf(this, "isServer: NON-matching response='%s'", response);
                ps = PollStatus.unavailable("server responded, but banner did not match '" + banner + "'");
            } else {
                LogUtils.debugf(this, "isServer: matching response='%s'", response);
            }
        }
        PollStatus result = ps;
        
        m_isAvailable = result.isAvailable();
    }

