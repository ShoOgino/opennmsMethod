    public DnsRequisitionRequest(Map<String, String> parameters) {
        host = parameters.get("host");
        if (host == null || host.isEmpty()) {
            throw new IllegalArgumentException("host is required.");
        }
        final String portStr = parameters.get("port");
        if (portStr != null) {
            port = Integer.valueOf(portStr);
        }
        zone = parameters.get("zone");
        if (zone == null || zone.isEmpty()) {
            throw new IllegalArgumentException("zone is required.");
        }
        foreignSource = parameters.get("foreignSource");
        if (foreignSource == null || foreignSource.isEmpty()) {
            throw new IllegalArgumentException("foreignSource is required.");
        }
        final String serialStr = parameters.get("serial");
        if (serialStr != null) {
            serial = Long.valueOf(serialStr);
        }
        final String fallbackStr = parameters.get("fallback");
        if (fallbackStr != null) {
            fallback = Boolean.valueOf(fallbackStr);
        }
        expression = parameters.get("expression");
        location = parameters.get("location");
        final String foreignIdHashSourceStr = parameters.get("foreignIdHashSource");
        if (foreignIdHashSourceStr != null) {
            foreignIdHashSource = ForeignIdHashSource.valueOf(foreignIdHashSourceStr);
        }
        final String servicesStr = parameters.get("services");
        if (servicesStr != null) {
            services = Arrays.asList(servicesStr.split(","));
        }
    }

