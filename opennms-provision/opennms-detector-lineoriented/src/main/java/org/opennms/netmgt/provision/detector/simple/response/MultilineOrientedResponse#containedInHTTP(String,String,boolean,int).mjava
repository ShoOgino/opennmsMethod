    //Kept in here 
    /**
     * <p>containedInHTTP</p>
     *
     * @param pattern a {@link java.lang.String} object.
     * @param url a {@link java.lang.String} object.
     * @param isCheckCode a boolean.
     * @param maxRetCode a int.
     * @return a boolean.
     */
    public boolean containedInHTTP(String pattern, String url, boolean isCheckCode, int maxRetCode) {

        
        try {
            
            String response = getEntireResponse(m_in);
            LogUtils.infof(this, "Checking http response, pattern: %s  URL: %s  isCheckCode: %s  MaxRetCode: %s\n", pattern, url, isCheckCode, maxRetCode);
            if (response != null && response.contains(pattern)) {
                LogUtils.infof(this, "Return from server was: " + response);
                if (isCheckCode) {
                                                
                    if (("/".equals(url)) || (isCheckCode == false)) {
                        maxRetCode = 600;
                    }
                    
                    StringTokenizer t = new StringTokenizer(response);
                    t.nextToken();
                    String codeString = t.nextToken();
                                               
                    if (validateCodeRange(codeString, 99, maxRetCode)) {
                        LogUtils.infof(this, "RetCode Passed");
                        return true;
                    }
                } else {
                    LogUtils.infof(this, "isAServer");
                    return true;
                }
            }
        } catch (SocketException e) {
            //e.printStackTrace();
            return false;
        } catch (NumberFormatException e) {

            return false;
        }catch(IOException e) {
            //e.printStackTrace();
            return false;
        }
        
        return false;
    }

