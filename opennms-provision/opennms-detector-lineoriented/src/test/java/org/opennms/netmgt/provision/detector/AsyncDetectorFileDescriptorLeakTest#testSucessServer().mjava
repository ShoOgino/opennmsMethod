    @Test
    public void testSucessServer() throws Throwable {
        setUpServer();
        final int port = m_server.getLocalPort();
        final InetAddress address = m_server.getInetAddress();

        final double connectionRate = 0.2;
        
        final long startTime = System.currentTimeMillis();

        int i = 0;
        while (i < 10000) {
            long now = Math.max(System.currentTimeMillis(), 1);
            double actualRate = ((double)i) / ((double)(now - startTime));
            LogUtils.debugf(this, "Expected Rate: %f Actual Rate: %f Events Sent: %d", connectionRate, actualRate, i);
            if (actualRate < connectionRate) {
                setUp();
                LogUtils.debugf(this, "current loop: %d", i);
                assertNotNull(m_detector);
                
                final TcpDetector detector = m_detector.get();

                detector.setPort(port);

                final DefaultDetectFuture future = (DefaultDetectFuture)detector.isServiceDetected(address, new NullDetectorMonitor());
                future.addListener(new IoFutureListener<DetectFuture>() {
                    public void operationComplete(final DetectFuture future) {
                        detector.dispose();
                    }
                });

                future.awaitUninterruptibly();
                assertNotNull(future);
                if (future.getException() != null) {
                    LogUtils.debugf(this, future.getException(), "got future exception");
                    throw future.getException();
                }
                LogUtils.debugf(this, "got value: %s", future.getObjectValue());
                assertTrue(future.isServiceDetected());

                m_detector.set(null);
                
                i++;
            } else {
                Thread.sleep(5);
            }
        }
    }

