        @Override
        public void run() {
            try {
                LOG.debug("persisting repository changes");
                final Set<Entry<String,ForeignSource>> foreignSources = m_pendingForeignSources.entrySet();
                final Set<Entry<String,Requisition>>   requisitions   = m_pendingRequisitions.entrySet();

                LOG.debug("* {} pending foreign sources", m_pendingForeignSources.size());
                LOG.debug("* {} pending requisitions",    m_pendingRequisitions.size());

                for (final Entry<String,ForeignSource> entry : foreignSources) {
                    final String foreignSourceName = entry.getKey();
                    final ForeignSource foreignSource = entry.getValue();

                    if (foreignSource instanceof DeletedForeignSource) {
                        final DeletedForeignSource deletedForeignSource = (DeletedForeignSource)foreignSource;
                        m_repository.delete(deletedForeignSource.getOriginal());
                    } else {
                        m_repository.save(foreignSource);
                    }
                    m_pendingForeignSources.remove(foreignSourceName, foreignSource);
                }

                for (final Entry<String,Requisition> entry : requisitions) {
                    final String foreignSourceName = entry.getKey();
                    final Requisition requisition = entry.getValue();

                    if (requisition instanceof DeletedRequisition) {
                        final DeletedRequisition deletedRequisition = (DeletedRequisition)requisition;
                        m_repository.delete(deletedRequisition.getOriginal());
                    } else {
                        m_repository.save(requisition);
                    }
                    m_pendingRequisitions.remove(foreignSourceName, requisition);
                }

                LOG.debug("finished persisting repository changes");
            } finally {
                //
            }
        }

