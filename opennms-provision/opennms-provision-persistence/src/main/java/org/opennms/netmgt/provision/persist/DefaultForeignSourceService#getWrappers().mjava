    /**
     * <p>getWrappers</p>
     *
     * @return a {@link java.util.Map} object.
     */
    @Override
    public Map<String,PluginWrapper> getWrappers() {
        if (m_wrappers == null && m_policies != null && m_detectors != null) {
            m_wrappers = new HashMap<String,PluginWrapper>(m_policies.size());
            for (String key : m_policies.keySet()) {
                try {
                    PluginWrapper wrapper = new PluginWrapper(key);
                    m_wrappers.put(key, wrapper);
                } catch (Throwable e) {
                    LOG.warn("unable to wrap " + key, e);
                }
            }
            for (String key : m_detectors.keySet()) {
                try {
                    PluginWrapper wrapper = new PluginWrapper(key);
                    m_wrappers.put(key, wrapper);
                } catch (Throwable e) {
                    LOG.warn("unable to wrap " + key, e);
                }
            }
        }
        return m_wrappers;
    }

