    private CompiledScript compileScript(final String script) throws IOException, ScriptException {
        if (script == null) {
            throw new IllegalArgumentException("Script must not be null");
        }

        final File scriptFile = m_scriptPath.resolve(script).toFile();

        if (!scriptFile.canRead()) {
            throw new IllegalStateException("Cannot read script at '" + scriptFile + "'.");
        }

        if (scriptFile.lastModified() > m_lastCompiled) {
            final String fileExtension = Files.getFileExtension(scriptFile.getAbsolutePath());

            final ScriptEngine engine = m_scriptManager.getEngineByExtension(fileExtension);
            if (engine == null) {
                throw new IllegalStateException("No engine found for file extension: " + fileExtension);
            }

            if (!(engine instanceof Compilable)) {
                throw new IllegalStateException("Only engines that can compile scripts are supported.");
            }
            final Compilable compilable = (Compilable) engine;
            try (FileReader reader = new FileReader(scriptFile)) {
                m_compiledScript = compilable.compile(reader);
            }
            m_lastCompiled = scriptFile.lastModified();
        }

        return m_compiledScript;
    }

