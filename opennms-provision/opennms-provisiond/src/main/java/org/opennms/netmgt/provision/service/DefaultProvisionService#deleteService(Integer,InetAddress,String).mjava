    /** {@inheritDoc} */
    @Transactional
    @Override
    public void deleteService(final Integer nodeId, final InetAddress addr, final String svcName) {
        final OnmsMonitoredService service = m_monitoredServiceDao.get(nodeId, addr, svcName);
        if (service != null) {

            final OnmsIpInterface iface = service.getIpInterface();
            final OnmsNode node = iface.getNode();

            final boolean lastService = (iface.getMonitoredServices().size() == 1);
            final boolean lastInterface = (node.getIpInterfaces().size() == 1);

            m_monitoredServiceDao.delete(service);
            m_monitoredServiceDao.flush();
            m_eventForwarder.sendNow(EventUtils.createServiceDeletedEvent("Provisiond", service.getNodeId(), service.getIpAddress(), service.getServiceType().getName()));

            if (lastService) {
                node.removeIpInterface(iface);
                m_nodeDao.saveOrUpdate(node);
                m_nodeDao.flush();
                m_eventForwarder.sendNow(EventUtils.createInterfaceDeletedEvent("Provisiond", iface.getNode().getId(), iface.getIpAddress()));

                if (lastInterface) {
                    m_nodeDao.delete(node);
                    m_nodeDao.flush();
                    m_eventForwarder.sendNow(EventUtils.createNodeDeletedEvent("Provisiond", node.getId(), node.getLabel(), node.getLabel()));
                }
            }
        }
    }

