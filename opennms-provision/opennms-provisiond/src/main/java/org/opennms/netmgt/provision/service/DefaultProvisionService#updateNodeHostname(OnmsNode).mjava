    private void updateNodeHostname(final OnmsNode node) {
        if (NodeLabelSource.HOSTNAME.equals(node.getLabelSource()) || NodeLabelSource.ADDRESS.equals(node.getLabelSource())) {
            OnmsIpInterface primary = node.getPrimaryInterface();
            if (primary == null && node.getIpInterfaces() != null) {
                primary = node.getIpInterfaces().iterator().next();
            }

            final InetAddress primaryAddr = primary.getIpAddress();
            final String primaryHostname = getHostnameResolver().getHostname(primaryAddr);

            if (primaryHostname == null && node.getLabel() != null && NodeLabelSource.HOSTNAME.equals((node.getLabelSource()))) {
                LOG.warn("Previous node label source for address {} was hostname, but it does not currently resolve.  Skipping update.", InetAddressUtils.str(primaryAddr));
                return;
            }

            for (final OnmsIpInterface iface : node.getIpInterfaces()) {
                final InetAddress addr = iface.getIpAddress();
                final String ipAddress = str(addr);
                final String hostname = getHostnameResolver().getHostname(addr, node.getLocation().getLocationName());

                if (iface.equals(primary)) {
                    LOG.debug("Node Label was set by hostname or address.  Re-setting.");
                    if (hostname == null || ipAddress.equals(hostname)) {
                        node.setLabel(ipAddress);
                        node.setLabelSource(NodeLabelSource.ADDRESS);
                    } else {
                        node.setLabel(hostname);
                        node.setLabelSource(NodeLabelSource.HOSTNAME);
                    }
                }

                if (hostname == null) {
                    iface.setIpHostName(ipAddress);
                } else {
                    iface.setIpHostName(hostname);
                }
            }
        } else {
            LOG.debug("Node label source ({}) is not host or address. Skipping update.", node.getLabelSource());
        }
    }

