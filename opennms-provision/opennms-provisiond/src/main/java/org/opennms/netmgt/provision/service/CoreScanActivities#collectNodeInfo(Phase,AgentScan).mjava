    @Activity( lifecycle = "agentScan", phase = "collectNodeInfo" )
    public void collectNodeInfo(Phase currentPhase, AgentScan agentScan) throws InterruptedException {
        
        Date scanStamp = new Date();
        agentScan.setScanStamp(scanStamp);
        
        InetAddress primaryAddress = agentScan.getAgentAddress();
        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(primaryAddress);
        Assert.notNull(m_agentConfigFactory, "agentConfigFactory was not injected");
        
        SystemGroup systemGroup = new SystemGroup(primaryAddress);
        
        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, "systemGroup", systemGroup);
        walker.start();
        
        walker.waitFor();
        
        if (walker.timedOut()) {
            agentScan.abort("Aborting node scan : Agent timedout while scanning the system table");
        }
        else if (walker.failed()) {
            agentScan.abort("Aborting node scan : Agent failed while scanning the system table: " + walker.getErrorMessage());
        } else {
        
            systemGroup.updateSnmpDataForNode(agentScan.getNode());

            List<NodePolicy> nodePolicies = m_provisionService.getNodePoliciesForForeignSource(agentScan.getForeignSource());

            OnmsNode node = agentScan.getNode();
            for(NodePolicy policy : nodePolicies) {
                if (node != null) {
                    node = policy.apply(node);
                }
            }

            if (node == null) {
                agentScan.abort("Aborted scan of node due to configured policy");
            } else {
                agentScan.setNode(node);
            }
        
        }
    }

