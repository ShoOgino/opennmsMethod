    private NodeScanSchedule createScheduleForNode(OnmsNode node, boolean force) {
        Assert.notNull(node, "Node may not be null");

        ForeignSource fs = null;
        try {
            fs = m_foreignSourceRepository.getForeignSource(node.getForeignSource());
        } catch (ForeignSourceRepositoryException e) {
            log().warn("unable to get foreign source repository", e);
        }

        Duration scanInterval = fs.getScanInterval();
        Duration initialDelay = Duration.ZERO;
        if (node.getLastCapsdPoll() != null && !force) {
            DateTime nextPoll = new DateTime(node.getLastCapsdPoll().getTime()).plus(scanInterval);
            DateTime now = new DateTime();
            if (nextPoll.isAfter(now)) {
                initialDelay = new Duration(now, nextPoll);
            }
        }
        
        NodeScanSchedule nSchedule = new NodeScanSchedule(node.getId(), node.getForeignSource(), node.getForeignId(), initialDelay, scanInterval);
        
        return nSchedule;
    }

