    /**
     * <p>getIpAdEntNetMask</p>
     *
     * @return a {@link java.net.InetAddress} object.
     */
    public InetAddress getIpAddressNetMask() {
    	final SnmpValue value = getValue(IP_ADDR_ENT_NETMASK);
    	// LOG.debug("getIpAddressNetMask: value = {}", value.toDisplayString());
    	final SnmpObjId netmaskRef = value.toSnmpObjId().getInstance(IPAddressTableTracker.IP_ADDRESS_PREFIX_ORIGIN_INDEX);

    	if (netmaskRef == null) {
    	    LOG.warn("Unable to get netmask reference from instance.");
    	    return null;
    	}

    	final int[] rawIds = netmaskRef.getIds();
    	final int addressType = rawIds[1];
    	final int addressLength = rawIds[2];
    	final InetAddress address = getInetAddress(rawIds, 3, addressLength);
    	final int mask = rawIds[rawIds.length - 1];

    	if (addressType == IPAddressTableTracker.TYPE_IPV4) {
    	    return InetAddressUtils.convertCidrToInetAddressV4(mask);
    	} else if (addressType == IPAddressTableTracker.TYPE_IPV6) {
    	    return InetAddressUtils.convertCidrToInetAddressV6(mask);
    	} else if (addressType == IPAddressTableTracker.TYPE_IPV6Z) {
    	    LOG.debug("Got an IPv6z address, returning {}", address);
    	} else {
    	    LOG.warn("Unsure how to handle IP address type ({})", addressType);
    	}
        return address;
    }

