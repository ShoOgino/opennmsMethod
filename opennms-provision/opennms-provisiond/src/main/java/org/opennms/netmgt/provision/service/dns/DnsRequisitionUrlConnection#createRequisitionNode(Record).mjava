    /**
     * Creates an instance of the JaxB annotated RequisionNode class.
     * 
     * @param rec
     * @return a populated RequisitionNode based on defaults and data from the
     *   A record returned from a DNS zone transfer query.
     */
    private RequisitionNode createRequisitionNode(Record rec) {
        ARecord arec = (ARecord)rec;
        String addr = StringUtils.stripStart(arec.getAddress().toString(), "/");

        RequisitionNode n = new RequisitionNode();
        
        String host = rec.getName().toString();
        String nodeLabel = StringUtils.stripStart(host, ".");
        
        n.setBuilding(getForeignSource());
        
        if("ipAddress".equals(m_foreignIdHashSource)) {
            log().debug("Setting foreign ID from hash of IP Address" + addr);
            n.setForeignId(computeHashCode(addr));
        } else {
            log().debug("Setting foreign ID from hash of node label" + nodeLabel);
            n.setForeignId(computeHashCode(nodeLabel));
        }
        n.setNodeLabel(nodeLabel);
        
        RequisitionInterface i = new RequisitionInterface();
        i.setDescr("DNS-A");
        i.setIpAddr(addr);
        i.setSnmpPrimary("P");
        i.setManaged(Boolean.TRUE);
        i.setStatus(Integer.valueOf(1));
        
        for (String service : m_services) {
            service = service.trim();
            i.insertMonitoredService(new RequisitionMonitoredService(service));
            log().debug("Adding provisioned service " + service);
            }
        
        n.putInterface(i);
        
        return n;
    }

