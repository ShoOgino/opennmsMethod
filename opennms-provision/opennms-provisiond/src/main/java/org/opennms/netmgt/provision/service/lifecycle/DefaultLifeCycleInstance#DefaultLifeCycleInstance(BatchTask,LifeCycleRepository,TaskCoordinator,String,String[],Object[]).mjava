    /**
     * <p>Constructor for DefaultLifeCycleInstance.</p>
     *
     * @param containingPhase a {@link org.opennms.core.tasks.BatchTask} object.
     * @param repository a {@link org.opennms.netmgt.provision.service.lifecycle.LifeCycleRepository} object.
     * @param coordinator a {@link org.opennms.core.tasks.TaskCoordinator} object.
     * @param lifeCycleName a {@link java.lang.String} object.
     * @param phaseNames an array of {@link java.lang.String} objects.
     * @param providers an array of {@link java.lang.Object} objects.
     */
    public DefaultLifeCycleInstance(BatchTask containingPhase, LifeCycleRepository repository,
            TaskCoordinator coordinator, String lifeCycleName, String[] phaseNames, Object[] providers) {

        super(coordinator, containingPhase);
        m_containingPhase = containingPhase;
        m_repository = repository;
        m_coordinator = coordinator;
        m_name = lifeCycleName;
        m_providers = providers;

        LOG.debug("Set up default lifecycle instance");

        m_phases = new Phase[phaseNames.length];
        for(int i = 0; i < phaseNames.length; i++) {
            m_phases[i] = new Phase(this, this, phaseNames[i], m_providers);
            LOG.debug("Adding phase {} to lifecycle", m_phases[i].getName());
            add(m_phases[i]);
        }
        
        setAttribute("lifeCycleInstance", this);
    }

