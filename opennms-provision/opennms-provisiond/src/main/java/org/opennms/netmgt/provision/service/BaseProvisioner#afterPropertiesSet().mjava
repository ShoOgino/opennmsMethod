    public void afterPropertiesSet() throws Exception {
        Assert.notNull(getProvisionService(), "provisionService property must be set");
        Assert.notNull(m_scanExecutor, "scanExecutor property must be set");
        Assert.notNull(m_writeExecutor, "writeExecutor property must be set");
        Assert.notNull(m_scheduledExecutor, "scheduledExecutor property must be set");
        
        if(m_scheduledNodes == null) m_scheduledNodes = new HashMap<Integer, ScheduledFuture<?>>();
        
        DefaultTaskCoordinator coordinator = new DefaultTaskCoordinator();
        coordinator.setDefaultExecutor("scan");
        coordinator.addExecutor("scan", m_scanExecutor);
        coordinator.addExecutor("write", m_writeExecutor);
        coordinator.afterPropertiesSet();
        
        DefaultLifeCycleRepository lifeCycleRepository = new DefaultLifeCycleRepository(coordinator);
        
        LifeCycle importLifeCycle = new LifeCycle("import")
            .addPhase("validate")
            .addPhase("audit")
            .addPhase("scan")
            .addPhase("delete")
            .addPhase("update")
            .addPhase("insert")
            .addPhase("relate");
            
            
        lifeCycleRepository.addLifeCycle(importLifeCycle);
        
        LifeCycle nodeScanLifeCycle = new LifeCycle("nodeScan")
            .addPhase("scan")
            .addPhase("persist");
        

        lifeCycleRepository.addLifeCycle(nodeScanLifeCycle);
        
        m_lifeCycleRepository = lifeCycleRepository;
        
        
        m_provider = new CoreImportActivities(getProvisionService());
        
        
    }

