    /** {@inheritDoc} */
    @Override
    public void run(final BatchTask currentPhase) {

        m_span = getProvisionService().buildAndStartSpan("IpInterfaceScan", m_parentSpan.context());
        m_span.setTag(ProvisionService.IP_ADDRESS, str(getAddress()));
        m_span.setTag(ProvisionService.LOCATION, getLocation().getLocationName());

        // This call returns a collection of new ServiceDetector instances
        final Collection<PluginConfig> detectorConfigs = getProvisionService().getDetectorsForForeignSource(getForeignSource() == null ? "default" : getForeignSource());

        LOG.info("Detecting services for node {}/{} on address {}: found {} detectors", getNodeId(), getForeignSource(), str(getAddress()), detectorConfigs.size());
        List<CompletableFuture<Boolean>> futures = new ArrayList<>();
        for (final PluginConfig detectorConfig : detectorConfigs) {
            if (shouldDetect(detectorConfig, getAddress())) {
                CompletableFuture<Boolean> future = new CompletableFuture<>();
                futures.add(future);
                currentPhase.add(createDetectorTask(currentPhase, getProvisionService(), detectorConfig, getNodeId(), getAddress(), getLocation(), m_span, future));
            }
        }
        CompletableFuture<Void> allFutures = CompletableFuture.allOf(futures.toArray(new CompletableFuture[futures.size()]));
        allFutures.whenComplete(((aVoid, throwable) -> {
            m_span.finish();
        }));
    }

