    /**
     * @param e
     */
    @EventHandler(uei = EventConstants.NODE_ADDED_EVENT_UEI)
    public void handleNodeAddedEvent(Event e) {
        NodeScanSchedule scheduleForNode = getProvisionService().getScheduleForNode(new Long(e.getNodeid()).intValue());
        if (scheduleForNode != null) {
            addToScheduleQueue(scheduleForNode);
        }

        for (ProvisioningAdapter adapter : m_adapters) {
            log().info("handleNodeAddedEvent: Calling adapter:"+adapter.getClass()+" for node: "+e.getNodeid());
            try {
                adapter.addNode((int) e.getNodeid());
            } catch (ProvisioningAdapterException pae) {
                log().error("handleNodeAddedEvent: Adapter threw known exception: "+adapter.getName(), pae);
            } catch (Throwable t) {
                log().error("handleNodeAddedEvent: Unanticpated exception when calling adapter: "+adapter.getName(), t);
            }
        }
    }

