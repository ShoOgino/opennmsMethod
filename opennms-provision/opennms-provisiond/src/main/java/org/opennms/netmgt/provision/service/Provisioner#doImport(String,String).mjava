    /**
     * <p>doImport</p>
     *
     * @param url a {@link java.lang.String} object.
     */
    public void doImport(final String url, final String rescanExisting) {
        
        try {
            
            LOG.info("doImport: importing from url: {}, rescanExisting ? {}", url, rescanExisting);

            final Resource resource;

            final URL u = new URL(url);
            if ("file".equals(u.getProtocol())) {
                final File file = new File(u.toURI());
                LOG.debug("doImport: file = {}", file);
                if (file.exists()) {
                    resource = new FileSystemResource(file);
                } else {
                    final String filename = file.getName();
                    if (filename.contains("%20")) {
                        resource = new FileSystemResource(new File(file.getParentFile(), filename.replace("%20", " ")));
                    } else {
                        resource = new UrlResource(url);
                    }
                }
            } else {
                resource = new UrlResource(url);
            }

            m_stats = new TimeTrackingMonitor();
            
            send(importStartedEvent(resource, rescanExisting));
    
            final RequisitionImport ri = importModelFromResource(resource, rescanExisting, m_stats);
            String foreignSource = null;
            if (ri != null && ri.getRequisition() != null) {
                foreignSource = ri.getRequisition().getForeignSource();
            }

            LOG.info("Finished Importing: {}", m_stats);
    
            send(importSuccessEvent(m_stats, url, rescanExisting, foreignSource));
    
        } catch (final Throwable t) {
            final String msg = "Exception importing "+url;
            LOG.error("Exception importing {} using rescanExisting={}", url, rescanExisting, t);
            send(importFailedEvent((msg+": "+t.getMessage()), url, rescanExisting));
        }
    }

