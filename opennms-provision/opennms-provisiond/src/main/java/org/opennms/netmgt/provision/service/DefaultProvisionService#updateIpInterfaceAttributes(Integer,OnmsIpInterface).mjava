    public OnmsIpInterface updateIpInterfaceAttributes(Integer nodeId, OnmsIpInterface scannedIface) {
        if (scannedIface.getSnmpInterface() != null) {
            scannedIface.setSnmpInterface(updateSnmpInterfaceAttributes(nodeId, scannedIface.getSnmpInterface()));
        }
        
        OnmsIpInterface dbIface = m_ipInterfaceDao.findByNodeIdAndIpAddress(nodeId, scannedIface.getIpAddress());
        debug("Updating interface attributes for %s for node %d with ip %s", dbIface, nodeId, scannedIface.getIpAddress());
        if (dbIface != null) {
            if(dbIface.isManaged() && !scannedIface.isManaged()){
                Set<OnmsMonitoredService> monSvcs = dbIface.getMonitoredServices();
                
                for(OnmsMonitoredService monSvc : monSvcs ){
                    monSvc.visit(new DeleteEventVisitor(m_eventForwarder));
                }
                monSvcs.clear();
            }
            
            dbIface.mergeInterfaceAttributes(scannedIface);
            info("Updating IpInterface %s", dbIface);
            m_ipInterfaceDao.update(dbIface);
            m_ipInterfaceDao.flush();
            return dbIface;
        } else {
            OnmsNode dbNode = m_nodeDao.load(nodeId);
            assertNotNull(dbNode, "no node found with nodeId %d", nodeId);
            // for performance reasons we don't add the ip interface to the node so we avoid loading all the interfaces
            // setNode only sets the node in the interface
            scannedIface.setNode(dbNode);
            saveOrUpdate(scannedIface);
            AddEventVisitor visitor = new AddEventVisitor(m_eventForwarder);
            scannedIface.visit(visitor);
            m_ipInterfaceDao.flush();
            return scannedIface;
        }

    }

