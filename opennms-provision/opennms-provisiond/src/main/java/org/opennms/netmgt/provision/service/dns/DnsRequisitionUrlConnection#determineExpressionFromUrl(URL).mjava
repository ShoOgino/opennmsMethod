    /**
     * <p>determineExpressionFromUrl</p>
     *
     * @param url a {@link java.net.URL} object.
     * @return a {@link java.lang.String} object.
     */
    protected static String determineExpressionFromUrl(URL url) {
        log().info("determineExpressionFromUrl: finding regex as parameter in query string of URL: "+url);
        
        if (url.getQuery() == null) {
            return null;
        }

        //TODO: need to throw exception if query is null
        String query = decodeQueryString(url);
        
        //TODO: need to handle exception
        List<String> queryArgs = tokenizeQueryArgs(query);

        Map<String, String> args = new HashMap<String, String>();
        for (String queryArg : queryArgs) {
            String[] argTokens = StringUtils.split(queryArg, '='); 

            if (argTokens.length < 2) {
                log().warn("determineExpressionFromUrl: syntax error in URL query string, missing '=' in query argument: "+queryArg);
            } else {
                args.put(argTokens[0].toLowerCase(), argTokens[1]);
            }
        }

        return args.get(EXPRESSION_ARG);
    }

