    ScheduledFuture<?> schedule(ScheduledExecutorService executor, NodeScanSchedule schedule) {
        
    	final Runnable r = new Runnable() {
            @Override
            public void run() {
                try {
                    
                	final Task t = createTask();
                    t.schedule();
                    t.waitFor();
                    
                    LOG.debug("Finished scanning node {}/{}/{}", getNodeId(), getForeignSource(), getForeignId());
                } catch (final InterruptedException e) {
                    LOG.warn("The node scan for node {}/{}/{} was interrupted", getNodeId(), getForeignSource(), getForeignId(), e);
                    Thread.currentThread().interrupt();
                } catch (final ExecutionException e) {
                    LOG.warn("An error occurred while scanning node {}/{}/{}", getNodeId(), getForeignSource(), getForeignId(), e);
                }
            }
        };
        
        final ScheduledFuture<?> future = executor.scheduleWithFixedDelay(r, schedule.getInitialDelay().getMillis(), schedule.getScanInterval().getMillis(), TimeUnit.MILLISECONDS);
        return future;
    }

