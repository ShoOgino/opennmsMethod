    @Activity( lifecycle = "agentScan", phase = "detectPhysicalInterfaces" )
    public void detectPhysicalInterfaces(final Phase currentPhase, final AgentScan agentScan) throws InterruptedException {
        if (agentScan.isAborted()) { return; }
        SnmpAgentConfig agentConfig = m_agentConfigFactory.getAgentConfig(agentScan.getAgentAddress());
        Assert.notNull(m_agentConfigFactory, "agentConfigFactory was not injected");
        
        final PhysInterfaceTableTracker physIfTracker = new PhysInterfaceTableTracker() {
            @Override
            public void processPhysicalInterfaceRow(PhysicalInterfaceRow row) {
                LogUtils.infof(this, "Processing row for ifIndex "+row.getIfIndex());
                OnmsSnmpInterface snmpIface = row.createInterfaceFromRow();
                snmpIface.setLastCapsdPoll(agentScan.getScanStamp());
                
                List<SnmpInterfacePolicy> policies = m_provisionService.getSnmpInterfacePoliciesForForeignSource(agentScan.getForeignSource());
                for(SnmpInterfacePolicy policy : policies) {
                    if (snmpIface != null) {
                        snmpIface = policy.apply(snmpIface);
                    }
                }
                
                if (snmpIface != null) {
                    final OnmsSnmpInterface snmpIfaceResult = snmpIface;

                    // add call to the snmp interface collection enable policies

                    Runnable r = new Runnable() {
                        public void run() {
                            LogUtils.infof(this, "Saving OnmsSnmpInterface "+snmpIfaceResult);
                            m_provisionService.updateSnmpInterfaceAttributes(
                                                                             agentScan.getNodeId(),
                                                                             snmpIfaceResult);
                        }
                    };
                    currentPhase.add(r, "write");
                }
            }
        };
        
        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, "ifTable/ifXTable", physIfTracker);
        walker.start();
        walker.waitFor();

        if (walker.timedOut()) {
            agentScan.abort("Aborting node scan : Agent timedout while scanning the interfaces table");
        }
        else if (walker.failed()) {
            agentScan.abort("Aborting node scan : Agent failed while scanning the interfaces table: " + walker.getErrorMessage());
        }
        else {
            debug("Finished phase " + currentPhase);
        }
    }

