    private void collectNodeInfo() {
        Assert.notNull(getAgentConfigFactory(), "agentConfigFactory was not injected");
        InetAddress primaryAddress = getAgentAddress();
        SnmpAgentConfig agentConfig = getAgentConfig(primaryAddress);
        
        SystemGroup systemGroup = new SystemGroup(primaryAddress);
        
        SnmpWalker walker = SnmpUtils.createWalker(agentConfig, "systemGroup", systemGroup);
        walker.start();
        
        try {
        
            walker.waitFor();
        
            if (walker.timedOut()) {
                abort("Aborting node scan : Agent timedout while scanning the system table");
            }
            else if (walker.failed()) {
                abort("Aborting node scan : Agent failed while scanning the system table: " + walker.getErrorMessage());
            } else {
        
                systemGroup.updateSnmpDataForNode(getNode());
        
                List<NodePolicy> nodePolicies = getProvisionService().getNodePoliciesForForeignSource(getEffectiveForeignSource());
        
                OnmsNode node = getNode();
                for(NodePolicy policy : nodePolicies) {
                    if (node != null) {
                        node = policy.apply(node);
                    }
                }
        
                if (node == null) {
                    String reason = "Aborted scan of node due to configured policy";
                    abort(reason);
                } else {
                    setNode(node);
                }
        
            }
        } catch (InterruptedException e) {
            abort("Aborting node scan : Scan thread interrupted!");
        }
    }

