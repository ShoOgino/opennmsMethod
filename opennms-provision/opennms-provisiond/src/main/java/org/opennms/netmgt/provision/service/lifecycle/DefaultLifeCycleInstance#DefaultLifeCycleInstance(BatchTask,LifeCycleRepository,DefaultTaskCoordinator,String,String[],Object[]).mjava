    public DefaultLifeCycleInstance(BatchTask containingPhase, LifeCycleRepository repository,
            DefaultTaskCoordinator coordinator, String lifeCycleName, String[] phaseNames, Object[] providers) {

        super(coordinator, containingPhase);
        m_containingPhase = containingPhase;
        m_repository = repository;
        m_coordinator = coordinator;
        m_name = lifeCycleName;
        m_providers = providers;
        
        if (log().isDebugEnabled()) {
            log().debug("Set up default lifecycle instance: " + this);
        }

        m_phases = new Phase[phaseNames.length];
        for(int i = 0; i < phaseNames.length; i++) {
            m_phases[i] = new Phase(this, this, phaseNames[i], m_providers);
            if (log().isDebugEnabled()) {
                log().debug(String.format("Adding phase %s to lifecycle", m_phases[i].getName()));
            }
            add(m_phases[i]);
        }
        
        setAttribute("lifeCycleInstance", this);
    }

