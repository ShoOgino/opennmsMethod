    @Test(timeout=300000)
    public void testRequisitionedCategoriesNoPolicies() throws Exception {
        final int nextNodeId = m_nodeDao.getNextNodeId();

        final MockNetwork network = new MockNetwork();
        final MockNode node = network.addNode(nextNodeId, "test");
        network.addInterface("172.16.1.1");
        network.addService("ICMP");
        anticipateCreationEvents(node);
        m_eventAnticipator.anticipateEvent(getNodeCategoryEvent(nextNodeId, "test"));

        // we should not get new update events on a re-import now, that happens during the scan phase
        //m_eventAnticipator.anticipateEvent(new EventBuilder(EventConstants.NODE_UPDATED_EVENT_UEI, "Test").setNodeid(nextNodeId).getEvent());
        //m_eventAnticipator.anticipateEvent(getNodeCategoryEvent(nextNodeId, "test"));
        importFromResource("classpath:/provisioner-testCategories-oneCategory.xml", Boolean.TRUE.toString());

        m_eventAnticipator.verifyAnticipated();
        assertEquals(0, m_eventAnticipator.getUnanticipatedEvents().size());
        m_eventAnticipator.reset();

        m_eventAnticipator.anticipateEvent(nodeScanCompleted(nextNodeId));
        m_eventAnticipator.setDiscardUnanticipated(true);

        runPendingScans();

        m_eventAnticipator.verifyAnticipated();
        m_eventAnticipator.reset();

        OnmsNode n = getNodeDao().get(nextNodeId);
        assertEquals(1, n.getCategories().size());
        assertEquals("TotallyMadeUpCategoryName", n.getCategories().iterator().next().getName());

        // import again, should be the same
        importFromResource("classpath:/provisioner-testCategories-oneCategory.xml", Boolean.TRUE.toString());
        n = getNodeDao().get(nextNodeId);
        assertEquals(1, n.getCategories().size());
        assertEquals("TotallyMadeUpCategoryName", n.getCategories().iterator().next().getName());

        runPendingScans();

        n = getNodeDao().get(nextNodeId);
        assertEquals(1, n.getCategories().size());
        assertEquals("TotallyMadeUpCategoryName", n.getCategories().iterator().next().getName());
    }

