    protected void executeTest(String rescanExistingFlag) throws Exception {
        setupLogging("INFO");

        System.err.println("-------------------------------------------------------------------------");
        System.err.println("Import Part 1");
        System.err.println("-------------------------------------------------------------------------");

        importFromResource("classpath:/testNoRescanOnImport-part1.xml", Boolean.TRUE.toString());

        final List<OnmsNode> nodes = getNodeDao().findAll();
        assertEquals(1, nodes.size());
        
        final OnmsNode node = nodes.get(0);
        assertEquals(1, node.getIpInterfaces().size());

        System.err.println("-------------------------------------------------------------------------");
        System.err.println("Import Part 2");
        System.err.println("-------------------------------------------------------------------------");

        setupLogging("DEBUG");
        m_eventAnticipator.reset();
        anticipateNoRescanSecondNodeEvents();
        importFromResource("classpath:/testNoRescanOnImport-part2.xml", rescanExistingFlag);
        m_eventAnticipator.verifyAnticipated();
        setupLogging("INFO");

        //Verify node count
        assertEquals(2, getNodeDao().countAll());

        for (final OnmsNode n : getNodeDao().findAll()) {
        	LOG.info("found node {}", n);
        	for (final OnmsIpInterface iface : n.getIpInterfaces()) {
        		LOG.info("  interface: {}", iface);
        	}
        }
        
        setupLogging("ERROR");
    }

