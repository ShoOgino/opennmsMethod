    @Before
    public void setUp() throws Exception {
        MockLogAppender.setupLogging();
        final MockForeignSourceRepository mockForeignSourceRepository = new MockForeignSourceRepository();
        final ForeignSource fs = new ForeignSource();
        fs.setName("default");
        fs.setScanInterval(Duration.standardDays(1));
        fs.addDetector(new PluginConfig("ICMP", "org.opennms.netmgt.provision.service.MockServiceDetector"));
        fs.addDetector(new PluginConfig("SNMP", "org.opennms.netmgt.provision.detector.snmp.SnmpDetector"));

        final PluginConfig policy1 = new PluginConfig("setNodeMetaData1", NodeMetadataSettingPolicy.class.getName());
        policy1.addParameter("metadataKey", "nodeKey1");
        policy1.addParameter("metadataValue", "nodeValue1");
        policy1.addParameter("metadataContext", "nodeCustomContext1");
        policy1.addParameter("label", "~.*");
        fs.addPolicy(policy1);

        final PluginConfig policy2 = new PluginConfig("setNodeMetaData2", NodeMetadataSettingPolicy.class.getName());
        policy2.addParameter("metadataKey", "nodeKey2");
        policy2.addParameter("metadataValue", "nodeValue2");
        policy2.addParameter("metadataContext", "nodeCustomContext2");
        policy2.addParameter("label", "~.*");
        fs.addPolicy(policy2);

        final PluginConfig policy3 = new PluginConfig("setInterfaceMetaData1", InterfaceMetadataSettingPolicy.class.getName());
        policy3.addParameter("metadataKey", "interfaceKey3");
        policy3.addParameter("metadataValue", "interfaceValue3");
        policy3.addParameter("metadataContext", "interfaceCustomContext3");
        policy3.addParameter("ipAddress", "~192\\.168\\.3\\..*");
        policy3.addParameter("matchBehavior", "ALL_PARAMETER");
        fs.addPolicy(policy3);

        mockForeignSourceRepository.putDefaultForeignSource(fs);
        m_provisioner.getProvisionService().setForeignSourceRepository(mockForeignSourceRepository);
        m_provisioner.start();
    }

