    @Test
    public void testImportInvalidAsset() throws Exception {
        final int nextNodeId = m_nodeDao.getNextNodeId();
        assertEquals(0, m_nodeDao.countAll());

        final Resource invalidAssetFieldResource = getResource("classpath:/import_invalidAssetFieldName.xml");

        m_eventManager.getEventAnticipator().anticipateEvent(getStarted(invalidAssetFieldResource));
        m_eventManager.getEventAnticipator().anticipateEvent(getSuccessful(invalidAssetFieldResource));
        m_eventManager.getEventAnticipator().anticipateEvent(getNodeAdded(nextNodeId));
        m_eventManager.getEventAnticipator().anticipateEvent(getNodeGainedInterface(nextNodeId));
        m_eventManager.getEventAnticipator().anticipateEvent(getNodeGainedService(nextNodeId));
        m_eventManager.getEventAnticipator().anticipateEvent(getNodeScanCompleted(nextNodeId));

        // This requisition has an asset on some nodes called "pollercategory".
        // Change it to "pollerCategory" (capital 'C') and the test passes...
        m_provisioner.doImport(invalidAssetFieldResource.getURL().toString(), Boolean.TRUE.toString());
        waitForEverything();
        m_eventManager.getEventAnticipator().verifyAnticipated();

        // should still import the node, just skip the asset field
        assertEquals(1, m_nodeDao.countAll());
        OnmsNode node = m_nodeDao.get(m_nodeDao.getNodeIds().iterator().next());
        assertEquals("yellow human", node.getAssetRecord().getDescription());
        assertNull(node.getAssetRecord().getPollerCategory());
    }

