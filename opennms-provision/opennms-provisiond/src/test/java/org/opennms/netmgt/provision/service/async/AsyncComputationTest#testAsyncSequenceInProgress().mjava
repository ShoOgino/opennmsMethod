    @Test
    public void testAsyncSequenceInProgress() throws Exception {
        
        final long count = 100000;
        final long batchSize = 100;
        final long batches = count / batchSize;


        Async<String, Long> first = Computations.async(m_executor, toLong());
        
        
        AsyncSequenceBuilder<String, Long> summer = Computations.asyncSeq(m_executor, first);
        
        Async<AsyncSequenceBuilder<String, Long>, AsyncSequenceBuilder<String, Long>> firstBatch = Computations.async(m_executor, schedule(1, batchSize));
        AsyncSequenceBuilder<AsyncSequenceBuilder<String, Long>, AsyncSequenceBuilder<String, Long>> scheduler = Computations.asyncSeq(m_executor, firstBatch);
        for(long i = 1; i < batches; i++) {
            scheduler = scheduler.add(Computations.async(m_executor, schedule((batchSize*i)+1, batchSize)));
        }
        
        scheduler.start(summer);
        
        firstBatch.waitFor();
        

        summer.start("0");
        
        // so it can be garbage collected
        first = null;
        firstBatch = null;
        
        // we need to make sure all the summer tasks are added before
        // we ask for the seq task
        summer = scheduler.async().waitFor();
        
        Async<String, String> seq = summer.add(this.<Long>toStr()).async();

        assertEquals(String.valueOf(count*(count+1)/2), seq.waitFor());

    }

