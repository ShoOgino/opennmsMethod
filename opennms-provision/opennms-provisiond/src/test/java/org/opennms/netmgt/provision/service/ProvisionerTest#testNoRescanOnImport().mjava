    // fail if we take more than five minutes
    @Test(timeout=300000)
    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database
    @Transactional
    @JUnitSnmpAgents({
        @JUnitSnmpAgent(host="172.20.2.201", port=161, resource="classpath:snmpTestData3.properties"),
        @JUnitSnmpAgent(host="172.20.2.202", port=161, resource="classpath:snmpTestData4.properties"),
        @JUnitSnmpAgent(host="172.20.2.204", port=161, resource="classpath:snmpTestData4.properties")
    })
    public void testNoRescanOnImport() throws Exception {
        importFromResource("classpath:/requisition_then_scan2.xml", true);

        final List<OnmsNode> nodes = getNodeDao().findAll();
        final OnmsNode node = nodes.get(0);

        final NodeScan scan = m_provisioner.createNodeScan(node.getId(), node.getForeignSource(), node.getForeignId());
        
        runScan(scan);
        
        m_nodeDao.flush();
        
        assertEquals(2, getInterfaceDao().countAll());

        System.err.println("-------------------------------------------------------------------------");

        m_mockSnmpDataProvider.setDataForAddress(new SnmpAgentAddress(InetAddressUtils.addr("172.20.2.201"), 161), m_resourceLoader.getResource("classpath:snmpTestData4.properties"));
        
        importFromResource("classpath:/requisition_primary_addr_changed.xml", false);

        m_nodeDao.flush();

        //Verify distpoller count
        assertEquals(1, getDistPollerDao().countAll());
        
        //Verify node count
        assertEquals(1, getNodeDao().countAll());
        
        LogUtils.debugf(this, "found: %s", getInterfaceDao().findAll());
        
        //Import without rescan *only* adds interfaces, it does not delete them
        assertEquals(3, getInterfaceDao().countAll());
        
        //Verify ifservices count - discover snmp service on other if
        assertEquals("Unexpected number of services found: "+getMonitoredServiceDao().findAll(), 3, getMonitoredServiceDao().countAll());
        
        //Verify service count
        assertEquals("Unexpected number of service types found: " + getServiceTypeDao().findAll(), 1, getServiceTypeDao().countAll());

        //Verify snmpInterface count
        assertEquals("Unexpected number of SNMP interfaces found: " + getSnmpInterfaceDao().findAll(), 6, getSnmpInterfaceDao().countAll());
        
        // Node Delete
        importFromResource("classpath:/nonodes.xml", true);

        //Verify node count
        assertEquals(0, getNodeDao().countAll());
    }

