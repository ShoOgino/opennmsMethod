        public boolean processResponse(BufferedReader in) throws IOException {
            if(m_responseHandler == null) {
                return true;
            }else {
                try {
                    
                    char[] cbuf = new char[1024];
                    int chars = 0;
                    StringBuffer response = new StringBuffer();
                    try {
                        while ((chars = in.read(cbuf, 0, 1024)) != -1) {
                            String line = new String(cbuf, 0, chars);
                            response.append(line);
                        }

                    } catch (java.net.SocketTimeoutException timeoutEx) {
                        if (timeoutEx.bytesTransferred > 0) {
                            String line = new String(cbuf, 0, timeoutEx.bytesTransferred);
                            response.append(line);
                        }
                    }
                    if (response.toString() != null && m_responseHandler.matches(response.toString())) {
                         
                        if (m_checkReturnCode) {
                                                        
                            int maxRetCode = getMaxRetCode();
                                                        
                            if ((DEFAULT_URL.equals(getUrl())) || (m_checkReturnCode == false)) {
                                maxRetCode = 600;
                            }
                            
                            StringTokenizer t = new StringTokenizer(response.toString());
                            t.nextToken();
                            int rVal = Integer.parseInt(t.nextToken());
                                                       
                            if (rVal >= 99 && rVal <= maxRetCode) {
                                System.out.println("RetCode Passed");
                                return true;
                            }
                        } else {
                            System.out.println("isAServer");
                            return true;
                        }
                    }
                } catch (SocketException e) {
                    //log.debug(getPluginName() + ": a protocol error occurred talking to host " + config.getInetAddress().getHostAddress(), e);
                    return false;
                } catch (NumberFormatException e) {
//                    log.debug(getPluginName()
//                            + ": failed to parse response code from host "
//                            + config.getInetAddress().getHostAddress(), e);
                    return false;
                }
                
                return false;  
            }
        }

