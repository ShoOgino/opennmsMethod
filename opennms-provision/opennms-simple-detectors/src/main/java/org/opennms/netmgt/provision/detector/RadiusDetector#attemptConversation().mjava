    /**
     * @return
     * @throws InvalidParameterException 
     */
    private boolean attemptConversation() throws InvalidParameterException, RadiusException {
        
        ChapUtil chapUtil = new ChapUtil();
        RadiusPacket accessRequest = new RadiusPacket(RadiusPacket.ACCESS_REQUEST);
        RadiusAttribute userNameAttribute;
        RadiusAttribute nasIdAttribute;
        nasIdAttribute = new RadiusAttribute(RadiusAttributeValues.NAS_IDENTIFIER, getNasID().getBytes());
        userNameAttribute = new RadiusAttribute(RadiusAttributeValues.USER_NAME, getUser().getBytes());
        accessRequest.setAttribute(userNameAttribute);
        accessRequest.setAttribute(nasIdAttribute);
        if(getAuthType().equalsIgnoreCase("chap")){
            byte[] chapChallenge = chapUtil.getNextChapChallenge(16);
            accessRequest.setAttribute(new RadiusAttribute(RadiusAttributeValues.CHAP_PASSWORD, chapEncrypt(getPassword(), chapChallenge, chapUtil)));
            accessRequest.setAttribute(new RadiusAttribute(RadiusAttributeValues.CHAP_CHALLENGE, chapChallenge));
        }else{
            accessRequest.setAttribute(new RadiusAttribute(RadiusAttributeValues.USER_PASSWORD,getPassword().getBytes()));
        }
        
        for(Iterator<RadiusExchange> it = m_conversation.iterator(); it.hasNext();) {
            RadiusExchange ex = it.next();
            
            if(!ex.processResponse(accessRequest)) {
               return false; 
            }
            //System.out.println("processed response successfully");
            
            if(!ex.sendRequest()) {
                return false;
            }
        }
        return true;
    }

