    @Override
    public CompletableFuture<RequisitionResponseDTO> execute(RequisitionRequestDTO request) {
        return CompletableFuture.supplyAsync(new Supplier<RequisitionResponseDTO>() {
            @Override
            public RequisitionResponseDTO get() {
                // Lookup the provider in the thread, since the lookup may block
                final RequisitionProvider provider = registry.getProviderByType(request.getType());
                if (provider == null) {
                    throw new IllegalArgumentException("No provider found for type: " + request.getType());
                }
                // Retrieve the request from the DTO (possibly unmarshaling it)
                final RequisitionRequest providerRequest = request.getProviderRequest(provider);
                // Retrieve the requisition
                final Requisition requisition = provider.getRequisition(providerRequest);
                return new RequisitionResponseDTO(requisition);
            }
        }, executor);
    }

