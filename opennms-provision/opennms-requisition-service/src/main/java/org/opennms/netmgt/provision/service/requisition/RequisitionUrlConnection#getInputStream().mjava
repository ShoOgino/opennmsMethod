    @Override
    public InputStream getInputStream() throws IOException {
        try {
            final Requisition requisition = getClient().requisition()
                .withRequisitionProviderType(type)
                .withParameters(parameters)
                .execute()
                .get();

            if (requisition == null) {
                throw new IOException(String.format("Invalid (null) requisition was returned by the provider for type '%s'", type));
            }

            // The XmlHandler is not thread safe
            // Marshaling is quick, so we opt to use a single instance of the handler
            // instead of using thread-local variables
            final String requisitionXml;
            synchronized(s_xmlHandler) {
                requisitionXml = s_xmlHandler.marshal(requisition);
            }

            return new ByteArrayInputStream(requisitionXml.getBytes());
        } catch (ExecutionException|InterruptedException e) {
            throw new IOException(e);
        }
    }

