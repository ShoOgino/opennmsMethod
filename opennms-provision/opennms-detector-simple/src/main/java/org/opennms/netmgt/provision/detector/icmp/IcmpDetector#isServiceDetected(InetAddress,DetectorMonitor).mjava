    /** {@inheritDoc} */
    public boolean isServiceDetected(InetAddress address, DetectorMonitor detectorMonitor) {
        
        LogUtils.debugf(this, "isServiceDetected: Testing ICMP based service for address: %s...", address);

        boolean found = false;
        try {
            for(int i = 0; i < getRetries() && !found; i++) {
                Long retval = PingerFactory.getInstance().ping(address, getTimeout(), getRetries());
                
                LogUtils.debugf(this, "isServiceDetected: Response time for address: %s is: %d.", address, retval);
                
                if (retval != null) {
                    found = true;
                }
            }
            
            LogUtils.infof(this, "isServiceDetected: ICMP based service for address: %s is detected: %s.", address, found);

        } catch (InterruptedException e) {
            LogUtils.infof(this, "isServiceDetected: ICMP based service for address: %s is detected: %s. Received an InterruptedException.", address, false);
        } catch (Throwable e) {
            LogUtils.infof(this, "isServiceDetected: ICMP based service for address: %s is detected: %s. Received an Exception %s.", address, false, e);
        }
        
        return found;
    }

