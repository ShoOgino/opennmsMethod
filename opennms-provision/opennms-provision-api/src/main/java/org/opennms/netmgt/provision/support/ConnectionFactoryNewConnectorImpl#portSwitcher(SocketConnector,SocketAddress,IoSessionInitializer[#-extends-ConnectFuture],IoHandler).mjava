    private IoFutureListener<ConnectFuture> portSwitcher(final SocketConnector connector, final SocketAddress remoteAddress, final IoSessionInitializer<? extends ConnectFuture> init, final IoHandler handler) {
        return new IoFutureListener<ConnectFuture>() {

            @Override
            public void operationComplete(ConnectFuture future) {
                try {
                    Throwable e = future.getException();
                    // If we failed to bind to the outgoing port...
                    if (e != null && e instanceof BindException) {
                        synchronized(m_portMutex) {
                            // ... then reset the port
                            LOG.warn("Resetting outgoing TCP port, value was {}", m_port.get());
                            m_port.set(null);
                        }
                        // and reattempt the connection
                        connect(remoteAddress, init, handler);
                    }
                } catch (RuntimeIoException e) {
                    LOG.debug("Exception of type {} caught, disposing of connector: {}", e.getClass().getName(), Thread.currentThread().getName(), e);
                    // This will be thrown in the event of a ConnectException for example
                    connector.dispose();
                }
            }
        };
    }

