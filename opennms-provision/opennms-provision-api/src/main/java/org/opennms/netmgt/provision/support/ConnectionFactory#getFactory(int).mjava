    /**
     * Get a new ConnectionFactory. If there is already a Factory with the
     * desired timeout, you will get that one; otherwise a new one is created.
     * <p>
     * If org.opennms.netmgt.provision.maxConcurrentConnectors is set, this may
     * block until a connector is available.
     * 
     * @param timeoutInMillis
     * 		Connection timeout
     * @return
     * 		An appropriate Factory
     */
    public static ConnectionFactory getFactory(int timeoutInMillis) {
    	LogUtils.debugf(ConnectionFactory.class, "Creating a ConnectionFactory for timeout %d, there are already %d factories", timeoutInMillis, s_connectorPool.size());
    	if (s_availableConnectors != null) {
    		s_availableConnectors.acquireUninterruptibly();
    	}
    	synchronized (s_connectorPool) {
        	ConnectionFactory w = s_connectorPool.get(timeoutInMillis);
        	if (w == null) {
        		w = new ConnectionFactory(timeoutInMillis);
        		s_connectorPool.put(timeoutInMillis, w);
        	}
        	w.m_references++;
        	return w;
		}
    }

