        public synchronized boolean enqueOperation(Integer nodeId, AdapterOperation op) {
            
            //TODO: should implement some logic here about what is currently pending in the queue and whether
            //or not to enqueue.  For example, if an update arrives and an add is still in the queue,
            //perhaps we should just drop the update.  Same consideration for delete, but should remove all
            //operations for the node like nothing ever happened.
            
            if (m_mappedQueue.containsKey(nodeId) && m_mappedQueue.get(nodeId).contains(op)) {
                return false;
            } else if (m_mappedQueue.containsKey(nodeId) && !m_mappedQueue.get(nodeId).contains(op)) {
                m_mappedQueue.get(nodeId).offer(op);
                return true;
            } else {
                LinkedBlockingQueue<AdapterOperation> queue = new LinkedBlockingQueue<AdapterOperation>();
                queue.offer(op);
                m_mappedQueue.put(nodeId, queue);
                return true;
            }
        }

