    /** {@inheritDoc} */
    @Override
    public final DetectFuture isServiceDetected(final InetAddress address, final DetectorMonitor monitor) {

        final DetectFuture detectFuture = new DefaultDetectFuture(this);

        try {
            // Set this up here because it can throw an Exception, which we want
            // to throw now, not in initializeSession
            final SSLContext c = createClientSSLContext();

            // Create an IoSessionInitializer that will configure this individual
            // session. Previously, all this was done on a new Connector each time
            // but that was leaking file handles all over the place. This way gives
            // us per-connection settings without the overhead of creating new
            // Connectors each time
            IoSessionInitializer<ConnectFuture> init = new IoSessionInitializer<ConnectFuture>() {

                public void initializeSession(IoSession session, ConnectFuture future) {
                    // Add filters to the session
                    if(isUseSSLFilter()) {
                        final SslFilter filter = new SslFilter(c);
                        filter.setUseClientMode(true);
                        session.getFilterChain().addFirst("SSL", filter);
                    }
                    session.getFilterChain().addLast( "logger", getLoggingFilter() != null ? getLoggingFilter() : new LoggingFilter() );
                    session.getFilterChain().addLast( "codec", getProtocolCodecFilter());
                    session.getConfig().setIdleTime(IdleStatus.READER_IDLE, getIdleTime());
                    // Give the session an IoHandler that will get everything delegated to it
                    // by the SessionDelegateIoHandler
                    session.setAttribute( IoHandler.class, createDetectorHandler(detectFuture) );
                }
            };

            // Start communication
            final InetSocketAddress socketAddress = new InetSocketAddress(address, getPort());
            // Get an ephemeral port on the localhost interface
            final InetSocketAddress localAddress = new InetSocketAddress(InetAddressUtils.getLocalHostAddress(), 0);
            final ConnectFuture cf = m_connectionFactory.connect(socketAddress, localAddress, init);
            cf.addListener(retryAttemptListener(m_connectionFactory, detectFuture, socketAddress, init, getRetries() ));
        } catch (KeyManagementException e) {
            detectFuture.setException(e);
        } catch (NoSuchAlgorithmException e) {
            detectFuture.setException(e);
        } catch (IOException e) {
            detectFuture.setException(e);
        }

        return detectFuture;
    }

