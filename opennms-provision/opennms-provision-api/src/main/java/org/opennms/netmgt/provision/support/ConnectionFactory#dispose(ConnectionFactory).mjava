    /**
     * Free up the resources used by a connection and connection factory.
     * @param factory
     * @param connection
     */
    public static void dispose(ConnectionFactory factory) {
        if (s_availableConnections != null) {
            s_availableConnections.release();
        }

        if (--factory.m_references <= 0) {
            LogUtils.debugf(factory, "Disposing of factory %s for interval %d", factory, factory.m_timeout);
            synchronized (s_connectorPool) {
                Iterator<Entry<Integer, ConnectionFactory>> i = s_connectorPool.entrySet().iterator();
                while(i.hasNext()) {
                    if(i.next().getValue() == factory) {
                        i.remove();
                    }
                }
            }

            synchronized (factory.m_connectorMutex) {
                factory.m_connector.dispose(true);
                /*
                while(!factory.m_connector.isDisposed()) {
                    try { Thread.sleep(10); } catch (InterruptedException e) {}
                }
                */
            }
        }
    }

