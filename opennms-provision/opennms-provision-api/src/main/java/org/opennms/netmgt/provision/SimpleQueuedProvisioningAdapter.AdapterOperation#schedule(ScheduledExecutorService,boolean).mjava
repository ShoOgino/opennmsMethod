        /**
         * Schedules this operation
         * 
         * @param executor
         * @param reduceAttempts
         * @return
         *   Returns a future if scheduled.  Returns null if remaining attempts to schedule is < 1
         */
        ScheduledFuture<?> schedule(ScheduledExecutorService executor, boolean reduceAttempts) {
            ScheduledFuture<?> future = null;
            if (reduceAttempts) {
                if (getSchedule().getAttemptsRemainingAndDecrement() > 0) {
                    future = executor.schedule(this, m_schedule.getInitialDelay(), m_schedule.getUnit());
                }
            } else {
                future = executor.schedule(this, m_schedule.getInitialDelay(), m_schedule.getUnit());
            }
            return future;
        }

