    @Override
    public Object execute() throws Exception {
        final CompletableFuture<Requisition> future = client.requisition()
                .withRequisitionProviderType(type)
                .withParameters(parse(parameters))
                .withLocation(location)
                .withSystemId(systemId)
                .withTimeToLive(ttlInMs)
                .execute();

        while (true) {
            try {
                try {
                    Requisition requisition = future.get(1, TimeUnit.SECONDS);
                    if(importRequisition) {
                        System.out.println();
                        ImportRequisition.sendImportRequisitionEvent(eventForwarder, type, parameters, null);
                        System.out.println();
                    }
                    if (xmlOutput) {
                        return JaxbUtils.marshal(requisition);
                    } else {
                        return requisition;
                    }
                } catch (InterruptedException e) {
                    System.out.println("\nInterrupted.");
                } catch (ExecutionException e) {
                    System.out.printf("\nRequisition retrieval failed with: %s\n", e);
                    e.printStackTrace();
                }
                break;
            } catch (TimeoutException e) {
                // pass
            }
            System.out.print(".");
            System.out.flush();
        }
        return null;
    }

