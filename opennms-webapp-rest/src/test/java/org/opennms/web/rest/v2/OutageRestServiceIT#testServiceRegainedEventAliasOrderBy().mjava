    /**
     * Test {@code orderBy} for properties of {@link OnmsEvent}.
     * 
     * @throws Exception
     */
    @Test
    public void testServiceRegainedEventAliasOrderBy() throws Exception {
        String url = "/outages";
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventAckTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventAckUser"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventAutoAction"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventCorrelation"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventCreateTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventDescr"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventDisplay"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventForward"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventHost"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventLog"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventLogGroup"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventLogMsg"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventMouseOverText"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventNotification"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventOperAction"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventOperActionMenuText"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventOperInstruct"), 200);
        // TODO: Cannot sort by parms since they are all stored in one database column
        //sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventParameters"), 200);
        //sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventParms"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventPathOutage"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventSeverity"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventSnmp"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventSnmpHost"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventSource"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventSuppressedCount"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventTTicket"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventTTicketState"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.eventUei"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.id"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.ifIndex"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceRegainedEvent.ipAddr"), 200);
    }

