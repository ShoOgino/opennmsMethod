    /**
     * Test filtering for properties of {@link OnmsCategory}. The implementation
     * for this filtering is different because the node-to-category relationship
     * is a many-to-many relationship.
     * 
     * @throws Exception
     */
    @Test
    public void testCategoryFiltering() throws Exception {
        int categoryId;
        categoryId = m_databasePopulator.getCategoryDao().findByName("Routers").getId();
        executeQueryAndVerify("_s=category.id==" + categoryId, 1);
        executeQueryAndVerify("_s=category.id!=" + categoryId, 0);

        // Category that doesn't exist
        categoryId = Integer.MAX_VALUE;
        executeQueryAndVerify("_s=category.id==" + categoryId, 0);
        executeQueryAndVerify("_s=category.id!=" + categoryId, 1);

        executeQueryAndVerify("_s=category.name==Routers", 1);
        executeQueryAndVerify("_s=category.name!=Routers", 0);
        executeQueryAndVerify("_s=category.name==Rou*", 1);
        executeQueryAndVerify("_s=category.name!=Rou*", 0);
        executeQueryAndVerify("_s=category.name==Ro*ers", 1);
        executeQueryAndVerify("_s=category.name!=Ro*ers", 0);
        executeQueryAndVerify("_s=category.name==DoesntExist", 0);
        executeQueryAndVerify("_s=category.name!=DoesntExist", 1);
    }

