    /**
     * Test {@code orderBy} for properties of {@link OnmsEvent}.
     * 
     * @throws Exception
     */
    @Test
    public void testServiceLostEventAliasOrderBy() throws Exception {
        String url = "/outages";
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventAckTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventAckUser"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventAutoAction"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventCorrelation"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventCreateTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventDescr"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventDisplay"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventForward"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventHost"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventLog"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventLogGroup"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventLogMsg"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventMouseOverText"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventNotification"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventOperAction"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventOperActionMenuText"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventOperInstruct"), 200);
        // TODO: Cannot sort by parms since they are all stored in one database column
        //sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventParameters"), 200);
        //sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventParms"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventPathOutage"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventSeverity"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventSnmp"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventSnmpHost"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventSource"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventSuppressedCount"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventTTicket"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventTTicketState"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.eventUei"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.id"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.ifIndex"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceLostEvent.ipAddr"), 200);
    }

