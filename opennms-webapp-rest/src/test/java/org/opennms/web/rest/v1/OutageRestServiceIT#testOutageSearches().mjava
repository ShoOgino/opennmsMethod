    @Test
    @JUnitTemporaryDatabase
    public void testOutageSearches() throws Exception {
        MockHttpServletRequest jsonRequest = createRequest(m_context, GET, "/outages");
        jsonRequest.addHeader("Accept", MediaType.APPLICATION_JSON);
        jsonRequest.setQueryString("ipInterface.ipAddress=192.168.1.2");
        String json = sendRequest(jsonRequest, 200);
        LOG.debug(json);
        JSONObject restObject = new JSONObject(json);
        assertEquals(1, restObject.getJSONArray("outage").length());

        jsonRequest = createRequest(m_context, GET, "/outages");
        jsonRequest.addHeader("Accept", MediaType.APPLICATION_JSON);
        jsonRequest.setQueryString("perspective=null&comparator=ge&serviceLostEvent.eventSeverity=5"); // OnmsSeverity.MINOR
        json = sendRequest(jsonRequest, 200);
        LOG.debug(json);
        restObject = new JSONObject(json);
        assertEquals(1, restObject.getJSONArray("outage").length());

        jsonRequest = createRequest(m_context, GET, "/outages");
        jsonRequest.addHeader("Accept", MediaType.APPLICATION_JSON);
        jsonRequest.setQueryString("perspective=null&comparator=lt&serviceLostEvent.eventSeverity=2"); // OnmsSeverity.CLEARED
        json = sendRequest(jsonRequest, 200);
        LOG.debug(json);
        restObject = new JSONObject(json);
        assertEquals(2, restObject.getJSONArray("outage").length());

        jsonRequest = createRequest(m_context, GET, "/outages");
        jsonRequest.addHeader("Accept", MediaType.APPLICATION_JSON);
        jsonRequest.setQueryString("perspective=null&comparator=like&serviceLostEvent.eventLogMsg=Test%25");
        json = sendRequest(jsonRequest, 200);
        LOG.debug(json);
        restObject = new JSONObject(json);
        assertEquals(3, restObject.getJSONArray("outage").length());

        // Check serviceRegainedEvent filters
        jsonRequest = createRequest(m_context, GET, "/outages");
        jsonRequest.addHeader("Accept", MediaType.APPLICATION_JSON);
        jsonRequest.setQueryString("perspective=null&comparator=lt&serviceRegainedEvent.eventSeverity=2"); // OnmsSeverity.CLEARED
        json = sendRequest(jsonRequest, 200);
        LOG.debug(json);
        // There is one test outage that has been resolved
        restObject = new JSONObject(json);
        assertEquals(1, restObject.getJSONArray("outage").length());

        jsonRequest = createRequest(m_context, GET, "/outages");
        jsonRequest.addHeader("Accept", MediaType.APPLICATION_JSON);
        jsonRequest.setQueryString("perspective=null&comparator=like&serviceRegainedEvent.eventLogMsg=Test%25");
        json = sendRequest(jsonRequest, 200);
        LOG.debug(json);
        // There is one test outage that has been resolved
        restObject = new JSONObject(json);
        assertEquals(1, restObject.getJSONArray("outage").length());
    }

