    @Test
    public void testNodeInterfaceServices() throws Exception {
        createRequisition();

        String base = "/requisitions/test/nodes/4243/interfaces/192.0.2.204/services";

        // create a service
        JSONObject monkey = new JSONObject();
        monkey.put("service-name", "MONKEY");
        sendPost(base, monkey.toString(), 202, "/interfaces/192.0.2.204/services/MONKEY");

        // get list of services
        String json = sendRequest(GET, base, 200);
        JSONObject services = new JSONObject(json);
        assertEquals(3, services.getInt("count"));
        boolean hasIcmp = false;
        assertTrue(services.has("monitored-service"));
        JSONArray servicesArray = services.getJSONArray("monitored-service");
        for (int i=0; i < servicesArray.length(); i++) {
            JSONObject obj = servicesArray.getJSONObject(i);
            assertTrue(obj.has("service-name"));
            if ("ICMP".equals(obj.getString("service-name"))) {
                hasIcmp = true;
            }
        }
        assertTrue(hasIcmp);

        // get individual service
        String url = base + "/ICMP";
        json = sendRequest(GET, url, 200);
        JSONObject svc = new JSONObject(json);
        assertTrue(svc.has("service-name"));
        assertEquals("ICMP", svc.getString("service-name"));

        // delete interface
        json = sendRequest(DELETE, url, 202);
        json = sendRequest(GET, url, 404);

        // confirm there is one less interface
        json = sendRequest(GET, base, 200);
        services = new JSONObject(json);
        assertEquals(2, services.getInt("count"));
    }

