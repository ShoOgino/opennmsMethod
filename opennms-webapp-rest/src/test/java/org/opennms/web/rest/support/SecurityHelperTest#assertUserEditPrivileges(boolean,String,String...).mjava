    private void assertUserEditPrivileges(boolean isAllowed, String ackUser, String... roles) {
        final Set<String> userRoles = new HashSet<>(Arrays.asList(roles));
        SecurityContext securityContext = mock(SecurityContext.class, RETURNS_DEEP_STUBS);
        when(securityContext.getUserPrincipal().getName()).thenReturn(USER);
        when(securityContext.isUserInRole(anyString())).thenAnswer((Answer) invocation -> {
            final String role = invocation.getArgumentAt(0, String.class);
            return userRoles.contains(role);
        });

        WebApplicationException ex = null;
        try {
            SecurityHelper.assertUserEditCredentials(securityContext, ackUser);
        } catch (WebApplicationException e) {
            ex = e;
        }

        if (isAllowed) {
            assertNull("Should be allowed, but got: " + ex, ex);
        } else {
            assertNotNull("Should not be allowed, but passed.", ex);
        }
    }

