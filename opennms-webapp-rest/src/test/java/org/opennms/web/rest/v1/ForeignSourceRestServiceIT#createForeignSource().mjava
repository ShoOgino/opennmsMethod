    private void createForeignSource() throws Exception {
        // Be sure there are no foreign-sources defined
        System.err.println("[createForeignSource] : deleting existing foreign source definitions");
        ForeignSourceCollection collection = JaxbUtils.unmarshal(ForeignSourceCollection.class, sendRequest(GET, "/foreignSources", 200));
        collection.getForeignSources().forEach(f -> {
            try {
                System.err.printf("[createForeignSource] : deleting %s\n", f.getName());
                sendRequest(DELETE, "/foreignSources/" + f.getName(), 202);
                sendRequest(DELETE, "/requisitions/" + f.getName(), 202);
            } catch (Exception e) {
                fail(e.getMessage());
            }
        });
        // Create sample foreign source
        System.err.println("[createForeignSource] : creating sample foreign source");
        String fs =
            "<foreign-source xmlns=\"http://xmlns.opennms.org/xsd/config/foreign-source\" name=\"test\">" +
                "<scan-interval>1d</scan-interval>" +
                "<detectors>" + 
                    "<detector class=\"org.opennms.netmgt.provision.detector.datagram.DnsDetector\" name=\"DNS\"/>" +
                    "<detector class=\"org.opennms.netmgt.provision.detector.simple.HttpDetector\" name=\"HTTP\"/>" +
                    "<detector class=\"org.opennms.netmgt.provision.detector.simple.HttpsDetector\" name=\"HTTPS\"/>" +
                    "<detector class=\"org.opennms.netmgt.provision.detector.icmp.IcmpDetector\" name=\"ICMP\"/>" +
                "</detectors>" +
                "<policies>" +
                    "<policy name=\"lower-case-node\" class=\"org.opennms.netmgt.provision.persist.policies.NodeCategoryPolicy\">" +
                        "<parameter key=\"label\" value=\"~^[a-z]$\" />" +
                        "<parameter key=\"category\" value=\"Lower-Case-Nodes\" />" +
                    "</policy>" +
                    "<policy name=\"all-ipinterfaces\" class=\"org.opennms.netmgt.provision.persist.policies.InclusiveInterfacePolicy\" />" +
                "</policies>" +
            "</foreign-source>";
        MockHttpServletResponse response = sendPost("/foreignSources", fs, 202, "/foreignSources/test");
        System.err.println("response = " + stringifyResponse(response));
    }

