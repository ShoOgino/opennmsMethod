    @Test
    @JUnitTemporaryDatabase
    public void testGetAvailabilityJson() throws Exception {
        String url = "/availability";

        // GET all items
        MockHttpServletRequest jsonRequest = createRequest(getServletContext(), GET, url);
        jsonRequest.addHeader("Accept", MediaType.APPLICATION_JSON);
        String json = sendRequest(jsonRequest, 200);

        // TODO: The comment and last-updated fields are blank in the objects that are
        // fetched. Figure out how to get them to populate so that we can test serialization
        // of those values.
        //
        JSONObject restObject = new JSONObject(json);
        JSONObject expectedObject = new JSONObject(IOUtils.toString(new FileInputStream("src/test/resources/v1/availability.json")));
        JSONAssert.assertEquals(expectedObject, restObject, true);

        // GET node item
        jsonRequest = createRequest(getServletContext(), GET, url  + "/nodes/" + m_populator.getNode1().getId());
        jsonRequest.addHeader("Accept", MediaType.APPLICATION_JSON);
        json = sendRequest(jsonRequest, 200);

        restObject = new JSONObject(json);
        expectedObject = new JSONObject(IOUtils.toString(new FileInputStream("src/test/resources/v1/availability_node.json")));
        JSONAssert.assertEquals(expectedObject, restObject, true);
    }

