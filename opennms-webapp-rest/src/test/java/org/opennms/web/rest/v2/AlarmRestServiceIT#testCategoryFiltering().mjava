    /**
     * Test filtering for properties of {@link OnmsCategory}. The implementation
     * for this filtering is different because the node-to-category relationship
     * is a many-to-many relationship.
     * 
     * @throws Exception
     */
    @Test
    public void testCategoryFiltering() throws Exception {
        int categoryId;
        categoryId = m_databasePopulator.getCategoryDao().findByName("Linux").getId();
        executeQueryAndVerify("_s=category.id==" + categoryId, 4);
        executeQueryAndVerify("_s=category.id!=" + categoryId, 6);

        categoryId = m_databasePopulator.getCategoryDao().findByName("LinuxServers").getId();
        executeQueryAndVerify("_s=category.id==" + categoryId, 4);
        executeQueryAndVerify("_s=category.id!=" + categoryId, 6);

        categoryId = m_databasePopulator.getCategoryDao().findByName("macOS").getId();
        executeQueryAndVerify("_s=category.id==" + categoryId, 4);
        executeQueryAndVerify("_s=category.id!=" + categoryId, 6);

        // Category that doesn't exist
        categoryId = Integer.MAX_VALUE;
        executeQueryAndVerify("_s=category.id==" + categoryId, 0);
        executeQueryAndVerify("_s=category.id!=" + categoryId, 10);

        executeQueryAndVerify("_s=category.name==Linux", 4);
        executeQueryAndVerify("_s=category.name!=Linux", 6);
        executeQueryAndVerify("_s=category.name==LinuxServers", 4);
        executeQueryAndVerify("_s=category.name!=LinuxServers", 6);
        executeQueryAndVerify("_s=category.name==Linux*", 4);
        executeQueryAndVerify("_s=category.name!=Linux*", 6);
        executeQueryAndVerify("_s=category.name==macOS", 4);
        executeQueryAndVerify("_s=category.name!=macOS", 6);
        executeQueryAndVerify("_s=category.name==mac*", 4);
        executeQueryAndVerify("_s=category.name!=mac*", 6);
        executeQueryAndVerify("_s=category.name==ma*S", 4);
        executeQueryAndVerify("_s=category.name!=ma*S", 6);
        executeQueryAndVerify("_s=category.name==DoesntExist", 0);
        executeQueryAndVerify("_s=category.name!=DoesntExist", 10);
    }

