    /**
     * Test {@code orderBy} for properties of {@link OnmsAlarm} without the alias.
     * 
     * @throws Exception
     */
    @Test
    public void testRootAliasOrderBy() throws Exception {
        String url = "/alarms";

        // Test orderby for properties of OnmsAlarm
        sendRequest(GET, url, parseParamData("orderBy=alarmAckTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=alarmAckUser"), 200);
        sendRequest(GET, url, parseParamData("orderBy=alarmType"), 200);
        sendRequest(GET, url, parseParamData("orderBy=applicationDN"), 200);
        sendRequest(GET, url, parseParamData("orderBy=clearKey"), 200);
        sendRequest(GET, url, parseParamData("orderBy=counter"), 200);
        sendRequest(GET, url, parseParamData("orderBy=description"), 200);
        sendRequest(GET, url, parseParamData("orderBy=details"), 200);
        sendRequest(GET, url, parseParamData("orderBy=distPoller"), 200);
        // TODO: Cannot sort by parms since they are all stored in one database column
        //sendRequest(GET, url, parseParamData("orderBy=eventParameters"), 200);
        sendRequest(GET, url, parseParamData("orderBy=eventParms"), 200);
        sendRequest(GET, url, parseParamData("orderBy=firstAutomationTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=firstEventTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=id"), 200);
        sendRequest(GET, url, parseParamData("orderBy=ifIndex"), 200);
        sendRequest(GET, url, parseParamData("orderBy=ipAddr"), 200);
        sendRequest(GET, url, parseParamData("orderBy=lastAutomationTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=lastEvent"), 200);
        sendRequest(GET, url, parseParamData("orderBy=lastEventTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=logMsg"), 200);
        sendRequest(GET, url, parseParamData("orderBy=managedObjectInstance"), 200);
        sendRequest(GET, url, parseParamData("orderBy=managedObjectType"), 200);
        sendRequest(GET, url, parseParamData("orderBy=mouseOverText"), 200);
        sendRequest(GET, url, parseParamData("orderBy=node"), 200);
        sendRequest(GET, url, parseParamData("orderBy=operInstruct"), 200);
        sendRequest(GET, url, parseParamData("orderBy=ossPrimaryKey"), 200);
        sendRequest(GET, url, parseParamData("orderBy=qosAlarmState"), 200);
        sendRequest(GET, url, parseParamData("orderBy=reductionKey"), 200);
        sendRequest(GET, url, parseParamData("orderBy=reductionKeyMemo"), 200);
        sendRequest(GET, url, parseParamData("orderBy=serviceType"), 200);
        sendRequest(GET, url, parseParamData("orderBy=severity"), 200);
        // TODO: Figure out how to do this, OnmsSeverity is an enum
        //sendRequest(GET, url, parseParamData("orderBy=severity.id"), 200);
        //sendRequest(GET, url, parseParamData("orderBy=severity.label"), 200);
        sendRequest(GET, url, parseParamData("orderBy=stickyMemo"), 200);
        sendRequest(GET, url, parseParamData("orderBy=suppressedTime"), 200);
        sendRequest(GET, url, parseParamData("orderBy=suppressedUntil"), 200);
        sendRequest(GET, url, parseParamData("orderBy=suppressedUser"), 200);
        // TODO: I can't figure out the bean property name for these properties
        //sendRequest(GET, url, parseParamData("orderBy=tticketId"), 200);
        //sendRequest(GET, url, parseParamData("orderBy=tticketState"), 200);
        sendRequest(GET, url, parseParamData("orderBy=uei"), 200);
        sendRequest(GET, url, parseParamData("orderBy=x733AlarmType"), 200);
        sendRequest(GET, url, parseParamData("orderBy=x733ProbableCause"), 200);
    }

