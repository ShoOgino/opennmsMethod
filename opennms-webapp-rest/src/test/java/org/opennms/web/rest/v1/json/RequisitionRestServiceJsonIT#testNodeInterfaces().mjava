    @Test
    public void testNodeInterfaces() throws Exception {
        createRequisition();

        String base = "/requisitions/test/nodes/4243/interfaces";
        String json;

        // create an interface
        JSONObject intf = new JSONObject();
        intf.put("ip-addr", "192.0.2.254");
        intf.put("status", 1);
        intf.put("snmp-primary", "S");
        intf.put("descr", "Monkey");
        intf.put("monitored-service", new JSONArray());
        JSONObject icmp = new JSONObject();
        icmp.put("service-name", "ICMP");
        intf.append("monitored-service", icmp);
        sendPost(base, intf.toString(), 202, "/nodes/4243/interfaces/192.0.2.254");
        intf.put("descr", "Blah");
        sendPost(base, intf.toString(), 202, "/nodes/4243/interfaces/192.0.2.254");

        // get list of interfaces
        json = sendRequest(GET, base, 200);
        JSONObject interfaces = new JSONObject(json);
        assertEquals(3, interfaces.getInt("count"));
        assertTrue(interfaces.has("interface"));
        JSONArray intfArray = interfaces.getJSONArray("interface");
        boolean blahFound = false;
        boolean monkeyFound = false;
        for (int i=0; i < intfArray.length(); i++) {
            JSONObject obj = intfArray.getJSONObject(i);
            assertTrue(obj.has("descr"));
            if ("Monkey".equals(obj.getString("descr"))) {
                monkeyFound = true;
            }
            if ("Blah".equals(obj.getString("descr"))) {
                blahFound = true;
            }
        }
        assertTrue(blahFound);
        assertFalse(monkeyFound);

        // get individual interface
        String url = base + "/192.0.2.204";
        json = sendRequest(GET, url, 200);
        intf = new JSONObject(json);
        assertFalse("192.0.2.201".equals(intf.getString("ip-addr")));
        assertEquals("192.0.2.204", intf.getString("ip-addr"));
        assertEquals("VPN interface", intf.getString("descr"));

        // set attributes
        sendPut(url, "status=3&descr=Total+Crap&snmp-primary=N", 202, "/nodes/4243/interfaces/192.0.2.204");
        json = sendRequest(GET, url, 200);
        intf = new JSONObject(json);
        assertEquals("Total Crap", intf.getString("descr"));
        assertEquals("N", intf.getString("snmp-primary"));
        assertEquals(3, intf.getInt("status"));

        // delete interface
        json = sendRequest(DELETE, url, 202);
        json = sendRequest(GET, url, 404);

        // confirm there is one less interface
        json = sendRequest(GET, base, 200);
        interfaces = new JSONObject(json);
        assertEquals(2, interfaces.getInt("count"));
    }

