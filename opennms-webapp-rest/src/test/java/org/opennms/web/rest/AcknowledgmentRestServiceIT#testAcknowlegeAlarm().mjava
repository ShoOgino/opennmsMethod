	@Test
	@JUnitTemporaryDatabase
	public void testAcknowlegeAlarm() throws Exception {
	    final Pattern p = Pattern.compile("^.*<ackTime>(.*?)</ackTime>.*$", Pattern.DOTALL & Pattern.MULTILINE);
	    sendData(POST, MediaType.APPLICATION_FORM_URLENCODED, "/acks", "alarmId=1&action=ack");

	    // Try to fetch a non-existent ack, get 204 No Content
	    String xml = sendRequest(GET, "/acks/999999", 204);

	    xml = sendRequest(GET, "/acks/count", 200);
	    // {@link DatabasePopulator} adds one ack so we have 2 total
	    assertEquals("2", xml);

	    Integer newAckId = null;
	    for (OnmsAcknowledgment ack : getXmlObject(JaxbUtils.getContextFor(OnmsAcknowledgmentCollection.class), "/acks", 200, OnmsAcknowledgmentCollection.class).getObjects()) {
	        if (AckType.UNSPECIFIED.equals(ack.getAckType())) {
	            // Ack from DatabasePopulator
	            assertEquals(AckAction.UNSPECIFIED, ack.getAckAction());
	            assertEquals("admin", ack.getAckUser());
	        } else if (AckType.ALARM.equals(ack.getAckType())) {
	            // Ack that we just created
	            assertEquals(new Integer(1), ack.getRefId());
	            assertEquals(AckAction.ACKNOWLEDGE, ack.getAckAction());
	            newAckId = ack.getId();
	        } else {
	            fail("Unrecognized alarm type: " + ack.getAckType().toString());
	        }
	    }

	    if (newAckId == null) {
	        fail("Couldn't determine ID of new ack");
	    }

	    xml = sendRequest(GET, "/acks/" + newAckId, 200);

	    xml = sendRequest(GET, "/alarms/1", new HashMap<String,String>(), 200);
	    Matcher m = p.matcher(xml);
	    assertTrue(m.matches());
	    assertTrue(m.group(1).length() > 0);
	    sendData(POST, MediaType.APPLICATION_FORM_URLENCODED, "/acks", "alarmId=1&action=unack");
	    xml = sendRequest(GET, "/alarms/1", new HashMap<String,String>(), 200);
	    m = p.matcher(xml);
	    assertFalse(m.matches());

	    // POST with no argument, this will ack by default
	    sendData(POST, MediaType.APPLICATION_FORM_URLENCODED, "/acks", "alarmId=1");
	    xml = sendRequest(GET, "/alarms/1", new HashMap<String,String>(), 200);
	    m = p.matcher(xml);
	    assertTrue(m.matches());
	}

