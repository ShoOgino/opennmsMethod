    /**
     * <p>forNodeId</p>
     *
     * @param nodeId a int.
     * @param dateRange a long.
     * @param startTs a java.lang.Long.
     * @param endTs a java.lang.Long.
     * @return a {@link org.opennms.netmgt.model.OnmsOutageCollection} object.
     */
    @GET
    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.APPLICATION_ATOM_XML})
    @Transactional
    @Path("forNode/{nodeId}")
    public OnmsOutageCollection forNodeId(@Context final UriInfo uriInfo,
            @PathParam("nodeId") final int nodeId,
            @DefaultValue("604800000") @QueryParam("dateRange") final long dateRange,
            @QueryParam("start") final Long startTs,
            @QueryParam("end") final Long endTs) {

        final CriteriaBuilder builder = new CriteriaBuilder(OnmsOutage.class);
        builder.eq("node.id", nodeId);

        builder.alias("monitoredService", "monitoredService");
        builder.alias("monitoredService.ipInterface", "ipInterface");
        builder.alias("monitoredService.ipInterface.node", "node");
        builder.alias("monitoredService.serviceType", "serviceType");

        final MultivaluedMap<String, String> params = new MultivaluedMapImpl();
        params.putAll(uriInfo.getQueryParameters());

        if (startTs != null && endTs != null) {
            params.remove("start");
            params.remove("end");
            final Date start = new Date(startTs);
            final Date end = new Date(endTs);
            LOG.debug("Getting all outages from {} to {} for node {}", start, end, nodeId);
            builder.gt("ifLostService", start);
            builder.lt("ifLostService", end);
        } else {
            params.remove("dateRange");
            final Date start = new Date(System.currentTimeMillis() - dateRange);
            LOG.debug("Getting all outgae from {} to current date for node {}", start, nodeId);
            builder.gt("ifLostService", start);
        }

        applyQueryFilters(params, builder);

        builder.orderBy("id").desc();

        return new OnmsOutageCollection(m_outageDao.findMatching(builder.toCriteria()));
    }

