	/**
	 * Prepend a join alias to the property ID for each {@link SearchProperty}.
	 * 
	 * @param alias
	 * @param properties
	 * @param orderBy
	 * @return
	 */
	private static final SortedSet<SearchProperty> withAliasPrefix(Aliases alias, String namePrefix, Set<SearchProperty> properties, boolean orderBy) {
		return new TreeSet<>(properties.stream().map(p -> { return new SearchProperty(
			p.entityClass,
			alias.toString(), 
			p.id,
			namePrefix, 
			p.name,
			p.type,
			// Don't apply DEFAULT_ORDER_BY to properties that are explicitly ORDER_BY==false.
			p.orderBy && orderBy,
			// IPLIKE queries are only valid on root aliases
			// so always reset this value to 'false' when adding
			// prefixes
			SearchProperty.DEFAULT_IPLIKE,
			p.values
		); }).collect(Collectors.toSet()));
	}

