    @GET
    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.APPLICATION_ATOM_XML})
    public Response getCollectdConfigurationForLocation(@PathParam("location") final String location) throws ConfigurationResourceException {
        LOG.debug("getCollectConfigurationForLocation(location={})", location);
        final MonitoringLocationsConfiguration monitoringConfig = m_monitoringLocationsConfigResource.get();

        LOG.debug("monitoring config: {}", monitoringConfig);
        final LocationDef def = monitoringConfig.getLocation(location);
        if (def == null) {
            LOG.warn("Unable to find monitoring location {}", location);
            return Response.status(Response.Status.NOT_FOUND).build();
        }

        final List<String> collectionPackageNames = def.getCollectionPackageNames();
        if (collectionPackageNames != null) {
            final CollectdConfiguration collectdConfig = m_collectdConfigResource.get().getCollectdConfigurationForPackages(collectionPackageNames);
            return Response.ok(collectdConfig).build();
        }

        LOG.warn("Monitoring location {} does not have a collection package defined.", location);
        return Response.status(Response.Status.NOT_FOUND).build();
    }

