    /**
     * <p>updateNotification</p>
     *
     * @param notifId a {@link java.lang.String} object.
     * @param ack a {@link java.lang.Boolean} object.
     */
    @PUT
    @Path("{notifId}")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    @Transactional
    public Response updateNotification(@Context UriInfo uriInfo, @PathParam("notifId") String notifId, @FormParam("ack") Boolean ack) {
        writeLock();
        
        try {
            OnmsNotification notif=m_notifDao.get(Integer.valueOf(notifId));
            if(ack==null) {
                throw new  IllegalArgumentException("Must supply the 'ack' parameter, set to either 'true' or 'false'");
            }
            processNotifAck(notif,ack);
            return Response.seeOther(uriInfo.getBaseUriBuilder().path(this.getClass()).path(this.getClass(), "getNotification").build(notifId)).build();
        } finally {
            writeUnlock();
        }
    }

