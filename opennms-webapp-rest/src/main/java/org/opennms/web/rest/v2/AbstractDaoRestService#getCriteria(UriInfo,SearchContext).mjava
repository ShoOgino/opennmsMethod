	protected Criteria getCriteria(UriInfo uriInfo, SearchContext searchContext) {
		final MultivaluedMap<String, String> params = uriInfo.getQueryParameters();

		final CriteriaBuilder builder = getCriteriaBuilder();

		if (searchContext != null) {
			try {
				SearchCondition<T> condition = searchContext.getCondition(getDaoClass());
				if (condition != null) {
					SearchConditionVisitor<T,CriteriaBuilder> visitor = new CriteriaBuilderSearchVisitor<T>(builder, getDaoClass());
					condition.accept(visitor);
				}
			} catch (PropertyNotFoundException | ArrayIndexOutOfBoundsException e) {
				LOG.warn(e.getClass().getSimpleName() + " while parsing FIQL search, ignoring: " + e.getMessage());
			}
		}

		// Apply limit, offset, orderBy, order params
		applyLimitOffsetOrderBy(params, builder);

		Criteria crit = builder.toCriteria();

		/*
		TODO: Figure out how to do stuff like this

		// Don't include deleted nodes by default
		final String type = params.getFirst("type");
		if (type == null) {
			final List<Restriction> restrictions = new ArrayList<Restriction>(crit.getRestrictions());
			restrictions.add(Restrictions.ne("type", "D"));
			crit.setRestrictions(restrictions);
		}
		 */
		
		return crit;
	}

