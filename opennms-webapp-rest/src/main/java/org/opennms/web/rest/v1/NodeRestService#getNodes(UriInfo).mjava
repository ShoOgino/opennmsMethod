    /**
     * <p>getNodes</p>
     *
     * @return a {@link org.opennms.netmgt.model.OnmsNodeList} object.
     */
    @GET
    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.APPLICATION_ATOM_XML})
    public OnmsNodeList getNodes(@Context final UriInfo uriInfo) {
        final MultivaluedMap<String, String> params = uriInfo.getQueryParameters();
        final String type = params.getFirst("type");

        final CriteriaBuilder builder = getCriteriaBuilder(params);
        Criteria crit = null;

        if (params.size() == 1 && params.getFirst("nodeId") != null && params.getFirst("nodeId").contains(",")) {
            // we've been specifically asked for a list of nodes by ID

            final List<Integer> nodeIds = new ArrayList<Integer>();
            for (final String id : params.getFirst("nodeId").split(",")) {
                nodeIds.add(Integer.valueOf(id));
            }
            builder.ne("type", "D");
            builder.in("id", nodeIds);
            builder.distinct();

            crit = builder.toCriteria();
        } else if (params.getFirst("filterRule") != null) {
            final Set<Integer> filteredNodeIds = m_filterDao.getNodeMap(params.getFirst("filterRule")).keySet();
            if (filteredNodeIds.size() < 1) {
                // The "in" criteria fails if the list of node ids is empty
                final OnmsNodeList coll = new OnmsNodeList(Collections.emptyList());
                coll.setTotalCount(0);
                return coll;
            }

            // Apply the criteria, without the filter rule
            params.remove("filterRule");
            final CriteriaBuilder filterRuleCriteriaBuilder = getCriteriaBuilder(params);
            filterRuleCriteriaBuilder.in("id", filteredNodeIds);
            filterRuleCriteriaBuilder.distinct();

            crit = filterRuleCriteriaBuilder.toCriteria();
        } else {
            applyQueryFilters(params, builder);
            builder.orderBy("label").asc();

            crit = builder.toCriteria();

            if (type == null) {
                final List<Restriction> restrictions = new ArrayList<Restriction>(crit.getRestrictions());
                restrictions.add(Restrictions.ne("type", "D"));
                crit.setRestrictions(restrictions);
            }
        }

        final OnmsNodeList coll = new OnmsNodeList(m_nodeDao.findMatching(crit));
        
        crit.setLimit(null);
        crit.setOffset(null);
        crit.setOrders(new ArrayList<Order>());

        coll.setTotalCount(m_nodeDao.countMatching(crit));

        return coll;
    }

