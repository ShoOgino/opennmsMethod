    /**
     * <p>addNode</p>
     *
     * @param node a {@link org.opennms.netmgt.model.OnmsNode} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @POST
    @Consumes(MediaType.APPLICATION_XML)
    public Response addNode(@Context final UriInfo uriInfo, final OnmsNode node) {
        writeLock();
        
        try {
            if (node.getLocation() == null) {
                OnmsMonitoringLocation location = m_locationDao.getDefaultLocation();
                LOG.debug("addNode: Assigning new node to default location: {}", location.getLocationName());
                node.setLocation(location);
            }

            // see NMS-8019
            if (node.getType() == null) {
                throw getException(Status.BAD_REQUEST, "Node type must be set.");
            }

            // see NMS-9855
            if (node.getAssetRecord() != null && node.getAssetRecord().getNode() == null) {
                node.getAssetRecord().setNode(node);
            }

            LOG.debug("addNode: Adding node {}", node);
            m_nodeDao.save(node);
            sendEvent(EventConstants.NODE_ADDED_EVENT_UEI, node.getId(), node.getLabel());
            return Response.created(uriInfo.getRequestUriBuilder().path(node.getNodeId()).build()).build();
        } finally {
            writeUnlock();
        }
    }

