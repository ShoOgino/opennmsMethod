    @POST
    @Consumes({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.APPLICATION_ATOM_XML})
    @Transactional
    public Response publishEvent(final org.opennms.netmgt.xml.event.Event event) {
        if (event.getSource() == null) {
            event.setSource("ReST");
        }
        if (event.getTime() == null) {
            event.setTime(new Date());
        }
        try {
            final Validator validator = factory.getValidator();
            final Set<ConstraintViolation<org.opennms.netmgt.xml.event.Event>> errors = validator.validate(event);
            LOG.debug("got errors: {}", errors);
            if (errors.size() > 0) {
                final StringBuilder sb = new StringBuilder("Error validating event:\n");
                for (final ConstraintViolation<?> error : errors) {
                    sb.append(error.toString()).append("\n");
                }
                LOG.debug(sb.toString());
                throw getException(Status.BAD_REQUEST, errors.size() + " errors found while validating event.");
            }
            m_eventForwarder.sendNow(event);
            return Response.accepted().build();
        } catch (final Exception e) {
            throw getException(Status.BAD_REQUEST, e.getMessage());
        }
    }

