    @GET
    @Produces("text/html")
    @Transactional
    @Path("html/{nodeId}/{ipAddress}/{serviceName}/{start}/{end}/{width}")
    public Response html(@Context final UriInfo uriInfo, @PathParam("nodeId") final int nodeId, @PathParam("ipAddress") final String ipAddress, @PathParam("serviceName") final String serviceName, @PathParam("start") final long start, @PathParam("end") final long end, @PathParam("width") final int width) throws IOException {
        long delta = end - start;

        OnmsOutageCollection onmsOutageCollection = queryOutages(uriInfo, nodeId, ipAddress, serviceName, start, end);

        BufferedImage bufferedImage = new BufferedImage(width, 20, BufferedImage.TYPE_INT_ARGB);

        Graphics2D graphics2D = (Graphics2D) bufferedImage.getGraphics();

        graphics2D.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, 10));
        graphics2D.setColor(Color.BLACK);

        int numLabels = TimescaleDescriptor.computeNumberOfLabels(graphics2D, delta, width);

        final String encodedIpAddress = URLEncoder.encode(ipAddress, "UTF-8");
        final String encodedServiceName = URLEncoder.encode(serviceName, "UTF-8");

        final StringBuffer htmlBuffer = new StringBuffer();

        htmlBuffer.append("<img src=\"/opennms/rest/timeline/image/");
        htmlBuffer.append(nodeId);
        htmlBuffer.append("/");
        htmlBuffer.append(encodedIpAddress);
        htmlBuffer.append("/");
        htmlBuffer.append(encodedServiceName);
        htmlBuffer.append("/");
        htmlBuffer.append(start);
        htmlBuffer.append("/");
        htmlBuffer.append(end);
        htmlBuffer.append("/");
        htmlBuffer.append(width);
        htmlBuffer.append("\" usemap=\"#");
        htmlBuffer.append(nodeId);
        htmlBuffer.append("-");
        htmlBuffer.append(encodedIpAddress);
        htmlBuffer.append("-");
        htmlBuffer.append(encodedServiceName);
        htmlBuffer.append("\"><map name=\"");
        htmlBuffer.append(nodeId);
        htmlBuffer.append("-");
        htmlBuffer.append(encodedIpAddress);
        htmlBuffer.append("-");
        htmlBuffer.append(encodedServiceName);
        htmlBuffer.append("\">");

        for (TimescaleDescriptor desc : TIMESCALE_DESCRIPTORS) {
            if (desc.match(delta, numLabels)) {
                for (OnmsOutage onmsOutage : onmsOutageCollection) {
                    htmlBuffer.append(desc.getMapEntry(graphics2D, delta, start, width, onmsOutage));
                }
                break;
            }
        }

        htmlBuffer.append("</map>");

        return Response.ok(htmlBuffer.toString()).build();
    }

