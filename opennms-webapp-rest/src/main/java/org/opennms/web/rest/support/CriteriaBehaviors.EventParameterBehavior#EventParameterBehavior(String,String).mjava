        public EventParameterBehavior(String eventIdColumn, String eventParameterProperty) {
            super(Aliases.eventParameter.prop(eventParameterProperty), (b,v,c,w) -> {
                // Add a categories alias that only matches the specified value
                // TODO: This should work but Hibernate is generating invalid SQL for this criteria
                //b.alias(Aliases.event.prop("eventParameters"), Aliases.eventParameter.toString(), JoinType.LEFT_JOIN, Restrictions.or(Restrictions.eq(Aliases.eventParameter.prop("value"), v), Restrictions.isNull(Aliases.eventParameter.prop("value")))); 

                switch (c) {
                case EQUALS:
                    b.sql(String.format("{alias}.%s in (select event_parameters.eventid from event_parameters where event_parameters.%s %s ?)", eventIdColumn, eventParameterProperty, w ? "like" : "="), v, Type.STRING);
                    break;
                case NOT_EQUALS:
                    b.sql(String.format("{alias}.%s not in (select event_parameters.eventid from event_parameters where event_parameters.%s %s ?)", eventIdColumn, eventParameterProperty, w ? "like" : "="), v, Type.STRING);
                    break;
                default:
                    throw new IllegalArgumentException("Illegal condition type when filtering event_parameters." + eventParameterProperty + ": " + c.toString());
                }
            });
            super.setSkipProperty(true);
        }

