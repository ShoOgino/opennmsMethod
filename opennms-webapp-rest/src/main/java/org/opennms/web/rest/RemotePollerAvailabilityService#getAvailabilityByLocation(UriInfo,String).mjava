    @GET
    @Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    @Path("availability/{location}")
    public OnmsLocationAvailDefinitionList getAvailabilityByLocation(@Context UriInfo uriInfo, @PathParam("location") String location) {
        readLock();
        try {
            MultivaluedMap<String, String> queryParameters = uriInfo.getQueryParameters();
            
            LocationDef locationDefinition = m_locationMonitorDao.findMonitoringLocationDefinition(location);
            if (locationDefinition == null) {
                throw new IllegalArgumentException("Cannot find location definition: " + location);
            }
            Collection<OnmsLocationMonitor> monitors = m_locationMonitorDao.findByLocationDefinition(locationDefinition);
            
            OnmsLocationAvailDefinitionList availList = getAvailabilityList(createTimeChunker(queryParameters), getSortedApplications(), monitors, null);
            
            return availList;
        } finally {
            readUnlock();
        }
    }

