    /**
     * Gets the services.
     * <p>It will include all the configured service monitors from poller-configuration.xml.</p>
     * <p>If the groupName is not null, it will include the services defined on the foreign source.</p>
     *
     * @param groupName the group name
     * @return the services
     */
    @GET
    @Path("services/{groupName}")
    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.APPLICATION_ATOM_XML})
    public ElementList getServices(@PathParam("groupName") String groupName) {
        ElementList elements = new ElementList(m_pollerConfig.getServiceMonitors().keySet());
        m_collectdConfigFactory.getCollectdConfig().getCollectors().forEach(c -> {
            if (!elements.contains(c.getService()))
                elements.add(c.getService());
        });
        if (groupName != null) {
            Collection<String> services = m_provisioningService.getServiceTypeNames(groupName);
            if (services != null) {
                services.forEach(s -> {
                    if (!elements.contains(s))
                        elements.add(s);
                });
            }
        }
        return elements;
    }

