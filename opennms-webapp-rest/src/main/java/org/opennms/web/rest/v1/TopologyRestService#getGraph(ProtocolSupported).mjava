    private GraphmlType getGraph(ProtocolSupported protocolSupported) throws InvalidGraphException {
        OnmsTopology topology = m_topologyDao.getTopology(protocolSupported);
        GraphML graphml = new GraphML();
        GraphMLGraph graph = new GraphMLGraph();
        graph.setProperty(NAMESPACE,TOPOLOGY_NAMESPACE_PREFIX+protocolSupported.name());
        graph.setProperty(LABEL,protocolSupported.name() + " Topology");
        graph.setId(protocolSupported.name());
        topology.getVertices().stream().forEach(vertex -> {
            GraphMLNode gnode = new GraphMLNode();
            gnode.setId(vertex.getId());
            gnode.setProperty(LABEL, vertex.getNode().getLabel());
            gnode.setProperty(NODE_ID, vertex.getNode().getId());
            gnode.setProperty(ICON_KEY, vertex.getIconKey());
            gnode.setProperty(TOOLTIP_TEXT, vertex.getTooltipText());
            graph.addNode(gnode);
        });
        topology.getEdges().stream().forEach(edge -> {
            GraphMLEdge gedge = new GraphMLEdge();
            gedge.setId(edge.getId());
            gedge.setSource(graph.getNodeById(edge.getSource().getId()));
            gedge.setTarget(graph.getNodeById(edge.getTarget().getId()));
            gedge.setProperty(TOOLTIP_TEXT, edge.getTooltipText());
            gedge.setProperty(SOURCE_IFINDEX, edge.getSourceIfIndex());
            gedge.setProperty(TARGET_IFINDEX, edge.getTargetIfIndex());
            graph.addEdge(gedge);
        });
        graphml.addGraph(graph);
        return GraphMLWriter.convert(graphml);
   }

