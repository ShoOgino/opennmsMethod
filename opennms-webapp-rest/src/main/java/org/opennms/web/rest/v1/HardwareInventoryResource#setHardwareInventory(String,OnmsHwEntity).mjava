    /**
     * Sets the hardware inventory (root object)
     *
     * @param nodeCriteria the node criteria
     * @param entity the root entity object
     * @return the response
     */
    @POST
    @Consumes({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})
    public Response setHardwareInventory(@PathParam("nodeCriteria") String nodeCriteria, OnmsHwEntity entity) {
        if (!entity.isRoot()) {
            throw getException(Status.BAD_REQUEST, "The hardware entity is not a root entity {}.", entity.toString());
        }
        writeLock();
        try {
            final OnmsNode node = getOnmsNode(nodeCriteria);
            fixEntity(node, entity);

            final OnmsHwEntity existing = m_hwEntityDao.findRootByNodeId(node.getId());
            if (existing != null && !entity.equals(existing)) {
                LOG.debug("setHardwareInventory: removing existing hardware inventory from node {} ", nodeCriteria);
                m_hwEntityDao.delete(existing);
                m_hwEntityDao.flush();
            }
            m_hwEntityDao.save(entity);

            return Response.noContent().build();
        } finally {
            writeUnlock();
        }
    }

