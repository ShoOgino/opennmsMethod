    /**
     * Returns the node ids of the nodes with outages.
     *
     * @return the set of node ids
     */
    private Set<Integer> getOutagesNodeIds() {
        final CriteriaBuilder criteriaBuilder = new CriteriaBuilder(OnmsOutage.class);
        criteriaBuilder.alias("monitoredService", "monitoredService", Alias.JoinType.LEFT_JOIN);
        criteriaBuilder.alias("monitoredService.ipInterface", "ipInterface", Alias.JoinType.LEFT_JOIN);
        criteriaBuilder.alias("ipInterface.node", "node", Alias.JoinType.LEFT_JOIN);
        criteriaBuilder.alias("ipInterface.snmpInterface", "snmpInterface", Alias.JoinType.LEFT_JOIN);
        criteriaBuilder.alias("monitoredService.serviceType", "serviceType", Alias.JoinType.LEFT_JOIN);
        criteriaBuilder.isNull("ifRegainedService");

        List<OnmsOutage> onmsOutages = m_outageDao.findMatching(criteriaBuilder.toCriteria());

        Set<Integer> nodeIds = new TreeSet<>();

        for (OnmsOutage onmsOutage : onmsOutages) {
            nodeIds.add(onmsOutage.getNodeId());
        }

        return nodeIds;
    }

