	private static void applyLimitOffsetOrderBy(final MultivaluedMap<String,String> p, final CriteriaBuilder builder, final Integer defaultLimit) {

		final MultivaluedMap<String, String> params = new MultivaluedMapImpl();
		params.putAll(p);

		builder.distinct();
		builder.limit(defaultLimit);

		if (params.containsKey("limit") && params.getFirst("limit") != null && !"".equals(params.getFirst("limit").trim())) {
			builder.limit(Integer.valueOf(params.getFirst("limit").trim()));
			params.remove("limit");
		}

		if (params.containsKey("offset") && params.getFirst("offset") != null && !"".equals(params.getFirst("offset").trim())) {
			builder.offset(Integer.valueOf(params.getFirst("offset").trim()));
			params.remove("offset");
		}

		if (params.containsKey("orderBy") && params.getFirst("orderBy") != null && !"".equals(params.getFirst("orderBy").trim())) {
			builder.orderBy(params.getFirst("orderBy").trim());
			params.remove("orderBy");

			if (params.containsKey("order") && params.getFirst("order") != null && !"".equals(params.getFirst("order").trim())) {
				if("desc".equalsIgnoreCase(params.getFirst("order").trim())) {
					builder.desc();
				} else {
					builder.asc();
				}
				params.remove("order");
			}
		}
	}

