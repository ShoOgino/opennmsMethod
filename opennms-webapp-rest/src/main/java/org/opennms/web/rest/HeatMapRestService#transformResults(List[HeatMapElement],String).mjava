    /**
     * Transforms a list of heatmap elements to a json map.
     *
     * @param heatMapElements the list of heatmap elements
     * @return the map for the json response
     */
    private Map<String, List<Map<String, Object>>> transformResults(List<HeatMapElement> heatMapElements, String filter) {
        /**
         * the item list
         */
        final List<Map<String, Object>> itemList = new ArrayList<>();

        /**
         * Helper field for sizes
         */
        HashMap<String, Integer> elementSizes = new HashMap<>();

        /**
         * counter for total of services
         */
        int totalServices = 0;

        /**
         * iterate over the heatmap elements and increase the total
         * number of services. This is later used to compute the sizes
         * for the heatmap boxes...
         */
        for (HeatMapElement heatMapElement : heatMapElements) {
            if (heatMapElement.getServicesTotal() > 0) {
                /**
                 * Apply filter here if not null
                 */
                if (filter == null || heatMapElement.getName().matches(filter)) {
                    elementSizes.put(heatMapElement.getName(), heatMapElement.getServicesTotal());

                    Map<String, Object> item = new HashMap<>();
                    item.put("id", heatMapElement.getName());
                    item.put("elementId", heatMapElement.getId());
                    item.put("color", Lists.newArrayList(heatMapElement.getColor()));
                    itemList.add(item);

                    totalServices += heatMapElement.getServicesTotal();
                }
            }
        }

        /**
         * now iterate over the results and set the size attribute for
         * each entry...
         */
        for (Map<String, Object> map : itemList) {
            int nodesInEntity = elementSizes.get(map.get("id"));
            double size = (double) nodesInEntity / (double) totalServices;
            map.put("size", Lists.newArrayList(Double.valueOf(size)));
        }

        /**
         * create the "outer" map and add the list to it...
         */
        Map<String, List<Map<String, Object>>> map = new HashMap<>();
        map.put("children", itemList);

        return map;
    }

