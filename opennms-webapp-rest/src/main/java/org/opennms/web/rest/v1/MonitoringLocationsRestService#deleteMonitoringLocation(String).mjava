	@DELETE
	@Path("{monitoringLocation}")
	@Transactional
	public Response deleteMonitoringLocation(@PathParam("monitoringLocation") String monitoringLocation) {
		writeLock();
		try {
			LOG.debug("deleteMonitoringLocation: deleting monitoring location {}", monitoringLocation);
			final List<String> packageNames = m_monitoringLocationDao.get(monitoringLocation).getPollingPackageNames();
			final boolean sendEvent = packageNames != null && !packageNames.isEmpty();

			m_monitoringLocationDao.delete(monitoringLocation);

			if (sendEvent) {
				final EventBuilder eventBuilder = new EventBuilder(EventConstants.POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI, "ReST");
				eventBuilder.addParam(EventConstants.PARM_LOCATION, monitoringLocation);
				try {
					m_eventProxy.send(eventBuilder.getEvent());
				} catch (final EventProxyException e) {
					LOG.warn("Failed to send Event on polling package modification " + e.getMessage(), e);
				}
			}

			return Response.noContent().build();
		} finally {
			writeUnlock();
		}
	}

