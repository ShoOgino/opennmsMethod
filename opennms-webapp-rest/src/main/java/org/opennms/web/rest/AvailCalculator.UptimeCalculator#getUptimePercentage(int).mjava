        public double getUptimePercentage(int index) {
            
//            if (m_lastChange != null && m_lastChange.getPollResult().isDown()) {
//                Date start = timestamp(m_lastChange);
//                Date end = m_timeChunker.getEndDate();
//                int startIndex = m_timeChunker.getIndexContaining(start);
//                if (startIndex < 0) startIndex = 0;
//                TimeInterval interval = new TimeInterval(start, end);
//                for(int i = startIndex; i < m_timeChunker.getSegmentCount(); i++) {
//                    m_upIntervals[i].removeInterval(interval);
//                }
//                m_lastChange = null;
//                
//            }
//            return uptime(m_timeChunker.getAt(index), m_upIntervals[index]);
            
            TimeChunk chunk = m_timeChunker.getAt(index);
            TimeIntervalSequence uptime = new TimeIntervalSequence(new TimeInterval(chunk.getStartDate(), chunk.getEndDate()));
            
            OnmsLocationSpecificStatus lastChange = null;
            for(OnmsLocationSpecificStatus status : m_statusChanges) {
                count++;
                Date start = (lastChange == null ? new Date(0) : new Date(lastChange.getPollResult().getTimestamp().getTime()));
                Date end = new Date(status.getPollResult().getTimestamp().getTime());
                if (lastChange != null && lastChange.getPollResult().isDown() ) {
                    if(start.before(end)) {
                        uptime.removeInterval(new TimeInterval(start, end));
                    }
                }
                lastChange = status;
            }
            
            if (lastChange != null && lastChange.getPollResult().isDown() ) {
                Date start = new Date(lastChange.getPollResult().getTimestamp().getTime());
                Date end = new Date(chunk.getEndDate().getTime());
                if(start.before(end)) {
                    uptime.removeInterval(new TimeInterval(start, end));
                }
            }
            
            return uptime(chunk, uptime);
        }

