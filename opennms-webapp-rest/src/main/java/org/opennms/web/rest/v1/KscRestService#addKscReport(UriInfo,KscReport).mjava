    @POST
    @Consumes(MediaType.APPLICATION_XML)
    public Response addKscReport(@Context final UriInfo uriInfo, final KscReport kscReport) {
        writeLock();
        try {
            LOG.debug("addKscReport: Adding KSC Report {}", kscReport);
            Report report = m_kscReportFactory.getReportByIndex(kscReport.getId());
            if (report != null) {
                throw getException(Status.CONFLICT, "Invalid request: Existing KSC report found with ID: {}.", Integer.toString(kscReport.getId()));
            }
            report = new Report();
            report.setId(kscReport.getId());
            report.setTitle(kscReport.getLabel());
            if (kscReport.getShowGraphtypeButton() != null) {
                report.setShow_graphtype_button(kscReport.getShowGraphtypeButton());
            }
            if (kscReport.getShowTimespanButton() != null) {
                report.setShow_timespan_button(kscReport.getShowTimespanButton());
            }
            if (kscReport.getGraphsPerLine() != null) {
                report.setGraphs_per_line(kscReport.getGraphsPerLine());
            }
            if (kscReport.hasGraphs()) {
                for (KscGraph kscGraph : kscReport.getGraphs()) {
                    final Graph graph = kscGraph.buildGraph();
                    report.addGraph(graph);
                }
            }

            m_kscReportFactory.addReport(report);
            try {
                m_kscReportFactory.saveCurrent();
            } catch (final Exception e) {
                throw getException(Status.BAD_REQUEST, e.getMessage());
            }
            return Response.created(getRedirectUri(uriInfo, kscReport.getId())).build();
        } finally {
            writeUnlock();
        }
    }

