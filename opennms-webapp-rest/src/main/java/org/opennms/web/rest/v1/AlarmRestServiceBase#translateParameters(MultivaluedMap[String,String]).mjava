    protected void translateParameters(final MultivaluedMap<String, String> params) {
    	// this is handled by a @QueryParam annotation, ignore it from the UriInfo object
    	params.remove("severities");

    	if (params.containsKey("nodeId")) {
    		final String nodeId = params.getFirst("nodeId");
    		params.remove("nodeId");
    		params.add("node.id", nodeId);
    	}

    	if (params.containsKey("nodeLabel")) {
    		final String nodeLabel = params.getFirst("nodeLabel");
    		params.remove("nodeLabel");
    		params.add("node.label", nodeLabel);
    	}

    	final String query = params.getFirst("query");
        // System.err.println("tranlateSeverity: query = " + query + ", pattern = " + p);
        if (query != null) {
            final Matcher m = m_severityPattern.matcher(query);
            if (m.find()) {
                // System.err.println("translateSeverity: group(1) = '" + m.group(1) + "', group(2) = '" + m.group(2) + "', group(3) = '" + m.group(3) + "'");
                final String alias = m.group(1);
                final String comparator = m.group(2);
                final String severity = m.group(3);
                final OnmsSeverity onmsSeverity = OnmsSeverity.get(severity);
                // System.err.println("translateSeverity: " + severity + " = " + onmsSeverity);
                
                final String newQuery = m.replaceFirst(" " + (alias == null? "" : alias) + "severity " + comparator + " " + onmsSeverity.getId());
                params.remove("query");
                params.add("query", newQuery);
                // System.err.println("translateSeverity: newQuery = '" + newQuery + "'");
            } else {
                // System.err.println("translateSeverity: failed to find pattern");
            }
        }
    }

