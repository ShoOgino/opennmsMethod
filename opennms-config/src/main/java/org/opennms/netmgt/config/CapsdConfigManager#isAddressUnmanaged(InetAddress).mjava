    /**
     * {@inheritDoc}
     *
     * Checks the configuration to determine if the target is managed or
     * unmanaged.
     */
    @Override
    public boolean isAddressUnmanaged(InetAddress target) {
        String managementPolicy = m_config.getManagementPolicy();
        boolean managedByDefault = (managementPolicy == null || managementPolicy.equalsIgnoreCase("managed"));
    
        boolean found_denial = false;
        boolean found_accept = false;
        List<IpManagement> ipManagements = getIpManagements();
        Iterator<IpManagement> ipIter = ipManagements.iterator();
        while (ipIter.hasNext() && !found_denial) {
            IpManagement mgt = ipIter.next();
            for (String saddr : getSpecifics(mgt)) {
                InetAddress addr;
                addr = InetAddressUtils.addr(saddr);
                if (addr == null) {
                    LOG.info("Failed to convert specific address '{}' to an InetAddress.", saddr);
                    continue;
                }
                
                if (addr.equals(target)) {
                    if (mgt.getPolicy() == null || mgt.getPolicy().equalsIgnoreCase("managed")) {
                        found_accept = true;
                    } else {
                        found_denial = true;
                    }

                    break;
                }
            }
    
            // now check the ranges
            List<Range> ranges = getRanges(mgt);
            Iterator<Range> rangeIter = ranges.iterator();
            while (!found_denial && rangeIter.hasNext()) {
                Range range = rangeIter.next();

                InetAddress saddr;
                saddr = InetAddressUtils.addr(range.getBegin());
                if (saddr == null) {
                    LOG.info("Failed to convert begin address '{}' to an InetAddress.", range.getBegin());
                    continue;
                }

                InetAddress eaddr;
                eaddr = InetAddressUtils.addr(range.getEnd());
                if (eaddr == null) {
                    LOG.info("Failed to convert end address '{}' to an InetAddress.", range.getEnd());
                    continue;
                }

                int compareStartToTarget = new ByteArrayComparator().compare(saddr.getAddress(), target.getAddress());
                int compareTargetToEnd = new ByteArrayComparator().compare(target.getAddress(), eaddr.getAddress());
                if (compareStartToTarget <= 0 && compareTargetToEnd <= 0) {
                    if (mgt.getPolicy() == null || mgt.getPolicy().equalsIgnoreCase("managed")) {
                        found_accept = true;
                    } else {
                        found_denial = true;
                    }

                    break;
                }
            }
    
            // now check urls
            List<String> includeUrls = getIncludeUrls(mgt);
            Iterator<String> includeUrlIter = includeUrls.iterator();
            boolean match = false;
            while (!found_denial && !match && includeUrlIter.hasNext()) {
                String url = includeUrlIter.next();
    
                /*
                 * Retrieve address list from url map.
                 * Iterate over addresses looking for target match.
                 */
                for (String saddr : m_urlMap.get(url)) {
                    InetAddress addr;
                    addr = InetAddressUtils.addr(saddr);
                    if (addr == null) {
                        LOG.info("Failed to convert address '{}' from include URL '{}' to an InetAddress.", saddr, url);
                        continue;
                    }

                    if (addr.equals(target)) {
                        if (mgt.getPolicy() == null || mgt.getPolicy().equalsIgnoreCase("managed")) {
                            found_accept = true;
                        } else {
                            found_denial = true;
                        }

                        match = true;
                        break;
                    }
                }
            }
    
        }
    
        boolean result = !managedByDefault;
        if (found_denial) {
            result = true;
        } else if (found_accept) {
            result = false;
        }
    
        return result;
    }

