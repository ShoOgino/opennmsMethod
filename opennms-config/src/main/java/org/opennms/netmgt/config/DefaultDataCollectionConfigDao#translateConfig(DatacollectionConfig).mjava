    @Override
    protected DatacollectionConfig translateConfig(final DatacollectionConfig config) {
        final DataCollectionConfigParser parser = new DataCollectionConfigParser(getConfigDirectory());
        resourceTypes.clear();

        final Map<String,DatacollectionGroup> externalGroupMap = parser.getExternalGroupMap();

        // Create a special collection to hold all resource types, because they should be defined only once.
        final SnmpCollection resourceTypeCollection = new SnmpCollection();
        resourceTypeCollection.setName("__resource_type_collection");

        // Updating Configured Collections
        for (final SnmpCollection collection : config.getSnmpCollections()) {
            parser.parseCollection(collection);
            // Save local resource types
            for (final ResourceType rt : collection.getResourceTypes()) {
                resourceTypeCollection.addResourceType(rt);
                resourceTypes.put(rt.getName(), rt);
            }
            // Remove local resource types
            collection.setResourceTypes(new ArrayList<ResourceType>());

            // Save external Resource Types
            for (IncludeCollection include : collection.getIncludeCollections()) {
                if (include.getDataCollectionGroup() != null) {
                    DatacollectionGroup group = externalGroupMap.get(include.getDataCollectionGroup());
                    for (final ResourceType rt : group.getResourceTypes()) {
                        resourceTypeCollection.addResourceType(rt);
                        resourceTypes.put(rt.getName(), rt);
                    }
                }
            }
        }

        resourceTypeCollection.setGroups(new Groups());
        resourceTypeCollection.setSystems(new Systems());
        config.insertSnmpCollection(resourceTypeCollection);
        dataCollectionGroups.clear();
        dataCollectionGroups.addAll(parser.getExternalGroupMap().keySet());

        validateResourceTypes(config.getSnmpCollections(), resourceTypes.keySet());

        return config;
    }

