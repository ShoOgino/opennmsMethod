	/**
	 * {@inheritDoc}
	 *
	 * This method is responsbile for determining the node's primary SNMP
	 * interface from the specified list of InetAddress objects.
	 */
    @Override
	public InetAddress determinePrimarySnmpInterface(List<InetAddress> addressList, boolean strict) {
		InetAddress primaryIf = null;
	
		// For now hard-coding primary interface address selection method to MIN
		String method = CollectdConfigFactory.SELECT_METHOD_MIN;
	
        /*
		 * To be selected as the the primary SNMP interface for a node
		 * the interface must be included by a Collectd package if strict
		 * is true, and that package must include the SNMP service and
		 * the service must be enabled.
		 *
		 * Iterate over interface list and test each interface
		 */
		for (InetAddress ipAddr : addressList) {
			if (log().isDebugEnabled()) {
				log().debug("determinePrimarySnmpIf: checking interface "
						+ InetAddressUtils.str(ipAddr));
            }
			primaryIf = compareAndSelectPrimaryCollectionInterface("SNMP", ipAddr, primaryIf, method, strict);
		}
	
		if (log().isDebugEnabled()) {
			if (primaryIf != null) {
				log().debug("determinePrimarySnmpInterface: candidate primary SNMP interface: "
								+ InetAddressUtils.str(primaryIf));
            } else {
				log().debug("determinePrimarySnmpInterface: no candidate primary SNMP interface found");
            }
		}
		return primaryIf;
	}

