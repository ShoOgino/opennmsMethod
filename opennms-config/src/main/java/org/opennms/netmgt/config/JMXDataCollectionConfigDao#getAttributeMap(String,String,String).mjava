    public Map<String, List<Attrib>> getAttributeMap(String cName, String aSysoid, String anAddress) {
        // Try retrieving the object, which will trigger a reload of the cache if it changed
        getObject();

        m_lock.readLock().lock();
        try {
            Map<String, List<Attrib>> attributeMap = new HashMap<String, List<Attrib>>();

            LOG.debug("getMibObjectList: collection: {} sysoid: {} address: {}", anAddress, cName, aSysoid);

            if (aSysoid == null) {

                LOG.debug("getMibObjectList: aSysoid parameter is NULL...");
                return attributeMap;
            }

            // Retrieve the appropriate Collection object
            JmxCollection collection = m_collectionMap.get(cName);
            if (collection == null) {
                return attributeMap;
            }

            for(Mbean mbean : collection.getMbeans()) {
                // Make sure to create a new ArrayList because we add to it below
                List<Attrib> list = new ArrayList<Attrib>(mbean.getAttribList());

                for(CompAttrib compAttrib : mbean.getCompAttribList()) {
                    for (CompMember compMember : compAttrib.getCompMemberList()) {
                        Attrib attribWrapper = new Attrib();
                        attribWrapper.setName(compAttrib.getName() + "|" + compMember.getName());
                        attribWrapper.setAlias(compMember.getAlias());
                        attribWrapper.setType(compMember.getType());
                        list.add(attribWrapper);
                    }
                }
                attributeMap.put(mbean.getObjectname(), list);
            }
            return attributeMap;
        } finally {
            m_lock.readLock().unlock();
        }
    }

