    /**
     * Determines if a user is on duty at a given time. If a user has no duty
     * schedules listed in the configuration file, that user is assumed to always be on
     * duty.
     *
     * @param user
     *            the user id
     * @param time
     *            the time to check for a duty schedule
     * @return boolean, true if the user is on duty, false otherwise.
     * @throws java.io.IOException if any.
     * @throws org.exolab.castor.xml.MarshalException if any.
     * @throws org.exolab.castor.xml.ValidationException if any.
     */
    public boolean isUserOnDuty(final String user, final Calendar time) throws IOException, MarshalException, ValidationException {
        update();
    
        m_readLock.lock();
        try {
            // if the user has no duty schedules then he is on duty
            if (!m_dutySchedules.containsKey(user))
                return true;
    
            for (final DutySchedule curSchedule : m_dutySchedules.get(user)) {
            	if (curSchedule.isInSchedule(time)) {
            		return true;
            	}
            }
        } finally {
            m_readLock.unlock();
        }

        return false;
    }

