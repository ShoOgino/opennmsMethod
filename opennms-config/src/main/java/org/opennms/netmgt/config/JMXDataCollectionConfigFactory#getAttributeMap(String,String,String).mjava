    /**
     * This method returns the list of MIB objects associated with a particular
     * system object id, IP address, and ifType for the specified collection.
     *
     * @param cName     name of the data collection from which to retrieve oid
     *                  information.
     * @param aSysoid   system object id to look up in the collection
     * @param anAddress IP address to look up in the collection
     * @return a list of MIB objects
     */
    public Map<String, List<Attrib>> getAttributeMap(String cName, String aSysoid, String anAddress) {

        Map<String, List<Attrib>> attributeMap = new HashMap<String, List<Attrib>>();


        LOG.debug("getMibObjectList: collection: {} sysoid: {} address: {}", anAddress, cName, aSysoid);

        if (aSysoid == null) {

            LOG.debug("getMibObjectList: aSysoid parameter is NULL...");
            return attributeMap;
        }

        // Retrieve the appropriate Collection object
        // 
        JmxCollection collection = m_collectionMap.get(cName);
        if (collection == null) {
            return attributeMap;
        }

        for(Mbean mbean : collection.getMbeans()) {
            // Make sure to create a new ArrayList because we add to it below
            List<Attrib> list = new ArrayList<Attrib>(mbean.getAttribList());

            for(CompAttrib compAttrib : mbean.getCompAttribList()) {
                for (CompMember compMember : compAttrib.getCompMemberList()) {
                    Attrib attribWrapper = new Attrib();
                    compAttrib.setName(compAttrib.getName() + "|" + compMember.getName());
                    compAttrib.setAlias(compMember.getAlias());
                    compAttrib.setType(compMember.getType());
                    list.add(attribWrapper);
                }
            }
            attributeMap.put(mbean.getObjectname(), list);
        }
        return attributeMap;
    }

