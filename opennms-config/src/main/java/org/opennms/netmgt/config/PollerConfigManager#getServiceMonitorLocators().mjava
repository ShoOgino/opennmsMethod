    /** {@inheritDoc} */
    @Override
    public Collection<ServiceMonitorLocator> getServiceMonitorLocators() {
        List<ServiceMonitorLocator> locators = new ArrayList<ServiceMonitorLocator>();

        try {
            getReadLock().lock();
            for(final Monitor monitor : monitors()) {
                try {
                    final Class<? extends ServiceMonitor> mc = findServiceMonitorClass(monitor);
                    final ServiceMonitorLocator locator = new DefaultServiceMonitorLocator(monitor.getService(), mc);
                    locators.add(locator);
                    LOG.debug("Loaded monitor for service: {}, class-name: {}", monitor.getService(), monitor.getClassName());
                } catch (final ClassNotFoundException e) {
                    LOG.warn("Unable to load monitor for service: {}, class-name: {}: {}", monitor.getService(), monitor.getClassName(), e.getMessage());
                } catch (ConfigObjectRetrievalFailureException e) {
                    LOG.warn("{} {}", e.getMessage(), e.getRootCause(), e);
                }
            }
        } finally {
            getReadLock().unlock();
        }

        return locators;
        
    }

