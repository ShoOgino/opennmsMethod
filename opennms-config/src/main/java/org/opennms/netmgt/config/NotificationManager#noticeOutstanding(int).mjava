    /**
     * This method returns a boolean indicating if the page has been responded
     * to by any member of the group the page was sent to.
     *
     * @param noticeId a int.
     * @return a boolean.
     * @throws java.io.IOException if any.
     * @throws org.exolab.castor.xml.MarshalException if any.
     * @throws org.exolab.castor.xml.ValidationException if any.
     */
    public boolean noticeOutstanding(final int noticeId) throws IOException, MarshalException, ValidationException {
        boolean outstanding = false;

        Connection connection = null;
        final DBUtils d = new DBUtils(getClass());
        try {
            connection = getConnection();
            d.watch(connection);
            final PreparedStatement statement = connection.prepareStatement(getConfigManager().getConfiguration().getOutstandingNoticesSql());
            d.watch(statement);

            statement.setInt(1, noticeId);

            ResultSet results = statement.executeQuery();
            d.watch(results);

            // count how many rows were returned, if there is even one then the
            // page
            // has been responded too.
            int count = 0;
            while (results.next()) {
                count++;
            }

            if (count == 0) {
                outstanding = true;
            }
        } catch (SQLException e) {
            LOG.error("Error getting notice status", e);
        } finally {
            d.cleanUp();
        }

        return outstanding;
    }

