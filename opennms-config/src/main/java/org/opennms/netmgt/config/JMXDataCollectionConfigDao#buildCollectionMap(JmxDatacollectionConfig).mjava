    /**
     * Build collection map which is a hash map of Collection
     * objects indexed by collection name...also build
     * collection group map which is a hash map indexed
     * by collection name with a hash map as the value
     * containing a map of the collections's group names
     * to the Group object containing all the information
     * for that group. So the associations are:
     * <p/>
     * CollectionMap
     * collectionName -> Collection
     * <p/>
     * CollectionGroupMap
     * collectionName -> groupMap
     * <p/>
     * GroupMap
     * groupMapName -> Group
     * <p/>
     * This is parsed and built at initialization for
     * faster processing at run-time.
     */
    private void buildCollectionMap(JmxDatacollectionConfig config) {
        m_lock.writeLock().lock();
        try {
            m_collectionMap.clear();

            // BOZO isn't the collection name defined in the jmx-datacollection.xml file and
            // global to all the mbeans?
            for (JmxCollection collection : config.getJmxCollectionList()) {

                // Build group map for this collection
                Map<String, Mbean> groupMap = new HashMap<String, Mbean>();
                for (Mbean mbean : collection.getMbeans()) {
                    groupMap.put(mbean.getName(), mbean);
                }
                m_collectionMap.put(collection.getName(), collection);
            }
        } finally {
            m_lock.writeLock().unlock();
        }
    }

