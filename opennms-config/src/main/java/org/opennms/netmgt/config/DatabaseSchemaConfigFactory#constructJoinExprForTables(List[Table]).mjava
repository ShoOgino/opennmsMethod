    /**
     * Construct a SQL FROM clause joining the given tables to the primary table.
     *
     * @param tables
     *            list of Tables to join
     * @return an SQL FROM clause or "" if no expression is found
     */
    public String constructJoinExprForTables(final List<Table> tables) {
        final StringBuilder joinExpr = new StringBuilder();

        getReadLock().lock();
        try {
            final List<String> joinTables = getJoinTables(tables);
            joinExpr.append(joinTables.get(0));
            for (int i = 1; i < joinTables.size(); i++) {
                final Join currentJoin = m_primaryJoins.get(joinTables.get(i));
                if (currentJoin.getType() != null && !currentJoin.getType().equalsIgnoreCase("inner")) {
                  joinExpr.append(" " + currentJoin.getType().toUpperCase());
                }
                joinExpr.append(" JOIN " + joinTables.get(i) + " ON (");
                joinExpr.append(currentJoin.getTable() + "." + currentJoin.getTableColumn() + " = ");
                joinExpr.append(joinTables.get(i) + "." + currentJoin.getColumn() + ")");
            }
    
            if (joinExpr.length() > 0) return "FROM " + joinExpr.toString();
            return "";
        } finally {
            getReadLock().unlock();
        }
    }

