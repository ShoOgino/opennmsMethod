    /**
     * Reload the config from the default config file.
     *
     * @exception java.io.IOException Thrown if the specified config file cannot be read/loaded
     * @exception org.exolab.castor.xml.MarshalException Thrown if the file does not conform to the
     *                schema.
     * @exception org.exolab.castor.xml.ValidationException Thrown if the contents do not match the
     *                required schema.
     * @throws java.io.IOException if any.
     * @throws org.exolab.castor.xml.MarshalException if any.
     * @throws org.exolab.castor.xml.ValidationException if any.
     */
    public synchronized void reload()
    {
        try
        {
            File cfgFile = ConfigFileConstants.getFile( ConfigFileConstants.DISCOVERY_CONFIG_FILE_NAME );
            LOG.debug( "reload: config file path {}", cfgFile.getPath() );
            final FileSystemResource resource = new FileSystemResource( cfgFile );
            m_config = CastorUtils.unmarshal( DiscoveryConfiguration.class, resource );

            try
            {
                getInitialSleepTime();
                getRestartSleepTime();
                getIntraPacketDelay();
                getConfiguredAddresses();
            }
            catch ( final Throwable e )
            {
                throw new ValidationException(
                                "An error occurred while validating the configuration: " + e.getMessage(), e );
            }
        }
        catch ( MarshalException e )
        {
            LOG.error( "Could unmarshal configuration file: " + ConfigFileConstants.DISCOVERY_CONFIG_FILE_NAME, e );
        }
        catch ( ValidationException e )
        {
            LOG.error( "Could unmarshal configuration file: " + ConfigFileConstants.DISCOVERY_CONFIG_FILE_NAME, e );
        }
        catch ( IOException e )
        {
            LOG.error( "Could unmarshal configuration file: " + ConfigFileConstants.DISCOVERY_CONFIG_FILE_NAME, e );
        }
    }

