    /**
     * Add a specific system definition into a SNMP collection.
     * 
     * @param collection the target SNMP collection object.
     * @param systemDef the system definition object.
     * @Parm dataCollectionGroupName the data collection group name where the systemDef is defined
     */
    private void addSystemDef(SnmpCollection collection, SystemDef systemDef, String dataCollectionGroupName) {
        final String dcGroup = dataCollectionGroupName == null ? "N/A" : dataCollectionGroupName;
        LOG.debug("addSystemDef: merging system defintion {} into snmp-collection {}", systemDef.getName(), collection.getName());
        // Add System Definition to target SNMP collection
        if (contains(collection.getSystems().getSystemDefs(), systemDef)) {
            LOG.warn("addSystemDef: system definition {} from data collection group {} already exist on SNMP collection {}", systemDef.getName(), dcGroup, collection.getName());
        } else {
            LOG.debug("addSystemDef: adding system definition {} from data collection group {} to snmp-collection {}", systemDef.getName(), dcGroup, collection.getName());
            collection.getSystems().addSystemDef(systemDef);
            // Add Groups
            for (String groupName : systemDef.getCollect().getIncludeGroups()) {
                Group group = getMibObjectGroup(groupName, dataCollectionGroupName);
                if (group == null) {
                    LOG.warn("addSystemDef: group {} does not exist on any data collection group", groupName);
                } else {
                    if (contains(collection.getGroups().getGroups(), group)) {
                        LOG.debug("addSystemDef: group {} already exist on SNMP collection {}", groupName, collection.getName());
                    } else {
                        LOG.debug("addSystemDef: adding mib object group {} from data collection group {} to snmp-collection {}", group.getName(), dcGroup, collection.getName());
                        collection.getGroups().addGroup(group);
                    }
                }
            }
        }
    }

