    /**
     * Tests that the new definition set by the SnmpEventInfo matches the defaults.
     * Therefore a new defintion should NOT BE added.
     * @throws Exception 
     */
    @Test
    public void testEmptySnmpConfigAddDefinitionWhichMatchesDefaults() throws Exception {
    	final String snmpConfigXml = 
		"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" + 
		"<snmp-config port=\"161\" retry=\"3\" timeout=\"800\" read-community=\"public\" version=\"v2c\" xmlns=\"http://xmlns.opennms.org/xsd/config/snmp\"/>\n";
    	final String expectedConfig = 
		"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" + 
		"<snmp-config port=\"161\" retry=\"3\" timeout=\"800\" read-community=\"public\" version=\"v2c\" xmlns=\"http://xmlns.opennms.org/xsd/config/snmp\"/>\n";
    	
    	  SnmpPeerFactory.setInstance(new SnmpPeerFactory(new StringResource(snmpConfigXml)));
          assertXmlEquals(snmpConfigXml, SnmpPeerFactory.marshallConfig());

          SnmpEventInfo info = new SnmpEventInfo();
          info.setVersion("v2c");
          info.setTimeout(800);
          info.setFirstIPAddress("192.168.0.8");
          
          SnmpPeerFactory.getInstance().define(info);
          
          String actualConfig = SnmpPeerFactory.marshallConfig();
          assertXmlEquals(expectedConfig, actualConfig);
    }

