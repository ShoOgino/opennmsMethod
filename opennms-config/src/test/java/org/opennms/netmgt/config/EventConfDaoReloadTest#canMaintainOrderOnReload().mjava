    /**
     * Verify that the order of the includes is maintained
     * when new event configuration files are added, and reloaded.
     */
    @Test
    public void canMaintainOrderOnReload() throws Exception {
        // Copy the resources to the file system
        File eventconfXml = copyEventConfig("order/eventconf.empty.xml", "eventconf.xml");

        // Load
        DefaultEventConfDao eventConfDao = new DefaultEventConfDao();
        eventConfDao.setConfigResource(new FileSystemResource(eventconfXml));
        eventConfDao.afterPropertiesSet();
        assertEquals(0, eventConfDao.getAllEvents().size());

        EventBuilder eb = new EventBuilder("uei.opennms.org/test/order", "JUnit");
        Event event = eventConfDao.findByEvent(eb.getEvent());
        assertNull("no event should match", event);

        // Replace the eventconf.xml with one that references 1
        Thread.sleep(1000);
        copyEventConfig("order/eventconf.1.xml", "eventconf.xml");
        copyEventConfig("order/1.events.xml", "1.events.xml");

        // Reload
        eventConfDao.reload();
        assertEquals(1, eventConfDao.getAllEvents().size());

        event = eventConfDao.findByEvent(eb.getEvent());
        assertEquals("Critical", event.getSeverity());

        // Replace the eventconf.xml with one that references 2 and then 1
        Thread.sleep(1000);
        copyEventConfig("order/eventconf.21.xml", "eventconf.xml");
        copyEventConfig("order/2.events.xml", "2.events.xml");

        // Reload
        eventConfDao.reload();
        assertEquals(2, eventConfDao.getAllEvents().size());

        event = eventConfDao.findByEvent(eb.getEvent());
        assertEquals("Major", event.getSeverity());
    }

