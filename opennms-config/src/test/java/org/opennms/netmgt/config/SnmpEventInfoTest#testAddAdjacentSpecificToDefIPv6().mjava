    /**
     * This tests the merging of a new specific into a definition that already contains a specific
     * that is adjacent.  The two specifics should be converted to a single range in the definition.
     * 
     * @throws MarshalException
     * @throws ValidationException
     * @throws IOException 
     */
    @Test
    public final void testAddAdjacentSpecificToDefIPv6() throws IOException {

        String snmpConfigXml = "" +
                "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" + 
                "<snmp-config retry=\"3\" timeout=\"800\" read-community=\"public\" write-community=\"private\" xmlns=\"http://xmlns.opennms.org/xsd/config/snmp\">\n" + 
                "    <definition version=\"v2c\">\n" + 
                "        <specific>2001:db8::10</specific>\n" + 
                "    </definition>\n" + 
                "</snmp-config>\n" +
                "";

        String expectedConfig = "" +
        "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" + 
        "<snmp-config retry=\"3\" timeout=\"800\" read-community=\"public\" write-community=\"private\" xmlns=\"http://xmlns.opennms.org/xsd/config/snmp\">\n" + 
        "    <definition version=\"v2c\">\n" + 
        "        <range begin=\"2001:db8::10\" end=\"2001:db8::11\"/>\n" + 
        "    </definition>\n" + 
        "</snmp-config>\n" +
        "";


        SnmpPeerFactory.setInstance(new SnmpPeerFactory(snmpConfigXml));
        
        assertEquals(snmpConfigXml, SnmpPeerFactory.marshallConfig());
        
        SnmpEventInfo info = new SnmpEventInfo();
        info.setVersion("v2c");
        info.setFirstIPAddress("2001:db8::11");
        
        SnmpPeerFactory.getInstance().define(info);
        
        String actualConfig = SnmpPeerFactory.marshallConfig();
        assertEquals(expectedConfig, actualConfig);
        
    }

