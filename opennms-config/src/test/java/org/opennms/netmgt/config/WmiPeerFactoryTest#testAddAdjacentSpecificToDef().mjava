    /**
     * This tests the merging of a new specific into a definition that already contains a specific
     * that is adjacent.  The two specifics should be converted to a single range in the definition.
     *
     * @throws IOException 
     */
    public final void testAddAdjacentSpecificToDef() throws IOException {

        String amiConfigXml = "<?xml version=\"1.0\"?>\n" + 
        "<wmi-config retry=\"3\" timeout=\"800\"\n" + 
        "   password=\"password\">\n" + 
        "   <definition>\n" + 
        "       <specific>192.168.0.5</specific>\n" + 
        "       <specific>192.168.0.6</specific>\n" + 
        "   </definition>\n" + 
        "\n" + 
        "</wmi-config>\n" + 
        "";

        WmiPeerFactory factory = getFactory(amiConfigXml);

        assertEquals(1, factory.getConfig().getDefinitionCount());
        assertEquals(2, factory.getConfig().getDefinition(0).getSpecificCount());
        assertEquals(0, factory.getConfig().getDefinition(0).getRangeCount());

        factory.optimize();

        assertEquals(1, factory.getConfig().getDefinitionCount());
        assertEquals(0, factory.getConfig().getDefinition(0).getSpecificCount());
        assertEquals(1, factory.getConfig().getDefinition(0).getRangeCount());
        assertEquals("192.168.0.5", factory.getConfig().getDefinition(0).getRange(0).getBegin());
        assertEquals("192.168.0.6", factory.getConfig().getDefinition(0).getRange(0).getEnd());
    }

