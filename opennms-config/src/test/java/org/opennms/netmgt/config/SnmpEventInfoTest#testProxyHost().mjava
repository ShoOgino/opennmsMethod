    /**
     * Tests if the proxy host is considered in the optimization code.
     */
    @Test
    public void testProxyHost() throws Exception {
    	final String snmpConfigXml = 
		"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" + 
		"<snmp-config port=\"161\" retry=\"3\" timeout=\"800\" read-community=\"public\" version=\"v1\" max-repetitions=\"17\" max-vars-per-pdu=\"13\" xmlns=\"http://xmlns.opennms.org/xsd/config/snmp\"/>\n";
    	
    	final String expectedConfig = 
		"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" + 
		"<snmp-config port=\"161\" retry=\"3\" timeout=\"800\" read-community=\"public\" version=\"v1\" max-repetitions=\"17\" max-vars-per-pdu=\"13\" xmlns=\"http://xmlns.opennms.org/xsd/config/snmp\">\n"+
		"    <definition proxy-host=\"127.0.0.1\">\n" + 
		"        <specific>192.168.0.8</specific>\n" + 
		"    </definition>\n" + 
		"</snmp-config>\n";
    	

        SnmpPeerFactory.setInstance(new SnmpPeerFactory(snmpConfigXml));
        assertXmlEquals(snmpConfigXml, SnmpPeerFactory.marshallConfig());

        SnmpEventInfo info = new SnmpEventInfo();
        info.setProxyHost("127.0.0.1");
        info.setFirstIPAddress("192.168.0.8");
        
        SnmpPeerFactory.getInstance().define(info);
        
        String actualConfig = SnmpPeerFactory.marshallConfig();
        assertXmlEquals(expectedConfig, actualConfig);
    }

