    @Test
    public void testsForNMS8030() throws Exception {
        File home = new File("src/test/resources/NMS8030");
        Assert.assertTrue(home.exists());
        File configFile = new File(home, "etc/datacollection-config.xml");
        DefaultDataCollectionConfigDao dao = new DefaultDataCollectionConfigDao();
        dao.setConfigResource(new FileSystemResource(configFile));
        dao.setConfigDirectory(new File(home, "etc/datacollection").getAbsolutePath());
        dao.setReloadCheckInterval(0l);
        dao.afterPropertiesSet();

        // Use case 1

        Optional<SystemDef> systemDef = dao.getRootDataCollection().getSnmpCollections().stream()
                .filter(sc -> sc.getName().equals("sample1"))
                .flatMap(sc -> sc.getSystems().getSystemDefs().stream())
                .filter(s -> s.getName().equals("Cisco Routers"))
                .findFirst();
        Assert.assertTrue(systemDef.isPresent());
        Assert.assertEquals(5, systemDef.get().getCollect().getIncludeGroups().size());

        // Use Case 2

        Optional<Group> group = dao.getRootDataCollection().getSnmpCollections().stream()
                .filter(sc -> sc.getName().equals("sample2"))
                .flatMap(sc -> sc.getGroups().getGroups().stream())
                .filter(s -> s.getName().equals("cisco-memory-pool"))
                .findFirst();
        Assert.assertTrue(group.isPresent());
        Assert.assertEquals(3, group.get().getMibObjs().size());

        // Use case 3

        systemDef = dao.getRootDataCollection().getSnmpCollections().stream()
                .filter(sc -> sc.getName().equals("sample2"))
                .flatMap(sc -> sc.getSystems().getSystemDefs().stream())
                .filter(s -> s.getName().equals("Cisco Routers"))
                .findFirst();
        Assert.assertTrue(systemDef.isPresent());
        Assert.assertEquals(5, systemDef.get().getCollect().getIncludeGroups().size());

        // Use Case 4

        group = dao.getRootDataCollection().getSnmpCollections().stream()
                .filter(sc -> sc.getName().equals("sample2"))
                .flatMap(sc -> sc.getGroups().getGroups().stream())
                .filter(s -> s.getName().equals("cisco-memory-pool"))
                .findFirst();
        Assert.assertTrue(group.isPresent());
        Assert.assertEquals(3, group.get().getMibObjs().size());

    }

