    /**
     * This tests the merging of a new definition that contains a range of IP addresses that overlaps
     * the end of one range and the beginning of another range in a current definition.
     *
     * @throws IOException 
     */
    public void testOverlapsTwoRanges() throws IOException {

        String amiConfigXml = "<?xml version=\"1.0\"?>\n" + 
        "<wmi-config retry=\"3\" timeout=\"800\"\n" + 
        "   password=\"password\">\n" + 
        "   <definition>\n" + 
        "       <range begin=\"192.168.0.6\" end=\"192.168.0.12\"/>\n" + 
        "       <range begin=\"192.168.0.20\" end=\"192.168.0.100\"/>\n" + 
        "       <range begin=\"192.168.0.8\" end=\"192.168.0.30\"/>\n" + 
        "   </definition>\n" + 
        "\n" + 
        "</wmi-config>\n" + 
        "";

        WmiPeerFactory factory = getFactory(amiConfigXml);

        assertEquals(1, factory.getConfig().getDefinitions().size());
        assertEquals(0, factory.getConfig().getDefinitions().get(0).getSpecifics().size());
        assertEquals(3, factory.getConfig().getDefinitions().get(0).getRanges().size());

        factory.optimize();

        assertEquals(1, factory.getConfig().getDefinitions().size());
        assertEquals(0, factory.getConfig().getDefinitions().get(0).getSpecifics().size());
        assertEquals(1, factory.getConfig().getDefinitions().get(0).getRanges().size());
        assertEquals("192.168.0.6", factory.getConfig().getDefinitions().get(0).getRanges().get(0).getBegin());
        assertEquals("192.168.0.100", factory.getConfig().getDefinitions().get(0).getRanges().get(0).getEnd());
    }

