    @Test
    public void testPrecedence() throws Exception {
        // Create DatacollectionConfig
        Resource resource = new InputStreamResource(this.getClass().getResourceAsStream("datacollection-config-hybrid-precedence.xml"));
        DatacollectionConfig config = JaxbUtils.unmarshal(DatacollectionConfig.class, resource, false);
        
        // Validate default datacollection content
        SnmpCollection collection = config.getSnmpCollections().get(0);
        Assert.assertEquals(1, collection.getIncludeCollections().size());
        Assert.assertEquals(0, collection.getResourceTypes().size());
        Assert.assertEquals(1, collection.getSystems().getSystemDefs().size());
        Assert.assertEquals(1, collection.getGroups().getGroups().size());

        // Execute Parser
        executeParser(collection);

        // Validate SNMP Collection
        Assert.assertEquals(0, collection.getResourceTypes().size()); // Resource Types should live on a special collection
        Assert.assertEquals(71, collection.getSystems().getSystemDefs().size());
        Assert.assertEquals(14, collection.getGroups().getGroups().size());

        // Test Precedence ~ any group/systemDef directly defined inside the SNMP collection will have precedence over any definition
        // from external files. That means, the definitions from external files will be ignored and won't be included in the collection.
        // This is a way to "override" the content of a specific datacollection-group.
        for (Group group : collection.getGroups().getGroups()) {
            if (group.getName().equals("cisco-frame-relay")) {
                Assert.assertEquals(4, group.getMibObjs().size());
            }
        }
        for (SystemDef systemDef : collection.getSystems().getSystemDefs()) {
            if (systemDef.getName().equals("Cisco Routers")) {
                Assert.assertEquals(3, systemDef.getCollect().getIncludeGroups().size());
            }
        }
    }

