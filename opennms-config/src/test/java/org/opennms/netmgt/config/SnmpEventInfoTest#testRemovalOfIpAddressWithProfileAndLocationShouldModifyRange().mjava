    /**
     * Tests removal of one IP address which has only one definition with range and definition has profile label and location set.
     * @throws IOException
     */
    @Test
    public void testRemovalOfIpAddressWithProfileAndLocationShouldModifyRange() throws IOException {

        String snmpConfigXml = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" +
                "<snmp-config retry=\"3\" timeout=\"800\" read-community=\"public\" write-community=\"private\" xmlns=\"http://xmlns.opennms.org/xsd/config/snmp\">\n" +
                "    <definition version=\"v1\" timeout=\"1200\" profile-label=\"profile3\" location=\"MINION\" >\n" +
                "        <range begin=\"192.168.1.15\" end=\"192.168.1.35\"/>\n" +
                "    </definition>\n" +
                "</snmp-config>\n" +
                "";

        String expectedConfig = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" +
                "<snmp-config retry=\"3\" timeout=\"800\" read-community=\"public\" write-community=\"private\" xmlns=\"http://xmlns.opennms.org/xsd/config/snmp\">\n" +
                "    <definition version=\"v1\" timeout=\"1200\" profile-label=\"profile3\" location=\"MINION\" >\n" +
                "        <range begin=\"192.168.1.15\" end=\"192.168.1.24\"/>\n" +
                "        <range begin=\"192.168.1.26\" end=\"192.168.1.35\"/>\n" +
                "    </definition>\n" +
                "</snmp-config>\n" +
                "";
        SnmpPeerFactory.setInstance(new SnmpPeerFactory(new StringResource(snmpConfigXml)));
        assertXmlEquals(snmpConfigXml, SnmpPeerFactory.getInstance().getSnmpConfigAsString());

        boolean success = SnmpPeerFactory.getInstance().removeFromDefinition(InetAddress.getByName("192.168.1.25"), "MINION", "test");
        assertTrue("Remove from definition should be successful", success);
        SnmpAgentConfig snmpAgentConfig = SnmpPeerFactory.getInstance().getAgentConfig(InetAddress.getByName("192.168.1.25"), "MINION");
        assertTrue("Should fall back to default config", snmpAgentConfig.isDefault());
        assertNull("Profile label should be null", snmpAgentConfig.getProfileLabel());
        String actualConfig = SnmpPeerFactory.getInstance().getSnmpConfigAsString();

        assertXmlEquals(expectedConfig, actualConfig);
    }

