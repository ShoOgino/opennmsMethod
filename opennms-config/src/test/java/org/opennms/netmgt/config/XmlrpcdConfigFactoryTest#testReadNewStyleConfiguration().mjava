    public void testReadNewStyleConfiguration() throws MarshalException, ValidationException, IOException {
        XmlrpcdConfigFactory f = new XmlrpcdConfigFactory(this.getClass().getResourceAsStream("xmlrpcd-configuration-new.xml"));
        ExternalServers e = null;
        Subscription s = null;

        // check entries
        assertEquals("number of external-server entries", 2, f.getExternalServerCollection().size());
        assertEquals("number of subscriptions", 3, f.getSubscriptionCollection().size());

        Iterator<ExternalServers> es = f.getExternalServerCollection().iterator();

        // first external-server should have 2 subscriptions
        e = es.next();
        assertEquals("two subscriptions", 2, e.getServerSubscriptionCount());
        assertTrue("first subscription should be serviceEvents", e.getServerSubscription(0).equals("serviceEvents"));

        // second one should be automatically generated
        e = es.next();
        assertEquals("should have one serverSubscription", 1, e.getServerSubscriptionCount());
        assertTrue("should be autogenerated", e.getServerSubscription(0).startsWith("legacyServerSubscription-"));

        Iterator<Subscription> is = f.getSubscriptionCollection().iterator();
        
        // first entry, serviceEvents
        s = is.next();
        assertEquals("first entry is serviceEvents", "serviceEvents", s.getName());
        assertEquals("serviceEvents has 2 entries", 2, s.getSubscribedEventCount());
        
        // second entry, otherEvents
        s = is.next();
        assertEquals("second entry is otherEvents", "otherEvents", s.getName());
        assertEquals("otherEvents has 5 entries", 7, s.getSubscribedEventCount());
        
        // third entry, generated
        s = is.next();
        assertEquals("third entry is generated", e.getServerSubscription(0), s.getName());
        assertEquals("autogenerated entries have 9 UEIs", 9, s.getSubscribedEventCount());

    }

