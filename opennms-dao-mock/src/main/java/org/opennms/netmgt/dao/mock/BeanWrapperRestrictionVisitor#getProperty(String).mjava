    public Object getProperty(final String attribute) {
        LOG.debug("getProperty({})", attribute);
        final String[] attributes = attribute.split("\\.", 2);
        LOG.debug("attributes = {}", Arrays.asList(attributes));
        if (attributes.length == 1) {
            for (final PropertyDescriptor pd : m_beanWrapper.getPropertyDescriptors()) {
                if (pd.getName().equalsIgnoreCase(attribute)) {
                    return m_beanWrapper.getPropertyValue(pd.getName());
                }
                for (final Alias alias : m_aliases) {
                    if (alias.getAlias().equalsIgnoreCase(attribute)) {
                        if (pd.getName().equalsIgnoreCase(alias.getAssociationPath())) {
                            return m_beanWrapper.getPropertyValue(pd.getName());
                        }
                    }
                }
            }
        } else if (attributes.length > 1) {
            LOG.debug("more than one attribute, try walking the tree");
            for (final PropertyDescriptor pd : m_beanWrapper.getPropertyDescriptors()) {
                final String attributeName = attributes[0];
                final String subAttributes = attributes[1];
                if (pd.getName().equalsIgnoreCase(attributeName)) {
                    final Object propertyValue = m_beanWrapper.getPropertyValue(pd.getName());
                    final BeanWrapperRestrictionVisitor subVisitor = new BeanWrapperRestrictionVisitor(propertyValue, m_aliases);
                    final Object property = subVisitor.getProperty(subAttributes);
                    LOG.debug("Found a sub-attribute: {} = {}", attribute, property);
                    return property;
                }
                for (final Alias alias : m_aliases) {
                    final String aliasName = alias.getAlias();
                    final String aliasPath = alias.getAssociationPath();

                    //LOG.debug("alias = {}, path = {}", aliasName, aliasPath);
                    if (aliasName.equalsIgnoreCase(attributeName)) {
                        // LOG.debug("property name = {}, aliasName = {}, aliasPath = {}, attributeName = {}", pd.getName(), aliasName, aliasPath, attributeName);
                        if (pd.getName().equalsIgnoreCase(aliasPath)) {
                            final Object propertyValue = m_beanWrapper.getPropertyValue(pd.getName());
                            final BeanWrapperRestrictionVisitor subVisitor = new BeanWrapperRestrictionVisitor(propertyValue, m_aliases);
                            final Object property = subVisitor.getProperty(subAttributes);
                            LOG.debug("Found a sub-attribute: {} = {}", attribute, property);
                            return property;
                        }
                    }
                }
            }
        } else {
            LOG.warn("Uhh... 0 attributes?  How did we get here?");
        }
        return null;
    }

