    @Test
    public void testNorthbounder() throws Exception {
        // Setup the Email northbounder configuration DAO
        System.setProperty("opennms.home", "src/test/resources");
        EmailNorthbounderConfigDao configDao = new EmailNorthbounderConfigDao();
        configDao.setConfigResource(new FileSystemResource(new File("src/test/resources/etc/email-northbounder-config.xml")));
        configDao.afterPropertiesSet();

        // Setup JavaMail configuration DAO
        DefaultJavamailConfigurationDao javaMailDao = new DefaultJavamailConfigurationDao();
        javaMailDao.setConfigResource(new FileSystemResource(new File("src/test/resources/etc/javamail-configuration.xml")));
        javaMailDao.afterPropertiesSet();

        // Setup the trap northbounder (overriding the settings of the first sink to use the test trap receiver)
        EmailNorthbounder nbi = new EmailNorthbounder(configDao, javaMailDao, "google");
        nbi.afterPropertiesSet();

        // Setup test node
        OnmsNode node = new OnmsNode("my-test-server");
        node.setForeignSource("Servers-MacOS");
        node.setForeignId("1");
        node.setId(1);
        OnmsSnmpInterface snmpInterface = new OnmsSnmpInterface(node, 1);
        snmpInterface.setId(1);
        snmpInterface.setIfAlias("Connection to OpenNMS Wifi");
        snmpInterface.setIfDescr("en1");
        snmpInterface.setIfName("en1/0");
        snmpInterface.setPhysAddr("00:00:00:00:00:01");
        InetAddress address = InetAddress.getByName("10.0.1.1");
        OnmsIpInterface onmsIf = new OnmsIpInterface(address, node);
        onmsIf.setSnmpInterface(snmpInterface);
        onmsIf.setId(1);
        onmsIf.setIfIndex(1);
        onmsIf.setIpHostName("my-test-server");
        onmsIf.setIsSnmpPrimary(PrimaryType.PRIMARY);
        node.getIpInterfaces().add(onmsIf);

        // Setup test alarm
        OnmsAlarm onmsAlarm = new OnmsAlarm();
        onmsAlarm.setId(100);
        onmsAlarm.setNode(node);
        onmsAlarm.setIpAddr(address);
        onmsAlarm.setUei("uei.opennms.org/trap/myTrap1");
        onmsAlarm.setEventParms("alarmId=10(Int32,text);alarmMessage=this is a test(string,text);");
        onmsAlarm.setLogMsg("Test log message");
        onmsAlarm.setDescription("Test description");
        NorthboundAlarm alarm = new NorthboundAlarm(onmsAlarm);
        Assert.assertEquals(2, alarm.getEventParametersCollection().size());

        // Verify the nortbound alarm and send it to the test receiver
        Assert.assertTrue(nbi.accepts(alarm));
        SendmailConfig sendmail = nbi.getSendmailConfig(alarm);
        Assert.assertEquals("ALARM 100 FROM NODE my-test-server@Servers-MacOS", sendmail.getSendmailMessage().getSubject());
        Assert.assertEquals("ALARM 100 FROM NODE my-test-server@Servers-MacOS: Test log message", sendmail.getSendmailMessage().getBody());
    }

