    @Before
    public void setUp() {
        dac = new DroolsAlarmContext();
        dac.setUsePseudoClock(true);
        dac.setUseManualTick(true);
        dac.setAlarmTicketerService(ticketer);

        MockTransactionTemplate transactionTemplate = new MockTransactionTemplate();
        transactionTemplate.afterPropertiesSet();
        dac.setTransactionTemplate(transactionTemplate);

        alarmDao = mock(AlarmDao.class);
        when(alarmDao.findAll()).thenReturn(Collections.emptyList());
        dac.setAlarmDao(alarmDao);

        DefaultAlarmService alarmService = new DefaultAlarmService();
        alarmService.setAlarmDao(alarmDao);

        AlarmEntityNotifierImpl alarmEntityNotifier = mock(AlarmEntityNotifierImpl.class);
        alarmService.setAlarmEntityNotifier(alarmEntityNotifier);
        dac.setAlarmService(alarmService);

        dac.start();

        // Wait until the seed thread has completed - it will hold the session lock
        // after start returns, so it is sufficient to wait until we can acquire
        // that same lock ourselves
        dac.getLock().lock();
        dac.getLock().unlock();
    }

