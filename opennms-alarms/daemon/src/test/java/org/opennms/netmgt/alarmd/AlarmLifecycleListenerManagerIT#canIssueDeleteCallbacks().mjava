    @Test
    public void canIssueDeleteCallbacks() {
        // Send a nodeDown
        sendNodeDownEvent(1);
        await().until(getNodeDownAlarmFor(1), hasSeverity(OnmsSeverity.MAJOR));

        // Send a nodeUp
        sendNodeUpEvent(1);
        await().until(getNodeDownAlarmFor(1), hasSeverity(OnmsSeverity.CLEARED));

        // We need to wait for the cleanUp automation which triggers when:
        //  'lastautomationtime' and 'lasteventtime' < "5 minutes ago"
        // so we cheat a little and update the timestamps ourselves instead of waiting
        transactionTemplate.execute(new TransactionCallbackWithoutResult() {
            @Override
            protected void doInTransactionWithoutResult(TransactionStatus status) {
                Criteria criteria = new Criteria(OnmsAlarm.class);
                criteria.addRestriction(new EqRestriction("node.id", 1));
                criteria.addRestriction(new EqRestriction("uei", EventConstants.NODE_DOWN_EVENT_UEI));
                for (OnmsAlarm alarm : m_alarmDao.findMatching(criteria)) {
                    LocalDateTime tenMinutesAgo = LocalDateTime.now().minusMinutes(10);
                    Date then = Date.from(tenMinutesAgo.toInstant(ZoneOffset.UTC));
                    alarm.setLastAutomationTime(then);
                    alarm.setLastEventTime(then);
                    m_alarmDao.save(alarm);
                }
                m_alarmDao.flush();
            }
        });

        await().until(getNodeDownAlarmFor(1), nullValue());
    }

