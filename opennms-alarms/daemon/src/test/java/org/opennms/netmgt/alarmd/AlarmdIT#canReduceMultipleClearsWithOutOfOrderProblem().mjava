    @Test
    public void canReduceMultipleClearsWithOutOfOrderProblem() throws Exception {
        final MockNode node = m_mockNetwork.getNode(1);
        // Send Clear
        Date firstClearTime = new Date();
        sendNodeUpEvent(node, firstClearTime);
        // Send Second Clear
        sendNodeUpEvent(node, new Date());
        // Send OutOfOrder Problem with a timestamp 2 minutes before the initial Clear
        Date initialProblemDate = new Date(firstClearTime.getTime() - SECONDS.toMillis(60));
        sendNodeDownEvent(node, initialProblemDate);

        // We should have 2 alarms now
        // The problem should be cleared and the clear should be normal
        await().until(() -> m_alarmDao.findAll().size(), equalTo(2));
        await().until(() -> m_alarmDao.findByReductionKey("uei.opennms.org/nodes/nodeDown:1").getSeverity(), equalTo(OnmsSeverity.CLEARED));
        await().until(() -> m_alarmDao.findByReductionKey("uei.opennms.org/nodes/nodeUp:1").getSeverity(), equalTo(OnmsSeverity.NORMAL));
    }

