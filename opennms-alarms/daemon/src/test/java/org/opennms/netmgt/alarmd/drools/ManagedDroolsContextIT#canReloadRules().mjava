    @Test
    public void canReloadRules() throws IOException {
        generateSimpleRuleset();

        ManagedDroolsContext droolsCtx = new ManagedDroolsContext(rulesFolder, "test", "test");
        droolsCtx.setUseManualTick(true);

        NotificationService notificationService = new NotificationService();
        droolsCtx.setOnNewKiewSessionCallback(kieSession -> {
            kieSession.setGlobal("notificationService", notificationService);
        });
        droolsCtx.start();

        // No rules should have triggered yet
        assertThat(notificationService.getSent(), hasSize(equalTo(0)));

        Notification notifA = new Notification("oops");
        droolsCtx.getKieSession().insert(notifA);

        Notification notifB = new Notification("oh no");
        droolsCtx.getKieSession().insert(notifB);

        droolsCtx.tick();

        // A single rule should have triggered against "oops"
        assertThat(notificationService.getSent(), contains(notifA));

        // Now let's update our ruleset
        generatedUpdatedRuleset();
        notificationService.clearSent();
        droolsCtx.reload();

        // Tick
        droolsCtx.tick();

        // A single rule should have triggered against "oh no"
        assertThat(notificationService.getSent(), contains(notifB));

        droolsCtx.stop();

        // Validate that no more rules have been triggered
        assertThat(notificationService.getSent(), hasSize(equalTo(1)));
    }

