    @Test
    @Transactional
    public void testUpdateRemoveAlarm() {
        Situation situation = new Situation();
        situation.setDistPoller(m_distPollerDao.whoami());
        situation.setCounter(1);
        situation.setUei("cardDown");
        situation.setAlarms(new HashSet<>(Arrays.asList(linkDownAlarmOnR1, linkDownAlarmOnR2)));
        situation.setReductionKey("situation/reduction/key");

        m_alarmDao.saveOrUpdate(situation);

        Situation retrieved = (Situation) m_alarmDao.findByReductionKey("situation/reduction/key");
        assertThat(retrieved.getAlarms().size(), is(2));

        // remove one of the alarms
        retrieved.setAlarms(new HashSet<>(Arrays.asList(linkDownAlarmOnR1)));
        assertThat(retrieved.getAlarms().size(), is(1));
        
        m_alarmDao.saveOrUpdate(retrieved);

        Situation retrieved2 = (Situation) m_alarmDao.findByReductionKey("situation/reduction/key");
        assertThat(retrieved2.getAlarms().size(), is(1));
        assertThat(retrieved2.getAlarms().stream().findFirst(), is(Optional.of(linkDownAlarmOnR1)));
    }

