    @Test
    @Transactional
    public void testUpdateAddAlarm() {

        OnmsAlarm situation = new OnmsAlarm();
        situation.setDistPoller(m_distPollerDao.whoami());
        situation.setCounter(1);
        situation.setUei("cardDown");
        situation.setRelatedAlarmsForSituation(new HashSet<>(Arrays.asList(linkDownAlarmOnR1, linkDownAlarmOnR2)));
        situation.setReductionKey("situation/reduction/key");
        
        m_alarmDao.saveOrUpdate(situation);

        OnmsAlarm retrieved = m_alarmDao.findByReductionKey("situation/reduction/key");
        assertThat(retrieved.getRelatedAlarmsForSituation().size(), is(2));

        // update the situation by adding an alarm
        OnmsAlarm alarm3 = new OnmsAlarm();
        alarm3.setDistPoller(m_distPollerDao.whoami());
        alarm3.setCounter(1);
        alarm3.setUei("linkDown");
        retrieved.addRelatedAlarm(alarm3);
        assertThat(retrieved.getRelatedAlarmsForSituation().size(), is(3));

        m_alarmDao.saveOrUpdate(retrieved);

        OnmsAlarm retrieved2 = m_alarmDao.findByReductionKey("situation/reduction/key");
        assertThat(retrieved2.getRelatedAlarmsForSituation().size(), is(3));
        assertThat(retrieved2.getAffectedNodeCount(), is(1));
   }

