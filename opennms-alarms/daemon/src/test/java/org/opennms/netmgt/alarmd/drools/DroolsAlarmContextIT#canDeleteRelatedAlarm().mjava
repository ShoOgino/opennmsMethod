    @Test
    public void canDeleteRelatedAlarm() {
        OnmsAlarm alarm1 = new OnmsAlarm();
        alarm1.setId(1);
        alarm1.setAlarmType(1);
        alarm1.setSeverity(OnmsSeverity.WARNING);
        alarm1.setReductionKey("n1:oops1");
        alarm1.setLastEventTime(new Date(1000));
        OnmsAlarm alarm2 = new OnmsAlarm();
        alarm2.setId(2);
        alarm2.setAlarmType(1);
        alarm2.setSeverity(OnmsSeverity.WARNING);
        alarm2.setReductionKey("n1:oops2");
        alarm2.setLastEventTime(new Date(1000));
        OnmsAlarm situation = new OnmsAlarm();
        situation.setId(3);
        situation.setAlarmType(1);
        situation.setSeverity(OnmsSeverity.WARNING);
        situation.setReductionKey("n1:situation");
        situation.setLastEventTime(new Date(2000));
        situation.setRelatedAlarms(Sets.newHashSet(alarm1, alarm2));

        when(alarmDao.get(alarm1.getId())).thenReturn(alarm1);
        when(alarmDao.get(alarm2.getId())).thenReturn(alarm2);
        when(alarmDao.get(situation.getId())).thenReturn(situation);
        dac.getClock().advanceTime(1000, TimeUnit.MILLISECONDS);
        dac.handleNewOrUpdatedAlarm(alarm1);
        dac.handleNewOrUpdatedAlarm(alarm2);
        dac.tick();

        dac.getClock().advanceTime(1000, TimeUnit.MILLISECONDS);
        dac.handleNewOrUpdatedAlarm(situation);
        dac.tick();

        // Now remove the 2nd alarm from the situation
        situation.setLastEventTime(new Date(3000));
        situation.setRelatedAlarms(Sets.newHashSet(alarm1));

        dac.getClock().advanceTime(1000, TimeUnit.MILLISECONDS);
        dac.handleNewOrUpdatedAlarm(situation);
        dac.tick();

    }

