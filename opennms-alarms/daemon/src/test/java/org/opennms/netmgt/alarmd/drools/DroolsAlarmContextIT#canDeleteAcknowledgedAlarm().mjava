    @Test
    public void canDeleteAcknowledgedAlarm() {
        final OnmsAlarm toDelete = new OnmsAlarm();
        toDelete.setId(2);
        toDelete.setAlarmType(2);
        toDelete.setSeverity(OnmsSeverity.CLEARED);
        toDelete.setClearKey("n1:oops");
        toDelete.setLastEventTime(new Date(101));
        // "Ack" the alarm
        toDelete.setAlarmAckTime(new Date(110));
        toDelete.setAlarmAckUser("me");
        when(alarmDao.get(toDelete.getId())).thenReturn(toDelete);

        final AtomicBoolean gotDelete = new AtomicBoolean();
        doAnswer(invocation -> {
            gotDelete.set(true);
            return null;
        }).when(alarmDao).delete(toDelete);
        dac.getClock().advanceTime( 110, TimeUnit.MILLISECONDS );
        dac.handleNewOrUpdatedAlarm(toDelete);
        dac.tick();

        // The alarm should not be immediately deleted
        assertThat(gotDelete.get(), equalTo(false));

        // Advance the clock and tick
        dac.getClock().advanceTime( 10, TimeUnit.MINUTES );
        dac.tick();

        // Still not deleted
        assertThat(gotDelete.get(), equalTo(false));

        // Advance the clock and tick
        dac.getClock().advanceTime( 1, TimeUnit.DAYS );
        dac.tick();

        assertThat(gotDelete.get(), equalTo(true));
    }

