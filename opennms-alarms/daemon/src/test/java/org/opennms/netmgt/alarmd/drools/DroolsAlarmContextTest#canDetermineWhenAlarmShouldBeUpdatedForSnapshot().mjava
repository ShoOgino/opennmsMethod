    @Test
    public void canDetermineWhenAlarmShouldBeUpdatedForSnapshot() {
        // Mock alarms to be able to test all the code branches
        OnmsAlarm a1 = mock(OnmsAlarm.class);
        when(a1.getLastEventTime()).thenReturn(new Date(0));
        when(a1.getAckTime()).thenReturn(null);
        OnmsAlarm a2 = mock(OnmsAlarm.class);
        when(a2.getLastEventTime()).thenReturn(new Date(1));
        when(a1.getAckTime()).thenReturn(null);
        OnmsAlarm a3 = mock(OnmsAlarm.class);
        when(a3.getLastEventTime()).thenReturn(new Date(0));
        when(a3.getAckTime()).thenReturn(new Date(0));

        // Should update
        assertThat(DroolsAlarmContext.shouldUpdateAlarmForSnapshot(a1, a2), equalTo(true));
        assertThat(DroolsAlarmContext.shouldUpdateAlarmForSnapshot(a2, a1), equalTo(true));

        assertThat(DroolsAlarmContext.shouldUpdateAlarmForSnapshot(a1, a3), equalTo(true));
        assertThat(DroolsAlarmContext.shouldUpdateAlarmForSnapshot(a3, a1), equalTo(true));

        // Should not update
        assertThat(DroolsAlarmContext.shouldUpdateAlarmForSnapshot(a1, a1), equalTo(false));
        assertThat(DroolsAlarmContext.shouldUpdateAlarmForSnapshot(a2, a2), equalTo(false));
        assertThat(DroolsAlarmContext.shouldUpdateAlarmForSnapshot(a3, a3), equalTo(false));
    }

