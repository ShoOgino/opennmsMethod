    /**
     * This tests the running of automations directly as if they were scheduled.
     * @throws SQLException
     * @throws InterruptedException 
     */
    @Test(timeout=30000)
    @JUnitTemporaryDatabase(tempDbClass=MockDatabase.class) // Relies on records created in @Before so we need a fresh database
    public final void testRunAutomation() throws SQLException, InterruptedException {
        final int major = OnmsSeverity.MAJOR.getId();

        assertEquals(0, countAlarms());

        bringNodeDownCreatingEvent(1);

        while(countAlarms() != 1) {
            Thread.sleep(100);
        }

        assertEquals(1, countAlarms());
        assertEquals(major, getSingleResultSeverity());
        assertEquals("counter in the alarm", 1, m_jdbcTemplate.queryForInt("select counter from alarms"));

        bringNodeDownCreatingEvent(1);

        while(m_jdbcTemplate.queryForInt("select counter from alarms") < 2) {
            Thread.sleep(100);
        }

        assertEquals(1, countAlarms());
        assertEquals(major, getSingleResultSeverity());
        assertEquals("counter in the alarm", 2, m_jdbcTemplate.queryForInt("select counter from alarms"));

        AutomationProcessor ap = new AutomationProcessor(VacuumdConfigFactory.getInstance().getAutomation("autoEscalate"));
        assertTrue(ap.runAutomation());

        while(getSingleResultSeverity() != (major + 1)) {
            Thread.sleep(100);
        }

        assertEquals(major+1, getSingleResultSeverity());
    }

