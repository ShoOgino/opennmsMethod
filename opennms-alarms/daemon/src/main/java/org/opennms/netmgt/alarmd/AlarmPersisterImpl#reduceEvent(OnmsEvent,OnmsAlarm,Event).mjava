    private static void reduceEvent(OnmsEvent e, OnmsAlarm alarm, Event event) {
        
        //Always set these
        alarm.setLastEvent(e);
        alarm.setLastEventTime(e.getEventTime());
        alarm.setCounter(alarm.getCounter() + 1);
        
        if (!event.getAlarmData().hasUpdateFields()) {
            
            //We always set these even if there are not update fields specified
            alarm.setLogMsg(e.getEventLogMsg());
            alarm.setEventParms(e.getEventParms());
        } else {
            
            for (UpdateField field : event.getAlarmData().getUpdateFieldList()) {
                
                //Always set these, unless specified not to, in order to maintain current behavior
                if (field.getFieldName().equalsIgnoreCase("LogMsg") && field.isUpdateOnReduction() == false) {
                    continue;
                } else {
                    alarm.setLogMsg(e.getEventLogMsg());
                }
                
                if (field.getFieldName().equalsIgnoreCase("Parms") && field.isUpdateOnReduction() == false) {
                    continue;
                } else {
                    alarm.setEventParms(e.getEventParms());
                }
                

                //Set these others
                if (field.isUpdateOnReduction()) {
                    
                    if (field.getFieldName().toLowerCase().startsWith("distpoller")) {
                        alarm.setDistPoller(e.getDistPoller());
                    } else if (field.getFieldName().toLowerCase().startsWith("ipaddr")) {
                        alarm.setIpAddr(e.getIpAddr());
                    } else if (field.getFieldName().toLowerCase().startsWith("mouseover")) {
                        alarm.setMouseOverText(e.getEventMouseOverText());
                    } else if (field.getFieldName().toLowerCase().startsWith("operinstruct")) {
                        alarm.setOperInstruct(e.getEventOperInstruct());
                    } else if (field.getFieldName().equalsIgnoreCase("severity")) {
                        alarm.setSeverity(OnmsSeverity.valueOf(e.getSeverityLabel()));
                    } else if (field.getFieldName().toLowerCase().contains("descr")) {
                        alarm.setDescription(e.getEventDescr());
                        alarm.setSeverity(OnmsSeverity.valueOf(e.getSeverityLabel()));
                    } else {
                        log().warn("reduceEvent: The specified field: "+field.getFieldName()+", is not supported.");
                    }

                    /* This doesn't work because the properties are not consistent from OnmsEvent to OnmsAlarm
                    try {
                        final BeanWrapper ew = PropertyAccessorFactory.forBeanPropertyAccess(e);
                        final BeanWrapper aw = PropertyAccessorFactory.forBeanPropertyAccess(alarm);
                        aw.setPropertyValue(field.getFieldName(), ew.getPropertyValue(field.getFieldName()));
                    } catch (BeansException be) {
                        System.out.println(be);
                        log().error("reduceEvent:", be);
                        continue;
                    }
                    */
                    
                }
            }
            
        }
        
        e.setAlarm(alarm);
    }

