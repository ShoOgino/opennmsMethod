    /**
     * Unmarshall state from disk.
     *
     * @param serialize the serialize
     */
    private void unmarshallStateFromDisk(boolean serialize) {
        final File stateFile = getPathToState().toFile();
        LOG.debug("Restoring state for engine {} from {} ...", getName(), stateFile);
        if (!stateFile.exists()) return;
        final KieMarshallers kMarshallers = KieServices.Factory.get().getMarshallers();
        final ObjectMarshallingStrategy oms = serialize ? kMarshallers.newSerializeMarshallingStrategy() : kMarshallers.newIdentityMarshallingStrategy();
        final Marshaller marshaller = kMarshallers.newMarshaller( m_kieBase, new ObjectMarshallingStrategy[]{ oms } );
        try (FileInputStream fin = new FileInputStream(stateFile)) {
            marshaller.unmarshall( fin, m_kieSession );
            stateFile.delete();
            LOG.info("Sucessfully restored state for engine {} from {}. There are {} elements on the working memory.", getName(), stateFile, m_kieSession.getObjects().size());
        } catch (IOException | ClassNotFoundException e) {
            LOG.error("Failed to restore state for engine {} from {}.", getName(), stateFile, e);
        }
    }

