    /**
     * Accepts.
     * <p>If the engine doesn't have filter, the method will return true.</p>
     * <p>If the method has a filter, it will be evaluated.</p>
     *
     * @param alarm the alarm
     * @return true, if successful
     */
    public boolean accepts(NorthboundAlarm alarm) {
        if (getFilter() != null) {
            StandardEvaluationContext context = new StandardEvaluationContext(alarm);
            ExpressionParser parser = new SpelExpressionParser();
            Expression exp = parser.parseExpression(m_filter);
            boolean passed = false;
            try {
                passed = (Boolean)exp.getValue(context, Boolean.class);
            } catch (Exception e) {
                LOG.warn("accepts: can't evaluate expression {} for alarm {} because: {}", getFilter(), alarm.getUei(), e.getMessage());
            }
            LOG.debug("accepts: checking {} ? {}", m_filter, passed);
            return passed;
        }
        return true;
    }

