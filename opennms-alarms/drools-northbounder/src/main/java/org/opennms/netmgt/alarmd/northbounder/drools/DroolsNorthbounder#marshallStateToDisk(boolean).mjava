    /**
     * Marshall state to disk.
     *
     * @param serialize the serialize
     */
    private void marshallStateToDisk(boolean serialize) {
        final File stateFile = getPathToState().toFile();
        LOG.debug("Saving state for engine {} in {} ...", getName(), stateFile);
        final KieMarshallers kMarshallers = KieServices.Factory.get().getMarshallers();
        final ObjectMarshallingStrategy oms = serialize ? kMarshallers.newSerializeMarshallingStrategy() : kMarshallers.newIdentityMarshallingStrategy();
        final Marshaller marshaller = kMarshallers.newMarshaller( m_kieBase, new ObjectMarshallingStrategy[]{ oms } );
        try (FileOutputStream fos = new FileOutputStream(stateFile)) {
            m_kieSession.halt();
            marshaller.marshall( fos, m_kieSession );
            m_kieSession.dispose();
            m_kieSession.destroy();
            LOG.info("Sucessfully save state for engine {} in {}. There are {} elements on the working memory.", getName(), stateFile, m_kieSession.getObjects().size());
        } catch (IOException e) {
            LOG.error("Failed to save state for engine {} in {}.", getName(), stateFile, e);
        }
    }

