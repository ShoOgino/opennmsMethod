    /**
     * Creates the down alarm.
     *
     * @param node the node
     * @param eventTime the event time
     * @return the alarm
     */
    @Transactional
    public OnmsAlarm createDownAlarm(OnmsNode node, Date eventTime) {
        final String uei = "uei.opennms.org/nodes/nodeDown";
        OnmsEvent event = new OnmsEvent();
        event.setEventSource("JUnit");
        event.setDistPoller(m_distPoller);
        event.setNode(node);
        event.setEventUei(uei);
        event.setEventCreateTime(eventTime);
        event.setEventTime(eventTime);
        event.setEventDisplay("Y");
        event.setEventLog("Y");
        event.setEventLogMsg("Node is down");
        event.setEventSeverity(OnmsSeverity.MAJOR.getId());
        event.setSeverityLabel(OnmsSeverity.MAJOR.getLabel());
        m_eventDao.save(event);
        m_eventDao.flush();

        OnmsAlarm alarm = new OnmsAlarm();
        alarm.setDistPoller(m_distPoller);
        alarm.setCounter(1);
        alarm.setLastEvent(event);
        alarm.setLastEventTime(event.getEventTime());        
        alarm.setNode(node);
        alarm.setUei(uei);
        alarm.setAlarmType(1);
        alarm.setSeverity(OnmsSeverity.MAJOR);
        alarm.setReductionKey(uei + "::" + node.getId());
        m_alarmDao.save(alarm);
        m_alarmDao.flush();
        return alarm;
    }

