	@Test
	public void testMarshall() throws JAXBException, UnsupportedEncodingException, SAXException {
		
		final String expectedXML = "" +
				"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" + 
				"<test-alarm>\n" + 
				"    <id>23</id>\n" + 
				"</test-alarm>\n" +
				"";

		TestNorthBoundAlarm nba = new TestNorthBoundAlarm();
		nba.setId("23");
		
		// Create a Marshaller
		JAXBContext context = JAXBContext.newInstance(TestNorthBoundAlarm.class);
		Marshaller marshaller = context.createMarshaller();
		marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
		
		// save the output in a byte array
		ByteArrayOutputStream out = new ByteArrayOutputStream();

		// marshall the output
		marshaller.marshal(nba, out);

		// verify its matches the expected results
		byte[] utf8 = out.toByteArray();

		String result = new String(utf8, "UTF-8");
		assertEquals(expectedXML, result);
		
		System.err.println(result);
		
		// unmarshall the generated XML
		
//		URL xsd = getClass().getResource("/ncs-model.xsd");
//		
//		assertNotNull(xsd);
//		
//		SchemaFactory schemaFactory = SchemaFactory.newInstance("http://www.w3.org/2001/XMLSchema");
//		Schema schema = schemaFactory.newSchema(xsd);
		
		Unmarshaller unmarshaller = context.createUnmarshaller();
//		unmarshaller.setSchema(schema);
		Source source = new StreamSource(new ByteArrayInputStream(utf8));
		TestNorthBoundAlarm read = unmarshaller.unmarshal(source, TestNorthBoundAlarm.class).getValue();
		
		assertNotNull(read);
		
		// round trip back to XML and make sure we get the same thing
		ByteArrayOutputStream reout = new ByteArrayOutputStream();
		marshaller.marshal(read, reout);
		
		String roundTrip = new String(reout.toByteArray(), "UTF-8");
		
		assertEquals(expectedXML, roundTrip);
	}

