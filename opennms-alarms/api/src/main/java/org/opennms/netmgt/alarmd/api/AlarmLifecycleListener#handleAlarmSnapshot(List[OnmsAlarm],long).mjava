    /**
     * Called periodically with a complete set of alarms as present in the database
     * at the given timestamp.
     *
     * This should be used to synchronize any state to ensure it matches what is currently
     * in the database.
     *
     * Note that it is possible that the *current* state of alarms is different from the state
     * at the time at which the snapshot was taken. For this reason, we include the timestamp
     * of the system before the transaction to enumerate the alarms was open. Implementations
     * should take this in consideration when performing any state synchronization.
     *
     * This method will be called while the related session & transaction that created
     * the alarm are still open.
     *
     * All of the listeners are invoked serially, so the implementors should avoid
     * blocking when possible.
     *
     * @param alarms canonical set of alarms in the database
     * @param systemMillisBeforeSnapshot time at which the set of alarms were read from the database
     */
    void handleAlarmSnapshot(List<OnmsAlarm> alarms, long systemMillisBeforeSnapshot);

