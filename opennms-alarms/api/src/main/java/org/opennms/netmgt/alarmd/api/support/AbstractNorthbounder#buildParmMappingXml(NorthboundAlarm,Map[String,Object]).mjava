    /**
     * Builds an XML representation of parameter mappings.
     * @param alarm the alarm
     * @param mapping the mapping
     */
    private void buildParmMappingXml(final NorthboundAlarm alarm,
            final Map<String, Object> mapping) {
        List<OnmsEventParameter> parms = alarm.getEventParametersCollection();
        EventParms eventParms = new EventParms(parms);
        try {
            JAXBElement<EventParms> rootElement = new JAXBElement<EventParms>(new QName("eventParms"), EventParms.class, eventParms);
            StringWriter sw = new StringWriter();
            Marshaller marshaller = ONMS_EVENT_PARM_CONTEXT.createMarshaller();
            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            marshaller.setProperty(Marshaller.JAXB_FRAGMENT, true);
            marshaller.marshal(rootElement, sw);
            LOG.debug("Adding eventParmsXML mapping with contents {}.", sw);
            mapping.put("eventParmsXml", sw);
        } catch (JAXBException e) {
            LOG.error("Error marshalling event params to XML for alarm ID: {}", alarm.getId(), e);
        }
    }

