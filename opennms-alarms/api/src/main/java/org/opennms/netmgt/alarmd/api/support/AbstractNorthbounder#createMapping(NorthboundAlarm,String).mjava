    /**
     * Creates the mapping.
     *
     * @param alarmMappings the alarm mappings
     * @param alarm the northbound alarm
     * @return the mapping object
     */
    protected Map<String, Object> createMapping(NorthboundAlarm alarm, String dateFormat) {
        Map<String, Object> mapping;
        mapping = new HashMap<String, Object>();
        String defaultMapping = "";
        mapping.put("ackUser", nullSafeToString(alarm.getAckUser(), defaultMapping));
        mapping.put("appDn", nullSafeToString(alarm.getAppDn(), defaultMapping));
        mapping.put("logMsg", nullSafeToString(alarm.getLogMsg(), defaultMapping));
        mapping.put("description", nullSafeToString(alarm.getDesc(), defaultMapping));
        mapping.put("objectInstance", nullSafeToString(alarm.getObjectInstance(), defaultMapping));
        mapping.put("objectType", nullSafeToString(alarm.getObjectType(), defaultMapping));
        mapping.put("ossKey", nullSafeToString(alarm.getOssKey(),defaultMapping));
        mapping.put("ossState", nullSafeToString(alarm.getOssState(), defaultMapping));
        mapping.put("ticketId", nullSafeToString(alarm.getTicketId(), defaultMapping));
        mapping.put("ticketState", nullSafeToString(alarm.getTicketState(), defaultMapping));
        mapping.put("alarmUei", nullSafeToString(alarm.getUei(), defaultMapping));
        mapping.put("alarmKey", nullSafeToString(alarm.getAlarmKey(), defaultMapping));
        mapping.put("clearKey", nullSafeToString(alarm.getClearKey(), defaultMapping));
        mapping.put("operInstruct", nullSafeToString(alarm.getOperInst(), defaultMapping));
        mapping.put("ackTime", nullSafeToString(alarm.getAckTime(), defaultMapping));

        AlarmType alarmType = alarm.getAlarmType() == null ? AlarmType.NOTIFICATION : alarm.getAlarmType();
        mapping.put("alarmType", alarmType.name());

        String count = alarm.getCount() == null ? "1" : alarm.getCount().toString();
        mapping.put("count", count);
        mapping.put("alarmId", alarm.getId().toString());
        mapping.put("ipAddr", nullSafeToString(alarm.getIpAddr(), defaultMapping));
        if (dateFormat != null) {
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(dateFormat);
            if (alarm.getFirstOccurrence() != null) {
                mapping.put("firstOccurrence", simpleDateFormat.format(alarm.getFirstOccurrence()));
            }
            if (alarm.getLastOccurrence() != null) {
                mapping.put("lastOccurrence", simpleDateFormat.format(alarm.getLastOccurrence()));
            }
        } else {
            mapping.put("firstOccurrence", nullSafeIso8601String(alarm.getFirstOccurrence(), defaultMapping));
            mapping.put("lastOccurrence", nullSafeIso8601String(alarm.getLastOccurrence(), defaultMapping));
        }

        if (alarm.getNodeId() != null) {
            LOG.debug("Adding nodeId: " + alarm.getNodeId().toString());
            mapping.put("nodeId", alarm.getNodeId().toString());
            mapping.put("nodeLabel", alarm.getNodeLabel() == null ? "?" : alarm.getNodeLabel());
            mapping.put("nodeSysObjectId", alarm.getNodeSysObjectId() == null ? "?" : alarm.getNodeSysObjectId());
            mapping.put("foreignSource", alarm.getForeignSource() == null ? "?" : alarm.getForeignSource());
            mapping.put("foreignId", alarm.getForeignId() == null ? "?" : alarm.getForeignId());
        } else {
            mapping.put("nodeId", "");
            mapping.put("nodeLabel", "");
            mapping.put("nodeSysObjectId", "");
            mapping.put("foreignSource", "");
            mapping.put("foreignId", "");
        }

        String poller = alarm.getPoller() == null ? DistPollerDao.DEFAULT_DIST_POLLER_ID : alarm.getPoller().getId();
        mapping.put("distPoller", poller);

        String service = alarm.getService() == null ? "" : alarm.getService();
        mapping.put("ifService", service);

        mapping.put("severity", nullSafeToString(alarm.getSeverity(), defaultMapping));
        mapping.put("ticketState", nullSafeToString(alarm.getTicketState(), defaultMapping));

        mapping.put("x733AlarmType", nullSafeToString(alarm.getX733Type(), defaultMapping));
        try {
            mapping.put("x733ProbableCause", nullSafeToString(x733ProbableCause.get(alarm.getX733Cause()), defaultMapping));
        } catch (Exception e) {
            LOG.info("Exception caught setting X733 Cause: {}", alarm.getX733Cause(), e);
            mapping.put("x733ProbableCause", nullSafeToString(x733ProbableCause.other, defaultMapping));
        }

        buildParmMappings(alarm, mapping);
        // Get all event parms serialized to XML
        buildParmMappingXml(alarm, mapping);
        return mapping;
    }

