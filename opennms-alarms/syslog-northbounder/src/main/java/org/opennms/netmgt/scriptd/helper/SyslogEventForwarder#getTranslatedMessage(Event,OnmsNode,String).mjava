    /**
     * Gets the translated message.
     *
     * @param event the event
     * @param node the node
     * @param msgFormat the message format
     * @return the translated message
     */
    private String getTranslatedMessage(Event event, OnmsNode node, String msgFormat) {
        StandardEvaluationContext context = new StandardEvaluationContext(event);
        if (node != null) {
            context.setVariable("node", node);
        }
        ExpressionParser parser = new SpelExpressionParser();
        Expression exp = parser.parseExpression(msgFormat, new TemplateParserContext());
        try {
            final String msg = (String) exp.getValue(context, String.class);
            LOG.debug("getTranslatedMessage: {} ==> {}", msgFormat, msg);
            return msg;
        } catch (Exception e) {
            LOG.warn("getTranslatedMessage: can't evaluate expression {} for alarm {} because: {}", msgFormat, event.getUei(), e.getMessage());
        }
        return null;
    }

