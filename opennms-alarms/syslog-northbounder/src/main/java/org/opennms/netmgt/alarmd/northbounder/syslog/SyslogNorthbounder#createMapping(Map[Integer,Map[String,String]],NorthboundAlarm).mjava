	private Map<String, String> createMapping(Map<Integer, Map<String, String>> alarmMappings, NorthboundAlarm alarm) {
		Map<String, String> mapping;
		mapping = new HashMap<String, String>();
		mapping.put("ackUser", alarm.getAckUser());
		mapping.put("appDn", alarm.getAppDn());
		mapping.put("logMsg", alarm.getLogMsg());
		mapping.put("objectInstance", alarm.getObjectInstance());
		mapping.put("objectType", alarm.getObjectType());
		mapping.put("ossKey", alarm.getOssKey());
		mapping.put("ossState", alarm.getOssState());
		mapping.put("ticketId", alarm.getTicketId());
		mapping.put("alarmUei", alarm.getUei());
		mapping.put("ackTime", nullSafeToString(alarm.getAckTime(), ""));
		
		AlarmType alarmType = alarm.getAlarmType() == null ? AlarmType.NOTIFICATION : alarm.getAlarmType();
		mapping.put("alarmType", alarmType.name());
		
		String count = alarm.getCount() == null ? "1" : alarm.getCount().toString();
		mapping.put("count", count);
		
		mapping.put("firstOccurrence", nullSafeToString(alarm.getFirstOccurrence(), ""));
		mapping.put("alarmId", alarm.getId().toString());
		mapping.put("ipAddr", nullSafeToString(alarm.getIpAddr(), ""));
		mapping.put("lastOccurrence", nullSafeToString(alarm.getLastOccurrence(), ""));
		
		
		if (alarm.getNodeId() != null) {
			mapping.put("nodeId", alarm.getNodeId().toString());

			//Implement this so we don't have load the entire node.
			//m_nodeDao.getLabelForId();
			
			Integer id = Integer.valueOf(777);
			String nodeLabel = m_nodeDao.getLabelForId(id);
			mapping.put("nodeLabel", nodeLabel);
		} else {
			mapping.put("nodeId", "");
			mapping.put("nodeLabel", "");
		}
		
		
		String poller = alarm.getPoller() == null ? "localhost" : alarm.getPoller().getName();
		mapping.put("distPoller", poller);
		
		String service = alarm.getService() == null ? "" : alarm.getService().getName();					
		mapping.put("ifService", service);
		
		mapping.put("severity", nullSafeToString(alarm.getSeverity(), ""));
		mapping.put("ticketState", nullSafeToString(alarm.getTicketState(), ""));
		
		mapping.put("x733AlarmType", alarm.getX733Type());
		
		try {
			mapping.put("x733ProbableCause", nullSafeToString(x733ProbableCause.get(alarm.getX733Cause()), ""));
		} catch (Exception e) {
			LogUtils.infof(this, e, "Exception caught setting X733 Cause: %d", alarm.getX733Cause());
			mapping.put("x733ProbableCause", "");
		}
		
		buildParmMappings(alarm, mapping);
		
		alarmMappings.put(alarm.getId(), mapping);
		return mapping;
	}

