    /**
     * Test configuration.
     *
     * @throws Exception the exception
     */
    @Test
    public void testConfiguration() throws Exception {
        // Perform a basic check, specially for the external mapping
        SnmpTrapNorthbounderConfig config = configDao.getConfig();
        Assert.assertNotNull(config);
        Assert.assertEquals(2, config.getSnmpTrapSinks().size());
        SnmpTrapSink sink1 = config.getSnmpTrapSink("localTest1");
        Assert.assertNotNull(sink1);
        Assert.assertEquals(1, sink1.getMappings().size());
        Assert.assertEquals(2, sink1.getMappings().get(0).getMappings().size());
        SnmpTrapSink sink2 = config.getSnmpTrapSink("localTest2");
        Assert.assertNotNull(sink2);
        Assert.assertEquals(4, sink2.getMappings().size());
        Assert.assertEquals(1, sink2.getMappings().get(0).getMappings().size());

        NorthboundAlarm alarm = createAlarm();

        // Verify Filters
        Assert.assertTrue(sink1.accepts(alarm));
        Assert.assertTrue(sink2.accepts(alarm));
        SnmpTrapConfig trapConfig1 = sink1.createTrapConfig(alarm);
        Assert.assertNotNull(trapConfig1);
        System.out.println(trapConfig1);
        Assert.assertEquals(2, trapConfig1.getParameters().size());
        Assert.assertEquals("99", trapConfig1.getParameterValue(".1.2.3.4.5.6.7.8.1"));
        Assert.assertEquals("this is just a test", trapConfig1.getParameterValue(".1.2.3.4.5.6.7.8.2"));

        SnmpTrapConfig trapConfig2 = sink2.createTrapConfig(alarm);
        Assert.assertNotNull(trapConfig2);
        System.out.println(trapConfig2);
        Assert.assertEquals(2, trapConfig2.getParameters().size());
        Assert.assertEquals("AAA11122", trapConfig2.getParameterValue(".1.3.6.1.4.1.5.6.7.8.1000.1.1"));
        Assert.assertEquals("everything is good", trapConfig2.getParameterValue(".1.3.6.1.4.1.5.6.7.8.1000.1.2"));
    }

