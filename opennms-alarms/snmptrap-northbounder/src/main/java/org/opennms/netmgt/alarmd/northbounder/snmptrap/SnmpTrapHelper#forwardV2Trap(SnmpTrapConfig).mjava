    /**
     * Create an SNMP V2 trap based on the content of the specified trap configuration, and send it to the appropriate destination.
     *
     * @param trapConfig The trap configuration mapping object
     * @throws SnmpTrapException if any.
     */
    private void forwardV2Trap(SnmpTrapConfig trapConfig) throws SnmpTrapException {
        SnmpTrapBuilder trap = SnmpUtils.getV2TrapBuilder();
        addVarBinding(trap, SNMP_SYSUPTIME_OID, EventConstants.TYPE_SNMP_TIMETICKS, Long.toString(System.currentTimeMillis()/1000));
        String oid;
        if (trapConfig.getGeneric() == ENTERPRISE_SPECIFIC) {
            oid = trapConfig.getEnterpriseId() + "." + trapConfig.getSpecific();
        } else {
            oid = SNMP_TRAPS + '.' + (trapConfig.getGeneric() + 1);
        }
        addVarBinding(trap, SNMP_TRAP_OID, EventConstants.TYPE_SNMP_OBJECT_IDENTIFIER, oid);
        int i = 0;
        for (Parm parm : trapConfig.getParameters()) {
            Value value = parm.getValue();
            try {
                addVarBinding(trap, parm.getParmName(), value.getType(), value.getEncoding(), value.getContent());
            } catch (SnmpTrapException e) {
                throw new SnmpTrapException(e.getMessage() + " in event parm[" + i + "]");
            }
            i++;
        }
        sendTrap(trapConfig, trap);
    }

