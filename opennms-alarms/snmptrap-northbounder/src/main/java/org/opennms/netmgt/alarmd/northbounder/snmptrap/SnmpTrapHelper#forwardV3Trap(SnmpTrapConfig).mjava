    /**
     * Create an SNMP V3 trap based on the content of the specified trap configuration, and send it to the appropriate destination.
     *
     * @param trapConfig The trap configuration mapping object
     * @throws SnmpTrapException if any.
     */
    private void forwardV3Trap(SnmpTrapConfig trapConfig) throws SnmpTrapException {
        SnmpV3TrapBuilder trap = SnmpUtils.getV3TrapBuilder();
        populateTrapBuilder(trap, trapConfig);
        try {
            SnmpAgentConfig config = trapConfig.getAgentConfig();
            LOG.debug("Sending SNMPv3 Trap using {}", config);
            trap.send(config.getAddress().getHostAddress(), config.getPort(), config.getSecurityLevel(), config.getSecurityName(), config.getAuthPassPhrase(), config.getAuthProtocol(), config.getPrivPassPhrase(), config.getPrivProtocol());
        } catch (Throwable e) {
            throw new SnmpTrapException("Failed to send trap "+e.getMessage(), e);
        }
    }

