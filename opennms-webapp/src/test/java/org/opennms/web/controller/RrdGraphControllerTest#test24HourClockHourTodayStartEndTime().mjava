	/**
	 * Test the specification of just an "hour", with "today" as the day, for
	 * both start and end, using the 24hour clock
	 */
	@Test
	public void test24HourClockHourTodayStartEndTime() {
		Calendar now = new GregorianCalendar();
		now.set(Calendar.HOUR_OF_DAY, 8); //8am
		now.set(Calendar.MINUTE, 0);
		now.set(Calendar.SECOND, 0);
		now.set(Calendar.MILLISECOND, 0);
		Date startDate = now.getTime();
		
		now.set(Calendar.HOUR_OF_DAY, 16); //4pm
		now.set(Calendar.MINUTE, 0);
		now.set(Calendar.SECOND, 0);
		now.set(Calendar.MILLISECOND, 0);
		Date endDate = now.getTime();
		
		m_request.addParameter("start", "08:00");
		m_request.addParameter("end", "16:00");
		
		long[] result = m_controller.parseTimes(m_request);
		long start = result[0];
		long end = result[1];

		assertEquals(startDate.getTime(), start);
		assertEquals(endDate.getTime(), end);

	}

