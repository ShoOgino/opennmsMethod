    @Test
    @Transactional
    public void testCreateAggregateStatusUsingBuilding() {
        m_databasePopulator.populateDatabase();

        createOutageForNodeInCategory("Routers");
        createOutageForNodeInCategory("Servers");

        List<AggregateStatus> aggrStati;
        Collection<AggregateStatusDefinition> defs = new ArrayList<AggregateStatusDefinition>();

        AggregateStatusDefinition definition;
        definition = new AggregateStatusDefinition("Routers", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ new OnmsCategory("Routers") })));
        defs.add(definition);        
        definition = new AggregateStatusDefinition("Switches", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ new OnmsCategory("Switches") })));
        defs.add(definition);
        definition = new AggregateStatusDefinition("Servers", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ new OnmsCategory("Servers") })));
        defs.add(definition);

        //        AggregateStatusDefinition definition;
        //        definition = new AggregateStatusDefinition("LB/Router", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ new OnmsCategory("DEV_ROUTER"), new OnmsCategory("DEV_LOADBAL") })));
        //        defs.add(definition);        
        //        definition = new AggregateStatusDefinition("Access Controller", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ new OnmsCategory("DEV_AC") })));
        //        defs.add(definition);
        //        definition = new AggregateStatusDefinition("Switches", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ new OnmsCategory("DEV_SWITCH") })));
        //        defs.add(definition);
        //        definition = new AggregateStatusDefinition("Access Points", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ new OnmsCategory("DEV_AP") })));
        //        defs.add(definition);
        //        definition = new AggregateStatusDefinition("BCPC", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ new OnmsCategory("DEV_BCPC") })));
        //        defs.add(definition);

        AggregateStatusView view = new AggregateStatusView();
        view.setName("building");
        view.setColumnName("building");
        view.setColumnValue("HQ");
        view.setStatusDefinitions(new LinkedHashSet<AggregateStatusDefinition>(defs));

        aggrStati = new ArrayList<AggregateStatus>(m_aggregateService.createAggregateStatuses(view));

        AggregateStatus status;
        status = aggrStati.get(0);
        assertEquals(status.getStatus(), AggregateStatus.NODES_ARE_DOWN);

        status = aggrStati.get(1);
        assertEquals(status.getStatus(), AggregateStatus.ALL_NODES_UP);

        status = aggrStati.get(2);
        assertEquals(status.getStatus(), AggregateStatus.NODES_ARE_DOWN);

        //        status = aggrStati.get(3);
        //        assertEquals(status.getStatus(), AggregateStatus.NODES_ARE_DOWN);
        //        assertEquals(new Integer(6), status.getDownEntityCount());
        //        
        //        status = aggrStati.get(4);
        //        assertEquals(status.getStatus(), AggregateStatus.ALL_NODES_UP);

    }

