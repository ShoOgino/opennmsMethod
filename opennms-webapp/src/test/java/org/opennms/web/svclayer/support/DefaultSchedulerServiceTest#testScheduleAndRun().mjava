    @Test
    public void testScheduleAndRun() throws SchedulerException, InterruptedException {
        expect(m_reportService.validate(m_criteria.getReportParms(), REPORT_ID)).andReturn(true);
        m_reportService.run(m_criteria.getReportParms(), m_deliveryOptions, REPORT_ID);
        replay(m_reportService);
        expect(m_reportConfigDao.getReportService(REPORT_ID)).andReturn(REPORT_SERVICE);
        replay(m_reportConfigDao);
        MockRequestContext context = new MockRequestContext();
        assertEquals("success", m_schedulerService.addCronTrigger(REPORT_ID, m_criteria, m_deliveryOptions, "validTrigger", CRON_EXPRESSION, context));
        // give the trigger a chance to fire (one minute)
        Thread.sleep(61000);
        m_schedulerService.removeTrigger("validTrigger");
        verify(m_reportService);
        verify(m_reportConfigDao);
        m_schedulerService.removeTrigger("validTrigger");
        assertEquals(0,m_scheduler.getTriggerNames(TRIGGER_GROUP).length);  
    }

