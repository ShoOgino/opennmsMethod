    public void runTestCreateStatus() {
        expectEverything();
        
        expect(m_categoryDao.findByNode(m_node)).andReturn(null).times(m_application1.getMemberServices().size());
        
        replayEverything();
        SimpleWebTable table =
            m_service.createStatusTable(m_locationDefinition1.getName(),
                                        m_application1.getLabel());
        
        verifyEverything();
        
        System.out.print(table.toString());
        
        SimpleWebTable expectedTable = new SimpleWebTable();
        expectedTable.setTitle("Distributed poller view for Application 1 from Raleigh location");
        
        expectedTable.addColumn("Category", "simpleWebTableHeader");
        expectedTable.addColumn("Node", "simpleWebTableHeader");
        expectedTable.addColumn("Service", "simpleWebTableHeader");
        expectedTable.addColumn("Status", "simpleWebTableHeader");
        expectedTable.addColumn("Response Time", "simpleWebTableHeader");
        
        expectedTable.newRow();
        expectedTable.addCell("", "simpleWebTableRowLabel");
        expectedTable.addCell("Node 1", "simpleWebTableRowLabel");
        expectedTable.addCell("HTTP", "simpleWebTableRowLabel");
        expectedTable.addCell("Up", "simpleWebTableRowLabel");
        expectedTable.addCell("", "simpleWebTableRowLabel");
        expectedTable.newRow();
        
        expectedTable.addCell("", "simpleWebTableRowLabel");
        expectedTable.addCell("Node 1", "simpleWebTableRowLabel");
        expectedTable.addCell("HTTPS", "simpleWebTableRowLabel");
        expectedTable.addCell("Unknown", "simpleWebTableRowLabel");
        expectedTable.addCell("", "simpleWebTableRowLabel");
        
        assertTableEquals(expectedTable, table);
    }

