    public void runTestCreateStatus() {
        expectEverything();
        
        expect(m_monitoredServiceDao.findByApplication(m_application1)).andReturn(m_applicationServices1);
        
        replayEverything();
        SimpleWebTable table =
            m_service.createStatusTable(m_locationDefinition1.getName(),
                                        m_application1.getName());
        
        verifyEverything();
        
        SimpleWebTable expectedTable = new SimpleWebTable();
        expectedTable.setTitle("Distributed poller view for Application 1 from Raleigh location");
        
        expectedTable.addColumn("Node", "simpleWebTableHeader");
        expectedTable.addColumn("Monitor", "simpleWebTableHeader");
        expectedTable.addColumn("Service", "simpleWebTableHeader");
        expectedTable.addColumn("Status", "simpleWebTableHeader");
        expectedTable.addColumn("Response", "simpleWebTableHeader");
        
        expectedTable.newRow();
        expectedTable.addCell("Node 1", "Normal", "element/node.jsp?node=1");
        expectedTable.addCell("Raleigh-1", "");
        expectedTable.addCell("HTTP", "", "element/service.jsp?ifserviceid=null");
        expectedTable.addCell("Up", "bright");
        expectedTable.addCell("", "");
        expectedTable.newRow();
        
        expectedTable.addCell("Node 1", "Critical", "element/node.jsp?node=1");
        expectedTable.addCell("Raleigh-1", "");
        expectedTable.addCell("HTTPS", "", "element/service.jsp?ifserviceid=null");
        expectedTable.addCell("Unknown", "bright");
        expectedTable.addCell("No status recorded for this service from this location", "");
        
        assertTableEquals(expectedTable, table);
    }

