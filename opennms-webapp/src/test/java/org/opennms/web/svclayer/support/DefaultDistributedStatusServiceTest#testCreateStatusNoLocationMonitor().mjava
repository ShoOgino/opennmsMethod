    public void testCreateStatusNoLocationMonitor() {
        DistributedStatusDetailsCommand command = new DistributedStatusDetailsCommand();
        Errors errors = new BindException(command, "command");

        command.setLocation(m_locationDefinition3.getLocationName());
        command.setApplication(m_application2.getName());

        expect(m_applicationDao.findByName("Application 2")).andReturn(m_application2);
        expect(m_locationMonitorDao.findMonitoringLocationDefinition(m_locationDefinition3.getLocationName())).andReturn(m_locationDefinition3);
        expect(m_locationMonitorDao.findByLocationDefinition(m_locationDefinition3)).andReturn(new HashSet<OnmsLocationMonitor>());

        m_easyMockUtils.replayAll();
        SimpleWebTable table = m_service.createStatusTable(command, errors);

        Errors errorsOut = table.getErrors();
        assertEquals("Number of errors", 1, errorsOut.getErrorCount());
        assertEquals("Number of global errors", 1, errorsOut.getGlobalErrorCount());
        assertEquals("Number of field errors", 0, errorsOut.getFieldErrorCount());
        ObjectError e = (ObjectError) errorsOut.getGlobalErrors().get(0);
        assertEquals("Error code 0", "location.no-monitors", e.getCode());
        assertEquals("Error 0 argument count", 2, e.getArguments().length);
        assertEquals("Error argument 0.0", "Application 2", e.getArguments()[0]);
        assertEquals("Error argument 0.0", "Columbus", e.getArguments()[1]);

        m_easyMockUtils.verifyAll();
    }

