    public void FIXMEtestCreateAggregateStatusUsingNodeId() {
        Collection<AggregateStatus> aggrStati;
        Collection<AggregateStatusDefinition> defs = new HashSet<AggregateStatusDefinition>();
        
        OnmsCategory catRouters = new OnmsCategory("routers");
        OnmsCategory catSwitches = new OnmsCategory("switches");
        
        AggregateStatusDefinition definition = 
            new AggregateStatusDefinition("Routers/Switches", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ catRouters, catSwitches })));
        defs.add(definition);
        
        OnmsCategory catServers = new OnmsCategory("servers");
        
        definition = 
            new AggregateStatusDefinition("Servers", new HashSet<OnmsCategory>(Arrays.asList(new OnmsCategory[]{ catServers })));
        defs.add(definition);
        
        DefaultSiteStatusViewService aggregateSvc = new DefaultSiteStatusViewService();
        aggregateSvc.setNodeDao(m_nodeDao);
        aggregateSvc.setCategoryDao(m_categoryDao);
        aggregateSvc.setSiteStatusViewConfigDao(m_siteStatusViewConfigDao);
        
        OnmsNode node = new OnmsNode();
        node.setId(1);
        node.getAssetRecord().setBuilding("HQ");
        Collection<OnmsNode> nodes = new ArrayList<OnmsNode>();
        nodes.add(node);
        
        for (AggregateStatusDefinition def : defs) {
            expect(m_nodeDao.findAllByVarCharAssetColumnCategoryList("building", "HQ", def.getCategories())).andReturn(nodes);
        }
        for (OnmsNode n : nodes) {
            expect(m_nodeDao.load(n.getId())).andReturn(n);
        }
        replay(m_nodeDao);
        
        expect(m_categoryDao.findByName("switches")).andReturn(catSwitches);
        expect(m_categoryDao.findByName("routers")).andReturn(catRouters);
        expect(m_categoryDao.findByName("servers")).andReturn(catServers);
        replay(m_categoryDao);
        
        Rows rows = new Rows();
        RowDef rowDef = new RowDef();
        Category category = new Category();
        category.setName("servers");
        rowDef.addCategory(category);
        rows.addRowDef(rowDef);
        
        rows = new Rows();
        rowDef = new RowDef();
        category = new Category();
        category.setName("switches");
        rowDef.addCategory(category);
        category = new Category();
        category.setName("routers");
        rowDef.addCategory(category);
        rows.addRowDef(rowDef);

        View view = new View();
        view.setRows(rows);
        expect(m_siteStatusViewConfigDao.getView("building")).andReturn(view);
        replay(m_siteStatusViewConfigDao);
        
        aggrStati = aggregateSvc.createAggregateStatusesUsingNodeId(node.getId(), "building");
        
        verify(m_nodeDao);
        verify(m_categoryDao);
        verify(m_siteStatusViewConfigDao);
        
        assertNotNull(aggrStati);
    }

