    public void testFindLocationSpecificStatusInvalidLocation() {
        DistributedStatusDetailsCommand command = new DistributedStatusDetailsCommand();
        Errors errors = new BindException(command, "command");
        
        command.setLocation("invalid location");
        command.setApplication(m_application1.getName());
        
        expect(m_monitoringLocationDao.get(command.getLocation())).andReturn(null);

        ThrowableAnticipator ta = new ThrowableAnticipator();
        ta.anticipate(new IllegalArgumentException("Could not find location for location name \"" + command.getLocation() + "\""));
        
        m_easyMockUtils.replayAll();
        try {
            m_service.findLocationSpecificStatus(command, errors);
        } catch (Throwable t) {
            ta.throwableReceived(t);
        }
        m_easyMockUtils.verifyAll();
        ta.verifyAnticipated();
    }

