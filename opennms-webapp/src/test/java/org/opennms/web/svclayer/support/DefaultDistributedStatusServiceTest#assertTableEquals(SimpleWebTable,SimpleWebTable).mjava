    public void assertTableEquals(SimpleWebTable expectedTable, SimpleWebTable table) {
        assertEquals("table title", expectedTable.getTitle(), table.getTitle());
        
        assertEquals("number of table columns headers", expectedTable.getColumnHeaders().size(), table.getColumnHeaders().size());
        ListIterator<Cell> columnHeaderIterator = expectedTable.getColumnHeaders().listIterator();
        for (Cell tableColumnHeader : table.getColumnHeaders()) {
            assertEquals("column header " + (columnHeaderIterator.nextIndex() + 1), columnHeaderIterator.next(), tableColumnHeader);
        }
        
        assertEquals("number of rows", expectedTable.getRows().size(), table.getRows().size());
        
        ListIterator<List<Cell>> expectedRowIterator = expectedTable.getRows().listIterator();
        for (List<Cell> row : table.getRows()) {
            List<Cell> expectedRow = expectedRowIterator.next();

            assertEquals("row " + (expectedRowIterator.previousIndex() + 1) + " column count", expectedRow.size(), row.size());

            ListIterator<Cell> expectedColumnIterator = expectedRow.listIterator();
            for (Cell column : row) {
                Cell expectedColumn = expectedColumnIterator.next();
                
                String rowColumn = "row "
                    + (expectedRowIterator.previousIndex() + 1) + " column "
                    + (expectedColumnIterator.previousIndex() + 1) + " "; 
                
                if (!IGNORE_MATCH.equals(expectedColumn.getContent())) {
                    assertEquals(rowColumn + "content",
                                 expectedColumn.getContent(),
                                 column.getContent());
                }
                if (!IGNORE_MATCH.equals(expectedColumn.getStyleClass())) {
                    assertEquals(rowColumn + "styleClass",
                                 expectedColumn.getStyleClass(),
                                   column.getStyleClass());
                }
                if (!IGNORE_MATCH.equals(expectedColumn.getLink())) {
                    assertEquals(rowColumn + "link",
                                 expectedColumn.getLink(),
                                 column.getLink());
                }
            }
        }
    }

