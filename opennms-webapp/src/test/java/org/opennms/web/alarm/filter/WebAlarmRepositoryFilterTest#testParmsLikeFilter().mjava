    @Test
    @Transactional
    public void testParmsLikeFilter() {
        List<OnmsEvent> events = m_dbPopulator.getEventDao().findAll();
        assertNotNull(events);
        OnmsEvent event = events.get(0);
        
        List<OnmsDistPoller> pollers = m_dbPopulator.getDistPollerDao().findAll();
        assertNotNull(pollers);
        OnmsDistPoller poller = pollers.get(0);
        
        OnmsAlarm alarm = new OnmsAlarm();
        alarm.setUei("uei.opennms.org/vendor/Juniper/traps/jnxVpnIfUp");
        alarm.setLastEvent(event);
        alarm.setSeverityId(3);
        alarm.setDistPoller(poller);
        alarm.setCounter(100);
        alarm.setEventParms("url=http://localhost:8980/opennms/rtc/post/Network+Interfaces(string,text);user=rtc(string,text);passwd=rtc(string,text);catlabel=Network Interfaces(string,text)");
        
        AlarmDao alarmDao = m_dbPopulator.getAlarmDao();
        alarmDao.save(alarm);
        alarmDao.flush();
        
        AlarmCriteria criteria = new AlarmCriteria(new EventParmFilterLike("user=rtc"));
        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);
        assertEquals(1, alarms.length);
    }

