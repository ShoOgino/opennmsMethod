    @Test
    public void testGetAvailability() {
        
        assertFalse("Don't use existing database", USE_EXISTING);
        
        TransactionTemplate txTemplate = getBean("transactionTemplate", TransactionTemplate.class);
        txTemplate.execute(new TransactionCallbackWithoutResult() {
            
            @Override
            protected void doInTransactionWithoutResult(TransactionStatus status) {
                long startMillis = System.currentTimeMillis() - 12000;
                long totalTime = new Date().getTime() - startMillis;
                TimeChunker timeChunker = new TimeChunker((int)totalTime, new Date(System.currentTimeMillis() - 12000), new Date());
                final TimeChunk timeChunk = timeChunker.getNextSegment();
                Collection<OnmsLocationSpecificStatus> allStatusChanges = m_locationMonitorDao.getStatusChangesForApplicationBetween(new Date(startMillis), new Date(), "IPv6");
                
                final AvailCalculator calc = new AvailCalculator(timeChunker);
                
                for(OnmsLocationSpecificStatus statusChange : allStatusChanges) {
                    calc.onStatusChange(statusChange);
                }
                
                Collection<OnmsMonitoredService> svcs = m_monServiceDao.findByApplication(m_applicationDao.findByName("IPv6"));
                double avail = calc.getAvailabilityFor(svcs, 0);
                assertEquals(0.8333, avail, 0.03);
            }
        });
        
    }

