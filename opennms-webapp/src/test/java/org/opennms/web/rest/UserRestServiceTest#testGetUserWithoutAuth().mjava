    @Test
    public void testGetUserWithoutAuth() throws Exception {
        createUser("foo");
        createUser("bar");

        setUser("foo", new String[] { "ROLE_USER" });

        String xml = sendRequest(GET, "/users", 200);
        assertTrue(xml.contains("foo"));
        assertTrue(xml.contains("bar"));
        OnmsUserList users = JaxbUtils.unmarshal(OnmsUserList.class, xml);
        assertEquals(3, users.size());
        assertEquals("xxxxxxxx", users.get(0).getPassword());
        assertEquals("xxxxxxxx", users.get(1).getPassword());
        assertEquals(PASSWORD, users.get(2).getPassword());

        setUser("bar", new String[] { "ROLE_USER" });
        xml = sendRequest(GET, "/users", 200);
        assertTrue(xml.contains("foo"));
        assertTrue(xml.contains("bar"));
        users = JaxbUtils.unmarshal(OnmsUserList.class, xml);
        assertEquals(3, users.size());
        assertEquals("xxxxxxxx", users.get(0).getPassword());
        assertEquals(PASSWORD, users.get(1).getPassword());
        assertEquals("xxxxxxxx", users.get(2).getPassword());

        clearUserInfo();
        setUser("admin", new String[] { "ROLE_ADMIN" });
        xml = sendRequest(GET, "/users", 200);
        assertTrue(xml.contains("foo"));
        assertTrue(xml.contains("bar"));
        users = JaxbUtils.unmarshal(OnmsUserList.class, xml);
        assertEquals(3, users.size());
        assertEquals(PASSWORD, users.get(0).getPassword());
        assertEquals(PASSWORD, users.get(1).getPassword());
        assertEquals(PASSWORD, users.get(2).getPassword());
    }

