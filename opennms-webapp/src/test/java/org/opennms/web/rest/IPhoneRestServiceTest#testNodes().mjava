	@Test
	public void testNodes() throws Exception {
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("comparator", "ilike");
		parameters.put("match", "any");
		parameters.put("label", "1%");
		parameters.put("ipInterface.ipAddress", "1%");
		parameters.put("ipInterface.ipHostName", "1%");
		String xml = sendRequest(GET, "/nodes", parameters, 200);
		assertTrue(xml.contains("<node id=\"1\""));
		assertTrue(xml.contains("label=\"node1\""));

		parameters.clear();
		parameters.put("comparator", "ilike");
		parameters.put("match", "any");
		parameters.put("label", "8%");
		parameters.put("ipInterface.ipAddress", "8%");
		parameters.put("ipInterface.ipHostName", "8%");
		xml = sendRequest(GET, "/nodes", parameters, 200);
		assertTrue(xml.contains("totalCount=\"0\""));
		
		parameters.clear();
		parameters.put("limit", "50");
		parameters.put("orderBy", "ifLostService");
		parameters.put("order", "desc");
		xml = sendRequest(GET, "/outages/forNode/1", parameters, 200);
		assertTrue(xml.contains("SNMP"));

		parameters.clear();
		parameters.put("orderBy", new String[] {"ipHostName", "ipAddress"});
		xml = sendRequest(GET, "/nodes/1/ipinterfaces", parameters, 200);
		assertTrue(xml.contains("192.168.1.1"));
		
		parameters.clear();
		parameters.put("orderBy", new String[] {"ifName", "ipAddress", "ifDesc"});
		xml = sendRequest(GET, "/nodes/1/snmpinterfaces", parameters, 200);
		assertTrue(xml.contains("192.168.1.1"));
		
		parameters.clear();
		parameters.put("limit", "50");
		parameters.put("node.id", "1");
		xml = sendRequest(GET, "/events", parameters, 200);
		assertTrue(xml.contains("totalCount=\"0\""));
	}

