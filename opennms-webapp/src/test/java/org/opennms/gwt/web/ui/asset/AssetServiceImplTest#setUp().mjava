	@Before
	public void setUp() {
		m_databasePopulator.populateDatabase();
		this.m_context = new SecurityContextImpl();
		
		this.validAdmin = new User(USERNAME, PASS, true, true, true, true,
				new GrantedAuthority[] { ROLE_ADMIN });
		this.invalidAdmin = new User(USERNAME, PASS, true, true, true, true,
				new GrantedAuthority[] { ROLE_ADMIN });
		
		this.validProvision = new User(USERNAME, PASS, true, true, true, true,
				new GrantedAuthority[] { ROLE_PROVISION });
		this.invalidProvision = new User(USERNAME, PASS, true, true, true, true,
				new GrantedAuthority[] { ROLE_PROVISION });
		
		this.validUser = new User(USERNAME, PASS, true, true, true, true,
				new GrantedAuthority[] { ROLE_USER });
		this.invalidUser = new User(USERNAME, PASS, true, true, true, true,
				new GrantedAuthority[] { ROLE_USER });

		this.validPower = new User(USERNAME, PASS, true, true, true, true,
				new GrantedAuthority[] { ROLE_ADMIN, ROLE_PROVISION });
		this.invalidPower = new User(USERNAME, PASS, true, true, true, true,
				new GrantedAuthority[] { ROLE_USER, ROLE_PROVISION });

		this.m_auth = new PreAuthenticatedAuthenticationToken(
				this.validAdmin, new Object());
		this.m_context.setAuthentication(this.m_auth);
		SecurityContextHolder.setContext(this.m_context);
		this.m_securityContextService = new SpringSecurityContextService();
	}

