    @Override
    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        List<Integer> nodeList = getList(request.getParameterValues("nodeCheck"));
        List<Integer> nodeDataList = getList(request.getParameterValues("nodeData"));

        for (Integer nodeId : nodeDataList) {
            // Get a list of response time IP address lists
            List<String> ipAddrs = getIpAddrsForNode(nodeId);

            // SNMP RRD directory
            File nodeDir = new File(m_snmpRrdDirectory, nodeId.toString());

            if (nodeDir.exists() && nodeDir.isDirectory()) {
                log().debug("Attempting to delete node data directory: " + nodeDir.getAbsolutePath());
                if (deleteDir(nodeDir)) {
                    log().info("Node SNMP data directory deleted successfully: " + nodeDir.getAbsolutePath());
                } else {
                    log().warn("Node SNMP data directory *not* deleted successfully: " + nodeDir.getAbsolutePath());
                }
            }
            
            // Response time RRD directories
            for (String ipAddr : ipAddrs) {
                File intfDir = new File(m_rtRrdDirectory, ipAddr);

                if (intfDir.exists() && intfDir.isDirectory()) {
                    log().debug("Attempting to delete node response time data directory: " + intfDir.getAbsolutePath());
                    if (deleteDir(intfDir)) {
                        log().info("Node response time data directory deleted successfully: " + intfDir.getAbsolutePath());
                    } else {
                        log().warn("Node response time data directory *not* deleted successfully: " + intfDir.getAbsolutePath());
                    }
                }
            }
        }

        // Now, tell capsd to delete the node from the database
        for (Integer nodeId : nodeList) {
            sendDeleteNodeEvent(nodeId);
            log().debug("End of delete of node " + nodeId);
        }

        // forward the request for proper display
        RequestDispatcher dispatcher = getServletContext().getRequestDispatcher("/admin/deleteNodesFinish.jsp");
        dispatcher.forward(request, response);
    }

