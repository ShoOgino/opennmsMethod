    /** {@inheritDoc} */
    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String user_id = request.getRemoteUser();
        errorflag = false;
        reloadFiles();
        String query = request.getQueryString();
        if (query != null) {
            String check1 = request.getParameter("check1");
            String name1 = request.getParameter("name1");
            String protoArray1 = request.getParameter("protArray1");
            String port1 = request.getParameter("port1");

            java.util.List<String> checkedList = new ArrayList<String>();
            if (name1 != null && !name1.equals("")) {
                addPollerInfo(check1, name1, port1, user_id, protoArray1, response);
                if (errorflag)
                    return;
                checkedList.add(name1);
                addCapsdInfo(name1, port1, user_id, protoArray1, response);
                if (!errorflag) {
                    props.setProperty("service." + name1 + ".protocol", protoArray1);
                } else
                    return;
                LogUtils.debugf(this, "Add Capsd Info 1");
            }

            LogUtils.debugf(this, "b4 writing to files");
            props.store(new FileOutputStream(ConfigFileConstants.getFile(ConfigFileConstants.POLLER_CONF_FILE_NAME)), null);
            Writer poller_fileWriter = new OutputStreamWriter(new FileOutputStream(ConfigFileConstants.getFile(ConfigFileConstants.POLLER_CONFIG_FILE_NAME)), "UTF-8");
            Writer capsd_fileWriter = new OutputStreamWriter(new FileOutputStream(ConfigFileConstants.getFile(ConfigFileConstants.CAPSD_CONFIG_FILE_NAME)), "UTF-8");
            try {
                Marshaller.marshal(pollerConfig, poller_fileWriter);
                Marshaller.marshal(capsdConfig, capsd_fileWriter);
                LogUtils.debugf(this, "writing to files");
            } catch (MarshalException e) {
                LogUtils.errorf(this, e, "failed to marshall config files");
                throw new ServletException(e);
            } catch (ValidationException e) {
                LogUtils.warnf(this, e, "failed to validate XML");
                throw new ServletException(e);
            }
        }

        if (!errorflag)
            response.sendRedirect(this.redirectSuccess);
    }

