    /**
     * <p>addCapsdInfo</p>
     *
     * @param name a {@link java.lang.String} object.
     * @param port a {@link java.lang.String} object.
     * @param user a {@link java.lang.String} object.
     * @param protocol a {@link java.lang.String} object.
     * @param response a {@link javax.servlet.http.HttpServletResponse} object.
     * @throws javax.servlet.ServletException if any.
     * @throws java.io.IOException if any.
     */
    public void addCapsdInfo(String name, String port, String user, String protocol, HttpServletResponse response) throws ServletException, IOException {
        // Check to see if the name is duplicate of the already specified names
        // first.
        log().debug("Adding " + name + "to capsd");
        for (ProtocolPlugin svc : capsdConfig.getProtocolPluginCollection()) {
            if (svc.getProtocol().equals(name)) {
                // delete from the poller configuration.
                List<Service> tmpPollers = pkg.getServiceCollection();
                Iterator<Service> polleriter = tmpPollers.iterator();
                boolean removePoller = false;
                Service pollersvc = null;
                while (polleriter.hasNext()) {
                    pollersvc = polleriter.next();
                    if (pollersvc.getName().equals(name)) {
                        removePoller = true;
                        break;
                    }
                }
                if (removePoller) {
                    List<Service> tmpPoller = pkg.getServiceCollection();
                    if (tmpPoller.contains(pollersvc) && pollersvc.getName().equals(name)) {
                        errorflag = true;
                        log().debug("Removed from poller-config");
                        tmpPoller.remove(pollersvc);
                        response.sendRedirect("error.jsp?error=1&name=" + name);
                        return;
                    }
                }
                break;
                // throw new ServletException ("ProtocolPlugin name " + name + "
                // is already defined.. Try assigning another unique name");
            }
        }
        log().debug(name + "doesnt already exist in capsd ");
        ProtocolPlugin pluginAdd = new ProtocolPlugin();
        pluginAdd.setProtocol(name);
        String className = (String) props.get("service." + protocol + ".capsd-class");
        if (className != null) {
            pluginAdd.setClassName(className);
            pluginAdd.setScan("on");
            pluginAdd.setUserDefined("true");
            org.opennms.netmgt.config.capsd.Property newprop = new org.opennms.netmgt.config.capsd.Property();
            String banner = "*";
            if (props.get("banner") != null)
                banner = (String) props.get("banner");
            newprop.setValue(banner);
            newprop.setKey("banner");
            pluginAdd.addProperty(newprop);

            newprop = new org.opennms.netmgt.config.capsd.Property();
            if (port != null && !port.equals("")) {
                newprop.setValue(port);
                if (port.indexOf(":") == -1)
                    newprop.setKey("port");
                else
                    newprop.setKey("ports");
                pluginAdd.addProperty(newprop);
            } else {
                log().debug("Port from props " + props.get("port"));
                if (props.get("service." + protocol + ".port") == null || ((String) props.get("service." + protocol + ".port")).equals("")) {
                    errorflag = true;
                    response.sendRedirect("error.jsp?error=0&name=" + "service." + protocol + ".port ");
                    return;
                    // throw new ServletException("property " + "service." +
                    // protocol + ".port " + "is missing in " +
                    // Vault.getHomeDir() +
                    // ConfigFileConstants.CAPSD_CONFIG_FILE_NAME );
                } else {
                    port = (String) props.get("service." + protocol + ".port");
                    newprop.setValue(port);
                    if (port.indexOf(":") == -1)
                        newprop.setKey("port");
                    else
                        newprop.setKey("ports");
                    pluginAdd.addProperty(newprop);
                }
            }
            log().debug("Executing this section");
            newprop = new org.opennms.netmgt.config.capsd.Property();
            String timeout = "3000";
            if (props.get("timeout") != null)
                timeout = (String) props.get("timeout");
            newprop.setValue(timeout);
            newprop.setKey("timeout");
            pluginAdd.addProperty(newprop);

            newprop = new org.opennms.netmgt.config.capsd.Property();
            String retry = "3";
            if (props.get("retry") != null)
                retry = (String) props.get("retry");
            newprop.setValue(retry);
            newprop.setKey("retry");
            pluginAdd.addProperty(newprop);
            capsdProtocols.put(name, pluginAdd);
            pluginColl = capsdProtocols.values();
            capsdColl.add(pluginAdd);
            capsdConfig.addProtocolPlugin(pluginAdd);
        } else {
            errorflag = true;
            response.sendRedirect("error.jsp?error=0&name=" + "service." + protocol + ".capsd-class ");
            return;
        }
    }

