    /** {@inheritDoc} */
    @Override
    public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws ServletException, IOException {
        final String sourcePage = request.getParameter("sourcePage");
        final HttpSession user = request.getSession(true);

        /*
         * FIXME: Why do we do this for every request in doPost instead of
         * once in init?
         */
        try {
            NotifdConfigFactory.init();
        } catch (final Throwable t) {
            throw new ServletException("Failed to initialize NotifdConfigFactory: " + t.getMessage(), t);
        }
        try {
            NotificationFactory.init();
        } catch (final Throwable t) {
            throw new ServletException("Failed to initialize NotificationFactory: " + t.getMessage(), t);
        }

        if (SOURCE_PAGE_NOTICES.equals(sourcePage)) {
            response.sendRedirect(processNotices(request, user));
        } else if (SOURCE_PAGE_UEIS.equals(sourcePage)) {
            response.sendRedirect(processUeis(request, user));
        } else if (SOURCE_PAGE_RULE.equals(sourcePage)) {
            response.sendRedirect(processRule(request, user));
        } else if (SOURCE_PAGE_VALIDATE.equals(sourcePage)) {
            response.sendRedirect(processValidate(request, user));
        } else if (SOURCE_PAGE_PATH.equals(sourcePage)) {
            response.sendRedirect(processPath(request, user));
        } else if (SOURCE_PAGE_PATH_OUTAGE.equals(sourcePage)) {
            response.sendRedirect(processPathOutage(request));
        } else if (SOURCE_PAGE_VALIDATE_PATH_OUTAGE.equals(sourcePage)) {
            response.sendRedirect(processValidatePathOutage(request));
        } else if (SOURCE_PAGE_OTHER_WEBUI.equals(sourcePage)) {
            response.sendRedirect(processOtherWebUi(request, user));
        } else if (SOURCE_PAGE_NOTIFS_FOR_UEI.equals(sourcePage)) {
            response.sendRedirect(processNotificationsForUei(request, user));
        } else {
            throw new ServletException("no redirect specified for this wizard!");
        }
    }

