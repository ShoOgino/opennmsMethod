	/**
	 * Creates an {@link SnmpInfo} object from the given request.
	 * @param request The http request.
	 * @return The object parsed from the http request.
	 */
	private SnmpInfo createFromRequest(HttpServletRequest request) {
		SnmpInfo snmpInfo = new SnmpInfo();

		// general parameters
		String version = request.getParameter("version");
		String timeout = request.getParameter("timeout");
		String retryCount = request.getParameter("retryCount");
		String port = request.getParameter("port");
		String maxRequestSize = request.getParameter("maxRequestSize");
		String maxVarsPerPdu = request.getParameter("maxVarsPerPdu");
		String maxRepetitions = request.getParameter("maxRepetitions");
		String proxyHost = request.getParameter("proxyHost");
		
		// v1/v2c specifics
		String readCommunityString = request.getParameter("readCommunityString");
		String writeCommunityString = request.getParameter("writeCommunityString");

		// v3 specifics
		String securityName = request.getParameter("securityName");
		String securityLevel = request.getParameter("securityLevel");
		String authPassPhrase = request.getParameter("authPassPhrase");
		String authProtocol = request.getParameter("authProtocol");
		String privPassPhrase = request.getParameter("privPassPhrase");
		String privProtocol = request.getParameter("privProtocol");
		String engineId = request.getParameter("engineId");
		String contextEngineId = request.getParameter("contextEngineId");
		String contextName = request.getParameter("contextName");
		String enterpriseId = request.getParameter("enterpriseId");

		// save in snmpInfo
		if (!Strings.isNullOrEmpty(authPassPhrase)) snmpInfo.setAuthPassPhrase(authPassPhrase);
		if (!Strings.isNullOrEmpty(authProtocol)) snmpInfo.setAuthProtocol(authProtocol);
		if (!Strings.isNullOrEmpty(contextEngineId)) snmpInfo.setContextEngineId(contextEngineId);
		if (!Strings.isNullOrEmpty(contextName)) snmpInfo.setContextName(contextName);
		if (!Strings.isNullOrEmpty(engineId)) snmpInfo.setEngineId(engineId);
		if (!Strings.isNullOrEmpty(enterpriseId)) snmpInfo.setEnterpriseId(enterpriseId);
		if (!Strings.isNullOrEmpty(maxRepetitions)) snmpInfo.setMaxRepetitions(Integer.parseInt(maxRepetitions));
		if (!Strings.isNullOrEmpty(maxRequestSize)) snmpInfo.setMaxRequestSize(Integer.parseInt(maxRequestSize));
		if (!Strings.isNullOrEmpty(maxVarsPerPdu)) snmpInfo.setMaxVarsPerPdu(Integer.parseInt(maxVarsPerPdu));
		if (!Strings.isNullOrEmpty(port)) snmpInfo.setPort(Integer.parseInt(port));
		if (!Strings.isNullOrEmpty(privPassPhrase)) snmpInfo.setPrivPassPhrase(privPassPhrase);
		if (!Strings.isNullOrEmpty(privProtocol)) snmpInfo.setPrivProtocol(privProtocol);
		if (!Strings.isNullOrEmpty(proxyHost)) snmpInfo.setProxyHost(proxyHost);
		if (!Strings.isNullOrEmpty(readCommunityString)) snmpInfo.setReadCommunity(readCommunityString);
		if (!Strings.isNullOrEmpty(retryCount)) snmpInfo.setRetries(Integer.parseInt(retryCount));
		if (!Strings.isNullOrEmpty(securityLevel)) snmpInfo.setSecurityLevel(Integer.parseInt(securityLevel));
		if (!Strings.isNullOrEmpty(securityName)) snmpInfo.setSecurityName(securityName);
		if (!Strings.isNullOrEmpty(timeout)) snmpInfo.setTimeout(Integer.parseInt(timeout));
		if (!Strings.isNullOrEmpty(version)) snmpInfo.setVersion(version);
		if (!Strings.isNullOrEmpty(writeCommunityString)) snmpInfo.setWriteCommunity(writeCommunityString);

		return snmpInfo;
	}

