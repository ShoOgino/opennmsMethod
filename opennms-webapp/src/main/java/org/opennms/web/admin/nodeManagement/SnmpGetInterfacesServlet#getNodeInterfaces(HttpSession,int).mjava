    private List<SnmpManagedInterface> getNodeInterfaces(HttpSession userSession, int nodeid) throws SQLException {
        Connection connection = null;
        List<SnmpManagedInterface> nodeInterfaces = new ArrayList<SnmpManagedInterface>();
        int lineCount = 0;

        final DBUtils d = new DBUtils(getClass());
        try {
            connection = DataSourceFactory.getInstance().getConnection();
            d.watch(connection);

            PreparedStatement interfaceSelect = connection.prepareStatement(INTERFACE_QUERY);
            d.watch(interfaceSelect);
            interfaceSelect.setInt(1, nodeid);

            ResultSet interfaceSet = interfaceSelect.executeQuery();
            d.watch(interfaceSet);

            if (interfaceSet != null) {
                while (interfaceSet.next()) {
                    lineCount++;
                    SnmpManagedInterface newInterface = new SnmpManagedInterface();
                    nodeInterfaces.add(newInterface);
                    newInterface.setNodeid(interfaceSet.getInt(1));
                    newInterface.setIfIndex(interfaceSet.getInt(2));
                    newInterface.setIpHostname(interfaceSet.getString(3));
                    newInterface.setStatus(interfaceSet.getString(4));
                    newInterface.setIfDescr(interfaceSet.getString(5));
                    newInterface.setIfType(interfaceSet.getInt(6));
                    newInterface.setIfName(interfaceSet.getString(7));
                    newInterface.setIfAlias(interfaceSet.getString(8));
                    newInterface.setCollectFlag(interfaceSet.getString(9));
                    newInterface.setSnmpInterfaceId(interfaceSet.getInt(10));
                }
            }
        } finally {
            d.cleanUp();
        }

        Collections.sort(nodeInterfaces);
        return nodeInterfaces;

    }

