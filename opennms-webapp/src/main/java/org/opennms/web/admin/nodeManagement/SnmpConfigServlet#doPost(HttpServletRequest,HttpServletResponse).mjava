    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String firstIPAddress = request.getParameter("firstIPAddress");
        String lastIPAddress = request.getParameter("lastIPAddress");
        String communityString = request.getParameter("communityString");
        if (log.isDebugEnabled())
            log.debug("doPost: firstIPAddress=" + firstIPAddress + ", "
                      + "lastIPAddress=" + lastIPAddress + ", and "
                      + "communityString=" + communityString);

        Event newEvent = new Event();
        newEvent.setUei(EventConstants.CONFIGURE_SNMP_EVENT_UEI);
        newEvent.setSource("web ui");
        newEvent.setTime(EventConstants.formatToString(new java.util.Date()));
        newEvent.setService("SNMP");
        newEvent.setInterface(firstIPAddress);
        Parms eventParms = new Parms();
        newEvent.setParms(eventParms);
        Parm eventParm = null;
        Value parmValue = null;
        eventParm = new Parm();
        eventParm.setParmName(EventConstants.PARM_FIRST_IP_ADDRESS);
        parmValue = new Value();
        parmValue.setContent(firstIPAddress);
        eventParm.setValue(parmValue);
        eventParms.addParm(eventParm);
        eventParm = new Parm();
        eventParm.setParmName(EventConstants.PARM_LAST_IP_ADDRESS);
        parmValue = new Value();
        parmValue.setContent(lastIPAddress);
        eventParm.setValue(parmValue);
        eventParms.addParm(eventParm);
        eventParm = new Parm();
        eventParm.setParmName(EventConstants.PARM_COMMUNITY_STRING);
        parmValue = new Value();
        parmValue.setContent(communityString);
        eventParm.setValue(parmValue);
        eventParms.addParm(eventParm);

        try {
            EventProxy eventProxy = Util.createEventProxy();
            if (eventProxy != null) {
                eventProxy.send(newEvent);
            } else {
                throw new ServletException("Event proxy object is null, unable to send event " + newEvent.getUei());
            }
        } catch (Exception e) {
            throw new ServletException("Could not send event " + newEvent.getUei(), e);
        }

        // forward the request for proper display
        RequestDispatcher dispatcher = this.getServletContext().getRequestDispatcher("/admin/snmpConfigured.jsp");
        dispatcher.forward(request, response);
    }

