    /**
     * Return a specific alarm.
     *
     * @param alarmId a int.
     * @return a {@link org.opennms.web.alarm.Alarm} object.
     * @throws java.sql.SQLException if any.
     */
    public static Alarm getAlarms(int alarmId) throws SQLException {
        Alarm alarm = null;

        final DBUtils d = new DBUtils(AlarmFactory.class);
        try {
            Connection conn = Vault.getDbConnection();
            d.watch(conn);
            PreparedStatement stmt = conn.prepareStatement("SELECT ALARMS.*, NODE.NODELABEL, SERVICE.SERVICENAME FROM ALARMS LEFT OUTER JOIN NODE USING (NODEID) LEFT OUTER JOIN SERVICE USING (SERVICEID) WHERE ALARMID=? ");
            d.watch(stmt);
            stmt.setInt(1, alarmId);
            ResultSet rs = stmt.executeQuery();
            d.watch(rs);

            Alarm[] alarms = rs2Alarms(rs);

            // what do I do if this actually returns more than one service?
            if (alarms.length > 0) {
                alarm = alarms[0];
            }
        } finally {
            d.cleanUp();
        }

        return alarm;
    }

