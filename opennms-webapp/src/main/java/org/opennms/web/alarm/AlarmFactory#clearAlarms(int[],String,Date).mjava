    /**
     * Clear a list of alarms.  The username and time are currently discarded, but
     * are required for future use.
     */
    public static void clearAlarms(int[] alarmIds, String user, Date time) throws SQLException {
        if (alarmIds == null || user == null || time == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        if (alarmIds.length > 0) {
            StringBuffer update = new StringBuffer("UPDATE ALARMS SET SEVERITY =?");
            update.append(", ALARMTYPE =?");
            update.append(" WHERE ALARMID IN (");
            update.append(alarmIds[0]);

            for (int i = 1; i < alarmIds.length; i++) {
                update.append(",");
                update.append(alarmIds[i]);
            }

            update.append(")");
            update.append(" AND SEVERITY >=?");
            update.append(" AND SEVERITY <=?");

            final DBUtils d = new DBUtils(AlarmFactory.class);
            try {
                Connection conn = Vault.getDbConnection();
                d.watch(conn);

                PreparedStatement stmt = conn.prepareStatement(update.toString());
                d.watch(stmt);
                stmt.setInt(1, OnmsSeverity.CLEARED.getId());
                stmt.setInt(2, Alarm.RESOLUTION_TYPE);
                stmt.setInt(3, OnmsSeverity.NORMAL.getId());
                stmt.setInt(4, OnmsSeverity.CRITICAL.getId());
                stmt.executeUpdate();
            } finally {
                d.cleanUp();
            }
        }
    }

