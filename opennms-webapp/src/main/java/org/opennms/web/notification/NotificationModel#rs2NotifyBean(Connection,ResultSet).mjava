    /**
     * Returns the data from the result set as an array of
     * Notification objects.  The ResultSet must be positioned before
     * the first result before calling this method (this is the case right
     * after calling java.sql.Connection#createStatement and friends or
     * after calling java.sql.ResultSet#beforeFirst).
     */
    protected Notification[] rs2NotifyBean(Connection conn, ResultSet rs) throws SQLException {
        Notification[] notices = null;
        Vector vector = new Vector();

        // Format the results.
        try {
            while (rs.next()) {
                Notification nbean = new Notification();

                Object element = rs.getString(TXT_MESG);
                nbean.m_txtMsg = (String) element;

                element = rs.getString(NUM_MESG);
                nbean.m_numMsg = (String) element;

                element = new Integer(rs.getInt(NOTIFY));
                nbean.m_notifyID = ((Integer) element).intValue();

                element = rs.getTimestamp(TIME);
                nbean.m_timeSent = ((Timestamp) element).getTime();

                element = rs.getTimestamp(REPLYTIME);
                if (element != null) {
                    nbean.m_timeReply = ((Timestamp) element).getTime();
                } else {
                    nbean.m_timeReply = 0;
                }

                element = rs.getString(ANS_BY);
                nbean.m_responder = (String) element;

                element = new Integer(rs.getInt(NODE));
                nbean.m_nodeID = ((Integer) element).intValue();

                element = rs.getString(INTERFACE);
                nbean.m_interfaceID = (String) element;

                element = new Integer(rs.getInt(SERVICE));
                nbean.m_serviceId = ((Integer) element).intValue();

                element = new Integer(rs.getInt(EVENTID));
                nbean.m_eventId = ((Integer) element).intValue();

                Statement stmttmp = conn.createStatement();
                ResultSet rstmp = stmttmp.executeQuery("SELECT servicename from service where serviceid = " + nbean.m_serviceId);

                if (rstmp.next()) {
                    element = rstmp.getString("servicename");
                    if (element != null) {
                        nbean.m_serviceName = (String) element;
                    }
                }

                rstmp.close();
                stmttmp.close();

                vector.addElement(nbean);
            }
        } catch (SQLException e) {
            m_logger.debug("Error:" + e.getLocalizedMessage());
            m_logger.debug("Error occured in rs2NotifyBean");
            throw e;
        }

        notices = new Notification[vector.size()];

        for (int i = 0; i < notices.length; i++) {
            notices[i] = (Notification) vector.elementAt(i);
        }

        return notices;
    }

