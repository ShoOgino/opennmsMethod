    /**
     * Convenience method for translating a <code>java.sql.ResultSet</code>
     * containing notice information into an array of <code>Notification</code>
     * objects.
     *
     * @param rs a {@link java.sql.ResultSet} object.
     * @return an array of {@link org.opennms.web.notification.Notification} objects.
     * @throws java.sql.SQLException if any.
     */
    // FIXME: Don't use the single variable "element" for different objects. - dj@opennms.org
    protected static Notification[] rs2Notices(ResultSet rs, ServletContext servletContext) throws SQLException {
        Notification[] notices = null;
        Vector<Notification> vector = new Vector<Notification>();

        while (rs.next()) {
            Notification notice = new Notification();

            Integer id = Integer.valueOf(rs.getInt("notifyid"));
            notice.m_notifyID = id.intValue();

            Timestamp timestamp = rs.getTimestamp("pagetime");
            notice.m_timeSent = (timestamp != null) ? timestamp.getTime() : null;

            timestamp = rs.getTimestamp("respondtime");
            notice.m_timeReply = (timestamp != null) ? timestamp.getTime() : null;

            String str = rs.getString("textmsg");
            notice.m_txtMsg = str;

            str = rs.getString("numericmsg");
            notice.m_numMsg = str;

            str = rs.getString("answeredby");
            notice.m_responder = str;

            id = Integer.valueOf(rs.getInt("nodeid"));
            notice.m_nodeID = id.intValue();

            str = rs.getString("interfaceid");
            notice.m_interfaceID = str;

            id = Integer.valueOf(rs.getInt("eventid"));
            notice.m_eventId = id.intValue();

            id = Integer.valueOf(rs.getInt("serviceid"));
            if (id != null) {
                notice.m_serviceId = id.intValue();
                str = NetworkElementFactory.getInstance(servletContext).getServiceNameFromId(notice.m_serviceId);
                notice.m_serviceName = str;
            }

            vector.addElement(notice);
        }

        notices = new Notification[vector.size()];

        for (int i = 0; i < notices.length; i++) {
            notices[i] = vector.elementAt(i);
        }

        return notices;
    }

