    /** {@inheritDoc} */
    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String nodeIdString = request.getParameter("node");
        String labelType = request.getParameter("labeltype");
        String userLabel = request.getParameter("userlabel");

        if (nodeIdString == null) {
            throw new MissingParameterException("node", new String[] { "node", "labeltype", "userlabel" });
        }
        if (labelType == null) {
            throw new MissingParameterException("labeltype", new String[] { "node", "labeltype", "userlabel" });
        }
        if (userLabel == null) {
            throw new MissingParameterException("userlabel", new String[] { "node", "labeltype", "userlabel" });
        }

        try {
            int nodeId = WebSecurityUtils.safeParseInt(nodeIdString);
            NodeLabel oldLabel = NodeLabel.retrieveLabel(nodeId);
            NodeLabel newLabel = null;

            if (labelType.equals("auto")) {
                newLabel = NodeLabel.computeLabel(nodeId);
            } else if (labelType.equals("user")) {
                newLabel = new NodeLabel(userLabel, NodeLabel.SOURCE_USERDEFINED);
            } else {
                throw new ServletException("Unexpected labeltype value: " + labelType);
            }

            NodeLabel.assignLabel(nodeId, newLabel);
            this.sendLabelChangeEvent(nodeId, oldLabel, newLabel);
            response.sendRedirect(Util.calculateUrlBase(request) + "/element/node.jsp?node=" + nodeIdString);
        } catch (SQLException e) {
            throw new ServletException("Database exception", e);
        } catch (Throwable e) {
            throw new ServletException("Exception sending node label change event", e);
        }
    }

