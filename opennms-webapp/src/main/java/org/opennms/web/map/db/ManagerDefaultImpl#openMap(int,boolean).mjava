    /**
     * Take the map with id in input and return it in VMap form.
     * 
     * @param id
     * @param refreshElems says if refresh the map's elements
     * @return the VMap with identifier id
     * @throws MapsException
     */
    public VMap openMap(int id, boolean refreshElems) throws MapsManagementException,
            MapNotFoundException, MapsException {
    	
        VMap retVMap = null;

        Map m = dbManager.getMap(id);
        if (m == null) {
            throw new MapNotFoundException("Map with id " + id
                    + " doesn't exist.");
        }
        retVMap = new VMap(id, m.getName(), m.getBackground(),
                m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m
                        .getScale(), m.getOffsetX(), m.getOffsetY(), m
                        .getType(),m.getWidth(),m.getHeight());
        retVMap.setCreateTime(m.getCreateTime());
        retVMap.setLastModifiedTime(m.getLastModifiedTime());
        Element[] mapElems = dbManager.getElementsOfMap(id);
        VElement elem =null;
        if(mapElems!=null){
            for (int i = 0; i < mapElems.length; i++) {
        		elem = new VElement(mapElems[i]);
        		elem.setSeverity(mapsPropertiesFactory.getIndeterminateSeverity().getId());
        		elem.setStatus(mapsPropertiesFactory.getUnknownStatus().getId());
        		elem.setRtc(mapsPropertiesFactory.getDisabledAvail().getMin());
        		// here we must add all the stuff required
        		retVMap.addElement(elem);
            }
        }

        if(refreshElems){
            log.debug("Starting refreshing elems for map with id "+id);
       		VElement[] changedElems = localRefreshElements(retVMap.getAllElements());
    		if(changedElems!=null){
	       		for(int i=0;i<changedElems.length;i++){
	    			retVMap.removeElement(changedElems[i].getId(), changedElems[i].getType());
	    			retVMap.addElement(changedElems[i]);
	    		}
    		}
        }
		
        
        log.debug("Starting adding links for map with id "+id);
        log.debug("Starting getLinks");
        //VLink[] vls = null;
        VLink[] vls = (VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]);
        log.debug("Ending getLinks");
        log.debug("Starting addLinks");
        retVMap.addLinks(vls);
        log.debug("Ending addLinks");
        log.debug("Ending adding links for map with id "+id);
        sessionMap = retVMap;
        return retVMap;
    }

