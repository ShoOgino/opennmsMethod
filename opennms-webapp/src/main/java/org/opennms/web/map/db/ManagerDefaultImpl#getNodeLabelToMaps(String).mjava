    /** {@inheritDoc} */
    @Override
    public java.util.Map<String, Set<Integer>> getNodeLabelToMaps(String user)
            throws MapsException {
        Map<Integer,String> maps = new HashMap<Integer,String>();
        for (VMapInfo mapinfo :mapInfo) {
            maps.put(Integer.valueOf(mapinfo.getId()),mapinfo.getName());
        }
        Map<Integer,String> elemInfoMap = new HashMap<Integer,String>();
        for (VElementInfo elem: elemInfo) {
            elemInfoMap.put(elem.getId(), elem.getLabel());
        }
        DbElement[] elems = dbManager.getAllElements();
        java.util.Map<String, Set<Integer>> nodelabelMap = new HashMap<String, Set<Integer>>();
        for (int i = 0; i < elems.length; i++) {
            DbElement elem = elems[i];
            Integer mapId = Integer.valueOf(elem.getMapId());
            if (!maps.containsKey(mapId))
                continue;

            String label = elem.getLabel();
            LOG.debug("getNodeLabelToMaps: found element with label: {}", label);
            Set<Integer> mapids = null;
            if (nodelabelMap.containsKey(label)) {
                mapids = nodelabelMap.get(label);
            } else {
                mapids = new TreeSet<Integer>();
            }
            mapids.add(mapId);
            nodelabelMap.put(label, mapids);
            // Adding the MapName if is a map
            if (elem.isMap()) {
                String mapName=maps.get(elem.getId());
                if (mapName.equals(label))
                    continue;
                else
                    label=mapName;
                LOG.debug("getNodeLabelToMaps: found map with name: {}", label);
            } else {
                String nodename=elemInfoMap.get(elem.getId());
                if (label.equals(nodename))
                    continue;
                else
                    label=nodename;
                LOG.debug("getNodeLabelToMaps: found node with name: {}", label);
            }
            if (nodelabelMap.containsKey(label)) {
                mapids = nodelabelMap.get(label);
            } else {
                mapids = new TreeSet<Integer>();
            }
            mapids.add(mapId);
            nodelabelMap.put(label, mapids);
        }
        return nodelabelMap;
    }

