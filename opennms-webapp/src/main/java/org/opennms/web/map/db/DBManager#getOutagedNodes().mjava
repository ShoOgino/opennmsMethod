    java.util.Map getOutagedNodes()throws MapsException{
        java.util.Map outagedNodes = new HashMap();
        log.debug("Getting outaged elems.");
        Iterator ite = getOutagedVElems().iterator();
        log.debug("Outaged elems obtained.");
		while (ite.hasNext()) {
			ElementInfo outagelem = (ElementInfo) ite.next();
			int outageStatus = mpf.getStatus(outagelem.getUei());
			int outageSeverity = mpf.getSeverity(getSeverityLabel(outagelem.getSeverity()));


			if (log.isInfoEnabled())
				log.info("parsing outaged node with nodeid: " + outagelem.getId() + " severity: " + outagelem.getSeverity() + " severity label: " +getSeverityLabel(outagelem.getSeverity()));

			if (log.isInfoEnabled())
				log.info("parsing outaged node with nodeid: " + outagelem.getId() + " status: " + outagelem.getUei() + " severity label: " +getSeverityLabel(outagelem.getSeverity()));

			if (log.isDebugEnabled()) 
    			log.debug("local outaged node status/severity " + outageStatus + "/" + outageSeverity);

			OutageInfo oi = (OutageInfo)outagedNodes.get(new Integer(outagelem.getId())); 

			if (oi != null) {
				if (oi.getStatus() > outageStatus) {
					oi.setStatus(outageStatus);
				}
				oi.setSeverity((oi.getSeverity()+outageSeverity)/2);
			} else {
				int curStatus = outageStatus;
				float curSeverity = outageSeverity;
				oi = new OutageInfo(outagelem.getId(),curStatus,curSeverity);
			}
			outagedNodes.put(new Integer(outagelem.getId()),oi);
    		if (log.isDebugEnabled()) 
    			log.debug("global outaged node status/severity " + outageStatus + "/" + outageSeverity);
		}
        return outagedNodes;
    }    

