    /**
     * recursively gets all nodes contained by elem and its submaps (if elem
     * is a map)
     */
    public Set<Integer> getNodeidsOnElement(Element elem)
            throws MapsException {
        Set<Integer> elementNodeIds = new HashSet<Integer>();
        if (elem.isNode()) {
            elementNodeIds.add(new Integer(elem.getId()));
            // This is not OK now
            // elementNodeIds.addAll(getNodesFromParentNode(elem.getId()));
        } else if (elem.isMap()) {
            int curMapId = elem.getId();
            Element[] elemNodeElems = getNodeElementsOfMap(curMapId);
            if (elemNodeElems != null && elemNodeElems.length > 0) {
                for (int i = 0; i < elemNodeElems.length; i++) {
                    elementNodeIds.add(new Integer(elemNodeElems[i].getId()));
                }
            }

            Element[] elemMapElems = getMapElementsOfMap(curMapId);
            if (elemMapElems != null && elemMapElems.length > 0) {
                for (int i = 0; i < elemMapElems.length; i++) {
                    elementNodeIds.addAll(getNodeidsOnElement(elemMapElems[i]));
                }
            }
        }
        return elementNodeIds;

    }

