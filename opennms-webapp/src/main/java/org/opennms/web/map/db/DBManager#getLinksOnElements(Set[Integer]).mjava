	public Set<LinkInfo> getLinksOnElements(Set<Integer> allnodes)
			throws MapsException {
		log.debug("getLinksOnElements "+allnodes);
		Set<LinkInfo> nodes = null;
        Connection conn = createConnection();
		try {
			nodes = new HashSet<LinkInfo>();
			if (allnodes == null || allnodes.size()==0)
				return nodes;
			String nodelist = "";
			Iterator<Integer> ite = allnodes.iterator();
			while (ite.hasNext()) {
				nodelist += ite.next();
				if (ite.hasNext())
					nodelist += ",";
			}

			String sql = "SELECT "
					+ "datalinkinterface.nodeid, ifindex,nodeparentid, parentifindex, snmpiftype,snmpifspeed,snmpifoperstatus,snmpifadminstatus "
					+ "FROM datalinkinterface "
					+ "left join snmpinterface on nodeparentid = snmpinterface.nodeid "
					+ "WHERE"
					+ " (datalinkinterface.nodeid IN ("
					+ nodelist
					+ ")"
					+ " OR nodeparentid in ("
					+ nodelist
					+ ")) "
					+ "AND status != 'D' and datalinkinterface.parentifindex = snmpinterface.snmpifindex";
			
			Statement stmt = conn.createStatement();
			ResultSet rs = stmt.executeQuery(sql);
			while (rs.next()) {
				Object element = new Integer(rs.getInt("nodeid"));
				int nodeid = -1;
				if (element != null) {
					nodeid = ((Integer) element);
				}

				element = new Integer(rs.getInt("ifindex"));
				int ifindex = -1;
				if (element != null) {
					ifindex = ((Integer) element);
				}

				element = new Integer(rs.getInt("nodeparentid"));
				int nodeparentid = -1;
				if (element != null) {
					nodeparentid = ((Integer) element);
				}

				element = new Integer(rs.getInt("parentifindex"));
				int parentifindex = -1;
				if (element != null) {
					parentifindex = ((Integer) element);
				}

				element = new Integer(rs.getInt("snmpiftype"));
				int snmpiftype = -1;
				if (element != null) {
					snmpiftype = ((Integer) element);
				}

				element = new Long(rs.getLong("snmpifspeed"));
				long snmpifspeed = -1;
				if (element != null) {
					snmpifspeed = ((Long) element);
				}

				element = new Integer(rs.getInt("snmpifoperstatus"));
				int snmpifoperstatus = -1;
				if (element != null) {
					snmpifoperstatus = ((Integer) element);
				}

                element = new Integer(rs.getInt("snmpifadminstatus"));
                int snmpifadminstatus = -1;
                if (element != null) {
                    snmpifadminstatus = ((Integer) element);
                }

                // If oper status is down try to verify if admin status is down on the other side of the link!

				LinkInfo link = new LinkInfo(nodeid, ifindex, nodeparentid,
						parentifindex, snmpiftype, snmpifspeed,
						snmpifoperstatus,snmpifadminstatus);

				nodes.add(link);
			}
			rs.close();
			stmt.close();

		} catch (Exception e) {
			log.error("Exception while getting links on elements " + allnodes,
					e);
			throw new MapsException(e);
		} finally {
			releaseConnection(conn);
		}
		return nodes;

	}

