    private Set<LinkInfo> getLinkedNodeIdOnNode(int nodeID) throws SQLException, ClassNotFoundException {
        Set<LinkInfo> nodes = new HashSet<LinkInfo>();
        createConnection();
        
        PreparedStatement stmt = m_dbConnection
                .prepareStatement("select datalinkinterface.nodeid, ifindex,nodeparentid, parentifindex, snmpiftype,snmpifspeed,snmpifoperstatus from datalinkinterface left join snmpinterface on nodeparentid = snmpinterface.nodeid where datalinkinterface.nodeid = ? and status != 'D' and datalinkinterface.parentifindex = snmpinterface.snmpifindex");
        stmt.setInt(1, nodeID);
        ResultSet rs = stmt.executeQuery();
	    while (rs.next()) {
            Object element = new Integer(rs.getInt("nodeid"));
            int nodeid = -1;
            if (element != null) {
                nodeid = ((Integer) element);
            }

            element = new Integer(rs.getInt("ifindex"));
            int ifindex = -1;
            if (element != null) {
            	ifindex = ((Integer) element);
            }

            element = new Integer(rs.getInt("nodeparentid"));
            int nodeparentid = -1;
            if (element != null) {
            	nodeparentid = ((Integer) element);
            }

            element = new Integer(rs.getInt("parentifindex"));
            int parentifindex = -1;
            if (element != null) {
            	parentifindex = ((Integer) element);
            }

            element = new Integer(rs.getInt("snmpiftype"));
            int snmpiftype = -1;
            if (element != null) {
            	snmpiftype = ((Integer) element);
            }

            element = new Long(rs.getLong("snmpifspeed"));
            long snmpifspeed = -1;
            if (element != null) {
            	snmpifspeed = ((Long) element);
            }

            element = new Integer(rs.getInt("snmpifoperstatus"));
            int snmpifoperstatus = -1;
            if (element != null) {
            	snmpifoperstatus = ((Integer) element);
            }
            
            LinkInfo node = new LinkInfo(nodeid,ifindex,nodeparentid,parentifindex,snmpiftype,snmpifspeed,snmpifoperstatus);

            nodes.add(node);
        }
        rs.close();
        stmt.close();
        stmt = m_dbConnection.prepareStatement("SELECT datalinkinterface.nodeid, ifindex,nodeparentid, parentifindex, snmpiftype,snmpifspeed,snmpifoperstatus from datalinkinterface left join snmpinterface on nodeparentid = snmpinterface.nodeid where NODEPARENTID = ? and status != 'D' and datalinkinterface.parentifindex = snmpinterface.snmpifindex");
	    stmt.setInt(1, nodeID);
	    rs = stmt.executeQuery();
	    while (rs.next()) {
            Object element = new Integer(rs.getInt("nodeid"));
            int nodeid = -1;
            if (element != null) {
                nodeid = ((Integer) element);
            }

            element = new Integer(rs.getInt("ifindex"));
            int ifindex = -1;
            if (element != null) {
            	ifindex = ((Integer) element);
            }

            element = new Integer(rs.getInt("nodeparentid"));
            int nodeparentid = -1;
            if (element != null) {
            	nodeparentid = ((Integer) element);
            }

            element = new Integer(rs.getInt("parentifindex"));
            int parentifindex = -1;
            if (element != null) {
            	parentifindex = ((Integer) element);
            }

            element = new Integer(rs.getInt("snmpiftype"));
            int snmpiftype = -1;
            if (element != null) {
            	snmpiftype = ((Integer) element);
            }

            element = new Long(rs.getLong("snmpifspeed"));
            long snmpifspeed = -1;
            if (element != null) {
            	snmpifspeed = ((Long) element);
            }

            element = new Integer(rs.getInt("snmpifoperstatus"));
            int snmpifoperstatus = -1;
            if (element != null) {
            	snmpifoperstatus = ((Integer) element);
            }
            
            LinkInfo node = new LinkInfo(nodeid,ifindex,nodeparentid,parentifindex,snmpiftype,snmpifspeed,snmpifoperstatus);

            nodes.add(node);
        }
	    rs.close();
	    stmt.close();
        return nodes;
        
    }

