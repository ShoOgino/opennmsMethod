    private java.util.Map<Integer,AlarmInfo> getAlarmedNodes() throws MapsException{
        
    	java.util.Map<Integer,AlarmInfo> alarmedNodes = new HashMap<Integer,AlarmInfo>();
        log.debug("Getting alarmed elems.");
        Iterator<VElementInfo> ite = dbManager.getAlarmedElements().iterator();
        log.debug("Alarmed elems obtained.");
		while (ite.hasNext()) {
			VElementInfo veleminfo = ite.next();
			int alarmStatus = mapsPropertiesFactory.getStatus(veleminfo.getUei());
			int alarmSeverity = mapsPropertiesFactory.getSeverity(getSeverityLabel(veleminfo.getSeverity()));

			if (log.isInfoEnabled()) {
                log.info("parsing alarmed node with nodeid: " + veleminfo.getId() + " severity: " + veleminfo.getSeverity() + " severity label: " +getSeverityLabel(veleminfo.getSeverity()));
            }

			if (log.isInfoEnabled()) {
                log.info("parsing alarmed node with nodeid: " + veleminfo.getId() + " status: " + veleminfo.getUei() + " severity label: " +getSeverityLabel(veleminfo.getSeverity()));
            }

			if (log.isDebugEnabled()) {
                log.debug("local alarmed node status/severity " + alarmStatus + "/" + alarmSeverity);
            }

			AlarmInfo alarminfo = alarmedNodes.get(new Integer(veleminfo.getId())); 

			if (alarminfo != null) {
				if (alarminfo.getStatus() > alarmStatus) {
					alarminfo.setStatus(alarmStatus);
					alarminfo.setSeverity(alarmSeverity);
				}	
			} else {
				int curStatus = alarmStatus;
				float curSeverity = alarmSeverity;
				alarminfo = new AlarmInfo(veleminfo.getId(),curStatus,curSeverity);
			}
			alarmedNodes.put(new Integer(veleminfo.getId()),alarminfo);
    		if (log.isDebugEnabled()) {
                log.debug("global element node status/severity " + alarmStatus + "/" + alarmSeverity);
            }
		}
        return alarmedNodes;
    }    

