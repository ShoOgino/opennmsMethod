    private java.util.Map<Integer, AlarmInfo> getAlarmedNodes()
            throws MapsException {

        java.util.Map<Integer, AlarmInfo> alarmedNodes = new HashMap<Integer, AlarmInfo>();
        LOG.debug("Getting alarmed elems.");
        Iterator<VElementInfo> ite = dbManager.getAlarmedElements().iterator();
        LOG.debug("Alarmed elems obtained.");
        while (ite.hasNext()) {
            VElementInfo veleminfo = ite.next();
            int alarmStatus = mapsPropertiesFactory.getStatus(veleminfo.getUei());
            int alarmSeverity = mapsPropertiesFactory.getSeverity(getSeverityLabel(veleminfo.getSeverity()));

                LOG.info("parsing alarmed node with nodeid: {} severity: {} severity label: {}"
                        , veleminfo.getId(), veleminfo.getSeverity(), getSeverityLabel(veleminfo.getSeverity()));

                LOG.info("parsing alarmed node with nodeid: {} status: {} severity label: {}"
                        , veleminfo.getId(), veleminfo.getUei(), getSeverityLabel(veleminfo.getSeverity()));

                LOG.debug("local alarmed node status/severity {}/{}", alarmStatus, alarmSeverity);

            AlarmInfo alarminfo = alarmedNodes.get(Integer.valueOf(
                                                               veleminfo.getId()));

            if (alarminfo != null) {
                if (alarminfo.getStatus() > alarmStatus) {
                    alarminfo.setStatus(alarmStatus);
                    alarminfo.setSeverity(alarmSeverity);
                }
            } else {
                int curStatus = alarmStatus;
                int curSeverity = alarmSeverity;
                alarminfo = new AlarmInfo(curStatus, curSeverity);
            }
            alarmedNodes.put(Integer.valueOf(veleminfo.getId()), alarminfo);
                LOG.debug("global element node status/severity {}/{}", alarmStatus, alarmSeverity);
        }
        return alarmedNodes;
    }

