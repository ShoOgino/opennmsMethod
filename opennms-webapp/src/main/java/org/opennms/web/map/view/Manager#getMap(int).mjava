    /**
     * Take the map with id in input and return it in VMap form.
     * 
     * @param id
     * @return the VMap with identifier id
     * @throws MapsException
     */
    public VMap getMap(int id) throws MapsManagementException,
            MapNotFoundException, MapsException {
    	
        VMap retVMap = null;
        try {
        	log.debug("Starting getMap with id "+id);
            Map m = Factory.getMap(id);
            log.debug("Ending getMap with id "+id);
            if (m == null) {
                throw new MapNotFoundException("Map with id " + id
                        + " doesn't exist.");
            }
            log.debug("Creating VMap with id "+id);
            retVMap = new VMap(id, m.getName(), m.getBackground(),
                    m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m
                            .getScale(), m.getOffsetX(), m.getOffsetY(), m
                            .getType(),m.getWidth(),m.getHeight());
            log.debug("VMap with id "+id+" created.");
            retVMap.setCreateTime(m.getCreateTime());
            retVMap.setLastModifiedTime(m.getLastModifiedTime());
            log.debug("Starting getting elems for map with id "+id);
            Element[] mapElems = Factory.getElementsOfMap(id);
            log.debug("Ending getting elems for map with id "+id);
            VElement elem =null;
            if(mapElems!=null){
	            for (int i = 0; i < mapElems.length; i++) {
            		elem = new VElement(mapElems[i]);
            		// here we must add all the stuff required
            		retVMap.addElement(elem);
	            }
            }
            log.debug("Starting refreshing elems for map with id "+id);
            List els = refreshElements(retVMap.getAllElements(),false);
            log.debug("Ending refreshing elems for map with id "+id);
            log.debug("els.toArray()");
            VElement[] ves = (VElement[]) els.toArray(new VElement[0]);
			log.debug("addElements(els)");
			retVMap.addElements(ves);
            
            log.debug("Starting adding links for map with id "+id);
            log.debug("Starting getLinks");
            VLink[] vls = (VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]);
            log.debug("Ending getLinks");
            log.debug("Starting addLinks");
            retVMap.addLinks(vls);
            log.debug("Ending addLinks");
            log.debug("Ending adding links for map with id "+id);
        } catch (SQLException se) {
            throw new MapsManagementException(
                    "Manager: unable to get map with id=" + id + "." + se);
        }
        return retVMap;
    }

