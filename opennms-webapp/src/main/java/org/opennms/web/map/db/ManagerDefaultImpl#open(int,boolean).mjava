    private VMap open(int id, boolean refreshElems)
            throws MapsManagementException, MapNotFoundException,
            MapsException {
        VMap retVMap = null;

        DbMap m = dbManager.getMap(id);
        if (m == null) {
            throw new MapNotFoundException("Map with id " + id
                    + " doesn't exist.");
        }
        retVMap = new VMap(id, m.getName(), m.getBackground(), m.getOwner(),
                           m.getAccessMode(), m.getUserLastModifies(),
                           m.getScale(), m.getOffsetX(), m.getOffsetY(),
                           m.getType(), m.getWidth(), m.getHeight());
        retVMap.setCreateTime(m.getCreateTime());
        retVMap.setLastModifiedTime(m.getLastModifiedTime());
        DbElement[] mapElems = dbManager.getElementsOfMap(id);
        VElement elem = null;
        if (mapElems != null) {
            for (DbElement mapElem : mapElems) {
                elem = new VElement(mapElem);
                elem.setSeverity(mapsPropertiesFactory.getIndeterminateSeverity().getId());
                elem.setStatus(mapsPropertiesFactory.getUnknownStatus().getId());
                elem.setAvail(/*mapsPropertiesFactory.getDisabledAvail().getMin()*/50.40);
                // here we must add all the stuff required
                log.debug("openMap: adding element to map with label: "
                        + elem.getLabel());
                retVMap.addElement(elem);
            }
        }

        if (refreshElems) {
            log.debug("Starting refreshing elems for map with id " + id);
            for (VElement changedElem : localRefreshElements(retVMap.getElements().values())) {
                retVMap.removeElement(changedElem.getId(),
                                      changedElem.getType());
                retVMap.addElement(changedElem);
            }
        }

        log.debug("Starting adding links for map with id " + id);
        retVMap.addLinks(getLinks(retVMap.getElements().values()));
        log.debug("Ending adding links for map with id " + id);
        sessionMap = retVMap;
        return retVMap;
    }

