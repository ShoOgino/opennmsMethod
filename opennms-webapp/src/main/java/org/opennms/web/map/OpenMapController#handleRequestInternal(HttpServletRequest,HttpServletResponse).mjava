	/** {@inheritDoc} */
        @Override
	protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws IOException {
		

		LOG.debug(request.getQueryString());
		String mapIdStr = request.getParameter("MapId");
		LOG.debug("MapId={}", mapIdStr);
		String mapWidthStr = request.getParameter("MapWidth");
        LOG.debug("MapWidth={}", mapWidthStr);
        String mapHeightStr = request.getParameter("MapHeight");
        LOG.debug("MapHeight={}", mapHeightStr);
        String adminModeStr = request.getParameter("adminMode");
        LOG.debug("adminMode={}", adminModeStr);
		
		String user = request.getRemoteUser();
		
		if ((request.isUserInRole(org.opennms.web.api.Authentication.ROLE_ADMIN))) {
			LOG.info("{} has Admin admin Role", user);
		}					

		float widthFactor = 1;
		float heightFactor =1;
		
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(response
				.getOutputStream(), "UTF-8"));

		try {
			int mapWidth = WebSecurityUtils.safeParseInt(mapWidthStr);
			int mapHeight = WebSecurityUtils.safeParseInt(mapHeightStr);
			
			LOG.debug("Current mapWidth={} and MapHeight={}", mapWidth, mapHeight);
			VMap map = null;
			if(mapIdStr!=null){
				int mapid = WebSecurityUtils.safeParseInt(mapIdStr);
				LOG.debug("Opening map {} for user {}", mapid, user);
				map = manager.openMap(mapid, user, !(adminModeStr.equals("true")));
			}else{
				LOG.debug("Try to Opening default map");
				VMapInfo defaultmapinfo = manager.getDefaultMapsMenu(user);
				if (defaultmapinfo != null ) {
	                map = manager.openMap(defaultmapinfo.getId(),user,!(adminModeStr.equals("true")));
				} else {
				    map = manager.openMap();
				}
			}
			 

			if(map != null){
				int dbMapWidth = map.getWidth();
				int dbMapHeight = map.getHeight();
				widthFactor = (float) mapWidth / dbMapWidth;
				heightFactor = (float) mapHeight / dbMapHeight;

				LOG.debug("Old saved mapWidth={} and MapHeight={}", dbMapWidth, dbMapHeight);
				LOG.debug("widthFactor={}", widthFactor);
				LOG.debug("heightFactor={}", heightFactor);
				LOG.debug("Setting new width and height to the session map");
				
				map.setHeight(mapHeight);
				map.setWidth(mapWidth);
				
				for (VElement ve : map.getElements().values()) {
				    ve.setX((int) (ve.getX() * widthFactor));
                    ve.setY((int) (ve.getY() * heightFactor));
				}
			}
			
			bw.write(ResponseAssembler.getMapResponse(map));

		} catch (Throwable e) {
			LOG.error("Error while opening map with id:{}, for user:{}", mapIdStr, user,e);
			bw.write(ResponseAssembler.getMapErrorResponse(MapsConstants.OPENMAP_ACTION));
		} finally {
			bw.close();
		}

		return null;
	}

