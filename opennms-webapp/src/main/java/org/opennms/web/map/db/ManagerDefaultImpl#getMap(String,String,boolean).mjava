    /**
     * Take the map label and type in input and return it in VMap form.
     * 
     * @param mapname
     * @param maptype
     * @param refreshElems says if refresh map's elements
     * @return the VMap[] with corresponding mapname and maptype
     * @throws MapsException
     */

    public VMap[] getMap(String mapname, String maptype, boolean refreshElems) throws MapsManagementException,
            MapNotFoundException, MapsException {
    	
        VMap retVMap = null;
        if (!maptype.equals(VMap.AUTOMATICALLY_GENERATED_MAP) && !maptype.equals(VMap.USER_GENERATED_MAP)) {
            throw new MapNotFoundException("Map with uncorrect maptype " + maptype);
        }
        Vector<VMap> ve = new Vector<VMap>();

        Map[] maps = dbManager.getMaps(mapname,maptype);
        if (maps == null) {
            throw new MapNotFoundException("Map with mapname " + mapname
                    + "and maptype " + maptype + " doesn't exist.");
        }
        for (Map m : maps) {
        	retVMap = new VMap(m.getId(), m.getName(), m.getBackground(),
                m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m
                        .getScale(), m.getOffsetX(), m.getOffsetY(), m
                        .getType(),m.getWidth(),m.getHeight());
        	retVMap.setCreateTime(m.getCreateTime());
        	retVMap.setLastModifiedTime(m.getLastModifiedTime());
        	Element[] mapElems = dbManager.getElementsOfMap(m.getId());
        	VElement elem =null;
        	if(mapElems!=null){
        		for (Element mapElem : mapElems) {
        			elem = new VElement(mapElem);
            		elem.setSeverity(mapsPropertiesFactory.getIndeterminateSeverity().getId());
            		elem.setStatus(mapsPropertiesFactory.getUnknownStatus().getId());
            		elem.setRtc(mapsPropertiesFactory.getDisabledAvail().getId());
        			// here we must add all the stuff required
        			retVMap.addElement(elem);
        		}
        	}
            if(refreshElems){
                log.debug("Starting refreshing elems for map with name "+mapname+ " and id "+retVMap.getId());
        		VElement[] changedElems = localRefreshElements(retVMap.getAllElements());
        		for (VElement changedElem : changedElems) {
        			retVMap.removeElement(changedElem.getId(), changedElem.getType());
        			retVMap.addElement(changedElem);
        		}
                log.debug("Ending refreshing elems for map with name "+mapname+ " and id "+retVMap.getId());
            }
        	retVMap.addLinks(getLinks(retVMap.getAllElements()).toArray(new VLink[0]));
        	ve.add(retVMap);
        }
        VMap[] vmaps = new VMap[ve.size()];
        vmaps=ve.toArray(vmaps);
        return vmaps;
     }

