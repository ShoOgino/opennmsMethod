	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		HttpSession session=null;
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(
				response.getOutputStream()));
		String strToSend = MapsConstants.INIT_ACTION+"OK";
		try {
			ThreadCategory.setPrefix(MapsConstants.LOG4J_CATEGORY);
			log = ThreadCategory.getInstance(this.getClass());
			log.info("Init maps application");
			String mapFactoryLabel = request.getParameter("mapsFactory");

			session = request.getSession(true);
			session.setMaxInactiveInterval(-1);
			Manager m = null;
			if(mapFactoryLabel==null || mapFactoryLabel.equalsIgnoreCase("null")){
				log.debug("Instantiating Manager with default MapsFactory");
				try {
					m = new Manager();
				} catch (MapsException e) {
					strToSend=MapsConstants.INIT_ACTION+"Failed";
					log.fatal("Error while instantiating default Manager");
					bw.write(strToSend);
					bw.close();
					log.info("Sending response to the client "+strToSend);
					return;
				}
			}else{
				log.debug("Instantiating Manager with MapsFactory "+mapFactoryLabel);
				try {
					m = new Manager(mapFactoryLabel);
				} catch (MapsException e) {
					strToSend=MapsConstants.INIT_ACTION+"Failed";
					log.fatal("Error while instantiating Manager with factory "+mapFactoryLabel);
					bw.write(strToSend);
					bw.close();
					log.info("Sending response to the client "+strToSend);
					return;
				}
			}
			log.debug("Setting session manager with implementation data access manager "+m.getDataAccessManager().getClass().getName());
			session.setAttribute("manager", m);
			try {
				m.startSession();
			} catch (MapsException e1) {
				log.error("Error while starting Manager session "+e1);
				strToSend=MapsConstants.INIT_ACTION+"Failed";
				bw.write(strToSend);
				bw.close();
				return;
			}
			MapPropertiesFactory.init();
			MapPropertiesFactory mpf = MapPropertiesFactory.getInstance();
			MapsFactory mf =null;
			if (mapFactoryLabel == null || mapFactoryLabel.equalsIgnoreCase("null")) {
				mf = mpf.getDefaultFactory();
			}else{
				mf = mpf.getMapsFactory(mapFactoryLabel);
			}
			VMap sessionMap = m.newMap();
			boolean isMapEditable = false;
			if ((request.isUserInRole(Authentication.ADMIN_ROLE) && mf.isAdminModify()) || mf.isAllModify()) {
				isMapEditable = true;
			}

			session.setAttribute("sessionMap", sessionMap);
			Integer mapToOpen = (Integer) session.getAttribute("mapToOpen");
			String refreshTime = (String) session.getAttribute("refreshTime");

			strToSend += refreshTime + "&" + isMapEditable;
			if (mapToOpen != null) {
				strToSend += "&" + mapToOpen.intValue();
			}
			
			try {
				m.endSession();
			} catch (MapsException e1) {
				log.error("Error while ending Manager session "+e1);
				strToSend=MapsConstants.INIT_ACTION+"Failed";
				bw.write(strToSend);
				bw.close();
				return;
			}
			bw.write(strToSend);
			bw.close();
			log.info("Sending response to the client '" + strToSend + "'");
		} catch (Exception e) {
			session.invalidate();
			log.error("Init maps application: " + e);
			e.printStackTrace();
			strToSend=MapsConstants.INIT_ACTION+"Failed";
			bw.write(strToSend);
			bw.close();
			return;
		}
	}

