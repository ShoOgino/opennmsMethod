	/**
	 * Completes the element in input (with id and type already valorized) with
	 * its label (or name if is a map) and iconname
	 * 
	 * @param e
	 * @return the element completed of label and icon name
	 */
	private Element completeElement(Element e) throws MapsException {

        Connection conn = createConnection();
		String sqlQuery = null;
		try {
			if (e.getType().equals(Element.MAP_TYPE)) {
				e.setIcon(Element.defaultMapIcon);
				sqlQuery = "SELECT mapname FROM " + mapTable
						+ " WHERE mapId = ?";
			} else {
				sqlQuery = "SELECT nodelabel,displaycategory FROM assets,node WHERE assets.nodeid=node.nodeid AND node.nodeid = ?";
			}
			PreparedStatement statement = conn
					.prepareStatement(sqlQuery);
			statement.setInt(1, e.getId());
			ResultSet rs = statement.executeQuery();
			if (rs.next()) {
				e.setLabel(rs.getString(1));
				if (e.getType().equals(Element.NODE_TYPE)) {
					String iconName = rs.getString(2);
					if (iconName == null || iconName.trim().equals("")) {
						iconName = Element.defaultNodeIcon;
					}
					e.setIcon(iconName);
				}
			}
			rs.close();
			statement.close();

		} catch (Exception e1) {
			log.error("Error while completing element (" + e.getId()
					+ ") with label and icon ", e1);
			throw new MapsException(e1);
		} finally {
			releaseConnection(conn);
		}

		return e;
	}

