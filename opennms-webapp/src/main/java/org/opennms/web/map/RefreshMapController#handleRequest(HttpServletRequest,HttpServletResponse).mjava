	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws IOException {
		
		ThreadCategory.setPrefix(MapsConstants.LOG4J_CATEGORY);
		log = ThreadCategory.getInstance(this.getClass());
		String action = request.getParameter("action");
		log.debug("Received action="+action);
		
		
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(response
				.getOutputStream(), "UTF-8"));
		VMap map = null;
		try {
			if (action.equals(MapsConstants.REFRESH_ACTION)) {
				// First refresh Element objects
				List<VElement> velements=manager.refreshMap();
				//gets map refreshed
				map = manager.openMap();
				// Second Refresh Link Object on Map
				// Now is done using a very simple way
				// but really it's slow
				// the alternative is anyway to analize all 
				// links, 1 against other.
				// So with this solution more traffic
				// less stress on server
				// more work on client
				
				// We are waiting to attempt to mapd
				map.removeAllLinks();

				// get all links on map
				//List links = null;
				List<VLink> links = manager.getLinks(velements);

				// add links to map
				map.addLinks(links.toArray(new VLink[links.size()]));
			} 
			
			if (action.equals(MapsConstants.RELOAD_ACTION)) {
				map = manager.openMap();
				// First refresh Element objects
				map = manager.reloadMap(map);
				VElement[] velements=map.getAllElements();
				
				// Second Refresh Link Object on Map
				// Now is done using a very simple way
				// but really it's slow
				// the alternativ is anyway to analize all 
				// links, 1 against other.
				// So with this solution more traffic
				// less stress on server
				// more work on client
				
				// We are waiting to attempt to mapd
				map.removeAllLinks();

				// get all links on map
				//List links = null;
				List<VLink> links = manager.getLinks(velements);

				// add links to map
				map.addLinks(links.toArray(new VLink[links.size()]));
			}
			
			if(map==null){
				throw new MapNotFoundException();
			}else{
				bw.write(ResponseAssembler.getRefreshResponse(action, map));
			}
		} catch (Exception e) {
			log.error("Error while refreshing map. Action "+action,e);
			bw.write(ResponseAssembler.getMapErrorResponse(action));
		} finally {
			bw.close();
		}

		return null;
	}

