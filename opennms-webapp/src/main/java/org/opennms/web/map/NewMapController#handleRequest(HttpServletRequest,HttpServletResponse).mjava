	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response)
			throws IOException {

		ThreadCategory.setPrefix(MapsConstants.LOG4J_CATEGORY);
		log = ThreadCategory.getInstance(this.getClass());

		int mapWidth = WebSecurityUtils.safeParseInt(request
				.getParameter("MapWidth"));
		int mapHeight = WebSecurityUtils.safeParseInt(request
					.getParameter("MapHeight"));

		if (log.isDebugEnabled())
			log.debug("Current mapWidth=" + mapWidth
					+ " and MapHeight=" + mapHeight);
			

		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(response
				.getOutputStream()));

		try {
			if (manager.isUserAdmin()) {
				
				if (log.isInfoEnabled())
					log.info("New Map in admin mode: creating new map");
			VMap map = manager.newMap(VMap.DEFAULT_NAME, MapsConstants.ROLE_ADMIN, request
						.getRemoteUser(), request.getRemoteUser(),
						mapWidth, mapHeight);
			bw.write(ResponseAssembler.getMapResponse(MapsConstants.NEWMAP_ACTION, map, 1, 1, false));
			} else {
				log.warn(request.getRemoteUser() + ": User is not in Admin mode, cannot create new map");
				bw.write(ResponseAssembler.getMapErrorResponse(MapsConstants.NEWMAP_ACTION));
			}
				
		} catch (Exception e) {
			log.error("Error while creating new map for user:"+request.getRemoteUser(),e);
			bw.write(ResponseAssembler.getMapErrorResponse(MapsConstants.NEWMAP_ACTION));
		} finally {
			bw.close();
		}

		return null;
	}

