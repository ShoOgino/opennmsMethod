	/** {@inheritDoc} */
        @Override
	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws IOException {
		Logging.putPrefix(MapsConstants.LOG4J_CATEGORY);
		
		String elems = request.getParameter("elems");
		LOG.debug("Adding Maps: elems={}", elems );
		
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(response.getOutputStream(), "UTF-8"));
		try {
			VMap map = manager.openMap();
            List<VElement> velems = new ArrayList<VElement>();
            // response for addElement
            List<Integer> mapsWithLoop = new ArrayList<Integer>();
			LOG.debug("Got map from manager {}", map);
			
			LOG.debug("Adding maps by id: {}", elems);
			String[] smapids = elems.split(",");

			for (int i = 0; i<smapids.length;i++) {
			    Integer id = new Integer(smapids[i]);
				if (map.containsElement(id, MapsConstants.MAP_TYPE)) {
					LOG.debug(" Map Contains Element: {}", id+MapsConstants.MAP_TYPE);
					continue;
					
				}
				boolean foundLoop = manager.foundLoopOnMaps(map,id);

				if(foundLoop) {
					mapsWithLoop.add(id);
				} else {
				    velems.add(manager.newElement(map.getId(),id, MapsConstants.MAP_TYPE));
				}
			} // end for

			//get map
			map = manager.addElements(map, velems);
			bw.write(ResponseAssembler.getAddElementResponse(mapsWithLoop,velems,map.getLinks()));
		} catch (Throwable e) {
			LOG.error("Error while adding Maps: ", e);
			bw.write(ResponseAssembler.getMapErrorResponse(MapsConstants.ADDMAPS_ACTION));
		} finally {
			bw.close();
		}

		return null;
	}

