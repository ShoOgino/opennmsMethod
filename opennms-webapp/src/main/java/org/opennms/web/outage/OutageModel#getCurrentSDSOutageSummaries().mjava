    /**
     * Return a list of IP addresses, the number of services down on each IP
     * address, and the longest time a service has been down for each IP
     * address. The list will be sorted in ascending order from the service down
     * longest to the service down shortest. This is a clone of
     * getCurrentOutageSummaries for Harrah's (special consideration).
     *
     * @return an array of {@link org.opennms.netmgt.model.outage.OutageSummary} objects.
     * @throws java.sql.SQLException if any.
     */
    public OutageSummary[] getCurrentSDSOutageSummaries() throws SQLException {
        OutageSummary[] summaries = new OutageSummary[0];

        try {
            Connection conn = Vault.getDbConnection();
            d.watch(conn);
            
            Statement stmt = conn.createStatement();
            d.watch(stmt);
            ResultSet rs = stmt.executeQuery("  "
            		+ "SELECT DISTINCT \n" + 
            		"         outages.nodeid, max(outages.iflostservice) AS timeDown, \n" + 
            		"         node.nodelabel \n" + 
            		"    FROM outages \n" + 
            		"    JOIN ifservices \n" + 
            		"      ON ifservices.id = outages.ifserviceid \n" + 
            		"    JOIN ipinterface \n" + 
            		"      ON ipinterface.id = ifservices.ipinterfaceid \n" + 
            		"    JOIN node \n" + 
            		"      ON node.nodeid = ipinterface.nodeid \n" + 
            		"    JOIN assets \n" + 
            		"      ON assets.nodeid = node.nodeid \n" + 
            		"   WHERE outages.ifregainedservice IS NULL \n" + 
            		"     and node.nodeType != 'D' \n" + 
            		"     and ipinterface.ismanaged != 'D' \n" + 
            		"     and ifservices.status != 'D' \n" + 
            		"     and assets.displaycategory != 'SDS-A-Side' \n" + 
            		"     and assets.displaycategory != 'SDS-B-Side' \n" + 
            		"group by outages.nodeid, node.nodelabel \n" + 
            		"order by timeDown desc;");
            d.watch(rs);

            List<OutageSummary> list = new ArrayList<OutageSummary>();

            while (rs.next()) {
                int nodeId = rs.getInt("nodeID");
                Timestamp timeDownTS = rs.getTimestamp("timeDown");
                long timeDown = timeDownTS.getTime();
                Date downDate = new Date(timeDown);
                String nodeLabel = rs.getString("nodelabel");

                list.add(new OutageSummary(nodeId, nodeLabel, downDate));
            }

            summaries = list.toArray(new OutageSummary[list.size()]);
        } finally {
            d.cleanUp();
        }

        return summaries;
    }

