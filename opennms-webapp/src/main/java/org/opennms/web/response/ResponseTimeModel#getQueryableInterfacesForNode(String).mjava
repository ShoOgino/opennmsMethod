    public ArrayList<String> getQueryableInterfacesForNode(String nodeId)
	throws SQLException {
        if (nodeId == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        // create the main stem of the select statement
        StringBuffer select = new StringBuffer("SELECT DISTINCT ipaddr FROM ipinterface WHERE nodeid=");

        select.append(nodeId);

        // close the select
        select.append(" ORDER BY ipaddr");

        Connection conn = Vault.getDbConnection();
        ArrayList<String> intfs = new ArrayList<String>();

        try {
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(select.toString());

            while (rs.next()) {
                String ipAddr = rs.getString("ipaddr");
                File intfDir = new File(getRrdDirectory(), ipAddr);

                if (intfDir.isDirectory()) {
                    intfs.add(ipAddr);
                }
            }
            rs.close();
            stmt.close();
        } finally {
            Vault.releaseDbConnection(conn);
        }

        return intfs;
    }

