    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // required parameter node
        String nodeIdString = request.getParameter("node");
        if (nodeIdString == null) {
            throw new MissingParameterException("node", new String[] { "node" });
        }

        String resource = request.getParameter("resource");

        // In this block of code, it is possible to end up with an empty
        // list of queries. This will result in a somewhat cryptic
        // "Missing parameter" message on the results.jsp page and will
        // probably be changed soon to a nicer error message.

        PrefabGraph[] queries = null;

        if (resource == null) {
            queries = this.model.getQueries(nodeIdString);
        } else {
            boolean showNodeQueries = true;
            queries = this.model.getQueries(nodeIdString, resource, showNodeQueries);
        }

        String[] queryNames = new String[queries.length];

        for (int i = 0; i < queries.length; i++) {
            queryNames[i] = queries[i].getName();
        }

        Map additions = new HashMap();
        additions.put("reports", queryNames);
        additions.put("type", "response");
        String queryString = Util.makeQueryString(request, additions);

        response.sendRedirect(Util.calculateUrlBase(request) + "graph/results?"
			      + queryString);
    }

