    private Map<String, GenericIndexGraphResourceType> getGenericIndexGraphResourceTypes() {
        Map<String, GenericIndexGraphResourceType> resourceTypes;
        resourceTypes = new LinkedHashMap<String, GenericIndexGraphResourceType>();
        
        try {
            DataCollectionConfigFactory.init();
        } catch (Exception e) {
            throw new DataAccessResourceFailureException("Could not initialize DataCollectionConfigFactory", e);
        }
        Map<String, ResourceType> configuredResourceTypes =
            DataCollectionConfigFactory.getInstance().getConfiguredResourceTypes();
        for (ResourceType resourceType : configuredResourceTypes.values()) {
            String className = resourceType.getStorageStrategy().getClazz();
            Class cinst;
            try {
                cinst = Class.forName(className);
            } catch (ClassNotFoundException e) {
                throw new ObjectRetrievalFailureException(StorageStrategy.class,
                                                          className,
                                                          "Could not load class",
                                                          e);
            }
            StorageStrategy storageStrategy;
            try {
                storageStrategy = (StorageStrategy) cinst.newInstance();
            } catch (InstantiationException e) {
                throw new ObjectRetrievalFailureException(StorageStrategy.class,
                                                          className,
                                                          "Could not instantiate",
                                                          e);
            } catch (IllegalAccessException e) {
                throw new ObjectRetrievalFailureException(StorageStrategy.class,
                                                          className,
                                                          "Could not instantiate",
                                                          e);
            }
            
            storageStrategy.setResourceTypeName(resourceType.getName());
            
            GenericIndexGraphResourceType graphResourceType =
                new GenericIndexGraphResourceType(this,
                                                  resourceType.getName(),
                                                  resourceType.getLabel(),
                                                  storageStrategy);
            resourceTypes.put(graphResourceType.getName(), graphResourceType);
        }
        return resourceTypes;
    }

