    /**
     * Recursively attempts to cast the given {@link Throwable} and it's cause
     * to an {@link Throwable} of the given type.
     *
     * @param t
     * @param type
     * @return null of no suitable cause was found.
     * @throws ServletException
     */
    public static <T extends Throwable> T getRootCause(Throwable t, Class<T> type) throws ServletException {
        if (t == null) {
            throw new ServletException("Null exceptions are not supported.");
        }

        // Can we cast the exception directly?
        if (t.getClass().isAssignableFrom(type)) {
            return type.cast(t);
        }

        // Recurse with the root cause
        if (t instanceof ServletException) {
            final ServletException se = (ServletException)t;
            final Throwable cause = se.getRootCause();
            if (cause != null) {
                return getRootCause(cause, type);
            }
        }

        throw new ServletException("Unsupported exception of type " + t.getClass().getCanonicalName(), t);
    }

