	@Transactional 
	private void convertFromModel(int nodeid, BridgeBridgeLink link) {

		BridgeLinkNode linknode = new BridgeLinkNode();
		if (nodelinks.containsKey(link.getBridgePort())) {
				linknode = nodelinks.get(link.getBridgePort());
		} else {
			linknode.setBridgeLocalPort(getBridgePortString(link.getBridgePort(),link.getBridgePortIfIndex()));
			linknode.setBridgeLocalVlan(link.getVlan());
			linknode.setBridgeLinkCreateTime(Util.formatDateToUIString(link.getBridgeBridgeLinkCreateTime()));
			linknode.setBridgeLinkLastPollTime(Util.formatDateToUIString(link.getBridgeBridgeLinkLastPollTime()));
			nodelinks.put(link.getBridgePort(), linknode);
		}
		
		BridgeLinkRemoteNode remlinknode = new BridgeLinkRemoteNode();
	
		remlinknode.setBridgeRemoteNode(link.getDesignatedNode().getLabel());
		remlinknode.setBridgeRemoteUrl(getNodeUrl(link.getDesignatedNode().getId()));
		
		remlinknode.setBridgeRemotePort(getPortString(m_snmpInterfaceDao.findByNodeIdAndIfIndex(link.getDesignatedNode().getId(), link.getDesignatedPortIfIndex())));
		remlinknode.setBridgeRemotePortUrl(getSnmpInterfaceUrl(link.getDesignatedNode().getId(), link.getDesignatedPortIfIndex()));
		
		remlinknode.setBridgeRemoteVlan(link.getDesignatedVlan());
		
		linknode.getBridgeLinkRemoteNodes().add(remlinknode);
	}

