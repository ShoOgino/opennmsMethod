	/** {@inheritDoc} */
	public String getHtmlDisplay(TableModel model, Column column) {
		ColumnBuilder columnBuilder = new ColumnBuilder(column);

		columnBuilder.tdStart();

		try {
			Object bean = model.getCurrentRowBean();
			String outageid = BeanUtils.getProperty(bean, "outageid");

			Collection<String> selectedoutagesIds = (Collection<String>) model.getContext()
					.getSessionAttribute(
							SuppressOutageCheckBoxConstants.SELECTED_OUTAGES);
			if (selectedoutagesIds != null
					&& selectedoutagesIds.contains(outageid)) {
				columnBuilder.getHtmlBuilder().input("hidden").name(
						"chkbx_" + outageid).value(
						SuppressOutageCheckBoxConstants.SELECTED).xclose();
				columnBuilder.getHtmlBuilder().input("checkbox").name(
						BeanUtils.getProperty(bean, "outageid"));
				columnBuilder.getHtmlBuilder().onclick("setOutageState(this)");
				columnBuilder.getHtmlBuilder().checked();
				columnBuilder.getHtmlBuilder().xclose();
			} else {
				columnBuilder.getHtmlBuilder().input("hidden").name(
						"chkbx_" + outageid).value(
						SuppressOutageCheckBoxConstants.UNSELECTED).xclose();
				columnBuilder.getHtmlBuilder().input("checkbox").name(
						BeanUtils.getProperty(bean, "outageid"));
				columnBuilder.getHtmlBuilder().onclick("setOutageState(this)");
				columnBuilder.getHtmlBuilder().xclose();
			}
		} catch (Throwable e) {
		}

		columnBuilder.tdEnd();
		return columnBuilder.toString();
	}

