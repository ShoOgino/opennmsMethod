    /**
     * <p>getServiceTypeNames</p>
     *
     * @return a {@link java.util.Collection} object.
     */
    @Override
    public Collection<String> getServiceTypeNames(String groupName) {
        final SortedSet<String> serviceNames = new TreeSet<String>();

        m_readLock.lock();
        try {
            m_pendingForeignSourceRepository.flush();
            final ForeignSource pendingForeignSource = m_pendingForeignSourceRepository.getForeignSource(groupName);
            serviceNames.addAll(pendingForeignSource.getDetectorNames());

            m_deployedForeignSourceRepository.flush();
            final ForeignSource deployedForeignSource = m_deployedForeignSourceRepository.getForeignSource(groupName);
            serviceNames.addAll(deployedForeignSource.getDetectorNames());

            for (final OnmsServiceType type : m_serviceTypeDao.findAll()) {
                serviceNames.add(type.getName());
            }

            // Include all of the service names defined in the poller configuration
            serviceNames.addAll(m_pollerConfig.getServiceMonitors().keySet());

            return serviceNames;
        } finally {
            m_readLock.unlock();
        }
    }

