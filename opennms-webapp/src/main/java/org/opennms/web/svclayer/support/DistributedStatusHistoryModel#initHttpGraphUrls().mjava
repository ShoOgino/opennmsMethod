    // We need to init when we are constructed so lazy loading happens during our transaction
    private void initHttpGraphUrls() {
        Collection<OnmsMonitoredService> services =
            getChosenApplicationMemberServices();
        List<OnmsMonitoredService> sortedServices =
            new ArrayList<OnmsMonitoredService>(services);
        Collections.sort(sortedServices, new Comparator<OnmsMonitoredService>() {
            public int compare(OnmsMonitoredService o1, OnmsMonitoredService o2) {
                int diff;
                diff = o1.getIpInterface().getNode().getLabel().compareToIgnoreCase(o2.getIpInterface().getNode().getLabel());
                if (diff != 0) {
                    return diff;
                }
                
                diff = o1.getIpAddress().compareTo(o2.getIpAddress());
                if (diff != 0) {
                    return diff;
                }
                
                return o1.getServiceName().compareToIgnoreCase(o2.getServiceName());
            }
        });
        
        Map<OnmsMonitoredService, String> list =
            new LinkedHashMap<OnmsMonitoredService,String>(services.size());
        
        long[] times = getChosenPeriod().getStartAndEndTimes();
        
        for (OnmsMonitoredService service : sortedServices) {
            list.put(service, getHttpGraphUrlForService(service, times));
        }
        
        m_httpGraphUrls = list;
    }

