    /**
     * <p>updateClogin</p>
     *
     * @param deviceName a {@link java.lang.String} object.
     * @param groupName a {@link java.lang.String} object.
     * @param userID a {@link java.lang.String} object.
     * @param pass a {@link java.lang.String} object.
     * @param enPass a {@link java.lang.String} object.
     * @param loginM a {@link java.lang.String} object.
     * @param autoE a {@link java.lang.String} object.
     * @return a boolean.
     */
    public boolean updateClogin(String deviceName, String groupName, String userID, String pass, String enPass, String loginM, String autoE){
        log().debug("InventoryService updateClogin for following changes"+
                    "userID ["+ userID +"] "+
                    "pass [" + pass +"] "+
                    "enpass [" + enPass+"] "+
                    "loginM [" + loginM+"] "+
                    "autoE [" + autoE+"] "+
                    "groupName (ignored) [" + groupName+"] "+
                    "deviceName [" + deviceName + "] "); 
        try {
          RancidNodeAuthentication rna = RWSClientApi.getRWSAuthNode(m_cp, deviceName);
          rna.setUser(userID);
          rna.setPassword(pass);
          rna.setConnectionMethod(loginM);
          rna.setEnablePass(enPass);
          boolean autoeb = false;
          if (autoE.compareTo("1")==0) {
              autoeb = true;
          }
          rna.setAutoEnable(autoeb);
          RWSClientApi.createOrUpdateRWSAuthNode(m_cp,rna);
          log().debug("InventoryService ModelAndView updateClogin changes submitted");
        }
        catch (Throwable e){
            log().debug("updateClogin has given exception on node "  + deviceName + " "+ e.getMessage() );
            return false;
        }
        return true;


    }

