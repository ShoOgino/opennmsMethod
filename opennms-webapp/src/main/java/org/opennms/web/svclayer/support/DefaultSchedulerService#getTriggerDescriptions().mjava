    /**
     * <p>getTriggerDescriptions</p>
     *
     * @return a {@link java.util.List} object.
     */
    @Override
    public List<TriggerDescription> getTriggerDescriptions() {

        List<TriggerDescription> triggerDescriptions = new ArrayList<TriggerDescription>();

        try {
            String[] triggerNames = m_scheduler.getTriggerNames(m_triggerGroup);
            for (int j = 0; j < triggerNames.length; j++) {
                TriggerDescription description = new TriggerDescription();
                Trigger trigger = m_scheduler.getTrigger(triggerNames[j], m_triggerGroup);
                description.setNextFireTime(trigger.getNextFireTime());
                description.setTriggerName(triggerNames[j]);
                description.setReportId((String)trigger.getJobDataMap().get("reportId"));
                description.setDeliveryOptions((DeliveryOptions) trigger.getJobDataMap().get("deliveryOptions"));
                description.setReportParameters(((ReportParameters) trigger.getJobDataMap().get("criteria")).getReportParms());
                triggerDescriptions.add(description);

            }
        } catch (SchedulerException e) {
            LOG.error("exception lretrieving trigger descriptions", e);
        }

        return triggerDescriptions;

    }

