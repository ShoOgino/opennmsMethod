    /*
     * (non-Javadoc)
     * @see
     * org.opennms.web.svclayer.support.SchedulerService#execute(org.opennms
     * .web.report.database.model.DatabaseReportCriteria, java.lang.String,
     * org.springframework.webflow.execution.RequestContext)
     */
    public String execute(DatabaseReportCriteria criteria,
            DeliveryOptions deliveryOptions, RequestContext context) {

        String reportServiceName = m_configDao.getReportService(criteria.getReportId());
        ReportService reportService;
        try {
            reportService = m_reportServiceLocator.getReportService(reportServiceName);
            if (reportService.validate(criteria.getReportParms(),
                                       criteria.getReportId()) == false) {
                context.getMessageContext().addMessage(
                                                       new MessageBuilder().error().defaultText(
                                                                                                PARAMETER_ERROR).build());
                return ERROR;
            } else {
                SimpleTrigger trigger = new SimpleTrigger("immediateTrigger",
                                                          m_triggerGroup,
                                                          new Date(), null, 0, 0L);
                trigger.setJobName(m_jobDetail.getName());
                trigger.getJobDataMap().put("criteria", criteria);
                trigger.getJobDataMap().put("deliveryOptions", deliveryOptions);
                trigger.getJobDataMap().put("reportServiceName", reportServiceName);
                try {
                    m_scheduler.scheduleJob(trigger);
                } catch (SchedulerException e) {
                    e.printStackTrace();
                    context.getMessageContext().addMessage(
                                                           new MessageBuilder().error().defaultText(
                                                                                                    SCHEDULER_ERROR).build());
                    return ERROR;
                }

                return SUCCESS;
            }
        } catch (ReportServiceLocatorException e) {
            log().error(REPORTID_ERROR);
            context.getMessageContext().addMessage(
                                                   new MessageBuilder().error().defaultText(
                                                                                            REPORTID_ERROR).build());
            return ERROR;
        }


    }

