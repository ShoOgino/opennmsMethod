	public Summary getSummary(String filterRule, final long startTime, final long endTime) {
		final SummaryBuilder bldr = new SummaryBuilder();

		
		m_filterDao.walkMatchingNodes(filterRule, new AbstractEntityVisitor() {
			public void visitNode(OnmsNode node) {
				OnmsResource resource = m_resourceDao.getResourceForNode(node);
				
				addResource(resource);
				
				for(OnmsResource child : resource.getChildResources()) {
					addResource(child);
				}
			}

			private void addResource(OnmsResource resource) {
				Collection<RrdGraphAttribute> attrs = resource.getRrdGraphAttributes().values();
				if (attrs.size() > 0) {
					bldr.addResource(resource.getLabel());
					
					for(RrdGraphAttribute attr : attrs) {
						//System.err.println("Getting values for attribute: "+attr);
						bldr.addAttribute(attr.getName());
						bldr.setMin(m_rrdDao.getPrintValue(attr, "MIN", startTime, endTime));
						bldr.setAverage(m_rrdDao.getPrintValue(attr, "AVERAGE", startTime, endTime));
						bldr.setMax(m_rrdDao.getPrintValue(attr, "MAX", startTime, endTime));
					}
				}
			}
		});
		
		return bldr.getSummary();
	}

