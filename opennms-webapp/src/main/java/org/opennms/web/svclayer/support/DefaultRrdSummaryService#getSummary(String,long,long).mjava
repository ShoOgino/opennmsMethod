	public Summary getSummary(String filterRule, final long startTime, final long endTime) {
		final SummaryBuilder bldr = new SummaryBuilder();

		
		m_filterDao.walkMatchingNodes(filterRule, new AbstractEntityVisitor() {
			public void visitNode(OnmsNode node) {
				OnmsResource nodeResource = m_resourceDao.getResourceForNode(node);
				
				bldr.pushResource(node.getLabel());

				for(OnmsResource child : nodeResource.getChildResources()) {
					if (child.getResourceType() instanceof NodeSnmpResourceType) {
						addAttributes(child.getRrdGraphAttributes().values());
					} 
				}
				
				for(OnmsResource child : nodeResource.getChildResources()) {
					if (!(child.getResourceType() instanceof NodeSnmpResourceType)) {
						addResource(child);
					}
				}
				
				bldr.popResource();
			}
			
			private void addResource(OnmsResource resource) {
				addResource(resource, resource.getLabel());
			}

			private void addResource(OnmsResource resource, String label) {
				Collection<RrdGraphAttribute> attrs = resource.getRrdGraphAttributes().values();
				if (attrs.size() > 0) {
					bldr.addResource(label);
					addAttributes(attrs);
				}
			}

			private void addAttributes(Collection<RrdGraphAttribute> attrs) {
				for(RrdGraphAttribute attr : attrs) {
					//System.err.println("Getting values for attribute: "+attr);
					bldr.addAttribute(attr.getName());
					bldr.setMin(m_rrdDao.getPrintValue(attr, "AVERAGE", "MIN", startTime*1000, endTime*1000));
					bldr.setAverage(m_rrdDao.getPrintValue(attr, "AVERAGE", "AVERAGE", startTime*1000, endTime*1000));
					bldr.setMax(m_rrdDao.getPrintValue(attr, "AVERAGE", "MAX", startTime*1000, endTime*1000));
				}
			}
		});
		
		return bldr.getSummary();
	}

