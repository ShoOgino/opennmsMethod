    /** {@inheritDoc} */
    public void save(String groupName, Requisition group) {
        checkGroupName(groupName);
        
        File importFile = getImportFile(groupName);
        
        if (importFile.exists()) {
            Requisition currentData = get(groupName);
            if (currentData.getDateStamp().compare(group.getDateStamp()) > 0) {
                throw new OptimisticLockingFailureException("Data in file "+importFile+" is newer than data to be saved!");
            }
        }
        
        
        Writer w = null;
        try {
            // write to a string to check constraints
            StringWriter strWriter = new StringWriter();
            group.updateDateStamp();
            Marshaller.marshal(group, strWriter);
            
            // if we successfully get here then the file is correct
            w = new OutputStreamWriter(new FileOutputStream(importFile), "UTF-8");
            w.write(strWriter.toString());
            
        } catch (IOException e) {
            throw new PermissionDeniedDataAccessException("Unable to write file "+importFile, e);
        } catch (MarshalException e) {
            throw new MarshallingDataAccessFailureException("Unable to marshall import data to file "+importFile, e);
        } catch (ValidationException e) {
            throw new MarshallingDataAccessFailureException("Invalid data for group "+groupName, e);
        } finally {
            if (w != null) {
                IOUtils.closeQuietly(w);
            }
        }
        

    }

