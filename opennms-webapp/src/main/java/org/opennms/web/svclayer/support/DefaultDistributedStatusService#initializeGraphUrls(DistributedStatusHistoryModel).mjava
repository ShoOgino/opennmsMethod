    private void initializeGraphUrls(DistributedStatusHistoryModel model) {
        if (model.getChosenMonitor() != null) {
        
            Collection<OnmsMonitoredService> services =
                model.getChosenApplicationMemberServices();
            List<OnmsMonitoredService> sortedServices =
                new ArrayList<OnmsMonitoredService>(services);
            Collections.sort(sortedServices, new Comparator<OnmsMonitoredService>() {
                public int compare(OnmsMonitoredService o1, OnmsMonitoredService o2) {
                    int diff;
                    diff = o1.getIpInterface().getNode().getLabel().compareToIgnoreCase(o2.getIpInterface().getNode().getLabel());
                    if (diff != 0) {
                        return diff;
                    }
        
                    diff = o1.getIpAddress().compareTo(o2.getIpAddress());
                    if (diff != 0) {
                        return diff;
                    }
        
                    return o1.getServiceName().compareToIgnoreCase(o2.getServiceName());
                }
            });
        
            Map<OnmsMonitoredService, String> list =
                new LinkedHashMap<OnmsMonitoredService,String>(services.size());
        
            long[] times = model.getChosenPeriod().getStartAndEndTimes();
        
            for (OnmsMonitoredService service : sortedServices) {
                list.put(service, getGraphUrlForService(model.getChosenMonitor(), service, times));
            }
        
            model.setHttpGraphUrls(list);

        }
    }

