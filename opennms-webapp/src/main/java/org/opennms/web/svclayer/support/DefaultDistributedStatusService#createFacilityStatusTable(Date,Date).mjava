    /*
     * XXX what do we do if any of the DAO calls return null, or do they
     * throw DataAccessException?
     */
    public SimpleWebTable createFacilityStatusTable(Date startDate,
            Date endDate) {
        SimpleWebTable table = new SimpleWebTable();
        
        List<OnmsMonitoringLocationDefinition> locationDefinitions =
            m_locationMonitorDao.findAllMonitoringLocationDefinitions();
        
        List<OnmsApplication> sortedApplications =
            new ArrayList<OnmsApplication>(m_applicationDao.findAll());
        Collections.sort(sortedApplications,
                         new Comparator<OnmsApplication>(){
            public int compare(OnmsApplication o1, OnmsApplication o2) {
                return o1.getLabel().compareTo(o2.getLabel());
            }
        });
        
        Collection<OnmsLocationSpecificStatus> mostRecentStatuses =
            m_locationMonitorDao.getAllMostRecentStatusChanges();
        
        Collection<OnmsLocationSpecificStatus> statusesWithinPeriod =
            m_locationMonitorDao.getStatusChangesBetween(startDate, endDate);

        
        table.setTitle("Distributed Poller Status Summary");
        
        table.addColumn("Area", "simpleWebTableRowLabel");
        table.addColumn("Location", "simpleWebTableRowLabel");
        for (OnmsApplication application : sortedApplications) {
            table.addColumn(application.getLabel(), "simpleWebTableRowLabel");
        }
        
        for (OnmsMonitoringLocationDefinition locationDefinition : locationDefinitions) {
            Collection<OnmsLocationMonitor> monitors =
                m_locationMonitorDao.findByLocationDefinition(locationDefinition);
            
            table.newRow();
            table.addCell(locationDefinition.getArea(), "simpleWebTableRowLabel");
            table.addCell(locationDefinition.getName(), "simpleWebTableRowLabel");
            
            for (OnmsApplication application : sortedApplications) {
                /*
                 *  XXX this is totally wrong.... we need to add a single cell
                 *  for each application composed of the status for all
                 *  monitors
                 */
                //for (OnmsLocationMonitor monitor : monitors) {
                //}
                String status =
                    calculateCurrentStatus(monitors,
                                           application.getMemberServices(),
                                           mostRecentStatuses);

                String percentage =
                    calculatePercentageUptime(monitors,
                                              application.getMemberServices(),
                                              statusesWithinPeriod,
                                              startDate, endDate);
                
                table.addCell(percentage, status,
                              createDetailsPageUrl(locationDefinition, application));
            }
        }
        
        return table;
    }

