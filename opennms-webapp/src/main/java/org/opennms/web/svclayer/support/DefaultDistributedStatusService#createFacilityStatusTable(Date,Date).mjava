    public SimpleWebTable createFacilityStatusTable(Date startDate,
            Date endDate) {
        SimpleWebTable table = new SimpleWebTable();
        
        List<OnmsMonitoringLocationDefinition> locationDefinitions =
            m_locationMonitorDao.findAllMonitoringLocationDefinitions();

        Collection<OnmsApplication> applications = m_applicationDao.findAll();
        if (applications.size() == 0) {
            throw new IllegalArgumentException("there are no applications");
        }
        
        List<OnmsApplication> sortedApplications =
            new ArrayList<OnmsApplication>(applications);
        Collections.sort(sortedApplications,
                         new Comparator<OnmsApplication>(){
            public int compare(OnmsApplication o1, OnmsApplication o2) {
                return o1.getName().compareTo(o2.getName());
            }
        });
        
        Collection<OnmsLocationSpecificStatus> mostRecentStatuses =
            m_locationMonitorDao.getAllMostRecentStatusChanges();
        
        Collection<OnmsLocationSpecificStatus> statusesWithinPeriod =
            m_locationMonitorDao.getStatusChangesBetween(startDate, endDate);
        
        Collection<OnmsLocationSpecificStatus> statusesBeforePeriod =
            m_locationMonitorDao.getAllStatusChangesAt(startDate);
        
        Collection<OnmsLocationSpecificStatus> statusesPeriod =
            new HashSet<OnmsLocationSpecificStatus>();
        statusesPeriod.addAll(statusesBeforePeriod);
        statusesPeriod.addAll(statusesWithinPeriod);
        
        table.setTitle("Distributed Poller Status Summary");
        
        table.addColumn("Area", "");
        table.addColumn("Location", "");
        for (OnmsApplication application : sortedApplications) {
            table.addColumn(application.getName(), "");
        }
        
        for (OnmsMonitoringLocationDefinition locationDefinition : locationDefinitions) {
            Collection<OnmsLocationMonitor> monitors =
                m_locationMonitorDao.findByLocationDefinition(locationDefinition);
            
            table.newRow();
            table.addCell(locationDefinition.getArea(), "");
            table.addCell(locationDefinition.getName(), "");
            
            for (OnmsApplication application : sortedApplications) {
                Collection<OnmsMonitoredService> memberServices =
                    m_monitoredServiceDao.findByApplication(application);
                String status =
                    calculateCurrentStatus(monitors,
                                           memberServices,
                                           mostRecentStatuses);
            
                
                Set<OnmsLocationSpecificStatus> selectedStatuses =
                    filterStatus(statusesPeriod, monitors, memberServices);
                
                if (selectedStatuses.size() > 0) {
                    String percentage =
                        calculatePercentageUptime(memberServices,
                                                  selectedStatuses,
                                                  startDate, endDate);
                    table.addCell(percentage, status,
                                  createHistoryPageUrl(locationDefinition,
                                                       application));
                } else {
                    table.addCell("No data", status);
                }
            }
        }
        
        return table;
    }

