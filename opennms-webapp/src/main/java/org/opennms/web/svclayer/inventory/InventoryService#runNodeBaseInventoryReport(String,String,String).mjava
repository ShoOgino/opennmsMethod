    public boolean runNodeBaseInventoryReport(String _date, String field, String _type){
        
        RwsNbinventoryreport rnbi = InventoryReport.runInventoryReport(m_cp, _date, field);
        try {
            SimpleDateFormat fmt = new SimpleDateFormat("yyyyMMddHHmmss");
            String xmlFileName = ConfigFileConstants.getHome() + "/share/reports/NODEINVENTORY" + fmt.format(new java.util.Date()) + ".xml";

            // Generate source XML
            FileWriter writer = new FileWriter(xmlFileName);
            Marshaller marshaller = new Marshaller(writer);
            marshaller.setSuppressNamespaces(true);
            marshaller.marshal(rnbi);
            writer.close();
            log().debug("runNodeBaseInventoryReport marshal done");
            
//            // prepare PDF file
//            String pdfFileName="/home/gugli/OPENNMS/trunk/target/opennms-1.7.4-SNAPSHOT/logs/webapp/report.pdf";
//            File file = new File(pdfFileName);
//            FileOutputStream pdfFileWriter = new FileOutputStream(file);
//            PDFWriter pdfWriter = new PDFWriter(ConfigFileConstants.getFilePathString()
//                                               + "PDFInventoryReport.xsl");
//            log().debug("runNodeBaseInventoryReport xsl " + ConfigFileConstants.getFilePathString()
//                        + "PDFInventoryReport.xsl");
//
//            // prepare to read xml generated above
//            File fileR = new File("/home/gugli/OPENNMS/trunk/target/opennms-1.7.4-SNAPSHOT/logs/webapp/report.xml");
//            FileReader fileReader = new FileReader(fileR);
//
//            //invoke api to generate pdf
//            pdfWriter.generatePDF(fileReader, pdfFileWriter,"/home/gugli/OPENNMS/trunk/target/opennms-1.7.4-SNAPSHOT/logs/webapp/report.fot");
//            log().debug("runNodeBaseInventoryReport pdf done");
////
////            
////            SimpleDateFormat fmt = new SimpleDateFormat("yyyyMMdd");
////            String xmlFileName = ConfigFileConstants.getHome()
////            + "/share/reports/RANCID-INVENTORY" + fmt.format(new java.util.Date()) + ".xml";
        }
        catch (Exception e){
            log().debug("InventoryService runNodeBaseInventoryReport marshall exception "+ e.getMessage() );
            return false;
        }

        return true;
    }

