    public PluginWrapper(String className) throws ClassNotFoundException {
        m_className = className;
        BeanWrapper wrapper = new BeanWrapperImpl(Class.forName(m_className));

        for (PropertyDescriptor pd : wrapper.getPropertyDescriptors()) {
            if (pd.getName().equals("class")) {
                continue;
            }
            Method m = pd.getReadMethod();
            if (m.isAnnotationPresent(Allow.class)) {
                Set<String> values = new TreeSet<String>();
                Allow a = m.getAnnotation(Allow.class);
                for (String key: a.value()) {
                    values.add(key);
                }
                m_required.put(pd.getName(), values);
            } else {
                m_optional.put(pd.getName(), null);
            }
        }
    }

