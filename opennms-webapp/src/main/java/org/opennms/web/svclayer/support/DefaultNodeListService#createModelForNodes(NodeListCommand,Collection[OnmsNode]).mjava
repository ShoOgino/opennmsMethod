    private NodeListModel createModelForNodes(NodeListCommand command, Collection<OnmsNode> onmsNodes) {
        int interfaceCount = 0;
        List<NodeModel> displayNodes = new LinkedList<NodeModel>();
        for (OnmsNode node : onmsNodes) {
            List<OnmsIpInterface> displayInterfaces = new LinkedList<OnmsIpInterface>();
            if (command.getListInterfaces()) {
                if (command.hasIfAlias()) {
                    for (OnmsIpInterface intf : node.getIpInterfaces()) {
                        if (intf.getSnmpInterface() != null && intf.getSnmpInterface().getIfAlias() != null && intf.getSnmpInterface().getIfAlias().toLowerCase().contains(command.getIfAlias().toLowerCase())) {
                            displayInterfaces.add(intf);
                        }
                    }
                } else {
                    for (OnmsIpInterface intf : node.getIpInterfaces()) {
                        if (!"D".equals(intf.getIsManaged()) && !"0.0.0.0".equals(intf.getIpAddress())) {
                            displayInterfaces.add(intf);
                        }
                    }
                }
            }
            
            Collections.sort(displayInterfaces, IP_INTERFACE_COMPARATOR);
            

            displayNodes.add(new NodeListModel.NodeModel(node, displayInterfaces));
            interfaceCount += displayInterfaces.size();
        }

        return new NodeListModel(displayNodes, interfaceCount);
    }

