    private NodeListModel createModelForNodes(NodeListCommand command, Collection<OnmsNode> onmsNodes) {
        int interfaceCount = 0;
        int arpInterfaceCount = 0;
        List<NodeModel> displayNodes = new LinkedList<NodeModel>();
        for (OnmsNode node : onmsNodes) {
            List<OnmsIpInterface> displayInterfaces = new LinkedList<OnmsIpInterface>();
            List<OnmsArpInterface> displayArpInterfaces = new LinkedList<OnmsArpInterface>();
            if (command.getListInterfaces()) {
                if (command.hasIfAlias()) {
                    for (OnmsIpInterface intf : node.getIpInterfaces()) {
                        if (intf.getSnmpInterface() != null && intf.getSnmpInterface().getIfAlias() != null && intf.getSnmpInterface().getIfAlias().toLowerCase().contains(command.getIfAlias().toLowerCase())) {
                            displayInterfaces.add(intf);
                        }
                    }
                } else if (command.hasMaclike()) {
                	for (OnmsIpInterface intf : node.getIpInterfaces()) {
                		if (intf.getSnmpInterface() != null &&intf.getSnmpInterface().getPhysAddr() != null && intf.getSnmpInterface().getPhysAddr().toLowerCase().contains(command.getMaclike().toLowerCase())) {
                			displayInterfaces.add(intf);
                		}
                	}
                	for (OnmsArpInterface aint : node.getArpInterfaces()) {
                		if (aint.getPhysAddr() != null && aint.getPhysAddr().toLowerCase().contains(command.getMaclike().toLowerCase())) {
                			OnmsIpInterface intf = node.getIpInterfaceByIpAddress(aint.getIpAddress());
                			if ((intf == null || intf.getSnmpInterface() == null || intf.getSnmpInterface().getPhysAddr() == null || !intf.getSnmpInterface().getPhysAddr().equalsIgnoreCase(aint.getPhysAddr()))) {
                				displayArpInterfaces.add(aint);
                			}
                		}
                	}
                } else {
                    for (OnmsIpInterface intf : node.getIpInterfaces()) {
                        if (!"D".equals(intf.getIsManaged()) && !"0.0.0.0".equals(intf.getIpAddress())) {
                            displayInterfaces.add(intf);
                        }
                    }
                }
            }
            
            Collections.sort(displayInterfaces, IP_INTERFACE_COMPARATOR);
            Collections.sort(displayArpInterfaces, ARP_INTERFACE_COMPARATOR);           

            displayNodes.add(new NodeListModel.NodeModel(node, displayInterfaces, displayArpInterfaces));
            interfaceCount += displayInterfaces.size();
            interfaceCount += displayArpInterfaces.size();
        }

        return new NodeListModel(displayNodes, interfaceCount);
    }

