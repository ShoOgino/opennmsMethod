        public int compare(OnmsArpInterface o1, OnmsArpInterface o2) {
            int diff;

            // Sort by IP first if the IPs are non-0.0.0.0
            if (!"0.0.0.0".equals(o1.getIpAddress()) && !"0.0.0.0".equals(o2.getIpAddress())) {
                if (InetAddressUtils.toIpAddrLong(o1.getIpAddress()) > InetAddressUtils.toIpAddrLong(o2.getIpAddress())) {
                    return 1;
                } else if (InetAddressUtils.toIpAddrLong(o1.getIpAddress()) < InetAddressUtils.toIpAddrLong(o2.getIpAddress())) {
                    return -1;
                } else {
                    return 0;
                }
            } else {
                // Sort IPs that are non-0.0.0.0 so they are first
                if (!"0.0.0.0".equals(o1.getIpAddress())) {
                    return -1;
                } else if (!"0.0.0.0".equals(o2.getIpAddress())) {
                    return 1;
                }
            }
            
            // Sort by mac address
            if (o1.getPhysAddr() == null || o2.getPhysAddr() == null) {
                if (o1.getPhysAddr() != null) {
                    return -1;
                } else if (o2.getPhysAddr() != null) {
                    return 1;
                }
            } else if ((diff = o1.getPhysAddr().compareTo(o2.getPhysAddr())) != 0) {
                return diff;
            }
            
            // Fallback to id
            return o1.getId().compareTo(o2.getId());
        }

