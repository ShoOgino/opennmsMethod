	/**
	 * <p>suppress</p>
	 *
	 * @param outageid a {@link java.lang.Integer} object.
	 * @param time a {@link java.lang.String} object.
	 * @param outageService a {@link org.opennms.web.svclayer.outage.OutageService} object.
	 * @param suppressor a {@link java.lang.String} object.
	 */
	public void suppress(Integer outageid, String time,OutageService outageService, String suppressor) {

		OnmsOutage outage = (OnmsOutage) outageService.load(outageid);
		GregorianCalendar suppress = new GregorianCalendar();

		if ("-1".equals(time)) {
			// Suppress forever
			suppress.add(GregorianCalendar.YEAR, LONG_TIME);

		} else if ("".equals(time)) {
			// Just ignore this for now.

		} else {
			// We just append the time to the suppresstime column.
			suppress.add(GregorianCalendar.MINUTE, WebSecurityUtils.safeParseInt(time));

		}

		if (!"".equals(time)) {

			if ("-2".equals(time)) {
			    outage.setSuppressTime(null);
			} else {
			    outage.setSuppressTime(suppress.getTime());
			}
			outage.setSuppressedBy(suppressor);
			outageService.update(outage);

		}
	}

