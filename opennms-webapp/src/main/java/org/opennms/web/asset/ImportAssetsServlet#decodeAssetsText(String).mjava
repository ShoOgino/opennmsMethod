    public List<Asset> decodeAssetsText(String text) throws AssetException {
        CSVReader reader = new CSVReader(new StringReader(text));
        String[] line;
        List<Asset> list = new ArrayList<Asset>();
        text = text.trim();
        
        int count = 0;

        try {
            while ((line = reader.readNext()) != null) {
                count++;
                try {

                    if (line.length != 39) {
                        throw new NoSuchElementException();
                    }

                    // skip the first line if it's the headers
                    if (line[0].equals("Node Label")) {
                        continue;
                    }
                    
                    Asset asset = new Asset();

                    asset.setNodeId(WebSecurityUtils.safeParseInt(line[1]));
                    asset.setCategory(Util.decode(line[2]));
                    asset.setManufacturer(Util.decode(line[3]));
                    asset.setVendor(Util.decode(line[4]));
                    asset.setModelNumber(Util.decode(line[5]));
                    asset.setSerialNumber(Util.decode(line[6]));
                    asset.setDescription(Util.decode(line[7]));
                    asset.setCircuitId(Util.decode(line[8]));
                    asset.setAssetNumber(Util.decode(line[9]));
                    asset.setOperatingSystem(Util.decode(line[10]));
                    asset.setRack(Util.decode(line[11]));
                    asset.setSlot(Util.decode(line[12]));
                    asset.setPort(Util.decode(line[13]));
                    asset.setRegion(Util.decode(line[14]));
                    asset.setDivision(Util.decode(line[15]));
                    asset.setDepartment(Util.decode(line[16]));
                    asset.setAddress1(Util.decode(line[17]));
                    asset.setAddress2(Util.decode(line[18]));
                    asset.setCity(Util.decode(line[19]));
                    asset.setState(Util.decode(line[20]));
                    asset.setZip(Util.decode(line[21]));
                    asset.setBuilding(Util.decode(line[22]));
                    asset.setFloor(Util.decode(line[23]));
                    asset.setRoom(Util.decode(line[24]));
                    asset.setVendorPhone(Util.decode(line[25]));
                    asset.setVendorFax(Util.decode(line[26]));
                    asset.setDateInstalled(Util.decode(line[27]));
                    asset.setLease(Util.decode(line[28]));
                    asset.setLeaseExpires(Util.decode(line[29]));
                    asset.setSupportPhone(Util.decode(line[30]));
                    asset.setMaintContract(Util.decode(line[31]));
                    asset.setVendorAssetNumber(Util.decode(line[32]));
                    asset.setMaintContractExpires(Util.decode(line[33]));
                    asset.setDisplayCategory(Util.decode(line[34]));
                    asset.setNotifyCategory(Util.decode(line[35]));
                    asset.setPollerCategory(Util.decode(line[36]));
                    asset.setThresholdCategory(Util.decode(line[37]));
                    asset.setComments(Util.decode(line[38]));
                    
                    list.add(asset);

                } catch (NoSuchElementException e) {
                    errors.add("Ignoring malformed import for entry " + count + ", not enough values.");
                } catch (NumberFormatException e) {
                    errors.add("Ignoring malformed import for entry " + count + ", node id not a number.");
                }
            }
        } catch (IOException e) {
            throw new AssetException("An error occurred reading the CSV input.", e);
        }

        if (list.size() == 0) {
        	throw new AssetException("No asset information was found.");
        }

        return list;
    }

