    private void ensureUEIInEventConf(org.opennms.netmgt.xml.eventconf.Event source, String targetUei, ThresholdType thresholdType, String clearKey, boolean isTrigger) {
        List<org.opennms.netmgt.xml.eventconf.Event> eventsForUEI = m_eventConfDao.getEvents(targetUei);
        if (eventsForUEI == null || eventsForUEI.size() == 0) {
            String typeDesc = isTrigger ? "exceeded" : "rearmed";
            org.opennms.netmgt.xml.eventconf.Event event = new org.opennms.netmgt.xml.eventconf.Event();
            event.setUei(targetUei);
            event.setEventLabel("User-defined " + thresholdType + " threshold event " + typeDesc + ": " + targetUei);
            Logmsg logmsg = new Logmsg();
            event.setLogmsg(logmsg);
            if (source == null) {
                event.setDescr("Threshold " + typeDesc + " for %service% datasource %parm[ds]% on interface %interface%, parms: %parm[all]%");
                logmsg.setDest("logndisplay");
                logmsg.setContent("Threshold " + typeDesc + " for %service% datasource %parm[ds]% on interface %interface%, parms: %parm[all]%");
                event.setLogmsg(logmsg);
                event.setSeverity("Warning");
            } else {
                event.setDescr(source.getDescr());
                event.setSeverity(source.getSeverity());
                event.setOperinstruct(source.getOperinstruct());
                logmsg.setDest(source.getLogmsg().getDest());
                logmsg.setContent(source.getLogmsg().getContent());
                if (source.getAlarmData() != null) {
                    AlarmData alarmData = new AlarmData();
                    alarmData.setAlarmType(source.getAlarmData().getAlarmType());
                    alarmData.setAutoClean(source.getAlarmData().getAutoClean());
                    alarmData.setReductionKey(source.getAlarmData().getReductionKey());
                    if (!isTrigger && clearKey != null) {
                        alarmData.setClearKey(clearKey);
                    }
                    event.setAlarmData(alarmData);
                }
            }
            m_eventConfDao.addEventToProgrammaticStore(event);
            eventConfChanged = true;
        }
    }

