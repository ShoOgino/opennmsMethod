    private Map<String, Object> createModel(final HttpServletRequest request) {
        Map<String, Object> model = Maps.newHashMap();

        // Create the NavBarModel
        final Map<NavBarEntry, DisplayStatus> navBar = new LinkedHashMap<NavBarEntry, DisplayStatus>();
        for (final NavBarEntry entry : getNavBarItems()) {
            navBar.put(entry, entry.evaluate(request));
        }
        model.put("model", new NavBarModel(request, navBar));

        // Add additional facts required to render the menu
        model.put("request", request);
        model.put("baseHref",
                org.opennms.web.api.Util.calculateUrlBase(request));
        model.put("isProvision", request.isUserInRole(Authentication.ROLE_PROVISION));
        model.put("isAdmin", request.isUserInRole(Authentication.ROLE_ADMIN));

        String noticeStatus = "Unknown";
        try {
            noticeStatus = NotifdConfigFactory.getPrettyStatus();
        } catch (final Throwable t) {
        }
        model.put("noticeStatus", noticeStatus);

        // Helper functions
        model.put("shouldDisplay", new ShouldDisplayEntryMethod(request));

        return model;
    }

