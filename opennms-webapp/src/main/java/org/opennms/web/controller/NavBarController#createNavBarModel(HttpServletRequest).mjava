    private NavBarModel createNavBarModel(HttpServletRequest request) {
        String mapEnableLocation = Vault.getHomeDir() + File.separator
                + "etc" + File.separator + "map.enable";
        File mapEnableFile = new File(mapEnableLocation);

        String vulnEnableLocation = Vault.getHomeDir() + File.separator
                + "etc" + File.separator + "vulnerabilities.enable";
        File vulnEnableFile = new File(vulnEnableLocation);

        LinkedList<NavBarEntry> navBar = new LinkedList<NavBarEntry>();
        navBar.add(new NavBarEntry("nodelist", "element/nodeList.htm",
                                   "Node List"));
        navBar.add(new NavBarEntry("element", "element/index.jsp", "Search"));
        navBar.add(new NavBarEntry("outages", "outage/index.jsp", "Outages"));
        navBar.add(new NavBarEntry("pathOutage", "pathOutage/index.jsp",
                                   "Path Outages"));
        navBar.add(new NavBarEntry("dashboard", "dashboard.jsp", "Dashboard"));
        navBar.add(new NavBarEntry("event", "event/index.jsp", "Events"));
        navBar.add(new NavBarEntry("alarm", "alarm/index.jsp", "Alarms"));
        navBar.add(new NavBarEntry("notification", "notification/index.jsp",
                                   "Notification"));
        navBar.add(new NavBarEntry("asset", "asset/index.jsp", "Assets"));
        navBar.add(new NavBarEntry("report", "report/index.jsp", "Reports"));
        navBar.add(new NavBarEntry("chart", "charts/index.jsp", "Charts"));
        
        if (m_surveillanceViewConfigDao.getViews().getViewCount() > 0 &&
                m_surveillanceViewConfigDao.getDefaultView() != null) {
            String viewName =
                m_surveillanceViewConfigDao.getDefaultView().getName();
            navBar.add(new NavBarEntry("surveillance",
                                       "surveillanceView.htm?viewName="
                                           + Util.htmlify(viewName),
                                       "Surveillance"));
        }
        
        if (m_locationMonitorDao.findAllMonitoringLocationDefinitions().size() > 0) {
            navBar.add(new NavBarEntry("distributedstatus",
                                       "distributedStatusSummary.htm",
                                       "Distributed Status"));
        }
        
        if (vulnEnableFile.exists()) {
            navBar.add(new NavBarEntry("vulnerability",
                                       "vulnerability/index.jsp",
                                       "Vulnerabilities"));
        }
        if (mapEnableFile.exists()) {
            navBar.add(new NavBarEntry("map", "Index.map", "Map"));
        }
        if (request.isUserInRole(Authentication.ADMIN_ROLE)) {
            navBar.add(new NavBarEntry("admin", "admin/index.jsp", "Admin"));
        }
        navBar.add(new NavBarEntry("help", "help/index.jsp", "Help"));

        return new NavBarModel(navBar, request.getParameter("location"));
    }

