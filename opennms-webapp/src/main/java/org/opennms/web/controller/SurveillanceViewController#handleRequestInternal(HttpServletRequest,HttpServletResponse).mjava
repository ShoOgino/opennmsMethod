    @Override
    protected ModelAndView handleRequestInternal(HttpServletRequest req,
            HttpServletResponse resp) throws Exception {

        final String progressMonitorKey = "surveillanceViewProgressMonitor";

        if ( ! m_service.isViewName(req.getParameter("viewName")) ) {
            SurveillanceViewError viewError = createSurveillanceViewError( req.getParameter("viewName") );
            return new ModelAndView("surveillanceViewError", "error", viewError);
        }

        HttpSession session = req.getSession();
        resp.setHeader("Refresh", m_service.getHeaderRefreshSeconds(req.getParameter("viewName")));
        ProgressMonitor progressMonitor = (ProgressMonitor) session.getAttribute(progressMonitorKey);

        if (progressMonitor == null) {
            progressMonitor = createProgressMonitor(req.getParameter("viewName"));
            session.setAttribute(progressMonitorKey, progressMonitor);
        }

        if (progressMonitor.isError()) {
            session.removeAttribute(progressMonitorKey);
            Throwable t = progressMonitor.getThrowable();
            throw new Exception("SurveillanceView Builder Thread threw exception: ["
                    + t.getClass().getName() + "] "
                    + t.getMessage(), t);
        }

        if (progressMonitor.isFinished()) {
            session.removeAttribute(progressMonitorKey);
            SimpleWebTable table = (SimpleWebTable) progressMonitor.getResult();
            return new ModelAndView("surveillanceView", "webTable", table);
        }

        return new ModelAndView("progressBar", "progress", progressMonitor);

    }

