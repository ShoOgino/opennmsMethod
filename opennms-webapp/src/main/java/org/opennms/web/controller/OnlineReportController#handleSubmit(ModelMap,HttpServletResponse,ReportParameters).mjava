    @RequestMapping(method=RequestMethod.POST, params="run")
    public String handleSubmit(ModelMap modelMap, HttpServletResponse response, @ModelAttribute("parameters") ReportParameters parameters) throws IOException {
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        try {
            m_reportWrapperService.runAndRender(parameters, ReportMode.IMMEDIATE, outputStream);
            if ((parameters.getFormat() == ReportFormat.PDF) || (parameters.getFormat() == ReportFormat.SVG) ) {
                response.setContentType("application/pdf;charset=UTF-8");
                response.setHeader("Content-disposition", "inline; filename=report.pdf");
                response.setHeader("Pragma", "public");
                response.setHeader("Cache-Control", "cache");
                response.setHeader("Cache-Control", "must-revalidate");
            }
            if(parameters.getFormat() == ReportFormat.CSV) {
                response.setContentType("text/csv;charset=UTF-8");
                response.setHeader("Content-disposition", "inline; filename=report.csv");
                response.setHeader("Pragma", "public");
                response.setHeader("Cache-Control", "cache");
                response.setHeader("Cache-Control", "must-revalidate");
            }
            response.getOutputStream().write(outputStream.toByteArray());
            return null;
        } catch (ReportException ex) {
            // forward to same page, but now show errors
            modelMap.addAttribute("errorMessage", ex.getMessage());
            modelMap.addAttribute("errorCause", ex.getCause());
            handleGet(modelMap, parameters.getReportId()); // add default view parameters
            return "report/database/onlineReport";
        } finally {
            IOUtils.closeQuietly(outputStream);
        }
    }

