    /** {@inheritDoc} */
    @Override
    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {
        // Get Form Variables
        int reportId = -1; 
        String overrideTimespan = null;
        String overrideGraphType = null;
        String reportAction = WebSecurityUtils.sanitizeString(request.getParameter(Parameters.action.toString()));
        String reportIdString = WebSecurityUtils.sanitizeString(request.getParameter(Parameters.report.toString()));
        String reportType = WebSecurityUtils.sanitizeString(request.getParameter(Parameters.type.toString()));
        if (reportAction == null) {
            throw new MissingParameterException ("action", new String[] {"action", "report", "type"});
        }
        if (reportType == null) {
            throw new MissingParameterException ("type", new String[] {"action", "report", "type"});
        }
        if (reportIdString == null) {
            throw new MissingParameterException ("report", new String[] {"action", "report", "type"});
            
        }

        if (Actions.Customize.toString().equals(reportAction) || Actions.Update.toString().equals(reportAction)) {
            if (reportType.equals("node") || reportType.equals("custom")) {
                reportId = WebSecurityUtils.safeParseInt(reportIdString);
            }
            overrideTimespan = WebSecurityUtils.sanitizeString(request.getParameter(Parameters.timespan.toString()));
            if ((overrideTimespan == null) || overrideTimespan.equals("null")) {
                overrideTimespan = "none";
            }
            overrideGraphType = WebSecurityUtils.sanitizeString(request.getParameter(Parameters.graphtype.toString()));
            if (overrideGraphType == null || overrideGraphType.equals("null")) {
                overrideGraphType = "none";
            }
            if (Actions.Customize.toString().equals(reportAction)) {
             // Fetch the KscReportEditor or create one if there isn't one already
                KscReportEditor editor = KscReportEditor.getFromSession(request.getSession(), false);
                
                LOG.debug("handleRequestInternal: build report for reportType {}", reportType);
                if (reportType.equals("node")) {
                    editor.loadWorkingReport(m_kscReportService.buildNodeReport(reportId));
                } else if (reportType.equals("nodeSource")) {
  
                    editor.loadWorkingReport(m_kscReportService.buildNodeSourceReport(reportIdString));
                } else if (reportType.equals("domain")) {
                    editor.loadWorkingReport(m_kscReportService.buildDomainReport(reportIdString));
                } else { 
                    editor.loadWorkingReport(getKscReportFactory(), reportId);
                }
                
                // Now inject any override characteristics into the working report model
                Report working_report = editor.getWorkingReport();
                for (int i=0; i<working_report.getGraphs().size(); i++) {
                    final int index = i;
                    Graph working_graph = working_report.getGraphs().get(index);
                    if (!overrideTimespan.equals("none")) { 
                        working_graph.setTimespan(overrideTimespan); 
                    }
                    if (!overrideGraphType.equals("none")) { 
                        working_graph.setGraphtype(overrideGraphType); 
                    }
                }
            }
        } else { 
            if (!Actions.Exit.toString().equals(reportAction)) {
                throw new ServletException ("Invalid Parameter contents for report_action");
            }
        }
        
        if (Actions.Update.toString().equals(reportAction)) {
            ModelAndView modelAndView = new ModelAndView("redirect:/KSC/customView.htm");
            modelAndView.addObject("type", reportType);

            if (reportIdString != null) {
                modelAndView.addObject("report", reportIdString);
            }
            if (overrideTimespan != null) { 
                modelAndView.addObject("timespan", overrideTimespan);
            }
            if (overrideGraphType != null) { 
                modelAndView.addObject("graphtype", overrideGraphType);
            }

            return modelAndView;
        } else if (Actions.Customize.toString().equals(reportAction)) { 
            return new ModelAndView("redirect:/KSC/customReport.htm");
        } else if (Actions.Exit.toString().equals(reportAction)) {
            return new ModelAndView("redirect:/KSC/index.jsp");
        } else {
            throw new IllegalArgumentException("Parameter action of '" + reportAction + "' is not supported.  Must be one of: Update, Customize, or Exit");
        }
    }

