    /** {@inheritDoc} */
    @Override
    protected ModelAndView handleRequestInternal(final HttpServletRequest request, final HttpServletResponse response) throws Exception {
        String operation = request.getParameter("operation");
        
        if (!StringUtils.hasText(operation)) {
            operation = "list";
        }
        
        LogUtils.debugf(this, "Calling operation %s in SystemReportController", operation);
        
        if ("run".equalsIgnoreCase(operation)){
            SystemReportFormatter formatter = null;
            final String formatterName = request.getParameter("formatter");
            
            for (final SystemReportFormatter f : m_systemReport.getFormatters()) {
                if (f.getName().equals(formatterName)) {
                    formatter = f;
                    break;
                }
            }
            
            if (formatter == null) {
                throw new FormatterNotFoundException("Unable to locate formatter plugin for format type '" + formatterName + "'");
            }
            
            final List<String> selectedPlugins = Arrays.asList(request.getParameterValues("plugins"));
            final List<SystemReportPlugin> plugins = new ArrayList<SystemReportPlugin>();
            for (final SystemReportPlugin plugin : m_systemReport.getPlugins()) {
                if (selectedPlugins.contains(plugin.getName())) {
                    plugins.add(plugin);
                }
            }
            
            return new ModelAndView(new FormatterView(formatter), "report", new SystemReportInfo(Arrays.asList(formatter), plugins));
        } else {
            return new ModelAndView("redirect:/admin/support/systemReportList.htm");
        }
    }

