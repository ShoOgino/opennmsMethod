    /**
     * @return View for this controller action
     */
    @RequestMapping(method=RequestMethod.POST)
    public ModelAndView onSubmit(@ModelAttribute(COMMAND_NAME) @Valid TreeCommand treeCmd, BindingResult errors, HttpSession session) {

        if (errors.hasErrors()) {
            return new ModelAndView("/admin/editProvisioningGroup", COMMAND_NAME, treeCmd);
        }

        String action = treeCmd.getAction();
        if (action == null) {
            // Do nothing
        } else if ("toggleFreeForm".equalsIgnoreCase(action)) {
            Boolean isFreeForm = (Boolean)session.getAttribute("freeFormEditing");
            if (isFreeForm == null) {
                isFreeForm = false;
            }
            session.setAttribute("freeFormEditing", !isFreeForm);
        } else if ("addNode".equalsIgnoreCase(action)) {
            doAddNode(treeCmd);
        } else if ("addInterface".equalsIgnoreCase(action)) {
            doAddInterface(treeCmd);
        } else if ("addService".equalsIgnoreCase(action)) {
            doAddService(treeCmd);
        } else if ("addCategory".equalsIgnoreCase(action)) {
            doAddCategory(treeCmd);
        } else if ("addAssetField".equalsIgnoreCase(action)) {
            doAddAssetField(treeCmd);
        } else if ("save".equalsIgnoreCase(action)) {
            doSave(treeCmd, errors);
        } else if ("edit".equalsIgnoreCase(action)) {
            doEdit(treeCmd);
        } else if ("cancel".equalsIgnoreCase(action)) {
            doCancel(treeCmd);
        } else if ("delete".equalsIgnoreCase(action)) {
            doDelete(treeCmd);
        } else if ("import".equalsIgnoreCase(action)) {
            doImport(treeCmd);
        } else if ("done".equalsIgnoreCase(action)) {
            return done(treeCmd);
        } else {
            errors.reject("Unrecognized action: "+action);
        }

        return new ModelAndView("/admin/editProvisioningGroup", COMMAND_NAME, treeCmd);
    }

