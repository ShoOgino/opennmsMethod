    /** {@inheritDoc} */
    @Override
    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {
        /*
        ModelAndView modelAndView = new ModelAndView("KSC/customGraphChooseParentResource");

        modelAndView.addObject("nodeResources", getResourceService().findNodeResources());
        modelAndView.addObject("nodeSourceResources", getResourceService().findNodeSourceResources());
        modelAndView.addObject("domainResources", getResourceService().findDomainResources());
        
        return modelAndView;
        */
        
        ModelAndView modelAndView = new ModelAndView("KSC/customGraphChooseResource");

        String selectedResourceId = request.getParameter(Parameters.selectedResourceId.toString());
        if (selectedResourceId != null) {
            OnmsResource selectedResource = m_resourceService.getResourceById(selectedResourceId);

            Map<String, OnmsResource> selectedResourceAndParents = new HashMap<String, OnmsResource>();
            OnmsResource r = selectedResource;
            while (r != null) {
                selectedResourceAndParents.put(r.getId(), r);
                r = r.getParent();
            }
            
            modelAndView.addObject("selectedResourceAndParents", selectedResourceAndParents);
        }

        
        /*
        OnmsResource resource = getResourceService().getResourceById(resourceId);
        modelAndView.addObject("parentResource", resource);
        
        modelAndView.addObject("parentResourcePrefabGraphs", m_resourceService.findPrefabGraphsForResource(resource));
        */

        //List<OnmsResource> childResources = getResourceService().findChildResources(resource);
        List<OnmsResource> nodeResources = getResourceService().findNodeResources();
        List<OnmsResource> nodeSourceResources = getResourceService().findNodeSourceResources();
        List<OnmsResource> domainResources = getResourceService().findDomainResources();
        
        List<OnmsResource> childResources = new ArrayList<OnmsResource>(nodeResources.size() + nodeSourceResources.size() + domainResources.size());
        childResources.addAll(nodeResources);
        childResources.addAll(nodeSourceResources);
        childResources.addAll(domainResources);

        modelAndView.addObject("resources", childResources);
        
        return modelAndView;
    }

