    private List<RelatedEvent> getRelatedEvents(final OnmsAlarm alarm, final HttpServletRequest request) {
        Assert.notNull(alarm);

        final List<RelatedEvent> relatedEvents = new ArrayList<>();

        final List<Filter> filters = getFilters(alarm, request.getServletContext());

        SortStyle sortStyle = SortStyle.ID;
        final String sortStyleString = request.getParameter("sortby");
        if (sortStyleString != null) {
            try {
                sortStyle = SortStyle.getSortStyle(sortStyleString);
            } catch (final IllegalArgumentException e) {
                logger.error("Unable to determine SortStyle for '{}'", sortStyleString, e);
            }
        }

        int limit = m_defaultShortLimit;
        final String limitString = request.getParameter("limit");
        if (limitString != null) {
            try {
                int newLimit = WebSecurityUtils.safeParseInt(limitString);
                if (newLimit > 0) {
                    limit = newLimit;
                }
            } catch (final NumberFormatException e) {
                logger.error("Unable to parse query limit '{}'", limitString, e);
            }
        }

        int multiple = DEFAULT_MULTIPLE;
        final String multipleString = request.getParameter("multiple");
        if (multipleString != null) {
            try {
                multiple = Math.max(0, WebSecurityUtils.safeParseInt(multipleString));
            } catch (final NumberFormatException e) {
                logger.error("Unable to parse query multiple '{}'", multipleString, e);
            }
        }

        final EventCriteria queryCriteria = new EventCriteria(filters, sortStyle, null, limit, limit * multiple);
        try {
            for (final Event event : m_webEventRepository.getMatchingEvents(queryCriteria)) {
                relatedEvents.add(new RelatedEvent(event.getId(), event.getAlarmId(), event.getCreateTime(), event.getSeverity()));
            }
        } catch (final Exception e) {
            logger.error("Could not retrieve events for queryCriteria '{}'.", queryCriteria);
        }
        return relatedEvents;
    }

