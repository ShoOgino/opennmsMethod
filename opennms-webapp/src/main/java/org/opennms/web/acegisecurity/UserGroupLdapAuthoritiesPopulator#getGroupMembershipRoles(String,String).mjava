    public Set getGroupMembershipRoles(String userDn, String username) {
        Set authorities = new HashSet();

        if (getGroupSearchBase() == null) {
            return authorities;
        }

        if (logger.isDebugEnabled()) {
            logger.debug("Searching for roles for user '" + username + "', DN = " + "'" + userDn + "', with filter "
                + groupSearchFilter + " in search base '" + getGroupSearchBase() + "'");
        }

        Set userRoles = ldapTemplate.searchForSingleAttributeValues(getGroupSearchBase(), groupSearchFilter,
                new String[] {userDn, username}, groupRoleAttribute);

        if (logger.isDebugEnabled()) {
            logger.debug("Roles from search: " + userRoles);
        }

        Iterator it = userRoles.iterator();

        while (it.hasNext()) {
            String role = (String) it.next();

            if (convertToUpperCase) {
                role = role.toUpperCase();
            }
       	 if (logger.isDebugEnabled()) {
             logger.debug("Parsing Role: " + role);
         }

            if (adminGroups.contains(role)) {
            	 if (logger.isDebugEnabled()) {
                     logger.debug("Adding Role Admin : " + Authentication.ADMIN_ROLE);
                 }
            	authorities.add(new GrantedAuthorityImpl(Authentication.ADMIN_ROLE));
            }
            if (userGroups.contains(role)) {
           	 if (logger.isDebugEnabled()) {
                 logger.debug("Adding Role User : " + Authentication.USER_ROLE);
             }
            	authorities.add(new GrantedAuthorityImpl(Authentication.USER_ROLE));
            }
            if (rtcGroups.contains(role)) {
            	if (logger.isDebugEnabled()) {
            		logger.debug("Adding Role RTC: " + Authentication.RTC_ROLE);
            	}

            	authorities.add(new GrantedAuthorityImpl(Authentication.RTC_ROLE));
            }
            if (dashboardGroups.contains(role)) {
           	 	if (logger.isDebugEnabled()) {
           	 		logger.debug("Adding Role DashBoard : " + Authentication.DASHBOARD_ROLE);
           	 	}
           	 authorities.add(new GrantedAuthorityImpl(Authentication.DASHBOARD_ROLE));
            }
            if (readonlyGroups.contains(role)) {
            	if (logger.isDebugEnabled()) {
            		logger.debug("Adding Role READONLY : " + Authentication.READONLY_ROLE);
            	}

            	authorities.add(new GrantedAuthorityImpl(Authentication.READONLY_ROLE));
            }
            
            //authorities.add(new GrantedAuthorityImpl(rolePrefix + role));
        }

        
        return authorities;
    }

