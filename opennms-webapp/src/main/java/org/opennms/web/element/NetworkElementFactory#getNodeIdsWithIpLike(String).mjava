    /**
     * Returns all non-deleted nodes with an IP address like the rule given.
     *
     * @param iplike a {@link java.lang.String} object.
     * @return a {@link java.util.List} object.
     * @throws java.sql.SQLException if any.
     */
    public static List<Integer> getNodeIdsWithIpLike(String iplike) throws SQLException {
        if (iplike == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        List<Integer> nodecont = new ArrayList<Integer>();
        final DBUtils d = new DBUtils(NetworkElementFactory.class);
        try {
            Connection conn = Vault.getDbConnection();
            d.watch(conn);
            
            PreparedStatement stmt = conn.prepareStatement("SELECT DISTINCT(node.nodeid) FROM NODE,IPINTERFACE WHERE NODE.NODEID=IPINTERFACE.NODEID AND IPLIKE(IPINTERFACE.IPADDR,?) AND NODETYPE != 'D'");
            d.watch(stmt);
            stmt.setString(1, iplike);
            ResultSet rs = stmt.executeQuery();
            d.watch(rs);

            Integer node = null;
    	    while (rs.next()) {
	            Object element = new Integer(rs.getInt("nodeid"));
	            if (element != null) {
	                node = ((Integer) element);
	            }
	            nodecont.add(node);
	        }

        } finally {
            d.cleanUp();
        }

        return nodecont;
    }

