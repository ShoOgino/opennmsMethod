    /**
     * This method returns the data from the result set as an array of
     * IpRouteInterface objects.
     */
    protected static IpRouteInterface[] rs2IpRouteInterface(ResultSet rs)
            throws SQLException {
        if (rs == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        IpRouteInterface[] nodes = null;
        Vector vector = new Vector();

        while (rs.next()) {
            IpRouteInterface node = new IpRouteInterface();

            Object element = new Integer(rs.getInt("nodeId"));
            node.m_nodeId = ((Integer) element).intValue();

            element = rs.getString("routedest");
            node.m_routedest = (String) element;

            element = rs.getString("routemask");
            node.m_routemask = (String) element;

            element = rs.getString("routenexthop");
            node.m_routenexthop = (String) element;

            element = rs.getTimestamp("lastpolltime");
            if (element != null)
                node.m_lastPollTime = EventConstants.formatToString(new Date(
                        ((Timestamp) element).getTime()));

            element = new Integer(rs.getInt("routeifindex"));
            if (element != null) {
                node.m_routeifindex = ((Integer) element).intValue();
            }

            element = new Integer(rs.getInt("routemetric1"));
            if (element != null) {
                node.m_routemetric1 = ((Integer) element).intValue();
            }

            element = new Integer(rs.getInt("routemetric2"));
            if (element != null) {
                node.m_routemetric2 = ((Integer) element).intValue();
            }

            element = new Integer(rs.getInt("routemetric3"));
            if (element != null) {
                node.m_routemetric4 = ((Integer) element).intValue();
            }

            element = new Integer(rs.getInt("routemetric4"));
            if (element != null) {
                node.m_routemetric4 = ((Integer) element).intValue();
            }

            element = new Integer(rs.getInt("routemetric5"));
            if (element != null) {
                node.m_routemetric5 = ((Integer) element).intValue();
            }

            element = new Integer(rs.getInt("routetype"));
            if (element != null) {
                node.m_routetype = ((Integer) element).intValue();
            }

            element = new Integer(rs.getInt("routeproto"));
            if (element != null) {
                node.m_routeproto = ((Integer) element).intValue();
            }

            element = rs.getString("status");
            if (element != null) {
                node.m_status = ((String) element).charAt(0);
            }

            vector.addElement(node);
        }

        nodes = new IpRouteInterface[vector.size()];

        for (int i = 0; i < nodes.length; i++) {
            nodes[i] = (IpRouteInterface) vector.elementAt(i);
        }

        return (nodes);
    }

