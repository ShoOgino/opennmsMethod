    /**
     * Returns all non-deleted nodes with a MAC address like the rule given from AtInterface.
     *
     * @param macAddr a {@link java.lang.String} object.
     * @return an array of {@link org.opennms.web.element.Node} objects.
     * @throws java.sql.SQLException if any.
     */
    public static Node[] getNodesWithPhysAddrAtInterface(String macAddr)
			throws SQLException {
		if (macAddr == null) {
			throw new IllegalArgumentException("Cannot take null parameters.");
		}

		Node[] nodes = null;
        final DBUtils d = new DBUtils(NetworkElementFactory.class);
		try {
	        Connection conn = Vault.getDbConnection();
	        d.watch(conn);
	        
            StringBuffer buffer = new StringBuffer("%");
            buffer.append(macAddr);
            buffer.append("%");

            PreparedStatement stmt = conn
					.prepareStatement("SELECT DISTINCT * FROM node WHERE nodetype != 'D' " +
							"AND nodeid IN (SELECT nodeid FROM atinterface WHERE atphysaddr LIKE '% ? %') ORDER BY nodelabel");
            d.watch(stmt);
            
			stmt.setString(1, buffer.toString());
			ResultSet rs = stmt.executeQuery();
			d.watch(rs);
			
			nodes = rs2Nodes(rs);
		} finally {
		    d.cleanUp();
		}

		return nodes;
	}

