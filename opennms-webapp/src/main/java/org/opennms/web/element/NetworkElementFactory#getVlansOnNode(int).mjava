    /**
     * <p>getVlansOnNode</p>
     *
     * @param nodeID a int.
     * @return an array of {@link org.opennms.web.element.Vlan} objects.
     * @throws java.sql.SQLException if any.
     */
    @Override
    public Vlan[] getVlansOnNode(int nodeID) {
        //String sqlQuery = "SELECT * from vlan WHERE status != 'D' AND nodeid = ? order by vlanid;";
        //m_jdbcTemplate.query(sqlQuery, new VlanRowMapper(), nodeID);
        
        final OnmsCriteria criteria = new OnmsCriteria(OnmsVlan.class);
        criteria.createAlias("node", "node", OnmsCriteria.LEFT_JOIN);
        criteria.add(Restrictions.eq("node.id", nodeID));
        criteria.add(Restrictions.ne("status", StatusType.DELETED));

        List<Vlan> vlans = getVlans(m_vlanDao.findMatching(criteria));
        return vlans.toArray(new Vlan[vlans.size()]);
    }

