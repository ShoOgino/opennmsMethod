    /**
     * <p>getVlansOnNode</p>
     *
     * @param nodeID a int.
     * @return an array of {@link org.opennms.web.element.Vlan} objects.
     * @throws java.sql.SQLException if any.
     */
    @Override
    public Vlan[] getVlansOnNode(int nodeID) {
        //String sqlQuery = "SELECT * from vlan WHERE status != 'D' AND nodeid = ? order by vlanid;";
        //m_jdbcTemplate.query(sqlQuery, new VlanRowMapper(), nodeID);
        
        final org.opennms.core.criteria.Criteria criteria = new org.opennms.core.criteria.Criteria(OnmsVlan.class)
            .setAliases(Arrays.asList(new Alias[] {
                new Alias("node", "node", JoinType.LEFT_JOIN)
            }))
            .addRestriction(new EqRestriction("node.id", nodeID))
            .addRestriction(new NeRestriction("status", StatusType.DELETED));

        List<Vlan> vlans = getVlans(m_vlanDao.findMatching(criteria));
        return vlans.toArray(new Vlan[vlans.size()]);
    }

