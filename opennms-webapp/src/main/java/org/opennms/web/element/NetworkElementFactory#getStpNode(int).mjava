    /**
     * <p>getStpNode</p>
     *
     * @param nodeID a int.
     * @return an array of {@link org.opennms.web.element.StpNode} objects.
     * @throws java.sql.SQLException if any.
     */
    @Override
    public StpNode[] getStpNode(int nodeID) {
    	/*
        String sqlQuery = "select distinct(e2.nodeid) as stpdesignatedrootnodeid, e1.* from (stpnode e1 left join stpnode e2 on substr(e1.stpdesignatedroot, 5, 16) = e2.basebridgeaddress) where e1.nodeid = ? AND e1.status != 'D' ORDER BY e1.basevlan";
        List<StpNode> nodes = m_jdbcTemplate.query(sqlQuery, new StpNodeRowMapper(), nodeID);
		*/
    	final OnmsCriteria criteria = new OnmsCriteria(OnmsStpNode.class);
        criteria.createAlias("node", "node", OnmsCriteria.LEFT_JOIN);
        criteria.add(Restrictions.eq("node.id", nodeID));
        criteria.add(Restrictions.ne("status", "D"));

    	List<StpNode> nodes = new ArrayList<StpNode>();
    	
    	for (OnmsStpNode onmsstpnode: m_stpNodeDao.findMatching(criteria)) {
    		nodes.add(getStpNode(onmsstpnode));
    	}
        return nodes.toArray(new StpNode[nodes.size()]);
    }

