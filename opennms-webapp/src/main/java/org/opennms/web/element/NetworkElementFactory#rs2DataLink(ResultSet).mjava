    /**
     * This method returns the data from the result set as an array of
     * DataLinkInterface objects.
     *
     * @param rs a {@link java.sql.ResultSet} object.
     * @return an array of {@link org.opennms.web.element.DataLinkInterface} objects.
     * @throws java.sql.SQLException if any.
     */
    protected static DataLinkInterface[] rs2DataLink(ResultSet rs)
            throws SQLException {
        if (rs == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        List<DataLinkInterface> dataLinkIfs = new ArrayList<DataLinkInterface>();

        while (rs.next()) {
            // Non-null field
            Object element = new Integer(rs.getInt("nodeId"));
            int nodeId = ((Integer) element).intValue();

            // Non-null field
            element = new Integer(rs.getInt("ifindex"));
            int ifindex = ((Integer) element).intValue();

            // Non-null field
            element = rs.getTimestamp("lastpolltime");
            String lastPollTime = EventConstants.formatToString(new Date(
                        ((Timestamp) element).getTime()));

            // Non-null field
            element = new Integer(rs.getInt("nodeparentid"));
            int nodeparentid = ((Integer) element).intValue();

            // Non-null field
            element = new Integer(rs.getInt("parentifindex"));
            int parentifindex = ((Integer) element).intValue();

            // Non-null field
            element = rs.getString("status");
            char status = ((String) element).charAt(0);

            String parentipaddress = getIpAddress(nodeparentid, parentifindex);

            String ipaddress = "";
            if (ifindex == -1 ) {
                ipaddress = getIpAddress(nodeId);
            } else {
                ipaddress = getIpAddress(nodeId, ifindex);
            }

            dataLinkIfs.add(new DataLinkInterface(nodeId, nodeparentid, ifindex, parentifindex, ipaddress, parentipaddress, lastPollTime, status));
        }

        return dataLinkIfs.toArray(new DataLinkInterface[dataLinkIfs.size()]);
    }

