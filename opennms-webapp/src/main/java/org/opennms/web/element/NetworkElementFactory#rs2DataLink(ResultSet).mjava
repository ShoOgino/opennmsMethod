    /**
     * This method returns the data from the result set as an array of
     * DataLinkInterface objects.
     */
    protected static DataLinkInterface[] rs2DataLink(ResultSet rs)
            throws SQLException {
        if (rs == null) {
            throw new IllegalArgumentException("Cannot take null parameters.");
        }

        List<DataLinkInterface> dataLinkIfs = new ArrayList<DataLinkInterface>();

        while (rs.next()) {
            DataLinkInterface dataLinkIf = new DataLinkInterface();

            Object element = new Integer(rs.getInt("nodeId"));
            dataLinkIf.m_nodeId = ((Integer) element).intValue();

            element = new Integer(rs.getInt("ifindex"));
            if (element != null) {
                dataLinkIf.m_ifindex = ((Integer) element).intValue();
            }

            element = rs.getTimestamp("lastpolltime");
            if (element != null)
                dataLinkIf.m_lastPollTime = EventConstants.formatToString(new Date(
                        ((Timestamp) element).getTime()));

            element = new Integer(rs.getInt("nodeparentid"));
            if (element != null) {
                dataLinkIf.m_nodeparentid = ((Integer) element).intValue();
            }

            element = new Integer(rs.getInt("parentifindex"));
            if (element != null) {
                dataLinkIf.m_parentifindex = ((Integer) element).intValue();
            }

            element = rs.getString("status");
            if (element != null) {
                dataLinkIf.m_status = ((String) element).charAt(0);
            }

            dataLinkIf.m_parentipaddress = getIpAddress(dataLinkIf.get_nodeparentid(), dataLinkIf
                    .get_parentifindex());

            if (dataLinkIf.get_ifindex() == -1 ) {
                dataLinkIf.m_ipaddress = getIpAddress(dataLinkIf.get_nodeId());
            } else {
                dataLinkIf.m_ipaddress = getIpAddress(dataLinkIf.get_nodeId(), dataLinkIf
                        .get_ifindex());
            }

            dataLinkIfs.add(dataLinkIf);
        }

        return dataLinkIfs.toArray(new DataLinkInterface[dataLinkIfs.size()]);
    }

