    /**
     * <p>deletePolicy</p>
     *
     * @param foreignSource a {@link java.lang.String} object.
     * @param policy a {@link java.lang.String} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @DELETE
    @Path("{foreignSource}/policies/{policy}")
    @Transactional
    public Response deletePolicy(@PathParam("foreignSource") String foreignSource, @PathParam("policy") String policy) {
        writeLock();
        try {
            ForeignSource fs = getActiveForeignSource(foreignSource);
            List<PluginConfig> policies = fs.getPolicies();
            PluginConfig removed = removeEntry(policies, policy);
            if (removed != null) {
                fs.setPolicies(policies);
                m_pendingForeignSourceRepository.save(fs);
                return Response.ok().build();
            }
            return Response.notModified().build();
        } finally {
            writeUnlock();
        }
    }

