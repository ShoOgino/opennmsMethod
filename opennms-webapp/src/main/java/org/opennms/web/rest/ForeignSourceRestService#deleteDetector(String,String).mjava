    /**
     * <p>deleteDetector</p>
     *
     * @param foreignSource a {@link java.lang.String} object.
     * @param detector a {@link java.lang.String} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @DELETE
    @Path("{foreignSource}/detectors/{detector}")
    @Transactional
    public Response deleteDetector(@PathParam("foreignSource") String foreignSource, @PathParam("detector") String detector) {
        writeLock();
        try {
            ForeignSource fs = getActiveForeignSource(foreignSource);
            List<PluginConfig> detectors = fs.getDetectors();
            PluginConfig removed = removeEntry(detectors, detector);
            if (removed != null) {
                fs.updateDateStamp();
                fs.setDetectors(detectors);
                m_pendingForeignSourceRepository.save(fs);
                return Response.ok().build();
            }
            return Response.notModified().build();
        } finally {
            writeUnlock();
        }
    }

