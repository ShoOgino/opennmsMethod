    /**
     * <p>updateAssetRecord</p>
     *
     * @param nodeCriteria a {@link java.lang.String} object.
     * @param params a {@link org.opennms.web.rest.MultivaluedMapImpl} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @PUT
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public Response updateAssetRecord(@PathParam("nodeCriteria") String nodeCriteria,  MultivaluedMapImpl params) {
        writeLock();
        
        try {
            OnmsNode node = m_nodeDao.get(nodeCriteria);
            if (node == null) {
                throw getException(Status.BAD_REQUEST, "updateAssetRecord: Can't find node " + nodeCriteria);
            }
            
            OnmsAssetRecord assetRecord = getAssetRecord(node);
            if (assetRecord == null) {
                throw getException(Status.BAD_REQUEST, "updateAssetRecord: Node " + node  + " could not update ");
            }
            if (assetRecord.getGeolocation() == null) {
                assetRecord.setGeolocation(new OnmsGeolocation());
            }
            LOG.debug("updateAssetRecord: updating asset {}", assetRecord);
            BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(assetRecord);
            for(String key : params.keySet()) {
                if (wrapper.isWritableProperty(key)) {
                    String stringValue = params.getFirst(key);
                    Object value = wrapper.convertIfNecessary(stringValue, (Class<?>)wrapper.getPropertyType(key));
                    wrapper.setPropertyValue(key, value);
                }
            }
       
            LOG.debug("updateAssetRecord: assetRecord {} updated", assetRecord);
            m_assetRecordDao.saveOrUpdate(assetRecord);
            
            try {
                sendEvent(EventConstants.ASSET_INFO_CHANGED_EVENT_UEI, node.getId());
            } catch (EventProxyException e) {
                throw getException(Status.BAD_REQUEST, e.getMessage());
            }
            
            return Response.seeOther(getRedirectUri(m_uriInfo)).build();
        } finally {
            writeUnlock();
        }
    }

