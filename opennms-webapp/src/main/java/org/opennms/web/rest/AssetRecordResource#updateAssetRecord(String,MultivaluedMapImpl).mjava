    /**
     * <p>updateAssetRecord</p>
     *
     * @param nodeCriteria a {@link java.lang.String} object.
     * @param params a {@link org.opennms.web.rest.MultivaluedMapImpl} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @PUT
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public Response updateAssetRecord(@PathParam("nodeCriteria") String nodeCriteria,  MultivaluedMapImpl params) {
        OnmsNode node = m_nodeDao.get(nodeCriteria);
        if (node == null) {
            throwException(Status.BAD_REQUEST, "updateAssetRecord: Can't find node " + nodeCriteria);
        }
        
        OnmsAssetRecord assetRecord = getAssetRecord(node);
        if (assetRecord == null) {
            throwException(Status.BAD_REQUEST, "updateAssetRecord: Node " + node  + " could not update ");
        }
        log().debug("updateAssetRecord: updating category " + assetRecord);
        BeanWrapper wrapper = new BeanWrapperImpl(assetRecord);
        for(String key : params.keySet()) {
            if (wrapper.isWritableProperty(key)) {
                String stringValue = params.getFirst(key);
                Object value = wrapper.convertIfNecessary(stringValue, wrapper.getPropertyType(key));
                wrapper.setPropertyValue(key, value);
            }
        }
   
        log().debug("updateAssetRecord: assetRecord " + assetRecord + " updated");
        m_nodeDao.saveOrUpdate(node);
        
        try {
            sendEvent(EventConstants.ASSET_INFO_CHANGED_EVENT_UEI, node.getId());
        } catch (EventProxyException e) {
            throwException(Status.BAD_REQUEST, e.getMessage());
        }
        
        return Response.ok().build();
    
    }

