    /**
     * Returns all the events which match the filter/query in the query
     * parameters
     * 
     * @return Collection of OnmsEvents (ready to be XML-ified)
     * @throws java.text.ParseException
     *             if any.
     */
    @GET
    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.APPLICATION_ATOM_XML})
    @Transactional
    public OnmsEventCollection getEvents() throws ParseException {
        readLock();

        try {
            final CriteriaBuilder builder = getCriteriaBuilder(m_uriInfo.getQueryParameters());
            builder.orderBy("eventTime").asc();

            final OnmsEventCollection coll = new OnmsEventCollection(m_eventDao.findMatching(builder.toCriteria()));
            coll.setTotalCount(m_eventDao.countMatching(builder.clearOrder().toCriteria()));

            return coll;
        } finally {
            readUnlock();
        }
    }

