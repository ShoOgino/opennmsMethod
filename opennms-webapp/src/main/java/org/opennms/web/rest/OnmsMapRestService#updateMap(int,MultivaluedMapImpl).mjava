    /**
     * <p>updateMap</p>
     *
     * @param mapId a int.
     * @param params a {@link org.opennms.web.rest.MultivaluedMapImpl} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @PUT
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    @Path("{mapId}")
    public Response updateMap(@PathParam("mapId") final int mapId, final MultivaluedMapImpl params) {
        writeLock();
        
        try {
            final OnmsMap map = m_mapDao.get(mapId);
            if (map == null) throw getException(Response.Status.BAD_REQUEST, "updateMap: Can't find map with id " + mapId);
    
            LogUtils.debugf(this, "updateMap: updating map %s", map);
    
            final BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(map);
            for(final String key : params.keySet()) {
                if (wrapper.isWritableProperty(key)) {
                    final String stringValue = params.getFirst(key);
    				final Object value = wrapper.convertIfNecessary(stringValue, (Class<?>)wrapper.getPropertyType(key));
                    wrapper.setPropertyValue(key, value);
                }
            }
    
            LogUtils.debugf(this, "updateMap: map %s updated", map);
            m_mapDao.saveOrUpdate(map);
            return Response.ok(map).build();
        } finally {
            writeUnlock();
        }
    }

