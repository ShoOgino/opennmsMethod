    private OnmsOutageCollection queryOutages(final int nodeId, final String ipAddress, final String serviceName, final long start, final long end) {
        OnmsOutageCollection onmsOutageCollection;

        readLock();
        try {
            final CriteriaBuilder builder = new CriteriaBuilder(OnmsOutage.class);
            builder.eq("node.id", nodeId);

            final Date startDate = new Date();
            startDate.setTime(start * 1000l);

            final Date endDate = new Date();
            endDate.setTime(end * 1000l);

            builder.or(Restrictions.isNull("ifRegainedService"), Restrictions.and(Restrictions.gt("ifRegainedService", startDate), Restrictions.le("ifRegainedService", endDate)));

            builder.le("ifLostService", endDate);

            builder.eq("serviceType.name", serviceName);
            builder.eq("ipInterface.ipAddress", InetAddressUtils.addr(ipAddress));

            builder.alias("monitoredService", "monitoredService");
            builder.alias("monitoredService.ipInterface", "ipInterface");
            builder.alias("monitoredService.ipInterface.node", "node");
            builder.alias("monitoredService.serviceType", "serviceType");

            applyQueryFilters(m_uriInfo.getQueryParameters(), builder, null);

            builder.orderBy("id").desc();

            onmsOutageCollection = new OnmsOutageCollection(m_outageDao.findMatching(builder.toCriteria()));
        } finally {
            readUnlock();
        }

        return onmsOutageCollection;
    }

