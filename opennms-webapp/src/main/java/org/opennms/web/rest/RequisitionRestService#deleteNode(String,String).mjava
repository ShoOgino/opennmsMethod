    /**
     * Delete the node with the given foreign ID for the specified foreign source
     *
     * @param foreignSource a {@link java.lang.String} object.
     * @param foreignId a {@link java.lang.String} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @DELETE
    @Path("{foreignSource}/nodes/{foreignId}")
    @Transactional
    public Response deleteNode(@PathParam("foreignSource") String foreignSource, @PathParam("foreignId") String foreignId) {
        writeLock();
        try {
            Requisition req = getActiveRequisition(foreignSource, false);
            if (req != null) {
                req.deleteNode(foreignId);
                m_pendingForeignSourceRepository.save(req);
                return Response.ok().build();
            }
            return null;
        } finally {
            writeUnlock();
        }
    }

