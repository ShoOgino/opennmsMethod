    /**
     * Updates the requisition with foreign source "foreignSource"
     *
     * @param foreignSource a {@link java.lang.String} object.
     * @param params a {@link org.opennms.web.rest.MultivaluedMapImpl} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @PUT
    @Path("{foreignSource}")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    @Transactional
    public Response updateRequisition(@PathParam("foreignSource") String foreignSource, MultivaluedMapImpl params) {
        writeLock();
        try {
            debug("updateRequisition: Updating requisition with foreign source %s", foreignSource);
            Requisition req = getActiveRequisition(foreignSource, false);
            if (req == null) {
                throw getException(Response.Status.NOT_FOUND, "Foreign source '" + foreignSource + "' not found.");
            }
            setProperties(params, req);
            debug("updateRequisition: Requisition with foreign source %s updated", foreignSource);
            m_pendingForeignSourceRepository.save(req);
            return Response.seeOther(getRedirectUri(m_uriInfo)).build();
        } finally {
            writeUnlock();
        }
    }

