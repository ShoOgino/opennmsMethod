    /**
     * Updates the requisition with foreign source "foreignSource"
     *
     * @param foreignSource a {@link java.lang.String} object.
     * @param params a {@link org.opennms.web.rest.MultivaluedMapImpl} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @PUT
    @Path("{foreignSource}")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    @Transactional
    public Response updateRequisition(@PathParam("foreignSource") String foreignSource, MultivaluedMapImpl params) {
        getWriteLock().lock();
        try {
            Requisition req = getActiveRequisition(foreignSource);
            if (req != null) {
                debug("updateRequisition: updating requisition with foreign source %s", foreignSource);
                setProperties(params, req);
                debug("updateRequisition: requisition with foreign source %s updated", foreignSource);
                m_pendingForeignSourceRepository.save(req);
                return Response.ok(req).build();
            }
            return Response.notModified(foreignSource).build();
        } finally {
            getWriteLock().unlock();
        }
    }

