    /**
     * <p>addDetector</p>
     *
     * @param foreignSource a {@link java.lang.String} object.
     * @param detector a {@link org.opennms.netmgt.provision.persist.foreignsource.DetectorWrapper} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @POST
    @Path("{foreignSource}/detectors")
    @Consumes(MediaType.APPLICATION_XML)
    @Transactional
    public Response addDetector(@PathParam("foreignSource") String foreignSource, DetectorWrapper detector) {
        writeLock();
        try {
            debug("addDetector: Adding detector " + detector.getName());
            ForeignSource fs = getActiveForeignSource(foreignSource);
            fs.addDetector(detector);
            m_pendingForeignSourceRepository.save(fs);
            return Response.seeOther(m_uriInfo.getBaseUriBuilder().path(this.getClass()).path(this.getClass(), "getDetector").build(foreignSource, detector.getName())).build();
            // return Response.ok(detector).build();
        } finally {
            writeUnlock();
        }
    }

