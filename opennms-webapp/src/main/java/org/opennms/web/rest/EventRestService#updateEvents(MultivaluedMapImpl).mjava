	/**
	 * Updates all the events that match any filter/query supplied in the form.
	 * If the "ack" parameter is "true", then acks the events as the current logged in user, otherwise unacks the events
	 *
	 * @param formProperties Map of the parameters passed in by form encoding
	 */
	@PUT
	@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
	@Transactional
	public void updateEvents(MultivaluedMapImpl formProperties) {
		Boolean ack=false;
		if(formProperties.containsKey("ack")) {
			ack="true".equals(formProperties.getFirst("ack"));
			formProperties.remove("ack");
		}
		
		OnmsCriteria criteria = new OnmsCriteria(OnmsEvent.class);
		setLimitOffset(formProperties, criteria, 10, true);
		addFiltersToCriteria(formProperties, criteria, OnmsEvent.class);

		
		for (OnmsEvent event : m_eventDao.findMatching(criteria)) {
			processEventAck(event, ack);
		}
	}

