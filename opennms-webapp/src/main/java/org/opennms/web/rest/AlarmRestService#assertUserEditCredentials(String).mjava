    private void assertUserEditCredentials(final String ackUser) {
        final String currentUser = m_securityContext.getUserPrincipal().getName();

        if (m_securityContext.isUserInRole(Authentication.ROLE_ADMIN)) {
            // admin can do anything
            return;
        }
        if (m_securityContext.isUserInRole(Authentication.ROLE_READONLY)) {
            // read only is not allowed to edit
            throw new WebApplicationException(new IllegalArgumentException("User '" + currentUser + "', is a read-only user!"), Status.FORBIDDEN);
        }
        if (m_securityContext.isUserInRole(Authentication.ROLE_REST) ||
                m_securityContext.isUserInRole(Authentication.ROLE_MOBILE)) {
            if (ackUser.equals(currentUser)) {
                // ROLE_REST and ROLE_MOBILE are allowed to modify things as long as it's as the
                // same user as they're logging in with.
                return;
            }
        }
        // otherwise
        throw new WebApplicationException(new IllegalArgumentException("User '" + currentUser + "', is not allowed to perform updates to alarms as user '" + ackUser + "'"), Status.FORBIDDEN);
    }

