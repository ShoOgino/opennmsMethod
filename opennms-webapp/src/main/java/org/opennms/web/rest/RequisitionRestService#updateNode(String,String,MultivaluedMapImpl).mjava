    /**
     * Updates the node with foreign id "foreignId" in foreign source "foreignSource"
     */
    @PUT
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    @Path("{foreignSource}/nodes/{foreignId}")
    public Response updateNode(@PathParam("foreignSource") String foreignSource, @PathParam("foreignId") String foreignId, MultivaluedMapImpl params) {
        Requisition req = m_foreignSourceRepository.getRequisition(foreignSource);
        if (req != null) {
            RequisitionNode node = req.getNode(foreignId);
            if (node != null) {
                debug("updateNode: updating node with foreign source %s and foreign id %s", foreignSource, foreignId);
                setProperties(params, node);
                debug("updateNode: node with foreign source %s and foreign id %s updated", foreignSource, foreignId);
                m_foreignSourceRepository.save(req);
                return Response.ok(node).build();
            }
        }
        return Response.notModified(foreignSource + "/" + foreignId).build();
    }

