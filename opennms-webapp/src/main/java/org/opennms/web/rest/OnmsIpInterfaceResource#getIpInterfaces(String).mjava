    /**
     * <p>getIpInterfaces</p>
     *
     * @param nodeCriteria a {@link java.lang.String} object.
     * @return a {@link org.opennms.netmgt.model.OnmsIpInterfaceList} object.
     */
    @GET
    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})
    public OnmsIpInterfaceList getIpInterfaces(@PathParam("nodeCriteria") final String nodeCriteria) {
        LogUtils.debugf(this, "getIpInterfaces: reading interfaces for node %s", nodeCriteria);

        final OnmsNode node = m_nodeDao.get(nodeCriteria);
        
        final MultivaluedMap<String,String> params = m_uriInfo.getQueryParameters();
        
        final CriteriaBuilder builder = new CriteriaBuilder(OnmsIpInterface.class);
        builder.ne("isManaged", "D");
        builder.limit(20);
        applyQueryFilters(params, builder);
        builder.alias("node", "node");
        builder.eq("node.id", node.getId());
        
        final OnmsIpInterfaceList interfaceList = new OnmsIpInterfaceList(m_ipInterfaceDao.findMatching(builder.toCriteria()));

        interfaceList.setTotalCount(m_ipInterfaceDao.countMatching(builder.count().toCriteria()));
        
        return interfaceList;
    }

