    /**
     * <p>getNodes</p>
     *
     * @return a {@link org.opennms.netmgt.model.OnmsNodeList} object.
     */
    @GET
    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})
    public OnmsNodeList getNodes() {
        getReadLock().lock();
        
        try {
            final CriteriaBuilder builder = new CriteriaBuilder(OnmsNode.class);
            builder.alias("snmpInterfaces", "snmpInterface", JoinType.LEFT_JOIN);
            builder.alias("ipInterfaces", "ipInterface", JoinType.LEFT_JOIN);
    
            final MultivaluedMap<String, String> params = m_uriInfo.getQueryParameters();
            final String type = params.getFirst("type");
    
            applyQueryFilters(params, builder);
            builder.orderBy("label").asc();
            
            final Criteria crit = builder.toCriteria();
    
            if (type == null) {
                final List<Restriction> restrictions = new ArrayList<Restriction>(crit.getRestrictions());
                restrictions.add(Restrictions.ne("type", "D"));
                crit.setRestrictions(restrictions);
            }
            
            final OnmsNodeList coll = new OnmsNodeList(m_nodeDao.findMatching(crit));
            
            crit.setLimit(null);
            crit.setOffset(null);
            crit.setOrders(new ArrayList<Order>());
    
            coll.setTotalCount(m_nodeDao.countMatching(crit));
    
            return coll;
        } finally {
            getReadLock().unlock();
        }
    }

