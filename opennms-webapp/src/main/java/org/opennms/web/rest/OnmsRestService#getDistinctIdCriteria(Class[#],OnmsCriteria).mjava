    /**
     * <p>getDistinctIdCriteria</p>
     *
     * @param clazz a {@link java.lang.Class} object.
     * @param criteria a {@link org.opennms.netmgt.model.OnmsCriteria} object.
     * @return a {@link org.opennms.netmgt.model.OnmsCriteria} object.
     */
    protected OnmsCriteria getDistinctIdCriteria(Class<?> clazz, OnmsCriteria criteria) {
        criteria.setProjection(
                               Projections.distinct(
                                   Projections.projectionList().add(
                                       Projections.alias( Projections.property("id"), "id" )
                                   )
                               )
                           );
        LogUtils.infof(this, "**** m_offset: " + (m_offset == null ? 0 : m_offset) + " ****");
        OnmsCriteria rootCriteria = new OnmsCriteria(clazz);
        rootCriteria.add(Subqueries.propertyIn("id", criteria.getDetachedCriteria()));
        for (Order o : m_ordering) {
            rootCriteria.addOrder(o);
        }
        if (m_limit != null) {
            rootCriteria.setMaxResults(m_limit);
        }
        if (m_offset != null) {
            rootCriteria.setFirstResult(m_offset);
        }
        return rootCriteria;
    }

