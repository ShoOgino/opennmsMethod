        /**
         * Draws an event on a given graphics context.
         *
         * @param graphics2D the graphics context
         * @param delta      the delta
         * @param start      the start value
         * @param width      the width of the graphic
         * @param onmsOutage the outage to be drawn
         * @return true, if no resolved yet
         */
        public boolean drawEvent(Graphics2D graphics2D, long delta, long start, int width, OnmsOutage onmsOutage) throws IOException {
            long p1 = onmsOutage.getServiceLostEvent().getEventCreateTime().getTime() / 1000;
            long p2 = start + delta;

            if (onmsOutage.getServiceRegainedEvent() != null) {
                p2 = onmsOutage.getServiceRegainedEvent().getEventCreateTime().getTime() / 1000;
            }

            graphics2D.setColor(ONMS_RED);
            int n1 = (int) ((p1 - start) / (delta / width));
            int n2 = (int) ((p2 - start) / (delta / width));
            graphics2D.fillRect(n1, 2, (n2 - n1 > 0 ? n2 - n1 : 1), 16);

            return onmsOutage.getServiceRegainedEvent() == null;
        }

