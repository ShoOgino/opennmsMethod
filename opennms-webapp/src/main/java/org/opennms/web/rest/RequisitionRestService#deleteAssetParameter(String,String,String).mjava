    /**
     * <p>deleteAssetParameter</p>
     *
     * @param foreignSource a {@link java.lang.String} object.
     * @param foreignId a {@link java.lang.String} object.
     * @param parameter a {@link java.lang.String} object.
     * @return a {@link javax.ws.rs.core.Response} object.
     */
    @DELETE
    @Path("{foreignSource}/nodes/{foreignId}/assets/{parameter}")
    @Transactional
    public Response deleteAssetParameter(@PathParam("foreignSource") String foreignSource, @PathParam("foreignId") String foreignId, @PathParam("parameter") String parameter) {
        writeLock();
        try {
            final Requisition req = getActiveRequisition(foreignSource, false);
            if (req != null) {
                final RequisitionNode node = req.getNode(foreignId);
                if (node != null) {
                    if (node.deleteAsset(parameter)) {
                        m_pendingForeignSourceRepository.save(req);
                        return Response.ok().build();
                    } else {
                        return Response.notModified().build();
                    }
                }
            }
            return null;
        } finally {
            writeUnlock();
        }
    }

