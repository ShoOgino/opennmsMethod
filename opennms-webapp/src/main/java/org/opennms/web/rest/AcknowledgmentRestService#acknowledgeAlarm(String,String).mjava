//    @PUT
    /**
     * <p>acknowledgeAlarm</p>
     *
     * @param alarmId a {@link java.lang.String} object.
     * @param action a {@link java.lang.String} object.
     * @return a {@link org.opennms.netmgt.model.OnmsAcknowledgment} object.
     */
    @POST
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    @Transactional
    public OnmsAcknowledgment acknowledgeAlarm(@FormParam("alarmId") String alarmId, @FormParam("action") String action) {
        OnmsAlarm alarm = m_alarmDao.get(Integer.valueOf(alarmId));
        OnmsAcknowledgment ack = new OnmsAcknowledgment(alarm);
        
        if (action == null) {
            action = "ack";
        }
        
        if ("ack".equals(action)) {
            ack.setAckAction(AckAction.ACKNOWLEDGE);
        } else if ("unack".equals(action)) {
            ack.setAckAction(AckAction.UNACKNOWLEDGE);
        } else if ("clear".equals(action)) {
            ack.setAckAction(AckAction.CLEAR);
        } else if ("esc".equals(action)) {
            ack.setAckAction(AckAction.ESCALATE);
        } else {
            throw new IllegalArgumentException(
            "Must supply the 'action' parameter, set to either 'ack, 'unack', 'clear', or 'esc'");
        }
        
        m_ackSvc.processAck(ack);
        return ack;
        
    }

