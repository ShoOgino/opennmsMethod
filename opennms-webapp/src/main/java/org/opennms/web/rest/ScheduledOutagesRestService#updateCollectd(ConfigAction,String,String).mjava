    private void updateCollectd(ConfigAction action, String outageName, String packageName) {
        getOutage(outageName); // Validate if outageName exists.
        try {
            if (action.equals(ConfigAction.ADD)) {
                CollectdPackage pkg = getCollectdPackage(packageName);
                if (!pkg.getPackage().getOutageCalendarCollection().contains(outageName))
                    pkg.getPackage().addOutageCalendar(outageName);
            }
            if (action.equals(ConfigAction.REMOVE)) {
                CollectdPackage pkg = getCollectdPackage(packageName);
                pkg.getPackage().removeOutageCalendar(outageName);
            }
            if (action.equals(ConfigAction.REMOVE_FROM_ALL)) {
                for (CollectdPackage pkg : CollectdConfigFactory.getInstance().getCollectdConfig().getPackages()) {
                    pkg.getPackage().removeOutageCalendar(outageName);
                }
            }
            CollectdConfigFactory.getInstance().saveCurrent();
        } catch (Exception e) {
            throwException(Status.BAD_REQUEST, "Can't add/remove scheduled outage " + outageName + " for collector package " + packageName);
        }
    }

