    /** intf can be null */
    /*
    private String[] getRRDNames(boolean encodeNodeIdInRRDParm) {
        String[] columns = m_graph.getColumns();
        String[] rrds = new String[columns.length];

        for (int i=0; i < columns.length; i++) {
            StringBuffer buffer = new StringBuffer();

            if (encodeNodeIdInRRDParm) {
		// We don't include node IDs on response graphs
                // Make sure we have a valid nodeId, else append domain
                if (m_nodeId > -1) {
                    buffer.append(m_nodeId);
                } else {
                    buffer.append(m_domain);
                }
                buffer.append(File.separator);
            }
            
            if (!"node".equals(getResourceType()) && !"interface".equals(getResourceType())) {
                buffer.append(getResourceType());
                buffer.append(File.separator);
            }

            if (m_resource != null) {
                boolean addInterface = false;
                if (!encodeNodeIdInRRDParm) {
                    // Response time graph, it's always interface specific
                    addInterface = true;
//                  } else if (PerformanceModel.INTERFACE_GRAPH_TYPE.equals(m_graph.getType())) {
                  } else if (!PerformanceModel.NODE_GRAPH_TYPE.equals(m_graph.getType())) {
                    // Performance graph where type == interface
                    addInterface = true;
                }

                if (addInterface) {
                    buffer.append(m_resource);
                    buffer.append(File.separator);
                }
            }
            
            buffer.append(columns[i]);
            buffer.append(RrdFileConstants.RRD_SUFFIX);

            rrds[i] = buffer.toString();
        }

        return rrds;
    }
    */
    
    private String[] getRRDNames() {
        String[] columns = m_graph.getColumns();
        String[] rrds = new String[columns.length];

        for (int i=0; i < columns.length; i++) {
            if(m_nodeId > -1) {
                rrds[i] = m_model.getRelativePathForAttribute(m_resourceType, Integer.toString(m_nodeId), m_resource, columns[i]);
            } else {
                rrds[i] = m_model.getRelativePathForAttribute(m_resourceType, m_domain, m_resource, columns[i]);
            }
        }

        return rrds;
    }

