    /**
     * Convenience method for translating a <code>java.sql.ResultSet</code>
     * containing vulnerability information into an array of
     * <code>Vulnerability</code> objects.
     */
    // FIXME: Don't reuse the single "element" variable for multiple objects.
    protected static Vulnerability[] rs2Vulnerabilities(ResultSet rs) throws SQLException {
        Vulnerability[] vuls = null;
        List<Vulnerability> list = new ArrayList<Vulnerability>();

        while (rs.next()) {
            Vulnerability vul = new Vulnerability();

            Object element = new Integer(rs.getInt("vulnerabilityId"));
            vul.id = ((Integer) element).intValue();

            // can be null
            element = rs.getObject("nodeID");
            if (element != null) {
                vul.nodeId = (Integer) element;
            }

            // can be null
            element = rs.getString("ipAddr");
            vul.ipAddr = (String) element;

            // can be null
            element = rs.getObject("serviceID");
            if (element != null) {
                vul.serviceId = (Integer) element;
            }

            // can be null
            element = rs.getString("nodeLabel");
            vul.nodeLabel = (String) element;

            // can be null
            element = rs.getString("serviceName");
            vul.serviceName = (String) element;

            element = rs.getTimestamp("creationTime");
            vul.createTime = new Date(((Timestamp) element).getTime());

            element = rs.getTimestamp("lastAttemptTime");
            vul.lastAttemptTime = new Date(((Timestamp) element).getTime());

            element = rs.getTimestamp("lastScanTime");
            vul.lastScanTime = new Date(((Timestamp) element).getTime());

            // can be null
            element = rs.getTimestamp("resolvedTime");
            if (element != null) {
                vul.resolvedTime = new Date(((Timestamp) element).getTime());
            }

            // can be null
            element = rs.getString("descr");
            vul.description = (String) element;

            // can be null
            element = rs.getString("logmsg");
            vul.logMessage = (String) element;

            element = new Integer(rs.getInt("severity"));
            vul.severity = OnmsSeverity.get((Integer)element);

            element = new Integer(rs.getInt("pluginID"));
            vul.pluginId = ((Integer) element).intValue();

            element = new Integer(rs.getInt("pluginSubID"));
            vul.pluginSubId = ((Integer) element).intValue();

            // can be null
            element = rs.getString("descr");
            vul.description = (String) element;

            // can be null
            element = rs.getObject("port");
            if (element != null) {
                vul.port = (Integer) element;
            }

            // can be null
            element = rs.getString("protocol");
            vul.protocol = (String) element;

            // can be null
            element = rs.getString("cveEntry");
            vul.cveEntry = (String) element;

            list.add(vul);
        }

        vuls = list.toArray(new Vulnerability[list.size()]);

        return vuls;
    }

