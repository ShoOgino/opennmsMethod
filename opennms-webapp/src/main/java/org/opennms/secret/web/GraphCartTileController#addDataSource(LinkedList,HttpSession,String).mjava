    private void addDataSource(LinkedList dataSources, HttpSession session, String dataSourceId) {
        if (m_dataSourceService == null) {
            throw new IllegalStateException("setDataSourceService has never been called to initialize the DataSourceService provider");
        }
        
        if (dataSourceId == null ) {
            return; // XXX should we be tossing an error here?
        }
        
        /*
        Object o = session.getAttribute("dataSources");
        if (o == null || !(o instanceof List)) {
            return; // XXX should we be tossing an error here?
        }
        
        List sources = (List) o;
        DataSource ds = null;
        for (Iterator i = sources.iterator(); i.hasNext(); ) {
            DataSource t = (DataSource) i.next();
            if (dataSourceId.equals(t.getId())) {
                ds = t;
                break;
            }
        }
        */
        
        DataSource ds = m_dataSourceService.getDataSourceById(dataSourceId);
        
        if (ds == null) {
            return; // XXX should we be tossing an error here?
        }
        
        boolean alreadyExists = false;
        GraphDataElement def;
        for (Iterator i = dataSources.iterator(); i.hasNext(); ) {
            def = (GraphDataElement) i.next();
            if (ds.getId().equals(def.getDataSource().getId())) {
                alreadyExists = true;
                break;
            }
        }

        if (!alreadyExists) {
            def = new GraphDataLine(ds, getColor(session), 1);
            def.setLegend(ds.getName());
            dataSources.add(def);
        }
    }

