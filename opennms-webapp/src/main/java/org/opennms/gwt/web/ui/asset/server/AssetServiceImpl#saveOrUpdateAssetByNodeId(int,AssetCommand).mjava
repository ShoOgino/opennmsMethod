	/** {@inheritDoc} */
	@Override
	public Boolean saveOrUpdateAssetByNodeId(int nodeId,
			AssetCommand assetCommand) {
		
		logger.debug("nodeId: '{}' assetCommand: '{}'", nodeId, assetCommand);
		
		Boolean isSaved = false;
		this.m_onmsNode = this.m_nodeDao.get(nodeId);
		this.m_onmsAssetRecord = this.m_onmsNode.getAssetRecord();

		// copy the transfer object for rpc back to the hibernate model
		BeanUtils.copyProperties(
				WebSecurityUtils.sanitizeBeanStringProperties(assetCommand, s_allowHtmlFields),
				this.m_onmsAssetRecord);
		logger.debug("OnmsAssetRecord: '{}'", m_onmsAssetRecord);
		
		// set the last modified user from logged in user
		this.m_onmsAssetRecord.setLastModifiedBy(this.m_securityContext
				.getUsername());

		// set last modified date and assign the node for the asset record
		this.m_onmsAssetRecord.setLastModifiedDate(new Date());
		this.m_onmsAssetRecord.setNode(this.m_onmsNode);

		// try to persist the asset record from the web ui
		try {
			logger.debug("OnmsNode '{}'", m_onmsNode.toString());
			logger.debug("AssetRecordDao to update '{}'", m_assetRecordDao.toString());
			logger.debug("OnmsAssetRecord to update '{}'", m_onmsAssetRecord.toString());
			
			this.m_assetRecordDao.saveOrUpdate(this.m_onmsAssetRecord);
			isSaved = true;
		} catch (Exception e) {
			// TODO: Catch exception and show error in web user interface
			isSaved = false;
			logger.error("Problem during saveing or updating assets '{}'", e.getMessage());
			e.printStackTrace();
		}

		// save was successful
		return isSaved;
	}

