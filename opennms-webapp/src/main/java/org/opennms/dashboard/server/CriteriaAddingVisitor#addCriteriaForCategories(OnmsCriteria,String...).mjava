    /**
     * <p>addCriteriaForCategories</p>
     *
     * @param criteria a {@link org.opennms.netmgt.model.OnmsCriteria} object.
     * @param categories a {@link java.lang.String} object.
     */
    public void addCriteriaForCategories(OnmsCriteria criteria, String... categories) {
        if (criteria.resultsOfType(OnmsMonitoredService.class) || criteria.resultsOfType(OnmsOutage.class)) {
            // Make a detached criteria to subselect the node IDs that are in the
            // specified surveillance categories
            DetachedCriteria categoryNodeCriteria = DetachedCriteria.forClass(OnmsNode.class, "categoryNodes");

            // HACK: Hibernate 3.6 aliases 'categoryNodes' as 'categoryNodes_' so use that for the raw SQL statement.
            // Also note that the database field that we use here is 'nodeId' but the bean property for node ID
            // in OnmsNode is 'id'.
            String sql = "categoryNodes_.nodeId in (select distinct cn.nodeId from category_node cn join categories c on cn.categoryId = c.categoryId where c.categoryName in (" + commaDelimitedQuestionMarks(categories.length) + "))";
            categoryNodeCriteria.add(Restrictions.sqlRestriction(sql, categories, arrayOfType(categories.length, new StringType())));

            // Join the categoryNodes IDs found by the subselect with the outer 'node' alias.
            // This requires that the criteria already has a 'node' alias to the node table.
            //
            // @see org.opennms.web.svclayer.support.DefaultRtcService#createOutageCriteria()
            // @see org.opennms.web.svclayer.support.DefaultRtcService#createServiceCriteria()
            //
            categoryNodeCriteria.add(Restrictions.eqProperty("categoryNodes.id", "node.id"));

            // Add a projection for 'id' so that the categoryNodes.id can be joined to
            // node.id in the outer criteria
            categoryNodeCriteria.setProjection(Projections.property("id"));

            // Use an exists subquery to evaluate the subselect
            criteria.add(Subqueries.exists(categoryNodeCriteria));
        } else {
            // TODO: This case assumes that the OnmsCriteria is querying an object with a 'nodeId' property.
            // I'm not sure this is ever used... I think this visitor is just for OnmsMonitoredService and 
            // OnmsOutage queries.
            String sql = "{alias}.nodeId in (select distinct cn.nodeId from category_node cn join categories c on cn.categoryId = c.categoryId where c.categoryName in (" + commaDelimitedQuestionMarks(categories.length) + "))";
            criteria.add(Restrictions.sqlRestriction(sql, categories, arrayOfType(categories.length, new StringType())));
        }
    }

