            /**
             * Returns start and end times as Strings, in standard Java milliseconds
             * values.  The time will be rounded to the nearest five minute interval
             * so when we prefetch graph images the URL will remain the same for that
             * interval, allowing the browser to use the prefetched image.
             */
            public String[] getTimes() {
                /*
                 * Get the current time and convert it from a long to integer so we
                 * can do reliable math in Javascript.
                 * 
                 * With GWT, a long is implemented in Javascript as a double since
                 * Javascript doesn't have a 64 bit integer type.  We want to make
                 * sure that the times that we return don't change even a millisecond,
                 * otherwise a graph that we prefetch might not be usable because the
                 * prefetched URL and the URL that we use when we want to show the
                 * image might not be the same.
                 * 
                 */
                BigInteger now = BigInteger.valueOf(System.currentTimeMillis() / 1000); 

                BigInteger end = now.divide(TIME_ROUNDING_INTERVAL).multiply(TIME_ROUNDING_INTERVAL); 
                BigInteger start = end.add(TIME_START_OFFSET);

                return new String[] { start + "000", end + "000" };
            }

