    @Test
    public void testProvisioning() throws Exception {
        String groupName = "SeleniumTestGroup";
        
        frontPage();
        clickAndWait("link=Admin");
        clickAndWait("link=Manage Provisioning Requisitions");
        
        selenium.type("css=form[name=takeAction] > input[name=groupName]", groupName);
        clickAndWait("css=input[type=submit]");
        clickAndWait("//a[contains(@href, 'editForeignSource(\""+ groupName+"\")')]");
        clickAndWait("//input[@value='Add Detector']");
        
        String detectorNode = setTreeFieldsAndSave("foreignSourceEditForm", type("name", "HTTP-8080"), select("pluginClass", "HTTP"));
        clickAndWait("//a[contains(@href, '"+detectorNode+"') and text() = '[Add Parameter]']");
        setTreeFieldsAndSave("foreignSourceEditForm", select("key", "port"), type("value", "8080"));

        clickAndWait("//input[@value='Done']");

        clickAndWait("//a[contains(@href, '" + groupName + "') and contains(@href, 'editRequisition') and text() = 'Edit']");
        clickAndWait("//input[@value='Add Node']");
        String nodeForNode = setTreeFieldsAndSave("nodeEditForm", type("nodeLabel", "localNode"));
        
        clickAndWait("//a[contains(@href, '" + nodeForNode + "') and text() = '[Add Interface]']");
        setTreeFieldsAndSave("nodeEditForm", type("ipAddr", "::1"));
        
        clickAndWait("//a[text() = 'Add Service']");
        setTreeFieldsAndSave("nodeEditForm", type("serviceName", "HTTP-8080"));
        
        clickAndWait("//input[@value='Done']");
        clickAndWait("//input[@value='Synchronize']");

        clickAndWait("link=Node List");

        // wait 60-ish seconds to make sure the new node is created
        int count = 60;
        while(selenium.isTextPresent("None found.") && count > 0) {
            Thread.sleep(1000);
            count--;
            selenium.refresh();
            waitForPageToLoad();
        }
        assertFalse(selenium.isTextPresent("None found."));
        
        if(selenium.isElementPresent("link=localNode")) {
            // if there's more than 1 node discovered, it will give a list
            clickAndWait("link=localNode");
        }
        // otherwise it will go straight to the only node's page

        if(selenium.isElementPresent("link=ICMP")){
            clickAndWait("link=ICMP");
            waitForText("ICMP service on 0:0:0:0:0:0:0:1");
            waitForText("localNode");
        } else {
            fail("Neither of the links were found. Printing page source: " + selenium.getHtmlSource());
        }

        clickAndWait("link=Admin");
        clickAndWait("link=Manage Provisioning Requisitions");
        selenium.chooseOkOnNextConfirmation();
        selenium.click("//input[@value='Delete Nodes']");
        selenium.getConfirmation();
        waitForElement("//input[@value='Synchronize']");
        clickAndWait("//input[@value='Synchronize']");
        waitForElementRefresh("//input[@value='Delete Requisition']");
        clickAndWait("//input[@value='Delete Requisition']");
    }

