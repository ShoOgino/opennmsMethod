    @Test
    public void testAvailableLocations() throws Exception {
        // We use hasItems() instead of containsInAnyOrder() at some points because other tests do
        // not properly clean up their created nodes ans locations.

        // Check if default selection is 'all locations' and all locations are listed
        findElementByXpath("//select[@id='monitoringLocation']//option[text()='All locations' and @selected]");
        assertThat(Iterables.transform(driver.findElements(By.xpath("//select[@id='monitoringLocation']//option")), WebElement::getText),
                hasItems("All locations",
                        "Pittsboro",
                        "Fulda"));

        // Check the default lists all nodes
        assertThat(Iterables.transform(driver.findElements(By.xpath("//div[@class='NLnode']//a")), WebElement::getText),
                hasItems("TestMachine loc1node1",
                        "TestMachine loc1node2",
                        "TestMachine loc2node1",
                        "TestMachine loc2node2"));

        // Check switching to first location
        findElementByXpath("//select[@id='monitoringLocation']//option[text()='Pittsboro']").click();
        findElementByXpath("//select[@id='monitoringLocation']//option[text()='Pittsboro' and @selected]");
        assertThat(Iterables.transform(driver.findElements(By.xpath("//div[@class='NLnode']//a")), WebElement::getText),
                containsInAnyOrder("TestMachine loc1node1",
                        "TestMachine loc1node2"));

        // Check switching to second location
        findElementByXpath("//select[@id='monitoringLocation']//option[text()='Fulda']").click();
        findElementByXpath("//select[@id='monitoringLocation']//option[text()='Fulda' and @selected]");
        assertThat(Iterables.transform(driver.findElements(By.xpath("//div[@class='NLnode']//a")), WebElement::getText),
                containsInAnyOrder("TestMachine loc2node1",
                        "TestMachine loc2node2"));

        // Check switching to unfiltered
        findElementByXpath("//select[@id='monitoringLocation']//option[text()='All locations']").click();
        findElementByXpath("//select[@id='monitoringLocation']//option[text()='All locations' and @selected]");
        assertThat(Iterables.transform(driver.findElements(By.xpath("//div[@class='NLnode']//a")), WebElement::getText),
                hasItems("TestMachine loc1node1",
                        "TestMachine loc1node2",
                        "TestMachine loc2node1",
                        "TestMachine loc2node2"));
    }

