    /**
     * Verifies that each of the known keys in the output contains some value.
     *
     * See NMS-9103.
     */
    @Test
    public void canRetrieveProductInfo() throws ClientProtocolException, IOException, InterruptedException {
        // Retrieve the info summary
        final ResponseData response = getRequest(new HttpGet(getBaseUrl() + "/opennms/rest/info"));
        final String json = response.getResponseText();

        // The expected payload looks like:
        //  {"packageDescription":"OpenNMS","displayVersion":"20.0.2","packageName":"opennms","version":"20.0.1"}
        final ObjectMapper mapper = new ObjectMapper();
        final Map<String, String> infoMap = mapper.readValue(json, new TypeReference<Map<String, String>>(){});

        // Verify that some value is present for each of the known keys
        for (String key : Arrays.asList("packageDescription", "displayVersion", "packageName", "version")) {
            assertTrue(String.format("Expected value for key '%s', but none was found. Info returned: %s", key, json),
                    !Strings.isNullOrEmpty(infoMap.get(key)));
        }
    }

