    /**
     * Verifies that each of the known keys in the output contains some value.
     *
     * See NMS-9103.
     */
    @Test
    public void canRetrieveProductInfo() throws ClientProtocolException, IOException, InterruptedException {
        // Retrieve the info summary
        final ResponseData response = getRequest(new HttpGet(getBaseUrl() + "/opennms/rest/info"));
        final String json = response.getResponseText();

        // The expected payload looks like:
        //  {"packageDescription":"OpenNMS","displayVersion":"22.0.0-SNAPSHOT","packageName":"opennms","version":"22.0.0", "ticketerConfig":{"enabled":false, "plugin": null}}
        final ObjectMapper mapper = new ObjectMapper();
        final JsonNode infoObject = mapper.readTree(json);

        // Verify that some value is present for each of the known keys
        for (String key : Arrays.asList("packageDescription", "displayVersion", "packageName", "version")) {
            assertTrue(String.format("Expected value for key '%s', but none was found. Info returned: %s", key, json),
                    !Strings.isNullOrEmpty(infoObject.get(key).asText()));
        }
        assertNotNull(infoObject.get("ticketerConfig"));
    }

