        public List<UIGrafanaEndpoint> getEndpoints() {
            return execute(() -> driver.findElements(By.xpath("//table/tbody/tr"))
                    .stream()
                    .map(row -> {
                        final List<WebElement> columns = row.findElements(By.xpath("./td"));
                        final String id = row.getAttribute("data-id");
                        final String uid = columns.get(0).getText();
                        final String url = columns.get(1).getText();
                        final String description = columns.get(3).getText();
                        final String connectTimeout = columns.get(4).getText();
                        final String readTimeout = columns.get(5).getText();

                        // Click reveal to get the API KEY and afterwards click again to hide
                        new Button(getDriver(), "action.revealApiKey." + id).click();
                        new WebDriverWait(driver, 5).until(webDriver -> !row.findElements(By.xpath("./td")).get(2).getText().contains("****"));
                        final String apiKey = columns.get(2).getText();
                        new Button(getDriver(), "action.revealApiKey." + id).click();

                        final UIGrafanaEndpoint grafanaEndpoint = new UIGrafanaEndpoint();
                        grafanaEndpoint.setId(Long.parseLong(id));
                        grafanaEndpoint.setApiKey(apiKey);
                        grafanaEndpoint.setDescription(description);
                        grafanaEndpoint.setUid(uid);
                        grafanaEndpoint.setUrl(url);
                        if (!Strings.isNullOrEmpty(connectTimeout)) {
                            grafanaEndpoint.setConnectTimeout(Integer.parseInt(connectTimeout));
                        }
                        if (!Strings.isNullOrEmpty(readTimeout)) {
                            grafanaEndpoint.setReadTimeout(Integer.parseInt(readTimeout));
                        }
                        return grafanaEndpoint;
                    }).collect(Collectors.toList()));
        }

