    @Test
    public void testNotifdAutoAcknowledgeAlarm() {
        //Add a node with interface
        OnmsNode node = new OnmsNode();
        node.setLabel(NODE_LABEL);
        node.setType(OnmsNode.NodeType.ACTIVE);
        node.setForeignSource("test");
        node.setForeignId(NODE_LABEL);
        Response response = restClient.addNode(node);
        assertEquals(201, response.getStatus());
        node = restClient.getNode("test:" + NODE_LABEL);
        OnmsIpInterface ipInterface = new OnmsIpInterface();
        ipInterface.setNode(node);
        ipInterface.setIpAddress(InetAddressUtils.getInetAddress(IP_ADDRESS));
        ipInterface.setIpHostName(IP_ADDRESS);
        response = restClient.addInterface("test:" + NODE_LABEL, ipInterface);
        assertEquals(201, response.getStatus());

        // Send a node down event
        EventBuilder builder = new EventBuilder(EventConstants.NODE_DOWN_EVENT_UEI, "test", new Date());
        builder.setNode(node);
        restClient.sendEvent(builder.getEvent());

        // Check that a notification is generated for node down
        InetSocketAddress pgsql = m_testEnvironment.getServiceAddress(ContainerAlias.POSTGRES, 5432);
        HibernateDaoFactory daoFactory = new HibernateDaoFactory(pgsql);
        NotificationDao notificationDao = daoFactory.getDao(NotificationDaoHibernate.class);
        Criteria criteria = new CriteriaBuilder(OnmsNotification.class).createAlias("node", "node")
                .eq("node.id", node.getId()).toCriteria();
        await().atMost(30, TimeUnit.SECONDS).pollInterval(10, TimeUnit.SECONDS)
                .until(DaoUtils.countMatchingCallable(notificationDao, criteria), greaterThan(0));

        // Send a node Up event
        EventBuilder builder1 = new EventBuilder(EventConstants.NODE_UP_EVENT_UEI, "test", new Date());
        builder1.setNode(node);
        restClient.sendEvent(builder1.getEvent());

        // Check that notification is auto-acknowledged
        criteria = new CriteriaBuilder(OnmsNotification.class).eq("answeredBy", "auto-acknowledged")
                .createAlias("node", "node").eq("node.id", node.getId()).toCriteria();

        await().atMost(1, TimeUnit.MINUTES).pollInterval(5, TimeUnit.SECONDS)
                .until(DaoUtils.countMatchingCallable(notificationDao, criteria), greaterThan(0));
    }

