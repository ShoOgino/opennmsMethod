    public List<String> listAndVerifyDetectors(String host, InetSocketAddress sshAddr) throws Exception {
        List<String> unmatchedDetectors = new ArrayList<>();
        try (final SshClient sshClient = new SshClient(sshAddr, "admin", "admin")) {
            // List the detectors
            PrintStream pipe = sshClient.openShell();
            pipe.println("opennms:list-detectors");
            pipe.println("logout");
            await().atMost(1, MINUTES).until(sshClient.isShellClosedCallable());

            // Parse the output
            String shellOutput = CommandTestUtils.stripAnsiCodes(sshClient.getStdout());

            shellOutput = StringUtils.substringAfter(shellOutput, "opennms:list-detectors");
            LOG.info("Detectors output: {}", shellOutput);
            Map<String, String> detectorMap = new HashMap<String, String>();
            for (String detector : shellOutput.split("\\r?\\n")) {
                if (StringUtils.isNotBlank(detector)) {
                    String detectorSet[] = detector.split(":");
                    if (detectorSet.length >= 2) {
                        detectorMap.put(detectorSet[0], detectorSet[1]);
                    }
                }
            }
            LOG.info("Found detectors: {}",  detectorMap);

            // Verify
            for (String detectorName : expectedDetectors.keySet()) {
                if (!detectorMap.containsKey(detectorName)) {
                    unmatchedDetectors.add(detectorName);
                }
            }
        }
        return unmatchedDetectors;
    }

