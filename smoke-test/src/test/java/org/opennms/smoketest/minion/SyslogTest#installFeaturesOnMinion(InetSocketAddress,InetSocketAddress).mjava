    /**
     * Install the Kafka features on Minion.
     * 
     * @param minionSshAddr
     * @param kafkaAddress
     * @throws Exception
     */
    private static void installFeaturesOnMinion(InetSocketAddress minionSshAddr, InetSocketAddress kafkaAddress) throws Exception {
        try (final SshClient sshClient = new SshClient(minionSshAddr, "admin", "admin")) {
            PrintStream pipe = sshClient.openShell();
            pipe.println("config:edit org.opennms.netmgt.syslog.handler.kafka");
            // Set the IP address for Kafka to the address of the Docker host
            pipe.println("config:property-set kafkaAddress " + InetAddress.getLocalHost().getHostAddress() + ":" + kafkaAddress.getPort());
            pipe.println("config:update");
            // Uninstall all of the syslog and trap features with ActiveMQ handlers
            pipe.println("feature:uninstall -v opennms-syslogd-listener-camel-netty opennms-trapd-listener opennms-syslogd-handler-minion opennms-trapd-handler-minion");
            // Reinstall all of the syslog and trap features with Kafka handlers
            pipe.println("feature:install -v opennms-syslogd-listener-camel-netty opennms-trapd-listener opennms-syslogd-handler-kafka opennms-trapd-handler-kafka");
            pipe.println("feature:list -i");
            pipe.println("list");
            // Set the log level to INFO
            pipe.println("log:set INFO");
            pipe.println("logout");
            try {
                await().atMost(2, MINUTES).until(sshClient.isShellClosedCallable());
            } finally {
                LOG.info("Karaf output:\n{}", sshClient.getStdout());
            }
        }
    }

