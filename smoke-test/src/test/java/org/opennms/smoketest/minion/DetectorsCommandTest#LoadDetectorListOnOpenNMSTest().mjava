    @Test
    public void LoadDetectorListOnOpenNMSTest() throws Exception {

        final InetSocketAddress sshAddr = m_testEnvironment.getServiceAddress(ContainerAlias.OPENNMS, 8101);
        try (final SshClient sshClient = new SshClient(sshAddr, "admin", "admin");) {
            PrintStream pipe = sshClient.openShell();
            pipe.println("provision:list-detectors");
            pipe.println("logout");

            await().atMost(2, MINUTES).until(sshClient.isShellClosedCallable());

            String shellOutput = sshClient.getStdout();
            shellOutput = StringUtils.substringAfter(shellOutput, "provision:list-detectors");
            LOG.info("Detectors Output {}", shellOutput);
            // Split based on line endings
            String detectors[] = shellOutput.split("\\r?\\n");
            List<String> detectorList = Arrays.asList(detectors);
            // Wrapping List to make it modifiable
            List<String> detectorsList = new ArrayList<String>(detectorList);
            detectorsList.remove(detectorsList.size() - 1);

            Map<String, String> detectorMap = new HashMap<String, String>();
            for (String detector : detectorsList) {
                if (StringUtils.isNotBlank(detector)) {
                    String detectorSet[] = detector.split(":");
                    if (detectorSet.length >= 2) {
                        detectorMap.put(detectorSet[0], detectorSet[1]);
                    }
                }
            }
            for (String detectorName : expectedDetectorsOpenNMS.keySet()) {
                boolean match = detectorMap.containsKey(detectorName);
                if (match == false) {
                    fail(detectorName + "  detector was not loaded on OpenNMS");
                }
            }
        }

    }

