    @Test
    public void verifyPermissions() {
        final String ReportId = "local_Early-Morning-Report";
        final String[][] users = new String[][] {
                new String[]{"admin", "admin"},
                new String[]{"ulf", "admin"}
        };

        /*
         * Verify as privilegued users
         */
        for (String[] user : users) {
            authentication = preemptive().basic(user[0], user[1]);

            // Verify list works
            given().get().then().statusCode(200);

            // Verify get specific report works
            given().get(ReportId).then().statusCode(200);

            // Verify render report works
            // TODO MVR implement
//        RestAssured.given().body(TODO MVR).post(ReportId).then().statusCode(200);

            // Verify list already persisted reports
            given().get("persisted").then().statusCode(204);

            // Verify delete already persisted reports
            given().delete("persisted").then().statusCode(202);

            // Verify deleting existing persisted report
            // TODO MVR
            // RestAssured.given().delete("persisted/" + ReportId).then().statusCode(202);

            // Verify listing scheduled report works
            given().get("scheduled").then().statusCode(204);

            // Verify deleting scheduled reports work
            given().delete("scheduled").then().statusCode(202);

            // Verify deleting specific scheduled report works
            // TODO MVR
            // RestAssured.given().delete("scheduled/" + ReportId).then().statusCode(202);
        }

        // Now try with not authenticated user
        authentication = preemptive().basic("test", "admin");

        // Verify list works
        given().get().then().statusCode(200);

        // Verify get specific report works
        given().get(ReportId).then().statusCode(200);

        // Verify render report works
        // TODO MVR implement
//        RestAssured.given().body(TODO MVR).post(ReportId).then().statusCode(200);

        // Verify list already persisted reports
        given().get("persisted").then().statusCode(204);

        // Verify delete already persisted reports
        given().delete("persisted").then().statusCode(403);

        // Verify deleting existing persisted report
        // TODO MVR
        // RestAssured.given().delete("persisted/" + ReportId).then().statusCode(202);

        // Verify listing scheduled report works
        given().get("scheduled").then().statusCode(204);

        // Verify deleting scheduled reports work
        given().delete("scheduled").then().statusCode(403);

        // Verify deleting specific scheduled report works
        // TODO MVR
        // RestAssured.given().delete("scheduled/" + ReportId).then().statusCode(202);
    }

