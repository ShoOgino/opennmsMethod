    public void deleteExistingRequisition(final String foreignSource) {
        provisioningPage();

        LOG.debug("deleteExistingRequisition: Deleting Requisition: {}", foreignSource);
        if (getForeignSourceElement(foreignSource) == null) {
            return;
        }

        // if the foreign source has nodes to delete, delete them
        long nodesInRequisition = getNodesInRequisition(getForeignSourceElement(foreignSource));
        if (nodesInRequisition > 0) {
            WebElement del = null;
            try {
                del = getForeignSourceElement(foreignSource).findElement(By.xpath("//input[@type='button' and @value='Delete Nodes']"));
                LOG.debug("deleteExistingRequisition: Found 'Delete Nodes' button.  Deleting nodes.");
                del.click();
                final Alert alert = wait.until(ExpectedConditions.alertIsPresent());
                if (alert == null) {
                    LOG.warn("deleteExistingRequisition: No alert box after clicking 'Delete Nodes', this is probably wrong!");
                } else {
                    alert.accept();
                }
            } catch (final NoSuchElementException e) {
                LOG.debug("deleteExistingRequisition: 'Delete Nodes' button not found.  Assuming the requisition is empty.");
            }
        }

        // if the database has nodes to delete, synchronize
        long nodesInDatabase = getNodesInDatabase(getForeignSourceElement(foreignSource));
        if (nodesInDatabase > 0) {
            final WebElement synchronizeButton = getForeignSourceElement(foreignSource).findElement(By.xpath("//input[@type='button' and @value='Synchronize']"));
            LOG.debug("deleteExistingRequisition: {} still has nodes in the database.  Synchronizing.", foreignSource);
            synchronizeButton.click();

            final Boolean matched = wait.until(new WaitForNodesInDatabase(0));
            if (matched == null || !matched) {
                LOG.warn("Failed to remove nodes from foreign source: {}", foreignSource);
            }
        }

        // now try to delete the requisition
        try {
            final WebElement deleteButton = getForeignSourceElement(foreignSource).findElement(By.xpath("//input[@type='button' and @value='Delete Requisition']"));
            deleteButton.click();
        } catch (final NoSuchElementException e) {
            LOG.debug("Failed to delete " + foreignSource, e);
        }
    }

