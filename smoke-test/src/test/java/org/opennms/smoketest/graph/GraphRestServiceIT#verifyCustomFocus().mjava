    @Test
    public void verifyCustomFocus() {
        // Use a different graph and create it
        graphmlDocument = new GraphmlDocument(CONTAINER_ID, "/topology/graphml/test-topology-2.xml");
        createGraphMLAndWaitUntilDone(graphmlDocument);

        // Verify custom focus
        final JSONObject query = new JSONObject()
                .put("semanticZoomLevel", 1)
                .put("verticesInFocus", new JSONArray().put("v1.1.1"));
        given().log().ifValidationFails()
                .contentType(ContentType.JSON)
                .body(query.toString())
                .post(CONTAINER_ID + "/{namespace}", "test")
                .then()
                .log().ifValidationFails()
                .contentType(ContentType.JSON)
                .content("id", Matchers.is("test"))
                .content("namespace", Matchers.is("test"))
                .content("vertices", Matchers.hasSize(2))
                .content("edges", Matchers.hasSize(1))
                .content("vertices[0].id", Matchers.is("v1.1"))
                .content("vertices[1].id", Matchers.is("v1.1.1"));

        //  Increase SZL
        query.put("semanticZoomLevel", 2);
        given().log().ifValidationFails()
                .contentType(ContentType.JSON)
                .body(query.toString())
                .post(CONTAINER_ID + "/{namespace}", "test")
                .then()
                .log().ifValidationFails()
                .contentType(ContentType.JSON)
                .content("id", Matchers.is("test"))
                .content("namespace", Matchers.is("test"))
                .content("vertices", Matchers.hasSize(4))
                .content("edges", Matchers.hasSize(3))
                .content("vertices[0].id", Matchers.is("v1"))
                .content("vertices[1].id", Matchers.is("v1.1"))
                .content("vertices[2].id", Matchers.is("v1.1.1"))
                .content("vertices[3].id", Matchers.is("v1.1.2"));
    }

