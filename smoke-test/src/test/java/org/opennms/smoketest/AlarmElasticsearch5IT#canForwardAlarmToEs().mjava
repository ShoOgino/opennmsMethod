    @Test
    public void canForwardAlarmToEs() throws Exception {
        InetSocketAddress esRestAddr = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.ELASTICSEARCH_5, 9200);
        InetSocketAddress opennmsSshAddr = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, 8101);
        final InetSocketAddress opennmsHttp = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, 8980);
        installElasticsearchFeaturesOnOpenNMS(opennmsSshAddr);

        // There should be no alarms in ES currently
        assertThat(getNumberOfAlarmsInEsWithUei(esRestAddr, EventConstants.IMPORT_FAILED_UEI), equalTo(0L));

        // Now send some event that will in turn trigger an alarm
        final EventBuilder builder = new EventBuilder(EventConstants.IMPORT_FAILED_UEI, "test");
        builder.setParam("importResource", "foo");
        final Event ev = builder.getEvent();
        final RestClient restClient = new RestClient(opennmsHttp);
        restClient.sendEvent(ev);

        // Now wait until the alarm is available in ES
        with().pollInterval(5, SECONDS).await().atMost(2, MINUTES)
                .until(() -> getNumberOfAlarmsInEsWithUei(esRestAddr, EventConstants.IMPORT_FAILED_UEI),
                        equalTo(1L));
    }

