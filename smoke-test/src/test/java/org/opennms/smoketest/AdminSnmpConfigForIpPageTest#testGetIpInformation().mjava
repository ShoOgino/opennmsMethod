    /**
     * Tests if getting the current snmp configuration for a specific ip address works.
     */
    @Test
    public void testGetIpInformation() {
    	// v2c
    	selenium.type("name=ipAddress",  "1.1.1.1");
    	selenium.click("name=getConfig");
    	waitForPageToLoad();
    	
    	assertEquals("", selenium.getValue("name=ipAddress"));
    	assertEquals("v2c", selenium.getValue("name=version"));
    	assertEquals("1.1.1.1", selenium.getValue("name=firstIPAddress"));
    	assertEquals("", selenium.getValue("name=lastIPAddress"));
    	assertEquals("1800", selenium.getValue("name=timeout"));
    	assertEquals("1", selenium.getValue("name=retryCount"));
    	assertEquals("161", selenium.getValue("name=port"));
    	assertEquals("65535", selenium.getValue("name=maxRequestSize"));
    	assertEquals("10", selenium.getValue("name=maxVarsPerPdu"));
    	assertEquals("2", selenium.getValue("name=maxRepetitions"));
    	assertEquals("public", selenium.getValue("name=readCommunityString"));
    	assertEquals("private", selenium.getValue("name=writeCommunityString"));
    	assertEquals("", selenium.getValue("name=securityName"));
    	assertEquals("", selenium.getValue("name=securityLevel"));
    	assertEquals("", selenium.getValue("name=authPassPhrase"));
    	assertEquals("", selenium.getValue("name=authProtocol"));
    	assertEquals("", selenium.getValue("name=privPassPhrase"));
    	assertEquals("", selenium.getValue("name=privProtocol"));
    	assertEquals("", selenium.getValue("name=engineId"));
    	assertEquals("", selenium.getValue("name=contextEngineId"));
    	assertEquals("", selenium.getValue("name=contextName"));
    	assertEquals("", selenium.getValue("name=enterpriseId"));
    	
    	
    	//v3
    	gotoPage();
    	selenium.type("name=firstIPAddress",  "1.2.3.4");
    	selenium.select("name=version", "v3");
    	selenium.click("name=saveConfig");
    	waitForPageToLoad();
    	selenium.type("name=ipAddress",  "1.2.3.4");
    	selenium.click("name=getConfig");
    	waitForPageToLoad();
    	
    	assertEquals("", selenium.getValue("name=ipAddress"));
    	assertEquals("v3", selenium.getValue("name=version"));
    	assertEquals("1.2.3.4", selenium.getValue("name=firstIPAddress"));
    	assertEquals("", selenium.getValue("name=lastIPAddress"));
    	assertEquals("1800", selenium.getValue("name=timeout"));
    	assertEquals("1", selenium.getValue("name=retryCount"));
    	assertEquals("161", selenium.getValue("name=port"));
    	assertEquals("65535", selenium.getValue("name=maxRequestSize"));
    	assertEquals("10", selenium.getValue("name=maxVarsPerPdu"));
    	assertEquals("2", selenium.getValue("name=maxRepetitions"));
    	assertEquals("", selenium.getValue("name=readCommunityString"));
    	assertEquals("", selenium.getValue("name=writeCommunityString"));
    	assertEquals("opennmsUser", selenium.getValue("name=securityName"));
    	assertEquals("1", selenium.getValue("name=securityLevel")); //authNoPriv
    	assertEquals("", selenium.getValue("name=authPassPhrase"));
    	assertEquals("", selenium.getValue("name=authProtocol"));
    	assertEquals("", selenium.getValue("name=privPassPhrase"));
    	assertEquals("", selenium.getValue("name=privProtocol"));
    	assertEquals("", selenium.getValue("name=engineId"));
    	assertEquals("", selenium.getValue("name=contextEngineId"));
    	assertEquals("", selenium.getValue("name=contextName"));
    	assertEquals("", selenium.getValue("name=enterpriseId"));
    	
    }

