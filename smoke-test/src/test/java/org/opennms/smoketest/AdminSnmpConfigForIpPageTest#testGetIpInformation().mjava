    /**
     * Tests if getting the current snmp configuration for a specific ip address works.
     */
    @Test
    public void testGetIpInformation() {
        // v2c
        new Select(findElementByName("version")).selectByVisibleText("v2c");
        enterText(By.name("ipAddress"), "1.1.1.1");
        findElementByName("getConfig").click();

        assertEquals("", findElementByName("ipAddress").getAttribute("value"));
        assertEquals("v2c", findElementByName("version").getAttribute("value"));
        assertEquals("1.1.1.1", findElementByName("firstIPAddress").getAttribute("value"));


        //v3
        gotoPage();
        new Select(findElementByName("version")).selectByVisibleText("v3");
        enterText(By.name("firstIPAddress"), "1.2.3.4");

        new Select(findElementByName("securityLevel")).selectByVisibleText("authNoPriv");
        new Select(findElementByName("authProtocol")).selectByVisibleText("MD5");
        new Select(findElementByName("privProtocol")).selectByVisibleText("DES");
        enterText(By.name("authPassPhrase"), "authMe!");
        enterText(By.name("privPassPhrase"), "privMe!");
        findElementByName("saveConfig").click();

        enterText(By.name("ipAddress"), "1.2.3.4");
        findElementByName("getConfig").click();

        assertEquals("", findElementByName("ipAddress").getAttribute("value"));
        assertEquals("v3", findElementByName("version").getAttribute("value"));
        assertEquals("1.2.3.4", findElementByName("firstIPAddress").getAttribute("value"));
        assertEquals("authMe!", findElementByName("authPassPhrase").getAttribute("value"));
        assertEquals("MD5", findElementByName("authProtocol").getAttribute("value"));
        assertEquals("privMe!", findElementByName("privPassPhrase").getAttribute("value"));
        assertEquals("DES", findElementByName("privProtocol").getAttribute("value"));
        assertEquals("2", findElementByName("securityLevel").getAttribute("value")); //authNoPriv
    }

