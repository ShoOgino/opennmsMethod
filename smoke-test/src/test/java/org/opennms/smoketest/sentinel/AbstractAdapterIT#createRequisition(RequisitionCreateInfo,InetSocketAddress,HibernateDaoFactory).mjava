    // Creates the requisition
    private OnmsNode createRequisition(RequisitionCreateInfo createInfo, InetSocketAddress opennmsHttp, HibernateDaoFactory daoFactory) {
        Objects.requireNonNull(createInfo);
        Objects.requireNonNull(opennmsHttp);
        Objects.requireNonNull(daoFactory);

        // Create Requisition
        final RestClient client = new RestClient(opennmsHttp);
        final Requisition requisition = createInfo.createRequisition();
        client.addOrReplaceRequisition(requisition);
        client.importRequisition(requisition.getForeignSource());

        // Verify creation
        final NodeDao nodeDao = daoFactory.getDao(NodeDaoHibernate.class);
        final OnmsNode onmsNode = await().atMost(3, MINUTES).pollInterval(30, SECONDS)
                .until(DaoUtils.findMatchingCallable(nodeDao, new CriteriaBuilder(OnmsNode.class)
                        .eq("foreignSource", createInfo.foreignSource)
                        .eq("foreignId", createInfo.foreignId)
                        .eq("label", createInfo.nodeLabel).toCriteria()), notNullValue());

        assertNotNull(onmsNode);

        return onmsNode;

    }

