    @Test
    public void verifyFlowStack() throws Exception {
        // Determine endpoints
        final InetSocketAddress elasticRestAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.ELASTICSEARCH_6, 9200, "tcp");
        final InetSocketAddress sentinelSshAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.SENTINEL, 8301);
        final InetSocketAddress minionNetflow5ListenerAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.MINION, Ports.NETFLOW5_PORT, "udp");
        final InetSocketAddress minionNetflow9ListenerAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.MINION, Ports.NETFLOW9_PORT, "udp");
        final InetSocketAddress minionIpfixListenerAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.MINION, Ports.IPFIX_PORT, "udp");
        final InetSocketAddress minionSflowListenerAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.MINION, Ports.SFLOW_PORT, "udp");

        waitForSentinelStartup(sentinelSshAddress);

        final FlowTester flowTester = new FlowTestBuilder()
                .withNetflow5Packet(minionNetflow5ListenerAddress)
                .withNetflow9Packet(minionNetflow9ListenerAddress)
                .withIpfixPacket(minionIpfixListenerAddress)
                .withSFlowPacket(minionSflowListenerAddress)
                .build(elasticRestAddress);

        flowTester.verifyFlows();
    }

