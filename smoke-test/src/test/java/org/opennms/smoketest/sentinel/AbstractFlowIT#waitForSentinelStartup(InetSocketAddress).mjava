    private void waitForSentinelStartup(InetSocketAddress sentinelSshAddress) throws Exception {
        // Ensure we are actually started the sink and are ready to listen for messages
        await().atMost(5, MINUTES)
                .pollInterval(5, SECONDS)
                .until(() -> {
                    try (final SshClient sshClient = new SshClient(sentinelSshAddress, "admin", "admin")) {
                        final PrintStream pipe = sshClient.openShell();
                        pipe.println("log:display");
                        pipe.println("logout");

                        // Wait for karaf to process the commands
                        await().atMost(10, SECONDS).until(sshClient.isShellClosedCallable());

                        // Read stdout and verify
                        final String shellOutput = sshClient.getStdout();
                        final String sentinelReadyString = getSentinelReadyString();
                        final boolean routeStarted = shellOutput.contains(sentinelReadyString);

                        logger.info("log:display");
                        logger.info("{}", shellOutput);
                        return routeStarted;
                    } catch (Exception ex) {
                        logger.error("Error while trying to verify sentinel startup: {}", ex.getMessage());
                        return false;
                    }
                });
    }

