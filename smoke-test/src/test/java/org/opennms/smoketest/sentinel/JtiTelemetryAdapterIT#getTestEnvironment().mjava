    protected TestEnvironment getTestEnvironment() {
        if (!OpenNMSSeleniumTestCase.isDockerEnabled()) {
            return new NullTestEnvironment();
        }
        try {
            final TestEnvironmentBuilder builder = TestEnvironment.builder()
                    .opennms()
                    .minion()
                    .newts()
                    .sentinel();

            // Enable JTI Adapter
            final Path opennmsSourceEtcDirectory = new TargetRoot(getClass()).getPath("system-test-resources", "etc");
            builder.withSentinelEnvironment()
                    .addFile(getClass().getResource("/sentinel/features-newts-jti.xml"), "deploy/features.xml")
                    .addFile(getClass().getResource("/sentinel/junos-telemetry-interface.groovy"), "etc/junos-telemetry-interface.groovy")
                    .addFiles(opennmsSourceEtcDirectory.resolve("resource-types.d"), "etc/resource-types.d")
                    .addFiles(opennmsSourceEtcDirectory.resolve("datacollection"), "etc/datacollection")
                    .addFile(opennmsSourceEtcDirectory.resolve("datacollection-config.xml"), "etc/datacollection-config.xml");

            // Enable NXOS-Listener
            builder.withMinionEnvironment()
                    .addFile(getClass().getResource("/sentinel/org.opennms.features.telemetry.listeners-udp-50000-jti.cfg"), "etc/org.opennms.features.telemetry.listeners-udp-jti.cfg")
            ;

            OpenNMSSeleniumTestCase.configureTestEnvironment(builder);
            return builder.build();
        } catch (final Throwable t) {
            throw new RuntimeException(t);
        }
    }

