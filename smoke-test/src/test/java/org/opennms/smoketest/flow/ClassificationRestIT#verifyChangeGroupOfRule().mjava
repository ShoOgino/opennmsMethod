    @Test
    public void verifyChangeGroupOfRule() {

        // POST (create) two groups
        final GroupDTO group3 = saveAndRetrieveGroup(new GroupDTOBuilder().withName("group3").withDescription("another user defined group with name group3")
                .withEnabled(true).withReadOnly(false).withPosition(30).build());
        final GroupDTO group4 = saveAndRetrieveGroup(new GroupDTOBuilder().withName("group4").withDescription("another user defined group with name group4")
                .withEnabled(true).withReadOnly(false).withPosition(30).build());

        // Create rule with group3
        RuleDTO rule = builder().withName("myrule").withDstPort("80").withGroup(group3).build();
        rule = saveAndRetrieveRule(rule);

        // Move rule to another group
        rule.setGroup(group4);
        updateAndRetrieveRule(rule);

        // Create similar rule in group3 and try to move the rule back to group3 => should not work since a similar rule exists there already
        saveAndRetrieveRule(builder().withName("myrule").withDstPort("80").withGroup(group3).build());
        rule.setGroup(group3);
        given().contentType(ContentType.JSON)
                .body(rule)
                .log().all()
                .put(Integer.toString(rule.getId()))
                .then().assertThat()
                .log().all()
                .statusCode(400)
                .body("message", equalTo(Errors.GROUP_DUPLICATE_RULE.getMessage()));

    }

