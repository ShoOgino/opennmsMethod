    @Test
    public void verifyCRUDforGroup() {
        // POST (create) group
        final GroupDTO group3 = saveAndRetrieveGroup(new GroupDTOBuilder().withName("group3").withDescription("another user defined group with name group3")
                .withEnabled(true).withReadOnly(true).withPosition(30).build());

        //  POST (create) group with same name => shouldn't be allowed
        given().contentType(ContentType.JSON)
                .accept(ContentType.JSON)
                .body(group3)
                .post("/groups").then().assertThat().statusCode(400) // bad request
                .body(is(String.format("{ context: 'name', message: 'A group with name \"%s\" already exists' }", group3.getName())));

        // UPDATE
        group3.setName("newNameOfGroup3");
        group3.setReadOnly(true);
        updateGroup(group3);
        GroupDTO updatedGroup3 = getGroup(group3.getId());
        assertEquals("newNameOfGroup3", updatedGroup3.getName());
        assertFalse(updatedGroup3.isReadOnly()); // readonly cannot be changed

        // DELETE group
        given().param("groupId", group3.getId()).delete()
                .then().statusCode(204);
        given().get("groups/" + group3.getId())
                .then()
                .assertThat()
                .statusCode(404); // not found => group is really gone
        // Saving the same group should work again...
        saveAndRetrieveGroup(group3);

        // try to delete predefined group => should not work
        int predefinedGroupId = 1;
        given().param("groupId", predefinedGroupId).delete()
                .then().statusCode(400);
    }

