    // Verifies that when OpenNMS and ElasticSearch is running and configured, that sending a flow packet
    // will actually be persisted in elastic
    @Test
    public void verifyFlowStack() throws Exception {
        // Determine endpoints
        final InetSocketAddress elasticRestAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.ELASTICSEARCH_5, 9200, "tcp");
        final InetSocketAddress opennmsSshAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, 8101);
        final InetSocketAddress opennmsNetflowAdapterAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, NETFLOW_LISTENER_UDP_PORT, "udp");
        final String elasticRestUrl = String.format("http://%s:%d", elasticRestAddress.getHostString(), elasticRestAddress.getPort());

        // Configure OpenNMS
        setupOnmsContainer(opennmsSshAddress);

        // Build the Client
        final JestClientFactory factory = new JestClientFactory();
        factory.setHttpClientConfig(new HttpClientConfig.Builder(elasticRestUrl)
                .multiThreaded(true)
                .build());
        final JestClient client = factory.getObject();
        try {
            // Read netflow 5 packet
           sendNetflowPacket(opennmsNetflowAdapterAddress);

            // Ensure that the template has been created
            verify(client, (jestClient) -> {
                JestResult result = jestClient.execute(new GetTemplate.Builder(TEMPLATE_NAME).build());
                if (result.isSucceeded() && result.getJsonObject().get(TEMPLATE_NAME) != null) {
                    return true;
                }
                return false;
            });
            // Verify that the flows have been created
            verify(client, jestClient -> {
                SearchResult response = jestClient.execute(new Search.Builder("").addIndex("flow-*").build());
                if (response.isSucceeded() && response.getTotal() == 2) {
                    return true;
                }
                return false;
            });
        } finally {
            // JestClient 2.x does not support Autoclosable, so we close it manually.
            // Can be removed when updated to a later version
            if (client != null) {
                client.shutdownClient();
            }
        }
    }

