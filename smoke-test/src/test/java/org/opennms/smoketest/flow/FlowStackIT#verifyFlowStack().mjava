    // Verifies that when OpenNMS and ElasticSearch is running and configured, that sending a flow packet
    // will actually be persisted in elastic
    @Test
    public void verifyFlowStack() throws Exception {
        // Determine endpoints
        final InetSocketAddress opennmsNetflow5AdapterAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, Ports.NETFLOW5_PORT, "udp");
        final InetSocketAddress opennmsNetflow9AdapterAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, Ports.NETFLOW9_PORT, "udp");
        final InetSocketAddress opennmsIpfixAdapterAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, Ports.IPFIX_PORT, "udp");
        final InetSocketAddress opennmsSflowAdapterAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, Ports.SFLOW_PORT, "udp");
        final InetSocketAddress elasticRestAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.ELASTICSEARCH_5, 9200, "tcp");
        final InetSocketAddress opennmsWebAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, 8980);

        final FlowTester flowTester = new FlowTestBuilder()
                .withFlowPacket(Packets.Netflow5, opennmsNetflow5AdapterAddress)
                .withFlowPacket(Packets.Netflow9, opennmsNetflow9AdapterAddress)
                .withFlowPacket(Packets.Ipfix, opennmsIpfixAdapterAddress)
                .withFlowPacket(Packets.SFlow, opennmsSflowAdapterAddress)
                .verifyOpennmsRestEndpoint(opennmsWebAddress)
                .build(elasticRestAddress);

        flowTester.verifyFlows();

    }

