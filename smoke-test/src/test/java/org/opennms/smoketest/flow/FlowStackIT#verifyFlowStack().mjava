    // Verifies that when OpenNMS and ElasticSearch is running and configured, that sending a flow packet
    // will actually be persisted in elastic
    @Test
    public void verifyFlowStack() throws Exception {
        // Determine endpoints
        final InetSocketAddress elasticRestAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.ELASTICSEARCH_5, 9200, "tcp");
        final InetSocketAddress opennmsWebAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, 8980);
        final InetSocketAddress opennmsSshAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, 8101);
        final InetSocketAddress opennmsNetflowAdapterAddress = testEnvironment.getServiceAddress(NewTestEnvironment.ContainerAlias.OPENNMS, NETFLOW_LISTENER_UDP_PORT, "udp");
        final String elasticRestUrl = String.format("http://%s:%d", elasticRestAddress.getHostString(), elasticRestAddress.getPort());

        // Proxy the REST service
        restClient = new RestClient(opennmsWebAddress);

        // Configure OpenNMS
        setupOnmsContainer(opennmsSshAddress);

        // No flows should be present
        assertEquals(Long.valueOf(0L), restClient.getFlowCount(0L, System.currentTimeMillis()));

        // Build the Elastic Rest Client
        final JestClientFactory factory = new JestClientFactory();
        factory.setHttpClientConfig(new HttpClientConfig.Builder(elasticRestUrl)
                .multiThreaded(true)
                .build());
        try (final JestClient client = factory.getObject()) {
            // Read Netflow 5 packet
           sendNetflowPacket(opennmsNetflowAdapterAddress);

            // Ensure that the template has been created
            verify(client, (jestClient) -> {
                JestResult result = jestClient.execute(new GetTemplate.Builder(TEMPLATE_NAME).build());
                return result.isSucceeded() && result.getJsonObject().get(TEMPLATE_NAME) != null;
            });

            // Verify directly at elastic that the flows have been created
            verify(client, jestClient -> {
                SearchResult response = jestClient.execute(new Search.Builder("").addIndex("netflow-*").build());
                return response.isSucceeded() && response.getTotal() == 2;
            });

            // Verify the flow count via the REST API
            with().pollInterval(15, SECONDS).await().atMost(1, MINUTES)
                    .until(() -> restClient.getFlowCount(0L, System.currentTimeMillis()), equalTo(2L));
        }
    }

