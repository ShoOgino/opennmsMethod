    @Test
    public void testRequisitionUI() throws Exception {
        goToMainPage();

        clickAndWait("link=Admin");

        clickAndWait("link=Manage Provisioning Requisitions");
        waitForPageToLoad();

        selenium.type("css=form[name=takeAction] > input[name=groupName]", REQUISITION_NAME);
        clickAndWait("css=input[type=submit]");
        clickAndWait("//a[contains(@href, 'editForeignSource(\""+ REQUISITION_NAME+"\")')]");
        clickAndWait("//input[@value='Add Detector']");

        String detectorNode = setTreeFieldsAndSave("foreignSourceEditForm", type("name", "HTTP-8080"), select("pluginClass", "HTTP"));
        waitForPageToLoad();

        clickAndWait("//a[contains(@href, '"+detectorNode+"') and text() = '[Add Parameter]']");

        setTreeFieldsAndSave("foreignSourceEditForm", select("key", "port"), type("value", "8080"));
        waitForPageToLoad();

        clickAndWait("//input[@value='Done']");
        clickAndWait("//a[contains(@href, '" + REQUISITION_NAME + "') and contains(@href, 'editRequisition') and text() = 'Edit']");
        clickAndWait("//input[@value='Add Node']");
        String nodeForNode = setTreeFieldsAndSave("nodeEditForm", type("nodeLabel", "localNode"));
        waitForPageToLoad();

        clickAndWait("//a[contains(@href, '" + nodeForNode + "') and text() = '[Add Interface]']");
        setTreeFieldsAndSave("nodeEditForm", type("ipAddr", "::1"));
        waitForPageToLoad();

        clickAndWait("//a[text() = 'Add Service']");
        setTreeFieldsAndSave("nodeEditForm", type("serviceName", "HTTP-8080"));
        waitForPageToLoad();

        clickAndWait("//input[@value='Done']");
        clickAndWait("//input[@value='Synchronize']");
        waitForPageToLoad();

        goToMainPage();

        clickAndWait("link=Admin");
        clickAndWait("link=Configure Users, Groups and On-Call Roles");
        clickAndWait("link=Configure Users");
        clickAndWait("link=Add new user");
        selenium.type("id=userID", USER_NAME);
        selenium.type("id=pass1", "SmokeTestPassword");
        selenium.type("id=pass2", "SmokeTestPassword");
        clickAndWait("id=doOK");
        waitForElement("id=saveUserButton");
        clickAndWait("id=saveUserButton");
        waitForElement("id=users(" + USER_NAME + ").doDetails");

        goToMainPage();

        clickAndWait("link=Admin");
        clickAndWait("link=Configure Users, Groups and On-Call Roles");
        clickAndWait("link=Configure Groups");
        clickAndWait("link=Add new group");
        selenium.type("id=groupName", GROUP_NAME);
        selenium.type("id=groupComment", "Test");
        clickAndWait("id=doOK");
        waitForElement("name=finish");
        clickAndWait("name=finish");
        clickAndWait("//div[@id='content']/form/table/tbody/tr[4]/td[2]/a/i");
        selenium.addSelection("name=availableUsers", "label=" + USER_NAME);
        selenium.click("xpath=/html/body/div[2]/form/table[2]/tbody/tr[2]/td/table/tbody/tr[2]/td/p/input[2]");
        waitForElement("name=finish");
        clickAndWait("name=finish");
        clickAndWait("link=" + GROUP_NAME);
        waitForText(USER_NAME);

        goToMainPage();

        clickAndWait("link=Node List");

        int loop = 0;
        while (loop < 20) {
            selenium.refresh();
            Thread.sleep(1000);
            if (selenium.isTextPresent("localNode")) {
                break;
            }
            loop++;
        }

        if(selenium.isElementPresent("link=localNode")) {
            // if there's more than 1 node discovered, it will give a list
            clickAndWait("link=localNode");
        }
        // otherwise it will go straight to the only node's page

        if(selenium.isElementPresent("link=ICMP")){
            clickAndWait("link=ICMP");
            waitForText("regexp:(Managed|Not Monitored)");
            waitForText("regexp:0+\\:0+\\:0+\\:0+\\:0+\\:0+\\:0+\\:0*1");
            waitForText("localNode");
        } else {
            fail("Neither of the links were found. Printing page source: " + selenium.getHtmlSource());
        }
    }

