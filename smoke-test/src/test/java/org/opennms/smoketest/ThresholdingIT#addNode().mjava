    private OnmsNode addNode() {
        // Create a node
        OnmsNode node = new OnmsNode();
        // Set foreignSource and foreignId to use it as nodeCriteria
        node.setForeignSource(TEST_NODE_FS);
        node.setForeignId(TEST_NODE_FID);
        node.setLabel(TEST_NODE_FID);
        node.setType(OnmsNode.NodeType.ACTIVE);

        // Create the node
        Response response = restClient.addNode(node);
        assertThat(response.getStatus(), equalTo(HttpServletResponse.SC_CREATED));

        // Create the category
        try {
            restClient.addCategory(TEST_NODE_CATEGORY);
        } catch (Exception e) {
            // Ignore exceptions if the category already exists
        }

        // Now add a category to the node
        restClient.addCategoryToNode(TEST_NODE_CRITERIA, TEST_NODE_CATEGORY);

        // Add meta-data to the node
        OnmsMetaData metaData = new OnmsMetaData();
        metaData.setContext("test");
        metaData.setKey("svc-delay");
        metaData.setValue(Integer.toString(0));
        response = restClient.setNodeLevelMetadata(TEST_NODE_CRITERIA, metaData);
        assertThat(response.getStatus(), equalTo(HttpServletResponse.SC_NO_CONTENT));

        // Add Interface to node
        OnmsIpInterface iface = new OnmsIpInterface();
        iface.setNode(node);
        iface.setIsManaged("M");
        iface.setIpAddress(InetAddressUtils.getInetAddress("192.168.1.1"));
        iface.setIpHostName("192.168.1.1");
        response = restClient.addInterface(TEST_NODE_CRITERIA, iface);
        assertThat(response.getStatus(), equalTo(HttpServletResponse.SC_CREATED));

        // Add a service on interface (192.168.1.1)
        OnmsMonitoredService svc = new OnmsMonitoredService();
        OnmsServiceType serviceType = new OnmsServiceType();
        serviceType.setName(TEST_SVC_NAME);
        svc.setServiceType(serviceType);
        svc.setStatus("A");
        svc.setIpInterface(iface);
        response = restClient.addService(TEST_NODE_CRITERIA, "192.168.1.1", svc);
        assertThat(response.getStatus(), equalTo(HttpServletResponse.SC_CREATED));

        // Return the effective node
        return restClient.getNode(TEST_NODE_CRITERIA);
    }

