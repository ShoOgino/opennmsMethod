    @Test
    public void testRequisitionUI() throws Exception {
        final WebElement form = m_driver.findElement(By.cssSelector("form[name=takeAction]"));
        form.findElement(By.cssSelector("input[type=text][name=groupName]")).sendKeys(REQUISITION_NAME);
        form.submit();

        // edit the foreign source
        m_driver.findElement(By.id("edit_fs_anchor_" + REQUISITION_NAME)).click();

        // add a detector
        m_driver.findElement(By.xpath("//input[@value='Add Detector']")).click();
        String detectorNode = setTreeFieldsAndSave("foreignSourceEditForm", type("name", "HTTP-8980"), select("pluginClass", "HTTP"));

        // set the port to 8980
        m_driver.findElement(By.xpath("//a[contains(@href, '"+detectorNode+"') and text() = '[Add Parameter]']")).click();
        setTreeFieldsAndSave("foreignSourceEditForm", select("key", "port"), type("value", "8980"));

        m_driver.findElement(By.xpath("//input[@value='Done']")).click();

        // add a node
        m_driver.findElement(By.id("edit_req_anchor_" + REQUISITION_NAME)).click();
        m_driver.findElement(By.xpath("//input[@value='Add Node']")).click();
        String nodeForNode = setTreeFieldsAndSave("nodeEditForm", type("nodeLabel", "localNode"));

        // add the node interface
        m_driver.findElement(By.xpath("//a[contains(@href, '" + nodeForNode + "') and text() = '[Add Interface]']")).click();
        setTreeFieldsAndSave("nodeEditForm", type("ipAddr", "::1"));

        // add the interface service
        m_driver.findElement(By.xpath("//a[text() = 'Add Service']")).click();
        setTreeFieldsAndSave("nodeEditForm", select("serviceName", "HTTP-8980"));

        m_driver.findElement(By.xpath("//input[@value='Done']")).click();
        m_driver.findElement(By.xpath("//input[@value='Synchronize']")).click();

        assertTrue(wait.until(new WaitForNodesInDatabase(1)));
        LOG.debug("Found 1 node in the database.");

        m_driver.findElement(By.linkText("Node List")).click();

        assertNotNull(m_driver.findElement(By.linkText("ICMP")));
        assertNotNull(m_driver.findElement(By.xpath("//a[contains(@href, 'element/interface.jsp') and text()='" + InetAddressUtils.normalize("::1") + "']")));

        /*

        // Why is all this junk in the provisioning test?

        goToMainPage();

        clickAndWait("link=Admin");
        clickAndWait("link=Configure Users, Groups and On-Call Roles");
        clickAndWait("link=Configure Users");
        clickAndWait("link=Add new user");
        selenium.type("id=userID", USER_NAME);
        selenium.type("id=pass1", "SmokeTestPassword");
        selenium.type("id=pass2", "SmokeTestPassword");
        clickAndWait("id=doOK");
        waitForElement("id=saveUserButton");
        clickAndWait("id=saveUserButton");
        waitForElement("id=users(" + USER_NAME + ").doDetails");

        goToMainPage();

        clickAndWait("link=Admin");
        clickAndWait("link=Configure Users, Groups and On-Call Roles");
        clickAndWait("link=Configure Groups");
        clickAndWait("link=Add new group");
        selenium.type("id=groupName", GROUP_NAME);
        selenium.type("id=groupComment", "Test");
        clickAndWait("id=doOK");
        waitForElement("name=finish");
        clickAndWait("name=finish");
        clickAndWait("//div[@id='content']/form/table/tbody/tr[4]/td[2]/a/i");
        selenium.addSelection("name=availableUsers", "label=" + USER_NAME);
        selenium.click("xpath=/html/body/div[2]/form/table[2]/tbody/tr[2]/td/table/tbody/tr[2]/td/p/input[2]");
        waitForElement("name=finish");
        clickAndWait("name=finish");
        clickAndWait("link=" + GROUP_NAME);
        waitForText(USER_NAME);
         */
    }

