    @Test
    public void c_testEditThreshold() throws Exception {
        clickElement(By.xpath("//a[contains(@href, 'groupName=cisco&editGroup')]"));
        assertEquals(6, countElementsMatchingCss(".edit-group-basic-thresholds tr"));
        clickElement(By.xpath("//tr[@name='threshold.4']//a[text()='Edit']"));
        // "triggered uei" field
        enterText(By.name("triggeredUEI"), "uei.opennms.org/so-very-triggered");
        // "rearmed uei" field
        enterText(By.name("rearmedUEI"), "uei.opennms.org/you-call-that-rearmed");
        // create a field
        enterText(By.name("filterField"), "a");
        enterText(By.name("filterRegexp"), "anchor");
        clickElement(By.xpath(("//input[@value='Add']")));
        // create a second field
        enterText(By.name("filterField"), "b");
        enterText(By.name("filterRegexp"), "boat");
        clickElement(By.xpath(("//input[@value='Add']")));
        // make sure we have 2 rows with a=anchor and b=boat
        assertEquals("a", findElementByXpath("(//tr[@name='filter.1']//input)[1]").getAttribute("value"));
        assertEquals("anchor", findElementByXpath("(//tr[@name='filter.1']//input)[2]").getAttribute("value"));
        assertEquals("b", findElementByXpath("(//tr[@name='filter.2']//input)[1]").getAttribute("value"));
        assertEquals("boat", findElementByXpath("(//tr[@name='filter.2']//input)[2]").getAttribute("value"));
        // move boat up
        clickElement(By.xpath("//tr[@name='filter.2']//input[@value='Up']"));
        // make sure we have 2 rows with a=anchor and b=boat
        assertEquals("b", findElementByXpath("(//tr[@name='filter.1']//input)[1]").getAttribute("value"));
        assertEquals("boat", findElementByXpath("(//tr[@name='filter.1']//input)[2]").getAttribute("value"));
        assertEquals("a", findElementByXpath("(//tr[@name='filter.2']//input)[1]").getAttribute("value"));
        assertEquals("anchor", findElementByXpath("(//tr[@name='filter.2']//input)[2]").getAttribute("value"));
        // move boat back down
        clickElement(By.xpath("//tr[@name='filter.1']//input[@value='Down']"));
        // make sure we have 2 rows with a=anchor and b=boat
        assertEquals("a", findElementByXpath("(//tr[@name='filter.1']//input)[1]").getAttribute("value"));
        assertEquals("anchor", findElementByXpath("(//tr[@name='filter.1']//input)[2]").getAttribute("value"));
        assertEquals("b", findElementByXpath("(//tr[@name='filter.2']//input)[1]").getAttribute("value"));
        assertEquals("boat", findElementByXpath("(//tr[@name='filter.2']//input)[2]").getAttribute("value"));
        // delete boat
        clickElement(By.xpath("//tr[@name='filter.2']//input[@value='Delete']"));
        assertElementDoesNotExist(By.xpath("//tr[@name='filter.2']"));
        clickElement(By.xpath(("//input[@value='Save']")));
        findElementByXpath("//span[text()='Basic Thresholds']");
        assertEquals(6, countElementsMatchingCss(".edit-group-basic-thresholds tr"));
        assertEquals("rearmingAbsoluteChange", findElementByCss("td[name='threshold.4.type'").getText());
        assertEquals("baz", findElementByCss("td[name='threshold.4.description'").getText());
        assertEquals("foo", findElementByCss("td[name='threshold.4.dsName'").getText());
        assertEquals("bgpPeerEntry", findElementByCss("td[name='threshold.4.dsType'").getText());
        assertEquals("bar", findElementByCss("td[name='threshold.4.dsLabel'").getText());
        assertEquals("0.1", findElementByCss("td[name='threshold.4.value'").getText());
        assertEquals("0.2", findElementByCss("td[name='threshold.4.rearm'").getText());
        assertEquals("2", findElementByCss("td[name='threshold.4.trigger'").getText());
        assertEquals("uei.opennms.org/so-very-triggered", findElementByCss("td[name='threshold.4.triggeredUEI'").getText());
        assertEquals("uei.opennms.org/you-call-that-rearmed", findElementByCss("td[name='threshold.4.rearmedUEI'").getText());
    }

