    @Test
    public void testSnmpV3Traps() throws Exception {
        Date startOfTest = new Date();
        final InetSocketAddress snmpAddress = m_testEnvironment.getServiceAddress(ContainerAlias.OPENNMS, 162, "udp");
        InetSocketAddress pgsql = m_testEnvironment.getServiceAddress(ContainerAlias.POSTGRES, 5432);
        HibernateDaoFactory daoFactory = new HibernateDaoFactory(pgsql);
        AlarmDao alarmDao = daoFactory.getDao(AlarmDaoHibernate.class);

        Criteria criteria = new CriteriaBuilder(OnmsAlarm.class)
                .eq("uei", "uei.opennms.org/generic/traps/EnterpriseDefault").ge("lastEventTime", startOfTest)
                .toCriteria();

        executor.scheduleWithFixedDelay(() -> {
            try {
                sendV3Trap(snmpAddress);
            } catch (Exception e) {
                LOG.error("exception while sending traps");
            }
        }, 0, 5, TimeUnit.SECONDS);
        // Check if there is atleast one alarm
        await().atMost(30, SECONDS).pollInterval(10, SECONDS).pollDelay(10, SECONDS)
                .until(DaoUtils.countMatchingCallable(alarmDao, criteria), greaterThanOrEqualTo(1));
        // Check if multiple traps are getting received not just the first one
        await().atMost(30, SECONDS).pollInterval(10, SECONDS).pollDelay(10, SECONDS)
                .until(DaoUtils.findMatchingCallable(alarmDao, new CriteriaBuilder(OnmsAlarm.class)
                        .eq("uei", "uei.opennms.org/generic/traps/EnterpriseDefault").ge("counter", 5).toCriteria()),
                        notNullValue());
        executor.shutdown();
    }

