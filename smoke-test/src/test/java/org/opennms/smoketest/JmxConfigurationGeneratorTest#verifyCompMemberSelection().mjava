    /*
     * Verifies that selected CompMembers do show up in the generated jmx-datacollection-config.xml snippet.
     */
    @Test
    public void verifyCompMemberSelection() throws InterruptedException, IOException, SAXException {
        // forwards
        findElementById("port").clear();
        findElementById("port").sendKeys("18980"); // set OpenNMS JMX port
        findElementByXpath("//span[@id='skipDefaultVM']/input").click(); // deselect

        // go to next page
        findElementById("next").click();
        wait.until(pageContainsText(MBEANS_VIEW_TREE_WAIT_NAME));

        selectNodeByName("PS MarkSweep", true);

        // go to last page
        findElementById("next").click();
        wait.until(pageContainsText("collectd-configuration.xml"));

        // switch to jmx-datacollection-config.xml tab
        findElementByXpath("//div[text()='jmx-datacollection-config.xml']").click();
        wait.until(pageContainsText("JMXMP protocol."));

        // verify output
        final String jmxDatacollectionConfigContent = findElementByXpath("//textarea").getAttribute("value");
        JmxDatacollectionConfig config = JAXB.unmarshal(new ByteArrayInputStream(jmxDatacollectionConfigContent.getBytes()), JmxDatacollectionConfig.class);

        Assert.assertNotNull(config);
        Assert.assertFalse(config.getJmxCollection().isEmpty());
        Assert.assertNotNull(config.getJmxCollection().get(0).getMbeans());
        Assert.assertEquals(1, config.getJmxCollection().get(0).getMbeans().getMbean().size());

        final Mbean mbean = config.getJmxCollection().get(0).getMbeans().getMbean().get(0);
        Assert.assertEquals(1, mbean.getCompAttrib().size());
        Assert.assertEquals(5, mbean.getCompAttrib().get(0).getCompMember().size());
    }

