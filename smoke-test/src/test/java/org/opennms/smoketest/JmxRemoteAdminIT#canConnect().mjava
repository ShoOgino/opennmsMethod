    @Test
    public void canConnect() throws Exception {
        final InetSocketAddress addr = m_testEnvironment.getServiceAddress(ContainerAlias.OPENNMS, 18980);
        final String hostString = "localhost".equals(addr.getHostString())? "127.0.0.1" : addr.getHostString();
        final int port = addr.getPort();

        final RMISocketFactory socketFactory = new JMXTestClientSocketFactory();

        System.setProperty("sun.rmi.transport.tcp.responseTimeout", "5000");
        final Callable<Integer> getRmiConnection = new Callable<Integer>() {
            @Override public Integer call() throws Exception {
                LOG.debug("getRmiConnection({}:{})", hostString, port);
                try {
                    final Registry registry = LocateRegistry.getRegistry(hostString, port, socketFactory);
                    final String[] bound = registry.list();
                    LOG.debug("bound={}", Arrays.asList(bound));
                    if (bound.length > 0) {
                        return bound.length;
                    }
                } catch (final Exception e) {
                }
                return null;
            }
        };
        await().atMost(5, MINUTES).pollInterval(10, SECONDS).until(getRmiConnection, greaterThanOrEqualTo(1));

        final Callable<Integer> getJmxConnection = new Callable<Integer>() {
            @Override public Integer call() throws Exception {
                LOG.debug("getJmxConnection({}:{})", hostString, port);
                try {
                    RMISocketFactory.setSocketFactory(socketFactory);
                    final Map<String,Object> env = new HashMap<>();
                    final String[] credentials = { "admin", "admin" };
                    env.put(JMXConnector.CREDENTIALS, credentials);
                    env.put(RMIConnectorServer.RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE, socketFactory);
                    final String urlString = String.format("service:jmx:rmi:///jndi/rmi://%s:%d/jmxrmi", hostString, port);
                    LOG.debug("getJmxConnection(): connecting to {}", urlString);
                    final JMXServiceURL url = new JMXServiceURL(urlString);
                    final JMXConnector jmxc = JMXConnectorFactory.connect(url, env);
                    final MBeanServerConnection  mbsc = jmxc.getMBeanServerConnection();
                    LOG.debug("mbeanCount={}", mbsc.getMBeanCount());
                    if (mbsc.getMBeanCount() > 0) {
                        return mbsc.getMBeanCount();
                    }
                } catch (final Exception e) {
                }
                return null;
            }
        };
        await().atMost(5, MINUTES).pollInterval(10, SECONDS).until(getJmxConnection, greaterThanOrEqualTo(1));
    }

