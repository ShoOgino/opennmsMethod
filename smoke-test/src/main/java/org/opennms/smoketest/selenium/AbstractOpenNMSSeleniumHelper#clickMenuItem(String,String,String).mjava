    protected void clickMenuItem(final String menuItemText, final String submenuItemText, final String submenuItemHref) {
        LOG.debug("clickMenuItem: itemText={}, submenuItemText={}, submenuHref={}", menuItemText, submenuItemText, submenuItemHref);

        // Repeat the process altering the offset slightly everytime
        final AtomicInteger offset = new AtomicInteger(10);
        final WebDriverWait shortWait = new WebDriverWait(getDriver(), 1);
        Unreliables.retryUntilSuccess(30, TimeUnit.SECONDS, () -> {
            final Actions action = new Actions(getDriver());

            final WebElement menuElement;
            if (menuItemText.startsWith("name=")) {
                final String menuItemName = menuItemText.replaceFirst("name=", "");
                menuElement = findElementByName(menuItemName);
            } else {
                menuElement = findElementByXpath("//a[contains(text(), '" + menuItemText + "')]");
            }
            action.moveToElement(menuElement, offset.get(), offset.get()).perform();
            if (offset.incrementAndGet() > 10) {
                offset.set(0);
            }

            final WebElement submenuElement;
            if (submenuItemText != null) {
                if (submenuItemHref == null) {
                    submenuElement = findElementByXpath("//a[contains(text(), '" + submenuItemText + "')]");
                } else {
                    submenuElement = findElementByXpath("//a[contains(@href, '" + submenuItemHref + "') and contains(text(), '" + submenuItemText + "')]");
                }
            } else {
                submenuElement = null;
            }

            if (submenuElement == null) {
                // no submenu given, just click the main element
                // wait until the element is visible, not just present in the DOM
                shortWait.until(ExpectedConditions.visibilityOf(menuElement));
                menuElement.click();
            } else {
                // we want a submenu item, click it instead
                // wait until the element is visible, not just present in the DOM
                shortWait.until(ExpectedConditions.visibilityOf(submenuElement));
                submenuElement.click();
            }
            return null;
        });
    }

