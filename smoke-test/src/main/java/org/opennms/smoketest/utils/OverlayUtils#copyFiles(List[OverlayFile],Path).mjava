    public static void copyFiles(List<OverlayFile> files, Path overlayRoot) {
        try {
            for (OverlayFile file : files) {
                final Path target = overlayRoot.resolve(file.getTarget());
                final File targetFile = target.toFile();
                java.nio.file.Files.createDirectories(target.getParent());

                final URL sourceUrl = file.getSource();
                final File sourceFile = toFile(sourceUrl);

                if (sourceFile != null) {
                    // The URL points to a local file on disk
                    if (sourceFile.isDirectory()) {
                        // Copy the directory contents
                        java.nio.file.Files.createDirectories(target);
                        FileUtils.copyDirectory(sourceFile, targetFile);
                    } else {
                        // Copy the file
                        FileUtils.copyFile(sourceFile, targetFile);
                    }
                } else {
                    // Copy the bytes from the URL
                    final ByteSink sink = com.google.common.io.Files.asByteSink(targetFile);
                    try (InputStream is = sourceUrl.openStream()) {
                        sink.writeFrom(is);
                    }
                }

                // Update the permissions if any are set
                if (!file.getPermissions().isEmpty()) {
                    java.nio.file.Files.setPosixFilePermissions(target, file.getPermissions());
                }
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

