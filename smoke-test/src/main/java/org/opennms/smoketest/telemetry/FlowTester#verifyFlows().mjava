    public void verifyFlows() throws IOException {
        final String elasticRestUrl = String.format("http://%s:%d", elasticRestAddress.getHostString(), elasticRestAddress.getPort());

        // Build the Elastic Rest Client
        final JestClientFactory factory = new JestClientFactory();
        factory.setHttpClientConfig(new HttpClientConfig.Builder(elasticRestUrl).multiThreaded(true).build());

        try {
            LOG.info("Verifying flows. Expecting to persist {} flows", totalFlowCount);
            client = factory.getObject();
            runBefore.forEach(rb -> rb.accept(this));

            // Send packets for each defined packet
            for (FlowPacket packetDefinition : packets) {
                packetDefinition.send();
            }

            // Ensure that the template has been created
            verify(() -> {
                final JestResult result = client.execute(new GetTemplate.Builder(TEMPLATE_NAME).build());
                return result.isSucceeded() && result.getJsonObject().get(TEMPLATE_NAME) != null;
            });

            // Verify directly at elastic that the flows have been created
            verify(() -> {
                final SearchResult response = client.execute(new Search.Builder("").addIndex("netflow-*").build());
                LOG.info("Response: {} {} ", response.isSucceeded() ? "Success" : "Failure", response.getTotal());
                return response.isSucceeded() && response.getTotal() == totalFlowCount;
            });

           runAfter.forEach(ra -> ra.accept(this));
        } finally {
            if (client != null) {
                client.close();
            }
        }
    }

