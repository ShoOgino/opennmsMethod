    public List<String> getFeaturesOnBoot() {
        final List<String> featuresOnBoot = new ArrayList<>();
        featuresOnBoot.add("sentinel-persistence");
        if (IpcStrategy.KAFKA.equals(model.getIpcStrategy())) {
            featuresOnBoot.add("sentinel-kafka");
        } else if (IpcStrategy.JMS.equals(model.getIpcStrategy())) {
            featuresOnBoot.add("sentinel-jms");
        }
        if (TimeSeriesStrategy.NEWTS.equals(model.getTimeSeriesStrategy())) {
            featuresOnBoot.add("sentinel-newts");
        }
        if (model.isTelemetryProcessingEnabled()) {
            featuresOnBoot.add("sentinel-flows");
            featuresOnBoot.add("sentinel-telemetry-jti");
            featuresOnBoot.add("sentinel-telemetry-nxos");
        }
        
        switch (model.getBlobStoreStrategy()) {
            case NOOP:
                featuresOnBoot.add("sentinel-blobstore-noop");
                break;
            case NEWTS_CASSANDRA:
                featuresOnBoot.add("sentinel-blobstore-cassandra");
                break;
        }

        if (model.getJsonStoreStrategy() == null || model.getJsonStoreStrategy() == JsonStoreStrategy.POSTGRES) {
            featuresOnBoot.add("sentinel-jsonstore-postgres");
        }

        return featuresOnBoot;
    }

