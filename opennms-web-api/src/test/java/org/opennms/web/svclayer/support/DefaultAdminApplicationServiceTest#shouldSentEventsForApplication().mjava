    @Test
    public void shouldSentEventsForApplication() throws EventProxyException {

        OnmsMonitoredService monitoredService = Mockito.mock(OnmsMonitoredService.class);
        DefaultAdminApplicationService service = new DefaultAdminApplicationService();
        EventProxy proxy = Mockito.mock(EventProxy.class);
        ApplicationDao dao = new MockApplicationDao();
        MonitoredServiceDao monitoredServiceDao = Mockito.mock(MonitoredServiceDao.class);
        when(monitoredServiceDao.get(anyInt())).thenReturn(monitoredService);
        monitoredServiceDao.save(monitoredService);
        service.setEventProxy(proxy);
        service.setApplicationDao(dao);
        service.setMonitoredServiceDao(monitoredServiceDao);

        // Create
        ArgumentCaptor<Event> argument = ArgumentCaptor.forClass(Event.class);
        service.addNewApplication("testApp");
        verify(proxy).send(argument.capture());
        assertEquals(EventConstants.APPLICATION_CREATED_EVENT_UEI, argument.getValue().getUei());

        // Change: no actual change
        service.performEdit("1", "Add", new String[0], new String[0]);
        verifyNoMoreInteractions(proxy);

        // Chane: adding a service
        service.performEdit("1", "Add", new String[]{"1"}, new String[0]);
        verify(proxy, times(2)).send(argument.capture());
        assertEquals(EventConstants.APPLICATION_CHANGED_EVENT_UEI, argument.getValue().getUei());

        // Delete
        service.removeApplication("1");
        verify(proxy, times(3)).send(argument.capture());
        assertEquals(EventConstants.APPLICATION_DELETED_EVENT_UEI, argument.getValue().getUei());
    }

