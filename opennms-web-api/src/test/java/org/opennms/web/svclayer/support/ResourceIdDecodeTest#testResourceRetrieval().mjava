    @Test
    public void testResourceRetrieval() throws UnsupportedEncodingException {
        configForLegacyReport = JaxbUtils.unmarshal(ReportsList.class, new FileSystemResource(this.getClass().getResource("/ksc-performance-reports-legacy.xml").getPath()));
        config = JaxbUtils.unmarshal(ReportsList.class, new FileSystemResource(this.getClass().getResource("/ksc-performance-reports-test.xml").getPath()));
        assertNotNull(configForLegacyReport);
        assertNotNull(config);
        Report reportWithEncodedResource = configForLegacyReport.getReports().get(0);
        Report report = config.getReports().get(0);
        assertNotNull(reportWithEncodedResource);
        assertNotNull(report);
        // Check that legacy reportId can be decoded to new reportId
        for(int i= 0; i < report.getGraphs().size(); i++) {
            ResourceId resourceId = ResourceId.fromString(report.getGraphs().get(i).getResourceId().get());
            String decodedResourceId = URLDecoder.decode(reportWithEncodedResource.getGraphs().get(i).getResourceId().get(), StandardCharsets.UTF_8.name());
            assertEquals(resourceId.toString(), decodedResourceId);
        }
        // Check that decoding non-encoded reportId will yield same reportId
        for(int i= 0; i < report.getGraphs().size(); i++) {
            ResourceId resourceId = ResourceId.fromString(report.getGraphs().get(i).getResourceId().get());
            String decodedResourceId = URLDecoder.decode(report.getGraphs().get(i).getResourceId().get(), StandardCharsets.UTF_8.name());
            assertEquals(resourceId.toString(), decodedResourceId);
        }
    }

