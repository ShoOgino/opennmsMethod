    /**
     * <p>findLocationSpecificStatus</p>
     *
     * @param command a {@link org.opennms.web.svclayer.model.DistributedStatusDetailsCommand} object.
     * @param errors a {@link org.springframework.validation.Errors} object.
     * @return a {@link java.util.List} object or null if no location monitors are registered for the specified location and application tuple
     */
    protected List<OnmsLocationSpecificStatus> findLocationSpecificStatus(DistributedStatusDetailsCommand command, Errors errors) throws IllegalArgumentException {
        String locationName = command.getLocation();
        String applicationName = command.getApplication();

        Assert.notNull(locationName, "location cannot be null");
        Assert.notNull(applicationName, "application cannot be null");
        
        OnmsMonitoringLocation location = m_monitoringLocationDao.get(locationName);
        if (location == null) {
            throw new IllegalArgumentException("Could not find location for "
                                               + "location name \""
                                               + locationName + "\"");
        }
        
        OnmsApplication application = m_applicationDao.findByName(applicationName);
        if (application == null) {
            throw new IllegalArgumentException("Could not find application "
                                               + "for application name \""
                                               + applicationName + "\"");
        }

        Collection<OnmsMonitoredService> services = m_monitoredServiceDao.findByApplication(application);
        
        List<OnmsMonitoredService> sortedServices = new ArrayList<OnmsMonitoredService>(services);
        Collections.sort(sortedServices);
                                                                     
        List<OnmsLocationSpecificStatus> status = new LinkedList<>();
        for (OnmsMonitoredService service : sortedServices) {
            OnmsLocationSpecificStatus currentStatus = m_locationSpecificStatusDao.getMostRecentStatusChange(location, service);
            if (currentStatus == null) {
                status.add(new OnmsLocationSpecificStatus(location, service, NO_RECORDED_STATUS));
            } else {
                status.add(currentStatus);
            }
        }

        return status;
    }

