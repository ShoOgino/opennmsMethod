    private void validate(DeliveryOptions deliveryOptions, boolean update) {
        Objects.requireNonNull(deliveryOptions);

        try {
            if (!update) { // We skip the instanceId check if we update
                final Set<String> intanceIds = m_scheduler.getTriggerKeys(GroupMatcher.groupEquals(m_triggerGroup)).stream()
                        .map(tk -> tk.getName())
                        .collect(Collectors.toSet());
                if (intanceIds.contains(deliveryOptions.getInstanceId())) {
                    throw new SchedulerContextException("instanceId", "The provided value already exists");
                }
                if (Strings.isNullOrEmpty(deliveryOptions.getInstanceId())) {
                    throw new SchedulerContextException("instanceId", PROVIDE_A_VALUE_TEXT);
                }
            }

            if (!deliveryOptions.isSendMail() && !deliveryOptions.isPersist()) {
                throw new SchedulerContextException("sendMail_persist", "Either sendMail or persist must be set");
            }
            if (deliveryOptions.getFormat() == null) {
                throw new SchedulerContextException("format", PROVIDE_A_VALUE_TEXT);
            }
            if (deliveryOptions.isSendMail() && Strings.isNullOrEmpty(deliveryOptions.getMailTo())) {
                throw new SchedulerContextException("mailTo", PROVIDE_A_VALUE_TEXT);
            }
        } catch (SchedulerException e) {
            throw new org.opennms.web.svclayer.support.SchedulerException(e);
        }
    }

