    /**
     * <p>calculateCurrentStatus</p>
     *
     * @param locations a {@link java.util.Collection} object.
     * @param applicationServices a {@link java.util.Collection} object.
     * @param statuses a {@link java.util.Collection} object.
     * @return a {@link org.opennms.web.svclayer.support.DefaultDistributedStatusService.Severity} object.
     */
    public Severity calculateCurrentStatus(
            Collection<OnmsMonitoringLocation> locations,
            Collection<OnmsMonitoredService> applicationServices,
            Collection<OnmsLocationSpecificStatus> statuses) {
        int goodMonitors = 0;
        int badMonitors = 0;
        
        for (OnmsMonitoringLocation location : locations) {
            if (location == null) {
                continue;
            }
            
            Severity status = calculateCurrentStatus(location, applicationServices, statuses);
            
            if (status == Severity.NORMAL) {
                goodMonitors++;
            } else if (status != Severity.INDETERMINATE) {
                badMonitors++;
            }
        }
        
        if (goodMonitors == 0 && badMonitors == 0) {
            return Severity.INDETERMINATE; // No current responses
        } else if (goodMonitors != 0 && badMonitors == 0) {
            return Severity.NORMAL; // No bad responses
        } else if (goodMonitors == 0 && badMonitors != 0) {
            return Severity.CRITICAL; // All bad responses
        } else if (goodMonitors != 0 && badMonitors != 0){
            return Severity.WARNING; // Some bad responses
        } else {
            throw new IllegalStateException("Shouldn't have gotten here. "
                                            + "good monitors = "
                                            + goodMonitors
                                            + ", bad monitors = "
                                            + badMonitors);
        }
    }

