	/**
	 * Creates a {@link SnmpEventInfo} object from <code>this</code>.
	 * 
	 * @param firstIpAddress
	 *            a {@link java.lang.String} object which represents the first IP Address of the {@link SnmpEventInfo}. Must not be null.
	 * @param lastIpAddress represents the last IP Address of the {@link SnmpEventInfo}. May be null.
	 * @return a {@link org.opennms.netmgt.config.SnmpEventInfo} object. 
	 * @throws java.net.UnknownHostException if any.
	 */
	public SnmpEventInfo createEventInfo(String firstIpAddress, String lastIpAddress) throws UnknownHostException {
		SnmpEventInfo eventInfo = new SnmpEventInfo();
		eventInfo.setVersion(m_version);
		eventInfo.setAuthPassPhrase(m_authPassPhrase);
		eventInfo.setAuthProtocol(m_authProtocol);
		eventInfo.setReadCommunityString(m_readCommunity);
		eventInfo.setWriteCommunityString(m_writeCommunity);
		eventInfo.setContextEngineId(m_contextEngineId);
		eventInfo.setContextName(m_contextName);
		eventInfo.setEngineId(m_engineId);
		eventInfo.setEnterpriseId(m_enterpriseId);
		eventInfo.setFirstIPAddress(firstIpAddress);
		eventInfo.setLastIPAddress(lastIpAddress);
		eventInfo.setPrivPassPhrase(m_privPassPhrase);
		eventInfo.setPrivProtocol(m_privProtocol);
		eventInfo.setSecurityName(m_securityName);
		eventInfo.setProxyHost(m_proxyHost);
		eventInfo.setLocation(m_location);
		eventInfo.setTTL(getTTL());
		if (m_port != null) eventInfo.setPort(m_port.intValue());
		if (m_retries != null) eventInfo.setRetryCount(m_retries.intValue());
		if (m_timeout != null) eventInfo.setTimeout(m_timeout.intValue());
		if (m_maxRepetitions != null) eventInfo.setMaxRepetitions(m_maxRepetitions.intValue());
		if (m_maxVarsPerPdu != null) eventInfo.setMaxVarsPerPdu(m_maxVarsPerPdu.intValue());
		if (m_maxRequestSize != null) eventInfo.setMaxRequestSize(m_maxRequestSize.intValue());
		if (m_securityLevel != null) eventInfo.setSecurityLevel(m_securityLevel.intValue());
		if (m_maxRequestSize != null) eventInfo.setMaxRequestSize(m_maxRequestSize.intValue());
		return eventInfo;
	}

