    @Override
    public void addCronTrigger(ScheduleConfig scheduleConfig) {
        Objects.requireNonNull(scheduleConfig);
        validate(scheduleConfig, false);

        final CronTriggerImpl cronTrigger = new CronTriggerImpl();
        final ReportParameters parameters = scheduleConfig.getReportParameters();
        final DeliveryOptions deliveryOptions = scheduleConfig.getDeliveryOptions();
        final String cronExpression = scheduleConfig.getCronExpression();
        try {
            cronTrigger.setGroup(m_triggerGroup);
            cronTrigger.setName(deliveryOptions.getInstanceId());
            cronTrigger.setJobName(m_jobDetail.getKey().getName());
            cronTrigger.setCronExpression(cronExpression);
        } catch (ParseException e) {
            LOG.error("Provided cron expression '{}' could not be parsed", cronExpression, e);
            throw new InvalidCronExpressionException(e, cronExpression);
        }
        cronTrigger.setJobName(m_jobDetail.getKey().getName());
        cronTrigger.getJobDataMap().put("criteria", parameters);
        cronTrigger.getJobDataMap().put("reportId", parameters.getReportId());
        cronTrigger.getJobDataMap().put("deliveryOptions", deliveryOptions);
        cronTrigger.getJobDataMap().put("mode", ReportMode.SCHEDULED);

        try {
            m_scheduler.scheduleJob(cronTrigger);
        } catch (SchedulerException e) {
            throw new org.opennms.web.svclayer.support.SchedulerException(e);
        }
    }

