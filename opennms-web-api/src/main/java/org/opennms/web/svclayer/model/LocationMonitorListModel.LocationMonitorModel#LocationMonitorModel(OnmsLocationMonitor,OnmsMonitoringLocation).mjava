        /**
         * Create a LocationMonitorModel and populate it with data from a
         * OnmsLocationMonitor and OnmsMonitoringLocationDefinition (if any).
         * 
         * @param monitor the location monitor
         * @param def the monitoring location definition for the location monitor (if any; can be null)
         */
        public LocationMonitorModel(OnmsLocationMonitor monitor, OnmsMonitoringLocation def) {
            if (monitor == null) {
                throw new IllegalArgumentException("monitor argument cannot be null");
            }
            // def can be null

            if (def != null && def.getMonitoringArea() != null) {
                setArea(def.getMonitoringArea());
            }
            
            setDefinitionName(monitor.getLocation());
            setId(monitor.getId());
            setStatus(monitor.getStatus());
            setLastCheckInTime(monitor.getLastUpdated());
            
            List<Entry<String, String>> details = new ArrayList<Entry<String, String>>(monitor.getProperties().entrySet());
            Collections.sort(details, new Comparator<Entry<String, String>>() {
                @Override
                public int compare(Entry<String, String> one, Entry<String, String> two) {
                    return one.getKey().compareToIgnoreCase(two.getKey());
                }
                
            });
            for (Entry<String, String> detail : details) {
                if (
                    false
                 ) {
                    addAdditionalDetail(detail.getKey(), detail.getValue());
                }
            }
        }

