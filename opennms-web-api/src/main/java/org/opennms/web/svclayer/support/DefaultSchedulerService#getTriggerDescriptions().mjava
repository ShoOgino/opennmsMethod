    @Override
    public List<TriggerDescription> getTriggerDescriptions() {
        final List<TriggerDescription> triggerDescriptions = new ArrayList<>();
        try {
            final Set<TriggerKey> triggerKeys = m_scheduler.getTriggerKeys(GroupMatcher.groupEquals(m_triggerGroup));
            for (TriggerKey triggerKey : triggerKeys) {
                TriggerDescription description = new TriggerDescription();
                Trigger trigger = m_scheduler.getTrigger(triggerKey);
                description.setNextFireTime(trigger.getNextFireTime());
                description.setTriggerName(triggerKey.getName());
                description.setReportId((String)trigger.getJobDataMap().get("reportId"));
                description.setDeliveryOptions((DeliveryOptions) trigger.getJobDataMap().get("deliveryOptions"));
                description.setReportParameters(((ReportParameters) trigger.getJobDataMap().get("criteria")));
                if (trigger instanceof CronTriggerImpl) {
                    description.setCronExpression(((CronTriggerImpl)trigger).getCronExpression());
                }
                triggerDescriptions.add(description);
            }
        } catch (SchedulerException e) {
            LOG.error("exception retrieving trigger descriptions", e);
            throw new org.opennms.web.svclayer.support.SchedulerException("Could not retrieve triggers: " +  e.getMessage(), e);
        }

        return triggerDescriptions;

    }

