    /*
     * (non-Javadoc)
     * @see
     * org.opennms.web.svclayer.support.SchedulerService#execute(org.opennms
     * .web.report.database.model.DatabaseReportCriteria, java.lang.String,
     * org.springframework.webflow.execution.RequestContext)
     */
    /** {@inheritDoc} */
    @Override
    public String execute(String id, ReportParameters criteria,
            DeliveryOptions deliveryOptions, RequestContext context) {

        try {
            if (m_reportWrapperService.validate(criteria,id) == false ) {
                context.getMessageContext().addMessage(new MessageBuilder().error().defaultText(PARAMETER_ERROR).build());
                return ERROR;
            } else {
                SimpleTriggerImpl trigger = new SimpleTriggerImpl(deliveryOptions.getInstanceId(), m_triggerGroup, new Date(), null, 0, 0L);
                trigger.setJobName(m_jobDetail.getKey().getName());
                trigger.getJobDataMap().put("criteria", (ReportParameters) criteria);
                trigger.getJobDataMap().put("reportId", id);
                trigger.getJobDataMap().put("mode", ReportMode.IMMEDIATE);
                trigger.getJobDataMap().put("deliveryOptions", (DeliveryOptions) deliveryOptions);
                try {
                    m_scheduler.scheduleJob(trigger);
                } catch (SchedulerException e) {
                    LOG.warn(SCHEDULER_ERROR, e);
                    context.getMessageContext().addMessage(new MessageBuilder().error().defaultText(SCHEDULER_ERROR).build());
                    return ERROR;
                }

                return SUCCESS;
            }
        } catch (ReportServiceLocatorException e) {
            LOG.error(REPORTID_ERROR, e);
            context.getMessageContext().addMessage(new MessageBuilder().error().defaultText(REPORTID_ERROR).build());
            return ERROR;
        }


    }

