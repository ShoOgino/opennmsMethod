    public void performEditLocations(final String applicationIdString, final String editAction, final String[] locationAdds, final String[] locationDeletes) {
        if (applicationIdString == null) {
            throw new IllegalArgumentException("applicationIdString cannot be null");
        }
        if (editAction == null) {
            throw new IllegalArgumentException("editAction cannot be null");
        }

        OnmsApplication application = findApplication(applicationIdString);

        if (editAction.contains("Add")) {
            if (locationAdds == null) {
                return;
            }

            for (final String locationName : locationAdds) {
                if (locationName == null) {
                    continue;
                }

                final OnmsMonitoringLocation location = m_monitoringLocationDao.get(locationName);

                if (location == null) {
                    throw new IllegalArgumentException("location with "
                            + "name of " + locationName
                            + "could not be found");
                }

                application.addPerspectiveLocation(location);
            }

            m_applicationDao.save(application);
            sendEvent(application, EventConstants.APPLICATION_CHANGED_EVENT_UEI);

        } else if (editAction.contains("Remove")) {
            if (locationDeletes == null) {
                return;
            }

            for (final String locationName : locationDeletes) {
                if (locationName == null) {
                    continue;
                }

                final OnmsMonitoringLocation location = m_monitoringLocationDao.get(locationName);

                if (location == null) {
                    throw new IllegalArgumentException("location with "
                            + "name of " + locationName
                            + "could not be found");
                }

                application.getPerspectiveLocations().remove(location);
            }

            m_applicationDao.save(application);
            sendEvent(application, EventConstants.APPLICATION_CHANGED_EVENT_UEI);

        } else {
            throw new IllegalArgumentException("editAction of '"
                    + editAction
                    + "' is not allowed");
        }
    }

