    /** {@inheritDoc} */
    @Override
    public String execute(String id, ReportParameters criteria,
            DeliveryOptions deliveryOptions, SchedulerRequestContext context) {

        try {
            if (m_reportWrapperService.validate(criteria,id) == false ) {
                context.addMessage(new SchedulerMessage(SchedulerMessageSeverity.ERROR, PARAMETER_ERROR));
                return ERROR;
            } else {
                SimpleTriggerImpl trigger = new SimpleTriggerImpl(deliveryOptions.getInstanceId(), m_triggerGroup, new Date(), null, 0, 0L);
                trigger.setJobName(m_jobDetail.getKey().getName());
                trigger.getJobDataMap().put("criteria", criteria);
                trigger.getJobDataMap().put("reportId", id);
                trigger.getJobDataMap().put("mode", ReportMode.IMMEDIATE);
                trigger.getJobDataMap().put("deliveryOptions", deliveryOptions);
                try {
                    m_scheduler.scheduleJob(trigger);
                } catch (SchedulerException e) {
                    LOG.warn(SCHEDULER_ERROR, e);
                    context.addMessage(new SchedulerMessage(SchedulerMessageSeverity.ERROR, SCHEDULER_ERROR));
                    return ERROR;
                }

                return SUCCESS;
            }
        } catch (ReportServiceLocatorException e) {
            LOG.error(REPORTID_ERROR, e);
            context.addMessage(new SchedulerMessage(SchedulerMessageSeverity.ERROR, REPORTID_ERROR));
            return ERROR;
        }
    }

