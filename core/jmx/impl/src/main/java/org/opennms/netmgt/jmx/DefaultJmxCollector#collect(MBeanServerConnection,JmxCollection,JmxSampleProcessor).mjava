    private void collect(MBeanServerConnection concreteConnection, JmxCollection jmxCollection, JmxSampleProcessor sampleProcessor) {
        try {
            for (Mbean eachMbean : jmxCollection.getMbeans().getMbeanCollection()) {
                logger.debug("Collecting MBean (objectname={}, wildcard={})", eachMbean.getObjectname(), isWildcard(eachMbean.getObjectname()));

                final Collection<ObjectName> objectNames = getObjectNames(concreteConnection, eachMbean.getObjectname());
                for (ObjectName eachObjectName : objectNames) {
                    logger.debug("Collecting ObjectName {}", eachObjectName);

                    boolean collect = canBeCollected(concreteConnection, eachObjectName, eachMbean.getKeyfield(), eachMbean.getExclude());
                    if (collect) {
                        List<String> attributeNames = extractAttributeNames(eachMbean);
                        List<Attribute> attributes = getAttributes(concreteConnection, eachObjectName, attributeNames);

                        for (Attribute eachAttribute : attributes) {
                            if (eachAttribute.getValue() instanceof CompositeData) {
                                CompositeData compositeData = (CompositeData) eachAttribute.getValue();
                                for (CompMember eachCompositeMember : getCompositeMembers(eachMbean, eachAttribute.getName())) {
                                    JmxCompositeSample sample = new JmxCompositeSample(eachMbean, eachAttribute, compositeData, eachCompositeMember);
                                    logger.debug("Collected sample {}", sample);
                                    sampleProcessor.process(sample);
                                }
                            } else {
                                JmxAttributeSample sample = new JmxAttributeSample(eachMbean, eachAttribute);
                                logger.debug("Collected sample {}", sample);
                                sampleProcessor.process(sample);
                            }
                        }
                    } else {
                        logger.debug("Skip ObjectName {}", eachObjectName);
                    }
                }
            }
        } catch (JMException e) {
            logger.error("Could not collect data", e);
        } catch (IOException e) {
            logger.error("Could not communicate with MBeanServer", e);
        }
    }

