    @Override
    public JmxServerConnectionWrapper createConnection(final InetAddress ipAddress, final Map<String, String> propertiesMap) throws JmxServerConnectionException {
        try {
            final DefaultJmxConnectionConfig config = new DefaultJmxConnectionConfig(ipAddress, propertiesMap);

            // If we're trying to create a connection to a localhost address...
            if (isLocalConnection(ipAddress, config.getPort())) {
                // ...then use the {@link PlatformMBeanServerConnector} to connect to
                // this JVM's MBeanServer directly.
                return new PlatformMBeanServerConnector().createConnection(ipAddress, propertiesMap);
            }

            final JMXServiceURL url = config.createJmxServiceURL();
            final Map<String,String[]> env = new HashMap<>();

            // use credentials?
            LOG.debug("JMX: {} - {}", config.getFactory(), url);
            if ("PASSWORD-CLEAR".equals(config.getFactory())) {
                final String username = propertiesMap.get("username");
                final String password = propertiesMap.get("password");

                // Provide the credentials required by the server to successfully
                // perform user authentication
                final String[] credentials = new String[]{username, password};
                env.put("jmx.remote.credentials", credentials);
            }

            // Connect a JSR 160 JMXConnector to the server side
            final JMXConnector connector = JMXConnectorFactory.connect(url, env);

            try {
                connector.connect(env);
            } catch (SecurityException x) {
                throw new JmxServerConnectionException("Security exception: bad credentials", x);
            }

            // Connect a JSR 160 JMXConnector to the server side
            MBeanServerConnection connection = connector.getMBeanServerConnection();
            JmxServerConnectionWrapper connectionWrapper = new DefaultConnectionWrapper(connector, connection);
            return connectionWrapper;
        } catch (MalformedURLException e) {
            throw new JmxServerConnectionException(e);
        } catch (IOException e) {
            throw new JmxServerConnectionException(e);
        }
    }

