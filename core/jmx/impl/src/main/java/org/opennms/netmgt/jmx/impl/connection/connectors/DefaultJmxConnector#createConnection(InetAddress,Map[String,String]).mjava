    @Override
    public JmxServerConnectionWrapper createConnection(final InetAddress ipAddress, final Map<String, String> propertiesMap) throws JmxServerConnectionException {
        try {
            final DefaultJmxConnectionConfig config = new DefaultJmxConnectionConfig(ipAddress, propertiesMap);

            // If we're trying to create a connection to a localhost address...
            if (config.isLocalConnection()) {
                // ...then use the {@link PlatformMBeanServerConnector} to connect to
                // this JVM's MBeanServer directly.
                return new PlatformMBeanServerConnector().createConnection(ipAddress, propertiesMap);
            }

            // Create URL
            final JMXServiceURL url = config.createJmxServiceURL();
            LOG.debug("JMX: {} - {}", config.getFactory(), url);

            // Apply password strategy
            final Map<String,Object> env = new HashMap<>();
            config.getPasswordStategy().apply(env, config);

            // Create connection and connect
            final JMXConnector connector = JMXConnectorFactory.newJMXConnector(url, env);
            try {
                connector.connect(env);
            } catch (SecurityException x) {
                throw new JmxServerConnectionException("Security exception: bad credentials", x);
            }

            // Wrap Connection
            MBeanServerConnection connection = connector.getMBeanServerConnection();
            JmxServerConnectionWrapper connectionWrapper = new DefaultConnectionWrapper(connector, connection);
            return connectionWrapper;
        } catch (MalformedURLException e) {
            throw new JmxServerConnectionException(e);
        } catch (IOException e) {
            throw new JmxServerConnectionException(e);
        }
    }

