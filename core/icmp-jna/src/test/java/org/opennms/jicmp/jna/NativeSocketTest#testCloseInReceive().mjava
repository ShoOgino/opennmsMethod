    @Test(timeout=10000)
    @Ignore("This is ignored since I haven't found a way to interrupt a socket blocked on recvfrom in linux")
    public void testCloseInReceive() throws Exception {
        final NativeDatagramSocket socket = NativeDatagramSocket.create(NativeDatagramSocket.PF_INET, NativeDatagramSocket.SOCK_DGRAM,
                NativeDatagramSocket.IPPROTO_UDP);
        
        Thread t = new Thread("Listener") {
            @Override
            public void run() {
                try {
                    while(true) {
                        NativeDatagramPacket r = new NativeDatagramPacket(128);
                        System.err.println("About to receive");
                        socket.receive(r);
                        System.err.println("Returned from receive");
                        String response = UTF_8.decode(r.getContent()).toString();

                        printf("Received Response: %s from %s:%d\n", response, r.getAddress().getHostAddress(), r.getPort());
                    }
                } catch (Throwable e) {
                    e.printStackTrace();
                }
            }
        };
        t.start();
        
        ByteBuffer buf = UTF_8.encode("msg1");

        NativeDatagramPacket p = new NativeDatagramPacket(buf, InetAddress.getLocalHost(), 7777); 

        socket.send(p);
        
        Thread.sleep(1000);
        
        socket.close();
        
        t.join();
        
        
    }

