	@Test
	public void testOrder() {
		final List<Order> orders = new ArrayList<>();

		final CriteriaBuilder cb = new CriteriaBuilder(OnmsAlarm.class);

		// ascending
		cb.orderBy("firstEventTime");
		orders.add(Order.asc("firstEventTime"));
		assertArrayEquals(orders.toArray(EMPTY_ORDER_ARRAY), cb.toCriteria().getOrders().toArray(EMPTY_ORDER_ARRAY));

		// descending
		cb.clearOrder();
		orders.clear();
		cb.orderBy("firstEventTime").desc();
		orders.add(Order.desc("firstEventTime"));
		assertArrayEquals(orders.toArray(), cb.toCriteria().getOrders().toArray());

		// multiple unrelated attributes, using .desc()
		cb.clearOrder();
		orders.clear();
		cb.orderBy("firstEventTime").desc();
		cb.orderBy("id").desc();
		orders.add(Order.desc("firstEventTime"));
		orders.add(Order.desc("id"));
		assertArrayEquals(orders.toArray(), cb.toCriteria().getOrders().toArray());

		assertEquals(Order.asc("firstEventTime"), Order.desc("firstEventTime"));
		cb.clearOrder();
		orders.clear();
		cb.orderBy("firstEventTime").desc();
		cb.orderBy("id").desc();
		orders.add(Order.desc("firstEventTime"));
		orders.add(Order.desc("id"));
		// this should be ignored, we already have an orderBy=firstEventTime
		cb.orderBy("firstEventTime").asc();
		assertArrayEquals(orders.toArray(), cb.toCriteria().getOrders().toArray());

		// should be ignored still
		cb.orderBy("id").asc();
		assertArrayEquals(orders.toArray(), cb.toCriteria().getOrders().toArray());
		
		cb.clearOrder().orderBy("id").asc();
		orders.clear();
		orders.add(Order.asc("id"));
		assertArrayEquals(orders.toArray(), cb.toCriteria().getOrders().toArray());
	}

