    /**
     * Create a duplicate HttpClientWrapper from this wrapper.
     * All settings are preserved, and the session/cookie store is
     * shared between duplicate wrappers and their parent.
     */
    public HttpClientWrapper duplicate() {
        final HttpClientWrapper ret = HttpClientWrapper.create();
        ret.m_cookieStore = m_cookieStore;
        ret.m_reuseConnections = m_reuseConnections;
        ret.m_usePreemptiveAuth = m_usePreemptiveAuth;
        ret.m_useSystemProxySettings = m_useSystemProxySettings;
        ret.m_cookieSpec = m_cookieSpec;
        ret.m_username = m_username;
        ret.m_password = m_password;
        ret.m_socketTimeout = m_socketTimeout;
        ret.m_connectionTimeout = m_connectionTimeout;
        ret.m_retries = m_retries;
        for (final Map.Entry<String,SSLContext> entry : ret.m_sslContext.entrySet()) {
            ret.m_sslContext.put(entry.getKey(), entry.getValue());
        }
        for (final HttpRequestInterceptor interceptor : m_requestInterceptors) {
            ret.m_requestInterceptors.add(interceptor);
        }
        for (final HttpResponseInterceptor interceptor : m_responseInterceptors) {
            ret.m_responseInterceptors.add(interceptor);
        }
        ret.m_userAgent = m_userAgent;
        ret.m_virtualHost = m_virtualHost;
        ret.m_version = m_version;
        return ret;
    }

