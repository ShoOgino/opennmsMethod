    @SuppressWarnings({ "rawtypes", "unchecked" })
    @Consume(property="endpointUri")
    public void dispatch(final Object message) throws NoSuchMethodException, SecurityException {
        LOG.debug("dispatch: {}", message);
        if (m_tracker == null) {
            m_tracker = new ServiceTracker(m_context, m_serviceClass, null);
            m_tracker.open();
        }

        if (m_method == null) {
            m_method = m_serviceClass.getMethod(m_methodName, m_messageClass);
        }

        try {
            Object[] services = m_tracker.getServices();
            if (services != null && services.length > 0) {
                for (Object service : m_tracker.getServices()) {
                    m_method.invoke(service, message);
                }
            } else {
                // in case there is no dispatcher registered, let the user know.
                LOG.warn("No dispatcher for message found. ServiceClass: {}, ServiceMethod: {}", m_serviceClass, m_methodName);
            }
        } catch (Throwable e) {
            // If anything goes wrong, log an error message
            // TODO: Use a dead-letter channel?
            LOG.warn("Message dispatch failed: " + e.getMessage(), e);
        }
    }

