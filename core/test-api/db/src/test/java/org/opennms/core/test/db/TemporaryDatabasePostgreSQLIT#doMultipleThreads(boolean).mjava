    private void doMultipleThreads(boolean populate) throws Throwable {
        Runnable r = () -> {
            for (int i = 0; i <= 10; i++) {
                try {
                    TemporaryDatabasePostgreSQL db = new TemporaryDatabasePostgreSQL();
                    // System.out.println(Thread.currentThread() + " " + i + " " + db);
                    db.setPopulateSchema(populate);
                    assertEquals(1, db.countRows(populate ? "SELECT * FROM monitoringsystems" : "SELECT 1", new Object[0]));
                    db.setupDatabase();
                    db.destroyTestDatabase();
                } catch (Throwable e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        };
        Thread t1 = new Thread(r); t1.start();
        Thread t2 = new Thread(r); t2.start();
        Thread t3 = new Thread(r); t3.start();
        t1.join();
        t2.join();
        t3.join();
    }

