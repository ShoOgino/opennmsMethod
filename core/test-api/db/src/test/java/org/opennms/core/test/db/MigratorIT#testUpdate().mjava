    @Test
    @JUnitTemporaryDatabase(createSchema=false)
    public void testUpdate() throws Exception {
        // Make sure there is no databasechangelog table
        assertFalse(changelogExists());

        Resource aResource = null;
        for (final Resource resource : getTestResources()) {
            URI uri = resource.getURI();
            if (uri.getScheme().equals("file") && uri.toString().contains("test-api/schema/a")) {
                aResource = resource;
                break;
            }
            if (uri.getScheme().equals("jar") && uri.toString().contains("test-api.schema.a")) {
                aResource = resource;
                break;
            }
        }
        assertNotNull("aResource must not be null", aResource);

        Set<String> tables = getTables();
        assertFalse("must not contain table 'schematest'", tables.contains("schematest"));

        final Migrator migrator = new Migrator();
        migrator.setAdminUser(System.getProperty(TemporaryDatabase.ADMIN_USER_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_USER));
        migrator.setAdminPassword(System.getProperty(TemporaryDatabase.ADMIN_PASSWORD_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_PASSWORD));
        migrator.setDatabaseUser(System.getProperty(TemporaryDatabase.ADMIN_USER_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_USER));
        migrator.setDatabasePassword(System.getProperty(TemporaryDatabase.ADMIN_PASSWORD_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_PASSWORD));
        migrator.setDataSource(m_dataSource);
        migrator.setAdminDataSource(m_dataSource);
        migrator.setValidateDatabaseVersion(false);
        migrator.setCreateUser(false);
        migrator.setCreateDatabase(false);

        LOG.info("Running migration on database: {}", migrator.getDatabaseName());

        migrator.prepareDatabase();
        migrator.migrate(aResource, m_context);

        LOG.info("Migration complete: {}", migrator.getDatabaseName());

        tables = getTables();
        assertTrue("must contain table 'schematest'", tables.contains("schematest"));
    }

