    @Test
    public void testRealChangelog() throws Throwable {
        String dbName = TemporaryDatabasePostgreSQL.TEMPLATE_DATABASE_NAME_PREFIX + System.currentTimeMillis();

        GenericApplicationContext context = TemporaryDatabasePostgreSQL.ensureLiquibaseFilesInClassPath(new StaticApplicationContext());

        final Migrator migrator = new Migrator();
        migrator.setAdminUser(System.getProperty(TemporaryDatabase.ADMIN_USER_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_USER));
        migrator.setAdminPassword(System.getProperty(TemporaryDatabase.ADMIN_PASSWORD_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_PASSWORD));
        migrator.setDatabaseUser(System.getProperty(TemporaryDatabase.ADMIN_USER_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_USER));
        migrator.setDatabasePassword(System.getProperty(TemporaryDatabase.ADMIN_PASSWORD_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_PASSWORD));
        migrator.setDatabaseName(dbName);

        DataSource dataSource = new SimpleDataSource("org.postgresql.Driver", "jdbc:postgresql://localhost:5432/" + migrator.getDatabaseName(), migrator.getDatabaseUser(), migrator.getDatabasePassword());
        DataSource adminDataSource = new SimpleDataSource("org.postgresql.Driver", "jdbc:postgresql://localhost:5432/" + TemporaryDatabasePostgreSQL.ADMIN_DATABASE, migrator.getDatabaseUser(), migrator.getDatabasePassword());

        migrator.setDataSource(dataSource);
        migrator.setAdminDataSource(adminDataSource);
        migrator.setValidateDatabaseVersion(true);
        migrator.setCreateUser(false);
        migrator.setCreateDatabase(true);

        TemporaryDatabasePostgreSQL.createIntegrationTestDatabase(context, migrator, dataSource);

        migrator.databaseRemoveDB();
    }

