    protected static void createIntegrationTestDatabase(ApplicationContext context, Migrator migrator, DataSource dataSource)
            throws ClassNotFoundException, MigrationException, Throwable, SQLException {
        if (migrator.databaseExists()) {
            migrator.databaseRemoveDB();
        }

        migrator.setLiquibaseChangelogFilter(createProductionLiquibaseChangelogFilter());

        try {
            migrator.setupDatabase(true, true, true, true, context);
        } catch (Throwable t) {
            if (migrator.databaseExists()) {
                try {
                    LOG.warn("Got an exception while setting up database, so removing");
                    migrator.databaseRemoveDB();
                } catch (MigrationException e) {
                    System.err.println("Got an exception while setting up database and then got another exception while removing database: " + e.getMessage());
                    e.printStackTrace(System.err);
                }
            }
            throw t;
        }

        final List<TemporaryDatabasePostgreSQL.ChangelogEntry> ids = TemporaryDatabasePostgreSQL.getChangelogEntries(dataSource);
        assertTrue("changelog entries were expected in the newly created database", ids.size() > 0);

        // Check to make sure some of the changelogs ran
        assertTrue(ids.stream().anyMatch(id -> "17.0.0-remove-legacy-ipinterface-composite-key-fields".equals(id.getId())));
        assertTrue(ids.stream().anyMatch(id -> "17.0.0-remove-legacy-outages-composite-key-fields".equals(id.getId())));
    }

