    public static String generateLiquibaseHash(ApplicationContext context)
            throws NoSuchAlgorithmException, IOException, Exception, ChangeLogParseException, LiquibaseException {
        final long start = System.currentTimeMillis();

        final String contexts = System.getProperty("opennms.contexts", "production");
        ChangeLogParameters changeLogParameters = new ChangeLogParameters();
        changeLogParameters.setContexts(new Contexts(StringUtils.splitAndTrim(contexts, ",")));

        MessageDigest md = MessageDigest.getInstance("MD5");
        Set<URI> seenChangeLogs = new TreeSet<>();

        for (Resource resource : Migrator.validateLiquibaseChangelog(context)) {
            if (!createProductionLiquibaseChangelogFilter().test(resource)) {
                continue;
            }

            DigestUtils.updateDigest(md, resource.getInputStream());

            ResourceAccessor accessor = new ExistingResourceAccessor(resource);
            DatabaseChangeLog changeLog = ChangeLogParserFactory.getInstance().getParser(Migration.LIQUIBASE_CHANGELOG_FILENAME, accessor).parse(Migration.LIQUIBASE_CHANGELOG_FILENAME, changeLogParameters, accessor);

            for (ChangeSet c : changeLog.getChangeSets()) {
                if (seenChangeLogs.add(resource.createRelative(c.getFilePath()).getURI())) {
                    for (InputStream s : accessor.getResourcesAsStream(c.getFilePath())) {
                        DigestUtils.updateDigest(md, s);
                    }
                }
            }
        }

        String hash = Hex.encodeHexString(md.digest());

        final long end = System.currentTimeMillis();
        LOG.info("Computed Liquibase schema hash {} in {} seconds on {}.", hash, (float) (end - start) / 1000, Joiner.on(", ").join(seenChangeLogs));

        return hash;
    }

