    private void createTestDatabase() throws TemporaryDatabaseException {
        Connection adminConnection;
        try {
            adminConnection = getAdminDataSource().getConnection();
        } catch (final SQLException e) {
            throw new TemporaryDatabaseException("Failed to get admin connection: " + e.getMessage(), e);
        }
        Statement st = null;
        try {
            st = adminConnection.createStatement();
            if (m_populateSchema) {
                st.execute("CREATE DATABASE " + getTestDatabase() + " WITH TEMPLATE " + TemporaryDatabasePostgreSQL.INTEGRATION_TEST_TEMPLATE_DB_NAME + " OWNER opennms");
            } else {
                st.execute("CREATE DATABASE " + getTestDatabase() + " WITH ENCODING='UNICODE'");
            }
        } catch (final SQLException e) {
            throw new TemporaryDatabaseException("Failed to create Unicode test database " + getTestDatabase(), e);
        } finally {
            SQLException failed = null;
            if (st != null) {
                try {
                    st.close();
                } catch (final SQLException e) {
                    failed = e;
                }
            }
            try {
                adminConnection.close();
            } catch (final SQLException e) {
                if (failed == null) failed = e;
            }
            if (failed != null) {
                throw new TemporaryDatabaseException("Failed while cleaning up database resources.", failed);
            }
        }

        setupShutdownHook();
        s_toDestroy.add(this);
    }

