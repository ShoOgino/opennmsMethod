    @Override
    public void afterTestMethod(final TestContext testContext) throws Exception {
        Throwable closeThrowable = null;

        //System.err.println(String.format("TemporaryDatabaseExecutionListener.afterTestMethod(%s)", testContext));

        final JUnitTemporaryDatabase jtd = findAnnotation(testContext);
        if (jtd == null) {
            return;
        }

        // Close down the data sources that are referenced by the static DataSourceFactory helper classes
        try {
            DataSourceFactory.close();
            XADataSourceFactory.close();
        } catch (Throwable t) {
            closeThrowable = t;
        }

        try {
            if (m_createNewDatabases && m_database != null) {
                m_database.drop();
            }
        } finally {
            // We must mark the application context as dirty so that the DataSourceFactoryBean is
            // correctly pointed at the next temporary database.
            //
            // If the next database is the same as the current database, then do not rewire.
            // NOTE: This does not work because the Hibernate objects need to be reinjected or they
            // will reject database operations because they think that the database rows already
            // exist even if they were rolled back after a previous test execution.
            //
            if (jtd.dirtiesContext()) {
                testContext.markApplicationContextDirty(HierarchyMode.CURRENT_LEVEL);
                testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE, Boolean.TRUE);
            } else {
                if (m_database != m_databases.peek()) {
                    testContext.markApplicationContextDirty(HierarchyMode.CURRENT_LEVEL);
                    testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE, Boolean.TRUE);
                }
            }
        }

        if (closeThrowable != null) {
            throw new Exception("Caught a Throwable while closing database connections after test. Pickup after yourself! " + closeThrowable, closeThrowable);
        }
    }

