    public static GenericApplicationContext ensureLiquibaseFilesInClassPath(GenericApplicationContext context)
            throws MalformedURLException, IOException, Exception {
        try {
            Migrator.validateLiquibaseChangelog(context);
        } catch (MigrationException e) {
            String liquibaseRelativePath = "core/schema/src/main/liquibase/";

            String migratorClass = "/" + Migrator.class.getName().replace('.', '/') + ".class";
            URL migratorUrl = Migrator.class.getResource(migratorClass);
            assert migratorUrl != null : "Could not find resource for Migrator.class anywhere in the classpath with " + migratorClass;
            if ("file".equals(migratorUrl.getProtocol()) && migratorUrl.getPath().endsWith("core/schema/target/classes" + migratorClass)) {
                URL[] urls = {new URL(migratorUrl.getProtocol(), migratorUrl.getHost(), migratorUrl.getFile().replaceFirst("core/schema/target/classes/.*$", liquibaseRelativePath))};
                context.setClassLoader(new URLClassLoader(urls, context.getClassLoader()));
            }

            try {
                Migrator.validateLiquibaseChangelog(context);
            } catch (MigrationException e2) {
                File buildTop = findTopOpenNmsBuildDir();
                if (buildTop != null) {
                    File liquibase = new File(buildTop, liquibaseRelativePath);
                    if (!liquibase.exists()) {
                        throw new MigrationException(e2.getMessage() + ", nor could we find liquibase files where we expected: " + liquibase.getAbsolutePath());
                    }

                    URL[] urls = {liquibase.toURI().toURL()};
                    context.setClassLoader(new URLClassLoader(urls, context.getClassLoader()));
                    Migrator.validateLiquibaseChangelog(context);

                    return context;
                }

                throw e;
            }
        }

        return context;
    }

