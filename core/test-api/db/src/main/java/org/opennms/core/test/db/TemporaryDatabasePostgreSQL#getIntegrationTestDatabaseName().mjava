    public synchronized static String getIntegrationTestDatabaseName() throws Throwable {
        if (s_templateDatabaseName == null) {
//            GenericApplicationContext context = (GenericApplicationContext) BeanUtils.getBeanFactory("daoContext");
//            context = Migrator.ensureLiquibaseFilesInClassPath(context);
//            System.err.println("******* from getIntegrationTestDatabaseName: " + Migrator.getClassLoaderUrls(TemporaryDatabasePostgreSQL.class.getClassLoader()));
            StaticApplicationContext staticContext = new StaticApplicationContext();
            staticContext.setClassLoader(TemporaryDatabasePostgreSQL.class.getClassLoader());
            GenericApplicationContext context = ensureLiquibaseFilesInClassPath(staticContext);

            String hash = generateLiquibaseHash(context);

            String dbName = TEMPLATE_DATABASE_NAME_PREFIX + hash;

            final Migration migration = createMigration(dbName);

            DataSource dataSource = new SimpleDataSource("org.postgresql.Driver", "jdbc:postgresql://localhost:5432/" + migration.getDatabaseName(), migration.getDatabaseUser(), migration.getDatabasePassword());
            DataSource adminDataSource = new SimpleDataSource("org.postgresql.Driver", "jdbc:postgresql://localhost:5432/postgres", migration.getDatabaseUser(), migration.getDatabasePassword());

            final Migrator migrator = createMigrator(dataSource, adminDataSource);

            if (!migrator.databaseExists(migration)) {
                createIntegrationTestDatabase(context, migration, migrator, dataSource);
            }

            s_templateDatabaseName = dbName;
        }

        return s_templateDatabaseName;
    }

