    public synchronized static String getIntegrationTestDatabaseName() throws Throwable {
        if (s_templateDatabaseName != null) {
            return s_templateDatabaseName;
        }
//            GenericApplicationContext context = (GenericApplicationContext) BeanUtils.getBeanFactory("daoContext");
//            context = Migrator.ensureLiquibaseFilesInClassPath(context);
//            System.err.println("******* from getIntegrationTestDatabaseName: " + Migrator.getClassLoaderUrls(TemporaryDatabasePostgreSQL.class.getClassLoader()));
        StaticApplicationContext staticContext = new StaticApplicationContext();
        staticContext.setClassLoader(TemporaryDatabasePostgreSQL.class.getClassLoader());
        GenericApplicationContext context = ensureLiquibaseFilesInClassPath(staticContext);

        String hash = generateLiquibaseHash(context);

        String dbName = TEMPLATE_DATABASE_NAME_PREFIX + hash;

        final Migrator migrator = new Migrator();
        migrator.setAdminUser(System.getProperty(TemporaryDatabase.ADMIN_USER_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_USER));
        migrator.setAdminPassword(System.getProperty(TemporaryDatabase.ADMIN_PASSWORD_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_PASSWORD));
        migrator.setDatabaseUser(System.getProperty(TemporaryDatabase.ADMIN_USER_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_USER));
        migrator.setDatabasePassword(System.getProperty(TemporaryDatabase.ADMIN_PASSWORD_PROPERTY, TemporaryDatabase.DEFAULT_ADMIN_PASSWORD));
        migrator.setDatabaseName(dbName);

        DataSource dataSource = new SimpleDataSource("org.postgresql.Driver", "jdbc:postgresql://localhost:5432/" + migrator.getDatabaseName(), migrator.getDatabaseUser(), migrator.getDatabasePassword());
        DataSource adminDataSource = new SimpleDataSource("org.postgresql.Driver", "jdbc:postgresql://localhost:5432/" + ADMIN_DATABASE, migrator.getDatabaseUser(), migrator.getDatabasePassword());

        migrator.setDataSource(dataSource);
        migrator.setAdminDataSource(adminDataSource);
        migrator.setValidateDatabaseVersion(true);
        migrator.setCreateUser(false);
        migrator.setCreateDatabase(true);

        if (!migrator.databaseExists()) {
            createIntegrationTestDatabase(context, migrator, dataSource);
        }

        s_templateDatabaseName = dbName;

        return s_templateDatabaseName;
    }

