        public void run() {
            DatagramSocket sock = null;
            try {
                sock = new DatagramSocket(m_port, m_addr);
                sock.setSoTimeout(DEFAULT_SOCKET_TIMEOUT);
                final short udpLength = 512;
                byte[] in = new byte[udpLength];
                final DatagramPacket indp = new DatagramPacket(in, in.length);
                DatagramPacket outdp = null;
                while (!m_stopped) {
                    indp.setLength(in.length);
                    try {
                        sock.receive(indp);
                    } catch (final InterruptedIOException e) {
                        continue;
                    }
                    final Message query;
                    byte[] response = null;
                    try {
                        query = new Message(in);
                        response = generateReply(query, in, indp.getLength(), null);
                        if (response == null)
                            continue;
                    } catch (final IOException e) {
                        response = formerrMessage(in);
                    }
                    if (outdp == null)
                        outdp = new DatagramPacket(response, response.length, indp.getAddress(), indp.getPort());
                    else {
                        outdp.setData(response);
                        outdp.setLength(response.length);
                        outdp.setAddress(indp.getAddress());
                        outdp.setPort(indp.getPort());
                    }
                    sock.send(outdp);
                }
            } catch (final IOException e) {
                LogUtils.warnf(this, e, "error in the UDP listener: %s", addrport(m_addr, m_port));
            } finally {
                if (sock != null) {
                    try {
                        sock.close();
                    } catch (final Exception e) {
                        LogUtils.debugf(this, e, "error while closing socket");
                    }
                }
                m_latch.countDown();
            }
        }

