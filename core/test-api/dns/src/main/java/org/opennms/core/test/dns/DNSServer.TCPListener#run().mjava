        public void run() {
            try {
                m_socket = new ServerSocket(m_port, 128, m_addr);
                m_socket.setSoTimeout(DEFAULT_SOCKET_TIMEOUT);
                while (!m_stopped) {
                    try {
                        final Socket s = m_socket.accept();
                        Thread t;
                        t = new Thread(new Runnable() {
                            public void run() {
                                try {
                                    handleTCPRequest(s);
                                } catch (final SocketTimeoutException e) {
                                    if (LogUtils.isTraceEnabled(this)) {
                                        LogUtils.tracef(this, e, "timed out waiting for request");
                                    }
                                }
                            }
                        });
                        t.start();
                    } catch (final SocketTimeoutException e) {
                        if (LogUtils.isTraceEnabled(this)) {
                            LogUtils.tracef(this, e, "timed out waiting for request");
                        }
                    }
                }
            } catch (IOException e) {
                LogUtils.warnf(this, e, "unable to serve socket on %s", addrport(m_addr, m_port));
            } finally {
                try {
                    m_socket.close();
                } catch (final IOException e) {
                    LogUtils.debugf(this, e, "error while closing socket");
                }
                m_latch.countDown();
            }
        }

