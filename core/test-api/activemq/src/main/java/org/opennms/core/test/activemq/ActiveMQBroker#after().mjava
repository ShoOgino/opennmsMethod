    @Override
    public void after() {
        try {
            m_broker.stop();
            m_broker.waitUntilStopped();
        } catch (Throwable e) {
            LOG.warn("An error occurred while stopping the broker.", e);
        }

        try {
            if (m_temporaryDirectory != null) {
                Files.walkFileTree(m_temporaryDirectory, new SimpleFileVisitor<Path>() {
                    @Override
                    public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {
                        Files.delete(file);
                        return FileVisitResult.CONTINUE;
                    }

                    @Override
                    public FileVisitResult postVisitDirectory(Path dir, IOException exc) throws IOException {
                        Files.delete(dir);
                        return FileVisitResult.CONTINUE;
                    }
                });
            } 
        } catch (IOException e) {
            LOG.warn("An error occurred while deleting the temporary directory '{}'.", m_temporaryDirectory, e);
        }
    }
