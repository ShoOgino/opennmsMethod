    public CompletableFuture<Integer> waitForThreads(int numThreads) {
        // Used to lock the threads in the barrier once the barrier has the
        // desired number of threads
        lock.lock();

        // Create a future that will be resolved once the barrier has
        // the desired number of threads
        final CompletableFuture<Integer> future = new CompletableFuture<Integer>();

        barrier = new CyclicBarrier(numThreads, new Runnable() {
            @Override
            public void run() {
                future.complete(numThreads);
                // Wait until we're released
                lock.lock();
                lock.unlock();
            }
        });

        semaphore = new Semaphore(numThreads, true);
        return future;
    }

