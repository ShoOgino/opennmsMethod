    /**
     * This is our internal implementation for logging regular (non-parameterized)
     * log messages.
     *
     * @param level   One of the LOG_LEVEL_XXX constants defining the log level
     * @param message The message itself
     * @param t       The exception whose stack trace should be logged
     */
    private void log(int level, String message, Throwable t) {
        if (!isLevelEnabled(level)) {
            return;
        }

        MockLogAppender.addEvent(new LoggingEvent(getName(), level, message));

        StringBuffer buf = new StringBuffer(32);

        // Append date-time if so configured
        if (SHOW_DATE_TIME) {
            if (DATE_FORMATTER != null) {
                buf.append(getFormattedDate());
                buf.append(' ');
            } else {
                buf.append(System.currentTimeMillis() - START_TIME);
                buf.append(' ');
            }
        }

        if (LEVEL_IN_BRACKETS) buf.append('[');

        // Append a readable representation of the log level
        switch (level) {
        case LOG_LEVEL_TRACE:
            buf.append("TRACE");
            break;
        case LOG_LEVEL_DEBUG:
            buf.append("DEBUG");
            break;
        case LOG_LEVEL_INFO:
            buf.append("INFO");
            break;
        case LOG_LEVEL_WARN:
            buf.append(WARN_LEVEL_STRING);
            break;
        case LOG_LEVEL_ERROR:
            buf.append("ERROR");
            break;
        }
        if (LEVEL_IN_BRACKETS) buf.append(']');
        buf.append(' ');

        // Append current thread name if so configured
        if (SHOW_THREAD_NAME) {
            buf.append('[');
            buf.append(Thread.currentThread().getName());
            buf.append("] ");
        }

        // Append the name of the log instance if so configured
        if (SHOW_SHORT_LOG_NAME) {
            if (shortLogName == null) shortLogName = computeShortName();
            buf.append(String.valueOf(shortLogName)).append(" - ");
        } else if (SHOW_LOG_NAME) {
            buf.append(String.valueOf(name)).append(" - ");
        }

        // Append the message
        buf.append(message);

        write(buf, t);

    }

