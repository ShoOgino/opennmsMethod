    public void testMarshalDataSourceFromConfig() throws Exception {
        DaoTestConfigBean bean = new DaoTestConfigBean();
        bean.afterPropertiesSet();

        AtomikosDataSourceFactory factory1 = null;
        AtomikosDataSourceFactory factory2 = null;
        
        try {
        	factory1 = makeFactory("opennms");
        	factory2 = makeFactory("opennms2");

        	Connection conn = null;
        	Statement s = null;
        	try {
        		conn = factory2.getConnection();
        		s = conn.createStatement();
        		s.execute("select * from pg_proc");
        	} finally {
        		if (s != null) {
        			s.close();
        		}
        		if (conn != null) {
        			conn.close();
        		}
        	}
        } finally {
        	Throwable t1 = null;
        	Throwable t2 = null;
        	
    		if (factory1 != null) {
    			try {
    				factory1.close();
    				factory1 = null;
    			} catch (Throwable e1) {
    				t1 = e1;
    			}
    		}

    		if (factory2 != null) {
    			try {
    				factory2.close();
    				factory2 = null;
    			} catch (Throwable e2) {
    				t2 = e2;
    			}
    		}
    		
    		if (t1 != null || t2 != null) {
    			StringBuffer message = new StringBuffer();
    			message.append("Could not successfully close both C3P0 factories.  Future tests might fail.");
    			
    			Throwable choice;
    			if (t1 != null) {
    				message.append("  First factory failed with: " + t1.getMessage() + "; see stack back trace.");
    				choice = t1;
    				
    				if (t2 != null) {
    					System.err.println("  Both factories failed to close.  See stderr for second stack back trace.");
    					t2.printStackTrace(System.err);
    				}
    			} else {
    				choice = t2;
    			}
    			AssertionError e = new AssertionError(message.toString());
    			e.initCause(choice);
    			throw e;
    		}
        }
    }

