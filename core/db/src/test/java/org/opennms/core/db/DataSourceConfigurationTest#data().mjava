    @Parameters
    public static Collection<Object[]> data() throws Exception {
        DataSourceConfiguration config = new DataSourceConfiguration();

        ConnectionPool connectionPool = new ConnectionPool();
        connectionPool.setFactory("org.opennms.core.db.HikariCPConnectionFactory");
        connectionPool.setIdleTimeout(600);
        connectionPool.setLoginTimeout(3);
        connectionPool.setMinPool(50);
        connectionPool.setMaxPool(50);
        connectionPool.setMaxSize(50);
        config.setConnectionPool(connectionPool);

        JdbcDataSource opennmsDs = new JdbcDataSource();
        opennmsDs.setName("opennms");
        opennmsDs.setClassName("org.postgresql.Driver");
        opennmsDs.setUrl(System.getProperty("mock.db.url", "jdbc:postgresql://localhost:5432/") + "template1");
        opennmsDs.setUserName("opennms");
        opennmsDs.setPassword("opennms");
        config.addJdbcDataSource(opennmsDs);

        JdbcDataSource opennmsDeuceDs = new JdbcDataSource();
        opennmsDeuceDs.setName("opennms2");
        opennmsDeuceDs.setClassName("org.postgresql.Driver");
        opennmsDeuceDs.setUrl(System.getProperty("mock.db.url", "jdbc:postgresql://localhost:5432/") + "template1");
        opennmsDeuceDs.addParam(new Param("user", "opennms"));
        opennmsDeuceDs.addParam(new Param("password", "opennms"));
        config.addJdbcDataSource(opennmsDeuceDs);

        return Arrays.asList(new Object[][] {
                {
                    config,
                    new File("src/test/resources/org/opennms/core/db/opennms-datasources.xml")
                }
        });
    }

