    /**
     * Wait for this task to complete or until a timeout occurs. If the
     * timeout elapses, then false is returned.
     *
     * @param timeout a long.
     * @param unit a {@link java.util.concurrent.TimeUnit} object.
     * @throws java.lang.InterruptedException if any.
     */
    public boolean waitFor(final long timeout, final TimeUnit unit) throws InterruptedException {
        return m_latch.await(timeout, unit);
    }

