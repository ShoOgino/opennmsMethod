    /**
     * Test migration.
     *
     * @throws Exception the exception
     */
    @Test
    public void testMigration() throws Exception {
        MagicUsersMigratorOffline migrator = new MagicUsersMigratorOffline();
        migrator.preExecute();
        migrator.execute();
        migrator.postExecute();

        Assert.assertFalse(new File("target/home/etc/magic-users.properties").exists());
        Assert.assertTrue(new File("target/home/etc/magic-users.properties.zip").exists());
        Assert.assertTrue(new File("target/home/etc/magic-users.properties.zip").isFile());
        Userinfo userInfo = CastorUtils.unmarshal(Userinfo.class, new FileSystemResource(new File("target/home/etc/users.xml")));

        final User rtc = getUser(userInfo, "rtc");
        Assert.assertNotNull(rtc);
        Assert.assertEquals(1, rtc.getRoleCount());
        Assert.assertTrue(rtc.getRoleCollection().contains(Authentication.ROLE_RTC));

        final User admin = getUser(userInfo, "admin");
        Assert.assertNotNull(admin);
        Assert.assertEquals(1, admin.getRoleCount());
        Assert.assertTrue(admin.getRoleCollection().contains(Authentication.ROLE_ADMIN));

        final User jmx = getUser(userInfo, "jmx_operator");
        Assert.assertNotNull(jmx);
        Assert.assertEquals(1, admin.getRoleCount());
        Assert.assertTrue(jmx.getRoleCollection().contains(Authentication.ROLE_JMX));

        final User agalue = getUser(userInfo, "agalue");
        Assert.assertNotNull(agalue);
        Assert.assertEquals(2, agalue.getRoleCount());
        Assert.assertTrue(agalue.getRoleCollection().contains(Authentication.ROLE_USER));
        Assert.assertTrue(agalue.getRoleCollection().contains("ROLE_MEASUREMENTS"));

        final User operator = getUser(userInfo, "operator");
        Assert.assertNotNull(operator);
        Assert.assertEquals(0, operator.getRoleCount());

        final User manager = getUser(userInfo, "manager");
        Assert.assertNotNull(manager);
        Assert.assertEquals(2, manager.getRoleCount());
        Assert.assertTrue(manager.getRoleCollection().contains(Authentication.ROLE_USER));
        Assert.assertTrue(manager.getRoleCollection().contains(Authentication.ROLE_READONLY));
    }

