    /**
     * Test fixing the configuration file.
     *
     * @throws Exception the exception
     */
    @Test
    public void testMigrateLargeConfigToDatabase() throws Exception {
        MonitoringLocationsMigratorOffline migrator = new MonitoringLocationsMigratorOffline();
        migrator.preExecute();
        migrator.execute();
        migrator.postExecute();

        assertFalse(new File("target/home/etc/monitoring-locations.xml").exists());
        assertTrue(new File("target/home/etc/monitoring-locations.xml.zip").exists());
        assertTrue(new File("target/home/etc/monitoring-locations.xml.zip").isFile());

        final JdbcTemplate jdbcTemplate = new JdbcTemplate(DataSourceFactory.getInstance());

        // this first one has been a little persnickity for unknown reasons so we log some more information
        String first = jdbcTemplate.queryForObject("SELECT monitoringarea FROM monitoringlocations ORDER BY id LIMIT 1", String.class);
        String last = jdbcTemplate.queryForObject("SELECT monitoringarea FROM monitoringlocations ORDER BY id DESC LIMIT 1", String.class);
        // 2864 from our file, plus 1 that comes in create.sql for localhost
        assertEquals("count of monitoringlocations; first: " + first + "; last: " + last, 2864 + 1, jdbcTemplate.queryForObject("SELECT COUNT(*) FROM monitoringlocations", Integer.class).intValue());

        assertEquals("count of monitoringlocations WHERE tag = 'divisbileBy3'", 954, jdbcTemplate.queryForObject("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'divisbileBy3'", Integer.class).intValue());
        assertEquals("count of monitoringlocations WHERE tag = 'divisibleBy5'", 572, jdbcTemplate.queryForObject("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'divisibleBy5'", Integer.class).intValue());
        assertEquals("count of monitoringlocations WHERE tag = 'divisibleBy7'", 409, jdbcTemplate.queryForObject("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'divisibleBy7'", Integer.class).intValue());
        assertEquals("count of monitoringlocations WHERE tag = 'odd'", 1432, jdbcTemplate.queryForObject("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'odd'", Integer.class).intValue());
        assertEquals("count of monitoringlocations WHERE tag = 'even'", 1432, jdbcTemplate.queryForObject("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'even'", Integer.class).intValue());
    }

