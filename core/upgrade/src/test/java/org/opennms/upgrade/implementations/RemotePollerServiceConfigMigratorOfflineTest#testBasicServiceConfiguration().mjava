    @Test
    public void testBasicServiceConfiguration() throws Exception {
        // file does not include any remote poller entry
        copyFile("src/test/resources/NMS-12684/service-configuration.xml-2");

        final File cfgFile = ConfigFileConstants.getFile(ConfigFileConstants.SERVICE_CONF_FILE_NAME);
        final ServiceConfiguration cfg = JaxbUtils.unmarshal(ServiceConfiguration.class, cfgFile);

        assertEquals(31, cfg.getServices().size());

        final RemotePollerServiceConfigMigratorOffline remotePollerServiceConfigMigratorOffline = new RemotePollerServiceConfigMigratorOffline();
        remotePollerServiceConfigMigratorOffline.execute();

        final ServiceConfiguration newCfg = JaxbUtils.unmarshal(ServiceConfiguration.class, cfgFile);

        Assert.assertEquals(32, newCfg.getServices().size());

        final Set<String> services = newCfg.getServices().stream().map(s -> s.getName()).collect(Collectors.toSet());

        Assert.assertEquals(false, services.contains(RemotePollerServiceConfigMigratorOffline.DEPRECATED_REMOTE_POLLER_SERVICENAME));
        Assert.assertEquals(true, services.contains(RemotePollerServiceConfigMigratorOffline.REMOTE_POLLER_NG_SERVICENAME));

        final List<Service> matchingEntries = newCfg.getServices().stream()
                .filter(s -> RemotePollerServiceConfigMigratorOffline.REMOTE_POLLER_NG_SERVICENAME.equals(s.getName()))
                .collect(Collectors.toList());

        Assert.assertEquals(1, matchingEntries.size());
        Assert.assertThat(matchingEntries.get(0).isEnabled(), is(true));
    }

