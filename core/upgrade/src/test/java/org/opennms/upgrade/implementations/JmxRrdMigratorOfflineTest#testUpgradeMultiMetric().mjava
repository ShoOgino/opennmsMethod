    /**
     * Test upgrade (multi-metric JRBs, i.e. storeByGroup=true).
     *
     * @throws Exception the exception
     */
    @Test
    public void testUpgradeMultiMetric() throws Exception {
        FileUtils.copyDirectory(new File("src/test/resources/rrd2"), new File("target/home/rrd"));

        File config = new File("target/home/etc/opennms.properties");
        Properties p = new Properties();
        p.load(new FileReader(config));
        p.setProperty("org.opennms.rrd.storeByGroup", "true");
        p.store(new FileWriter(config), null);

        executeUpgrader();

        File jrbFile = new File("target/home/rrd/1/opennms-jvm/java_lang_type_MemoryPool_name_Survivor_Space.jrb");
        Assert.assertTrue(jrbFile.exists());
        RrdDb jrb = new RrdDb(jrbFile, true);
        String[] dataSources = jrb.getDsNames();
        jrb.close();

        Properties dsProp = new Properties();
        dsProp.load(new FileReader("target/home/rrd/1/opennms-jvm/ds.properties"));

        Properties meta = new Properties();
        meta.load(new FileReader("target/home/rrd/1/opennms-jvm/java_lang_type_MemoryPool_name_Survivor_Space.meta"));

        for (String ds : dataSources) {
            Assert.assertFalse(ds.contains("."));
            Assert.assertEquals("java_lang_type_MemoryPool_name_Survivor_Space", dsProp.getProperty(ds));
            Assert.assertEquals(ds, meta.getProperty("JMX_java.lang:type=MemoryPool.name.Survivor Space." + ds));
        }
    }

