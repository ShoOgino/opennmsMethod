    /**
     * Test fixing the configuration file.
     *
     * @throws Exception the exception
     */
    @Test
    public void testMigrateLargeConfigToDatabase() throws Exception {
        MonitoringLocationsMigratorOffline migrator = new MonitoringLocationsMigratorOffline();
        migrator.preExecute();
        migrator.execute();
        migrator.postExecute();

        assertFalse(new File("target/home/etc/monitoring-locations.xml").exists());
        assertTrue(new File("target/home/etc/monitoring-locations.xml.zip").exists());
        assertTrue(new File("target/home/etc/monitoring-locations.xml.zip").isFile());

        Connection connection = null;
        final DBUtils dbUtils = new DBUtils(getClass());
        try {
            connection = DataSourceFactory.getInstance().getConnection();
            dbUtils.watch(connection);

            ResultSet rs = connection.prepareStatement("SELECT COUNT(*) FROM monitoringlocations").executeQuery();
            dbUtils.watch(rs);
            rs.next();
            assertEquals(2864, rs.getInt(1));

            rs = connection.prepareStatement("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'divisbileBy3'").executeQuery(); // sic
            dbUtils.watch(rs);
            rs.next();
            assertEquals(954, rs.getInt(1));

            rs = connection.prepareStatement("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'divisibleBy5'").executeQuery();
            dbUtils.watch(rs);
            rs.next();
            assertEquals(572, rs.getInt(1));

            rs = connection.prepareStatement("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'divisibleBy7'").executeQuery();
            dbUtils.watch(rs);
            rs.next();
            assertEquals(409, rs.getInt(1));

            rs = connection.prepareStatement("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'odd'").executeQuery();
            dbUtils.watch(rs);
            rs.next();
            assertEquals(1432, rs.getInt(1));

            rs = connection.prepareStatement("SELECT COUNT(*) FROM monitoringlocationstags WHERE tag = 'even'").executeQuery();
            dbUtils.watch(rs);
            rs.next();
            assertEquals(1432, rs.getInt(1));
        } finally {
            dbUtils.cleanUp();
        }
    }

