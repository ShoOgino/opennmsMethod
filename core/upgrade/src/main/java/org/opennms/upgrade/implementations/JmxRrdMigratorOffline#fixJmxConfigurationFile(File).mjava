    /**
     * Fixes a JMX configuration file.
     *
     * @param jmxConfigFile the JMX configuration file
     * @throws OnmsUpgradeException the OpenNMS upgrade exception
     */
    private void fixJmxConfigurationFile(File jmxConfigFile) throws OnmsUpgradeException {
        try {
            log("Updating JMX metric definitions on %s\n", jmxConfigFile);
            zipFile(jmxConfigFile);
            backupFiles.add(new File(jmxConfigFile.getAbsolutePath() + ZIP_EXT));
            File outputFile = new File(jmxConfigFile.getCanonicalFile() + ".temp");
            FileWriter w = new FileWriter(outputFile);
            Pattern extRegex = Pattern.compile("import-mbeans[>](.+)[<]");
            Pattern aliasRegex = Pattern.compile("alias=\"([^\"]+\\.[^\"]+)\"");
            List<File> externalFiles = new ArrayList<>();
            LineIterator it = FileUtils.lineIterator(jmxConfigFile);
            while (it.hasNext()) {
                String line = it.next();
                Matcher m = extRegex.matcher(line);
                if (m.find()) {
                    externalFiles.add(new File(jmxConfigFile.getParentFile(), m.group(1)));
                }
                m = aliasRegex.matcher(line);
                if (m.find()) {
                    String badDs = m.group(1);
                    String fixedDs = getFixedDsName(badDs);
                    log("  Replacing bad alias %s with %s on %s\n", badDs, fixedDs, line.trim());
                    line = line.replaceAll(badDs, fixedDs);
                    if (badMetrics.contains(badDs) == false) {
                        badMetrics.add(badDs);
                    }
                }
                w.write(line + "\n");
            }
            LineIterator.closeQuietly(it);
            w.close();
            FileUtils.deleteQuietly(jmxConfigFile);
            FileUtils.moveFile(outputFile, jmxConfigFile);
            if (!externalFiles.isEmpty()) {
                for (File configFile : externalFiles) {
                    fixJmxConfigurationFile(configFile);
                }
            }
        } catch (Exception e) {
            throw new OnmsUpgradeException("Can't fix " + jmxConfigFile + " because " + e.getMessage(), e);
        }
    }

