    @Override
    public void execute() throws OnmsUpgradeException {
        long count = 0;
        try {
            Connection connection = null;
            final DBUtils dbUtils = new DBUtils(getClass());
            try {
                connection = DataSourceFactory.getInstance().getConnection();
                dbUtils.watch(connection);

                PreparedStatement insertLocation = connection.prepareStatement("INSERT INTO monitoringlocations (id, monitoringarea, geolocation, latitude, longitude, priority) VALUES (?,?,?,?,?,?)");
                PreparedStatement insertPollingPackage = connection.prepareStatement("INSERT INTO monitoringlocationspollingpackages (monitoringlocationid, packagename) VALUES (?,?)");
                PreparedStatement insertCollectionPackage = connection.prepareStatement("INSERT INTO monitoringlocationscollectionpackages (monitoringlocationid, packagename) VALUES (?,?)");
                PreparedStatement insertTag = connection.prepareStatement("INSERT INTO monitoringlocationstags (monitoringlocationid, tag) VALUES (?,?)");

                dbUtils.watch(insertLocation);
                dbUtils.watch(insertPollingPackage);
                dbUtils.watch(insertCollectionPackage);
                dbUtils.watch(insertTag);

                for (LocationDef location : monitoringLocationsConfig.getLocations()) {
                    insertLocation.setString(1, location.getLocationName()); // id
                    insertLocation.setString(2, location.getMonitoringArea()); // monitoringarea
                    if (location.getGeolocation() != null && !"".equals(location.getGeolocation().trim())) {
                        insertLocation.setString(3, location.getGeolocation()); // geolocation
                    } else {
                        insertLocation.setNull(3, Types.VARCHAR);
                    }

                    if (location.getCoordinates() != null && !"".equals(location.getCoordinates())) {
                        String[] latLong = location.getCoordinates().split(",");
                        if (latLong.length == 2) {
                            insertLocation.setDouble(4, Double.valueOf(latLong[0])); // latitude
                            insertLocation.setDouble(5, Double.valueOf(latLong[1])); // longitude
                        } else {
                            insertLocation.setNull(4, Types.DOUBLE);
                            insertLocation.setNull(5, Types.DOUBLE);
                        }
                    } else {
                        insertLocation.setNull(4, Types.DOUBLE);
                        insertLocation.setNull(5, Types.DOUBLE);
                    }
                    if (location.getPriority() == null) {
                        insertLocation.setNull(6, Types.INTEGER); // priority
                    } else {
                        insertLocation.setLong(6, location.getPriority()); // priority
                    }
                    insertLocation.execute();
                    count++;

                    if (location.getPollingPackageName() != null && !"".equals(location.getPollingPackageName())) {
                        insertPollingPackage.setString(1, location.getLocationName()); // monitoringlocationid
                        insertPollingPackage.setString(2, location.getPollingPackageName()); // packagename
                        insertPollingPackage.execute();
                    }

                    if (location.getCollectionPackageName() != null && !"".equals(location.getCollectionPackageName())) {
                        insertCollectionPackage.setString(1, location.getLocationName()); // monitoringlocationid
                        insertCollectionPackage.setString(2, location.getCollectionPackageName()); // packagename
                        insertCollectionPackage.execute();
                    }

                    for (Tag tag : location.getTags()) {
                        if (tag.getName() != null && !"".equals(tag.getName().trim())) {
                            insertTag.setString(1, location.getLocationName()); // monitoringlocationid
                            insertTag.setString(2, tag.getName()); // tag
                            insertTag.execute();
                        }
                    }
                }
            } finally {
                dbUtils.cleanUp();
            }
        } catch (Throwable e) {
            throw new OnmsUpgradeException("Can't fix services configuration because " + e.getMessage(), e);
        }
        LOG.info("Moved {} monitoring locations into the database", count);
    }

