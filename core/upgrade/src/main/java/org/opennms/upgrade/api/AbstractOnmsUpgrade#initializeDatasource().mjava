    /**
     * Initializes the data source.
     *
     * @throws OnmsUpgradeException the OpenNMS upgrade exception
     */
    protected void initializeDatasource() throws OnmsUpgradeException {
        if (dataSource != null) {
            return;
        }
        try {
            final File cfgFile = ConfigFileConstants.getFile(ConfigFileConstants.OPENNMS_DATASOURCE_CONFIG_FILE_NAME);
            DataSourceConfiguration dsc = null;
            FileInputStream fileInputStream = null;
            try {
                fileInputStream = new FileInputStream(cfgFile);
                dsc = CastorUtils.unmarshal(DataSourceConfiguration.class, fileInputStream);
            } finally {
                IOUtils.closeQuietly(fileInputStream);
            }
            for (JdbcDataSource jds : dsc.getJdbcDataSourceCollection()) {
                if (jds.getName().equals("opennms")) {
                    log("Connecting to %s\n", jds.getUrl());
                    final String url = jds.getUrl();
                    final String user = jds.getUserName();
                    final String pwd = jds.getPassword();
                    DataSourceFactory.setInstance(new DataSource() {
                        public PrintWriter getLogWriter() throws SQLException { return null; }
                        public int getLoginTimeout() throws SQLException { return 0; }
                        public void setLogWriter(PrintWriter pw) throws SQLException {}
                        public void setLoginTimeout(int tm) throws SQLException {}
                        public boolean isWrapperFor(Class<?> arg0) throws SQLException { return false; }
                        public <T> T unwrap(Class<T> arg0) throws SQLException { return null; }
                        public Connection getConnection(String arg0, String arg1) throws SQLException { return null; }
                        public Connection getConnection() throws SQLException {
                            return DriverManager.getConnection(url,user,pwd);
                        }
                        public java.util.logging.Logger getParentLogger() throws SQLFeatureNotSupportedException {
                            return null;
                        }
                    });
                }
            }
            dataSource = DataSourceFactory.getInstance();
        } catch (Exception e) {
            throw new OnmsUpgradeException("Can't connect to OpenNMS Database because " + e.getMessage(), e);
        }
    }

