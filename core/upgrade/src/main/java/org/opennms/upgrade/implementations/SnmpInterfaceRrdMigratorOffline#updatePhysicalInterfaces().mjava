    /**
     * Update physical interfaces.
     *
     * @throws OnmsUpgradeException the OpenNMS upgrade exception
     */
    private void updatePhysicalInterfaces() throws OnmsUpgradeException {
        Connection conn = getDbConnection();
        final DBUtils db = new DBUtils(getClass());
        db.watch(conn);
        try {
            conn.setAutoCommit(false);
            Statement st = conn.createStatement();
            db.watch(st);
            String query = "select n.nodeid, n.nodelabel, i.ipaddr from node n, ipinterface i, ifservices s where n.nodeid = i.nodeid and n.nodeid = s.nodeid and i.issnmpprimary='P' and s.serviceid in (select serviceid from service where servicename='SNMP')";
            ResultSet rs = st.executeQuery(query);
            db.watch(rs);
            while (rs.next()) {
                int nodeId = rs.getInt("nodeid");
                String nodeLabel = rs.getString("nodelabel");
                String ipAddress = rs.getString("ipaddr");
                try {
                    log("Retrieving IF-MIB::ifPhysAddress for node %s using IP %s\n", nodeLabel, ipAddress);
                    InetAddress address = InetAddressUtils.addr(ipAddress);
                    final SnmpAgentConfig agentConfig = SnmpPeerFactory.getInstance().getAgentConfig(address);
                    Map<SnmpInstId, SnmpValue> values = SnmpUtils.getOidValues(agentConfig, "ifPhysAddress", SnmpObjId.get(".1.3.6.1.2.1.2.2.1.6"));
                    if (values == null || values.isEmpty()) {
                        log("Warning: there is no ifPhysAddress data for %s using IP %s\n", nodeLabel, ipAddress);
                    } else {
                        for (Entry<SnmpInstId,SnmpValue> entry : values.entrySet()) {
                            final String mac = getPhysAddr(entry.getValue());
                            if (mac != null) {
                                log("Updating the snmpPhysAddress to '%s' for ifIndex %s on node %s (id %s) using IP %s\n", mac, entry.getKey().toInt(), nodeLabel, nodeId, ipAddress);
                                PreparedStatement upt = conn.prepareStatement("update snmpinterface set snmpphysaddr=? where nodeid=? and snmpifindex=?");
                                db.watch(upt);
                                upt.setString(1, mac);
                                upt.setInt(2, nodeId);
                                upt.setInt(3, entry.getKey().toInt());
                                upt.executeUpdate();
                            }
                        }
                    }
                } catch (Exception e) {
                    log("Warning: can't update the ifPhysAddress entries on node " + nodeLabel + " (IP " + ipAddress + ") because " + e.getMessage());
                }
            }
            conn.commit();
        } catch (Exception e) {
            try {
                conn.rollback();
            } catch (SQLException ex) {
                log("Error: can't rollback changes because " + ex.getMessage());
            }
        } finally {
            db.cleanUp();
        }
    }

