    /**
     * Gets the JMX resource directories.
     *
     * @return the JMX resource directories
     * @throws OnmsUpgradeException the OpenNMS upgrade exception
     */
    private List<File> getJmxResourceDirectories() throws OnmsUpgradeException {
        if (jmxResourceDirectories == null) {
            jmxResourceDirectories = new ArrayList<File>();
            CollectdConfiguration config;
            try {
                config = new CollectdConfigFactory().getCollectdConfig();
            } catch (Exception e) {
                throw new OnmsUpgradeException("Can't upgrade the JRBs because " + e.getMessage(), e);
            }
            List<String> services = getJmxServices(config);
            log("JMX services found: %s\n", services);
            List<String> jmxFriendlyNames = new ArrayList<String>();
            for (String service : services) {
                Service svc = getServiceObject(config, service);
                if (svc != null) {
                    String friendlyName = getSvcPropertyValue(svc, "friendly-name");
                    if (friendlyName == null) {
                        friendlyName = getSvcPropertyValue(svc, "port"); // According with JMXCollector, port will be used if there is no friendly-name.
                    }
                    if (friendlyName == null) {
                        log("Warning: there is no friendly-name or port parameter for service %s. The JRBs/RRDs for this service are not going to be updated.", service);
                    } else {
                        jmxFriendlyNames.add(friendlyName);
                    }
                } else {
                    log("Warning: JMX service %s is defined but not used in any package definition. Skipping migration.\n", service);
                }
            }
            log("JMX friendly names found: %s\n", jmxFriendlyNames);
            File rrdDir = new File(jmxDataCollectionConfigDao.getRrdPath());
            findJmxDirectories(rrdDir, jmxFriendlyNames, jmxResourceDirectories);
            if (jmxResourceDirectories.isEmpty()) {
                log("Warning: no JMX directories found on %s\n", rrdDir);
            }
        }
        return jmxResourceDirectories;
    }

