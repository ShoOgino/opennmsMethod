    private void authenticateBasedOnRemoteAddress(ConnectionContext context, ConnectionInfo info) {
        boolean grant = false;

        final String connectionString = context.getConnection().getRemoteAddress();
        if (connectionString.startsWith("vm://")) {
            // Always grant VM connections
            grant = true;
        } else {
            final InetAddress remoteAddress = getAddressFromConnectionString(connectionString);
            if (remoteAddress == null) {
                LOG.warn("Unable to determine remote address from connection string: {}", connectionString);
            } else if (trustedHosts.contains(remoteAddress)) {
                grant = true;
            }
        }

        if (!grant) {
            LOG.info("Connection from '{}' is NOT trusted.", connectionString);
            return;
        } else {
            LOG.info("Connection from '{}' is trusted.", connectionString);
            // Always create a new security context, even if it contains the same attributes
            // as the last context
            final SecurityContext securityContext = new SecurityContext(usernameForTrustedHosts) {
                @Override
                public Set<Principal> getPrincipals() {
                    return principalsForTrustedHosts;
                }
            };
            context.setSecurityContext(securityContext);
            securityContexts.add(securityContext);
        }
    }

