    /**
     * <p>queryStatus</p>
     *
     * @throws java.lang.Exception if any.
     */
    public void queryStatus() throws Exception {

        Pattern p = Pattern.compile("Status: OpenNMS:Name=(\\S+) = (\\S+)");

        LinkedHashMap<String, String> results = new LinkedHashMap<String, String>();

        List<String> statusResults = Collections.emptyList();
        try {
            statusResults = (List<String>)m_controller.doInvokeOperation("status");
        } catch (Throwable e) {
            LOG.debug("Could not fetch status: " + e.getMessage());
            if (m_controller.isVerbose()) {
                // TODO Should this be System.err instead?
                System.out.println("Could not connect to the OpenNMS JVM"
                        + " (OpenNMS might not be running or "
                        + "could be starting up or shutting down): "
                        + e.getMessage());
            }
            m_status = Status.CONNECTION_REFUSED;
            return;
        }

        /*
         * Once we split a status entry, it will look like this:
         * Status: OpenNMS:Name=Eventd = RUNNING
         */
        for (String result : statusResults) {

            Matcher m = p.matcher(result);
            if (!m.matches()) {
                throw new Exception("Result \"" + result
                        + "\" does not match our regular expression");
            }
            results.put(m.group(1), m.group(2));
        }

        /*
         * We want our output to look like this:
         *     OpenNMS.Eventd         : running
         */
        String spaces = "               ";
        int running = 0;
        int services = 0;
        for (Entry<String, String> entry : results.entrySet()) {
            String daemon = entry.getKey();
            String status = entry.getValue().toLowerCase();

            services++;
            if (status.equals("running")) {
                running++;
            }
            if (m_controller.isVerbose()) {
                System.out.println("OpenNMS." + daemon
                        + spaces.substring(daemon.length()) + ": " + status);
            }
        }

        if (services == 0) {
            m_status = Status.NOT_RUNNING;
        } else if (running != services) {
            m_status = Status.PARTIALLY_RUNNING;
        } else {
            m_status = Status.RUNNING;
        }
    }

