	public void queryStatus() throws Exception {
        Map<String, String> results = Collections.emptyMap();

        try {
            results = this.retrieveStatus();
        } catch (final IllegalStateException e) {
            LOG.debug("Could not fetch status: " + e.getMessage());
            if (m_controller.isVerbose()) {
                System.out.println("Could not connect to the OpenNMS JVM"
                        + " (OpenNMS might not be running or "
                        + "could be starting up or shutting down): "
                        + e.getMessage());
            }
            m_status = Status.CONNECTION_REFUSED;
            return;
        }

        /*
         * We want our output to look like this:
         *     OpenNMS.Eventd         : running
         */
        String spaces = "                    ";
        int running = 0;
        int services = 0;
        for (final Entry<String, String> entry : results.entrySet()) {
            String daemon = entry.getKey();
            String status = entry.getValue();

            services++;
            if (status.equals("running")) {
                running++;
            }
            if (m_controller.isVerbose()) {
                System.out.println("OpenNMS." + daemon
                        + spaces.substring(Math.min(daemon.length(),spaces.length()-1)) + ": " + status);
            }
        }

        if (services == 0) {
            m_status = Status.NOT_RUNNING;
        } else if (running != services) {
            m_status = Status.PARTIALLY_RUNNING;
        } else {
            m_status = Status.RUNNING;
        }
    }

