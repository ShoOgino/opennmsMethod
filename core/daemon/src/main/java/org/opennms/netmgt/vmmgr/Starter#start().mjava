    private void start() {
        LOG.debug("Beginning startup");

        MBeanServer server = ManagementFactory.getPlatformMBeanServer();

        Invoker invoker = new Invoker();
        invoker.setServer(server);
        invoker.setAtType(InvokeAtType.START);
        List<InvokerService> services = InvokerService.createServiceList(new ServiceConfigFactory().getServices());
        invoker.setServices(services);
        invoker.instantiateClasses();

        List<InvokerResult> resultInfo = invoker.invokeMethods();

        for (InvokerResult result : resultInfo) {
            if (result != null && result.getThrowable() != null) {
                Service service = result.getService();
                String name = service.getName();
                String className = service.getClassName();

                String message =
                        "An error occurred while attempting to start the \"" +
                                name + "\" service (class " + className + ").  "
                                + "Shutting down and exiting.";

                // DON'T LOG THE EXCEPTION HERE WITH LOG4J2
                // There is a bug in log4j2 where it is trying to classload classes out of the exception traces and
                // it fails to load the sun.reflect.misc.Trampoline class used by JMX for reflection.
                //
                // @see http://issues.opennms.org/browse/NMS-6784
                //
                //LOG.error(message, result.getThrowable());

                System.err.println(message);
                result.getThrowable().printStackTrace();

                Manager manager = new Manager();
                manager.stop();
                manager.doSystemExit();

                // Shouldn't get here
                return;
            }
        }

        LOG.debug("Startup complete");
    }

