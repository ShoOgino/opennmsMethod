    @Test
    public void canReloadOnGetWhenNoObjectIsGiven() {
        final SomeConfig config = new SomeConfig();
        final AtomicInteger loadCount = new AtomicInteger();
        final BeanConfigurationProvider<SomeConfig> provider = new BeanConfigurationProvider<SomeConfig>(config) {
            @Override
            public SomeConfig getObject() {
                loadCount.incrementAndGet();
                return config;
            }
        };
        ConfigReloadContainer<SomeConfig> container = new ConfigReloadContainer.Builder<>(SomeConfig.class)
                .withProvider(provider)
                .build();
        assertThat(container.getObject(), is(equalTo(config)));

        // Access the object another few times for good measure
        container.getObject();
        container.getObject();
        // Reload should only have been called once
        assertThat(loadCount.get(), is(equalTo(1)));
    }

