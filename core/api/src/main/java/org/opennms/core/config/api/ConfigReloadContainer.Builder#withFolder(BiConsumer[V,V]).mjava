        /**
         * Note: this method assumes the object being managed by this container is mutable and can be used for
         * accumulation. This simplifies the usage of clients by allowing them to provide a consumer for accumulation
         * purposes rather than a function. Should this container ever need to manage immutable objects an additional
         * method should be provided which accepts a {@link BinaryOperator} rather than a {@link BiConsumer}.
         *
         * @param folder a consumer which given an accumulator and the next value, folds the next value into the
         *               accumulator such that the accumulator now represents the merger of both objects
         */
        public Builder<V> withFolder(BiConsumer<V, V> folder) {
            this.folder = (a, b) -> {
                folder.accept(a, b);
                return a;
            };
            return this;
        }

