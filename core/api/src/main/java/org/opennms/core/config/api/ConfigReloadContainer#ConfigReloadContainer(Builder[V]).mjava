    private ConfigReloadContainer(Builder<V> builder) {
        clazz = builder.clazz;
        object = builder.initialConfig;

        if (object != null) {
            // We have some initial state
            if (builder.lastUpdate != null) {
                // The user specified an initial date, use it
                lastUpdate = builder.lastUpdate.getTime();
            } else {
                // We have some object, but no date was specified, default to "now"
                lastUpdate = System.currentTimeMillis();
            }
            // We were provided with some object, so defer the reload check until
            // the specified interval has passed
            lastReloadCheck = System.currentTimeMillis();
        }

        if (builder.reloadCheckIntervalInMs == null) {
            reloadCheckIntervalInMs = DEFAULT_RELOAD_CHECK_INTERVAL_MS;
        } else if (builder.reloadCheckIntervalInMs <= 0) {
            reloadCheckIntervalInMs = -1;
        } else {
            reloadCheckIntervalInMs = builder.reloadCheckIntervalInMs;
        }
        builder.providers.forEach(p -> {
            providers.add(new ConfigurationProviderState<V>(p));
        });
        merger = builder.merger;
        REGISTRY.addListener(ConfigurationProvider.class, this, true);
    }

