    JoeSnmpValue(final int typeId, final byte[] bytes) {
        switch(typeId) {
        case SnmpSMI.SMI_COUNTER64: {
            m_value = new SnmpCounter64(new BigInteger(bytes));
            break;
        }
        case SnmpSMI.SMI_INTEGER: {
            m_value = new SnmpInt32(new BigInteger(bytes).intValue());
            break;
        }
        case SnmpSMI.SMI_COUNTER32: {
            m_value = new SnmpCounter32(new BigInteger(bytes).longValue());
            break;
        }
        case SnmpSMI.SMI_TIMETICKS: {
            m_value = new SnmpTimeTicks(new BigInteger(bytes).longValue());
            break;
        }
        case SnmpSMI.SMI_UNSIGNED32: {
            m_value = new SnmpUInt32(new BigInteger(bytes).longValue());
            break;
        }
        case SnmpSMI.SMI_IPADDRESS: {
            m_value = new SnmpIPAddress(bytes);
            break;
        }
        case SnmpSMI.SMI_OBJECTID: {
            m_value = new SnmpObjectId(new String(bytes));
            break;
        }
        case SnmpSMI.SMI_OPAQUE: {
            m_value = new SnmpOpaque(bytes);
            break;
        }
        case SnmpSMI.SMI_STRING: {
            m_value = new SnmpOctetString(bytes);
            break;
        }
        case SnmpSMI.SMI_NULL: {
            m_value = new SnmpNull();
            break;
        }
        default:
            throw new IllegalArgumentException("invaldi type id "+typeId);
        }    
    }

