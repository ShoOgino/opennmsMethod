    @Override
    public CompletableFuture<SnmpMultiResponseDTO> execute(SnmpRequestDTO request) {
        // Optionally override the default location (used for testing)
        if (LocationUtils.isLocationOverrideEnabled() && request.getLocation() == null) {
            request.setLocation(LocationUtils.getLocationOverride());
        }

        final CompletableFuture<SnmpMultiResponseDTO> future = new CompletableFuture<SnmpMultiResponseDTO>();
        template.asyncCallbackSendBody(endpoint, request, new Synchronization() {
            @Override
            public void onComplete(Exchange exchange) {
                final SnmpMultiResponseDTO res = exchange.getOut().getBody(SnmpMultiResponseDTO.class);
                future.complete(res);
            }
            @Override
            public void onFailure(Exchange exchange) {
                future.completeExceptionally(exchange.getException());
            }
        });
        return future;
    }

