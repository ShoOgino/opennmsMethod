    /**
     * 
     * The parseHeader() method is used to decode an ASN.1 header from the
     * specified buffer. The method is defined to support the AsnEncoder
     * interface. The method also calls the parseLength() method.
     * 
     * @param buf
     *            The input buffer
     * @param startOffset
     *            The offset to start decoding in the buffer
     * 
     * @return Returns an Object array that contains the new offset, ASN.1 type,
     *         and decoded length. The first object is an Integer object and
     *         contains the new offset for the next object in buf. The second
     *         object is a Byte object that represents the decoded ASN.1 Type.
     *         The third object is an Integer and contains the actual decoded
     *         length.
     * 
     * @exception AsnDecodingException
     *                Thrown if an error occurs decoding the buffer.
     */
    @Override
    public Object[] parseHeader(byte[] buf, int startOffset) throws AsnDecodingException {
        if ((buf.length - startOffset) < 1)
            throw new AsnDecodingException("Insufficent buffer length");

        //
        // get the ASN.1 Type
        //
        byte asnType = buf[startOffset++];
        if (isExtensionId(asnType))
            throw new AsnDecodingException("Buffer underflow error");

        //
        // get the length
        //
        Object[] lenVals = parseLength(buf, startOffset);

        //
        // create the return values
        // 1) offset for next object
        // 2) ASN.1 type
        // 3) ASN.1 length
        //
        Object[] rVals = new Object[3];
        rVals[0] = lenVals[0];
        rVals[1] = Byte.valueOf(asnType);
        rVals[2] = lenVals[1];

        //
        // return the results
        //
        return rVals;
    }

