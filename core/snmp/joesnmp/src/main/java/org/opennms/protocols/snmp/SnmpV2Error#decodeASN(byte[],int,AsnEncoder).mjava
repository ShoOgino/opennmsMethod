    /**
     * Decodes the passed buffer and updates the object to match the encoded
     * information. The encoded information is recovered using the encoder
     * object.
     * 
     * @param buf
     *            The encoded buffer
     * @param offset
     *            The offset of the first byte of encoded data
     * @param encoder
     *            The object used to decode the data.
     * 
     * @return The index of the byte immedantly after the last encoded byte.
     */
    @Override
    public int decodeASN(byte[] buf, int offset, AsnEncoder encoder) throws AsnDecodingException {
        Object[] rVals = encoder.parseHeader(buf, offset);

        if (((Byte) rVals[1]).byteValue() != typeId())
            throw new AsnDecodingException("Invalid ASN.1 type");

        if (((Integer) rVals[2]).intValue() != 0)
            throw new AsnDecodingException("Invalid ASN.1 length");

        return ((Integer) rVals[0]).intValue();
    }

