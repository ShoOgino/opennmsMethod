    /**
     * Encodes the SnmpVarBind object into the passed buffer. The variable's
     * data is encoded using the passed AsnEncoder object. The offset for the
     * next object to be encoded is returned by the method. This method is
     * defined to fulfill the contract with the SnmpSytnax interface.
     * 
     * @param buf
     *            Storeage for the encoded data
     * @param offset
     *            Offset to start encoding data
     * @param encoder
     *            The encoder used to convert the data
     * 
     * @exception AsnEncodingException
     *                Thrown if the encoder encounters an error while building
     *                the buffer.
     * 
     * @return The offset of the next byte immediately after the last encoded
     *         byte by this routine.
     * 
     */
    @Override
    public int encodeASN(byte[] buf, int offset, AsnEncoder encoder) throws AsnEncodingException {
        int begin = offset;

        //
        // encode the name
        //
        offset = m_name.encodeASN(buf, offset, encoder);
        offset = m_value.encodeASN(buf, offset, encoder);

        int pivot = offset;
        int end = encoder.buildHeader(buf, offset, typeId(), pivot - begin);
        //
        // now rotate!
        //
        SnmpUtil.rotate(buf, begin, pivot, end);

        return end;
    }

