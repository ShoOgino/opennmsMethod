    @Override
    public Object execute() {

        InetAddress inetAddress;
        CompletableFuture<Optional<SnmpAgentConfig>> future;
        try {
            inetAddress = InetAddress.getByName(ipAddress);
            future = snmpProfileMapper.fitProfile(label, inetAddress, location, oid);
        } catch (UnknownHostException e) {
            System.err.printf("Unknown host '%s' at location '%s': %s%n", ipAddress, location, e.getMessage());
            return null;
        }
        while (future != null) {
            try {
                Optional<SnmpAgentConfig> agentConfig = future.get(1, TimeUnit.SECONDS);
                if (agentConfig.isPresent()) {
                    System.out.printf("Fitted IP address '%s' with profile '%s', agent config: %n", ipAddress, agentConfig.get().getProfileLabel());
                    ShowConfigCommand.prettyPrint(agentConfig.get());
                    if (save) {
                        agentConfigFactory.saveAgentConfigAsDefinition(agentConfig.get(), location, "karaf-shell");
                        System.out.println("*** Saved above config in definitions ***");
                    }
                    if (sendNewSuspect) {
                        EventBuilder eventBuilder = new EventBuilder(EventConstants.NEW_SUSPECT_INTERFACE_EVENT_UEI, "KarafShell_snmp-fit")
                                .setInterface(inetAddress);
                        if (! Strings.isNullOrEmpty(foreignSource)) {
                            eventBuilder.addParam(EventConstants.PARM_FOREIGN_SOURCE, foreignSource);
                        }
                        if (! Strings.isNullOrEmpty(location)) {
                            eventBuilder.addParam(EventConstants.PARM_LOCATION, location);
                        }
                        eventForwarder.sendNow(eventBuilder.getEvent());
                        System.out.printf("Sent newSuspect event for %s, location '%s', foreign-source '%s'%n", ipAddress, location, foreignSource);
                    }
                    break;
                } else {
                    if (Strings.isNullOrEmpty(label)) {
                        System.out.printf("%nDidn't find any matching profile for IP address '%s' %n", ipAddress);
                    } else {
                        System.out.printf("%nProfile with label '%s' didn't fit for IP address '%s'%n", label, ipAddress);
                    }
                    break;
                }

            } catch (TimeoutException | InterruptedException | ExecutionException e1) {
                System.err.printf("%s: %s%n", ipAddress, e1.getClass().getName());
                break;
            }
        }

        return null;
    }

