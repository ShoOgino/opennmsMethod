    @Override
    protected Object doExecute() throws Exception {
    	
    	LOG.debug("snmp:walk -v {} -c {} -p {} {} {}", m_version, m_community, m_port, m_host, m_oids);
    	
    	if (!validate()) {
    		return null;
    	}
    	
    	SnmpAgentConfig config = new SnmpAgentConfig(InetAddress.getByName(m_host));
    	config.setPort(m_port);
    	config.setVersionAsString("v"+m_version);
    	config.setReadCommunity(m_community);
    	
    	Collection<Collectable> trackers = new ArrayList<Collectable>();
    	
    	for(String oid : m_oids) {
    		SnmpObjId objId = SnmpObjId.get(oid);
    		ColumnTracker tracker = new ColumnTracker(objId);
    		trackers.add(tracker);
    	}
    	
    	CollectionTracker agg = new AggregateTracker(trackers) {

			@Override
			protected void storeResult(SnmpResult res) {
				System.out.printf("[%s].[%s] = %s%n", res.getBase(), res.getInstance(), res.getValue());
			}
    		
    	};
    	
    	SnmpWalker walker = SnmpUtils.createWalker(config, "snmp:walk", agg);
    	
    	walker.start();
    	
    	walker.waitFor();
    	
    	if (walker.timedOut()) {
    		System.err.println("Timed Out");
    	} else if (walker.failed()) {
    		System.err.println(walker.getErrorMessage());
    	}
    	
    	return null;
    	
    }

