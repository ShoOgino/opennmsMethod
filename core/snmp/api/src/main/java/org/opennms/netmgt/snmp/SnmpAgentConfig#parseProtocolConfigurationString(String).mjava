    public static SnmpAgentConfig parseProtocolConfigurationString(String protocolConfigString) {
        if (protocolConfigString == null) {
            throw new IllegalArgumentException("Protocol configuration string for SnmpAgentConfig must not be null.");
        }

        final JSONObject protocolConfig = new JSONObject(new JSONTokener(protocolConfigString)).optJSONObject("snmp");

        if (protocolConfig == null) {
            throw new IllegalArgumentException("Invalid protocol configuration string for SnmpAgentConfig: Expected it to start with snmp object" + protocolConfigString);
        }

        final SnmpAgentConfig agentConfig = new SnmpAgentConfig();
        if (!protocolConfig.isNull("address")) agentConfig.setAddress(InetAddrUtils.addr(protocolConfig.optString("address")));
        if (!protocolConfig.isNull("proxyFor")) agentConfig.setProxyFor(InetAddrUtils.addr(protocolConfig.optString("proxyFor")));
        if (!protocolConfig.isNull("port")) agentConfig.setPort(protocolConfig.optInt("port"));
        if (!protocolConfig.isNull("timeout")) agentConfig.setTimeout(protocolConfig.optInt("timeout"));
        if (!protocolConfig.isNull("retries")) agentConfig.setRetries(protocolConfig.optInt("retries"));
        if (!protocolConfig.isNull("max-vars-per-pdu")) agentConfig.setMaxVarsPerPdu(protocolConfig.optInt("max-vars-per-pdu"));
        if (!protocolConfig.isNull("max-repetitions")) agentConfig.setMaxRepetitions(protocolConfig.optInt("max-repetitions"));
        if (!protocolConfig.isNull("max-request-size")) agentConfig.setMaxRequestSize(protocolConfig.optInt("max-request-size"));
        if (!protocolConfig.isNull("version")) agentConfig.setVersion(protocolConfig.optInt("version"));
        if (!protocolConfig.isNull("security-level")) agentConfig.setSecurityLevel(protocolConfig.optInt("security-level"));
        if (!protocolConfig.isNull("security-name")) agentConfig.setSecurityName(protocolConfig.optString("security-name"));
        if (!protocolConfig.isNull("auth-passphrase")) agentConfig.setAuthPassPhrase(protocolConfig.optString("auth-passphrase"));
        if (!protocolConfig.isNull("auth-protocol")) agentConfig.setAuthProtocol(protocolConfig.optString("auth-protocol"));
        if (!protocolConfig.isNull("priv-passphrase")) agentConfig.setPrivPassPhrase(protocolConfig.optString("priv-passphrase"));
        if (!protocolConfig.isNull("priv-protocol")) agentConfig.setPrivProtocol(protocolConfig.optString("priv-protocol"));
        if (!protocolConfig.isNull("context-name")) agentConfig.setContextName(protocolConfig.optString("context-name"));
        if (!protocolConfig.isNull("engine-id")) agentConfig.setEngineId(protocolConfig.optString("engine-id"));
        if (!protocolConfig.isNull("context-engine-id")) agentConfig.setContextEngineId(protocolConfig.optString("context-engine-id"));
        if (!protocolConfig.isNull("enterprise-id")) agentConfig.setEnterpriseId(protocolConfig.optString("enterprise-id"));
        if (!protocolConfig.isNull("read-community")) agentConfig.setReadCommunity(protocolConfig.optString("read-community"));
        if (!protocolConfig.isNull("write-community")) agentConfig.setWriteCommunity(protocolConfig.optString("write-community"));

        return agentConfig;
    }

