    private List<ColumnTracker> getNextColumnTrackers(int maxVarsPerPdu) {
        List<ColumnTracker> trackers = new ArrayList<ColumnTracker>(maxVarsPerPdu);
        List<ColumnTracker> sortedTrackerList = new ArrayList<ColumnTracker>(m_columnTrackers);

        Collections.sort(sortedTrackerList, new Comparator<ColumnTracker>() {
            public int compare(ColumnTracker o1, ColumnTracker o2) {
            	SnmpInstId lhs = o1.getLastInstance();
				SnmpInstId rhs = o2.getLastInstance();
				if (lhs == rhs) return 0;
				if (lhs == null) return -1;
				if (rhs == null) return 1;
				return lhs.compareTo(rhs);
            }
        });
        
        for(Iterator<ColumnTracker> it = sortedTrackerList.iterator(); it.hasNext() && trackers.size() < maxVarsPerPdu; ) {
        
            ColumnTracker tracker = it.next();
            
            if (!tracker.isFinished()) {
                trackers.add(tracker);
            }

        }

        return trackers;
    }

