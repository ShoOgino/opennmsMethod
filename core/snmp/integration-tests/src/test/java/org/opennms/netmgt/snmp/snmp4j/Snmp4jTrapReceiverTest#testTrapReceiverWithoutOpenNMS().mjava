    /*
     * IMPORTANT:
     *
     * The sentence <code>snmp.getUSM().addUser(...)</code>, is the only requirement in order to properly process SNMPv3 traps.
     * This is related with the credentials that should be created for Trapd in order to properly authenticate and/or decode SNMPv3 traps in OpennMS.
     * This is a user that should be configured (or should be used) by the external  devices to send SNMPv3 Traps to OpenNMS.
     * The SNMPv3 users should be configured in trapd-configuration.xml
     *
     */
    @Test
    public void testTrapReceiverWithoutOpenNMS() throws Exception {
        System.out.println("SNMP4J: Register for Traps");
        trapCount = 0;
        Snmp snmp = new Snmp(new DefaultUdpTransportMapping(new UdpAddress(9162)));
        snmp.addCommandResponder(this);
        snmp.getUSM().addUser(
                new OctetString("opennmsUser"),
                new UsmUser(new OctetString("opennmsUser"), AuthMD5.ID, new OctetString("0p3nNMSv3"), PrivDES.ID, new OctetString("0p3nNMSv3")));
        snmp.listen();

        sendTraps();

        System.out.println("SNMP4J: Unregister for Traps");
        snmp.close();

        System.out.println("SNMP4J: Checking Trap status");
        assertEquals(2, trapCount);
    }

