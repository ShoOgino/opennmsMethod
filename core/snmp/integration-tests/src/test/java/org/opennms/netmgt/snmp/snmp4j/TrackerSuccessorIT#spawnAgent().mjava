    /**
     * Leverage SNMP4J to create a UDP socket that allows us to receive
     * and send PDUs.
     *
     * @throws IOException on error
     */
    public void spawnAgent() throws IOException {
        transportMapping = new DefaultUdpTransportMapping();
        Snmp snmp = new Snmp(transportMapping);
        snmp.addCommandResponder(new CommandResponder() {
            @Override
            public void processPdu(CommandResponderEvent e) {
                LOG.debug("Got request PDU with: {}", e.getPDU());

                // Create the fixed response, copy over the request id
                PDU response = createFixedRepsonsePDU(e.getPDU().getRequestID());

                StatusInformation statusInformation = new StatusInformation();
                StateReference ref = e.getStateReference();
                try {
                    LOG.debug("Replying with: {}", response);
                    e.setProcessed(true);
                    e.getMessageDispatcher().returnResponsePdu(e.getMessageProcessingModel(),
                            e.getSecurityModel(),
                            e.getSecurityName(),
                            e.getSecurityLevel(),
                            response,
                            e.getMaxSizeResponsePDU(),
                            ref,
                            statusInformation);
                }
                catch (MessageException ex) {
                    LOG.error("Error while sending response", ex);
                }
            }
        });
        transportMapping.listen();
    }

