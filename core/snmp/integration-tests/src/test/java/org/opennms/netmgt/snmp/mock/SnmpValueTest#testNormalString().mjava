    @Test
    public void testNormalString() {
        for (final SnmpValueFactory factory : m_factories) {
            final String text = "I like cheese!";
            final String hex = "49206c696b652063686565736521";
            final byte[] rawBytes = text.getBytes();
            final String className = factory.getClass().getName();

            final SnmpValue value = factory.getOctetString(rawBytes);

            assertArrayEquals(className + ": getOctetString bytes should match", rawBytes, value.getBytes());
            assertTrue(className + ": getOctetString displayable should be true", value.isDisplayable());
            assertEquals(className + ": getOctetString to String should return " + text, text, value.toString());
            assertEquals(className + ": getOctetString to DisplayString should return " + text, text, value.toDisplayString());
            assertEquals(className + ": getOctetString to HexString should return " + hex, hex, value.toHexString());
            try {
                value.toInt();
                fail(className + ": getOctetString to int should throw an IllegalArgumentException");
            } catch (final IllegalArgumentException e) { /* expected */
            }
            try {
                value.toLong();
                fail(className + ": getOctetString to long should throw an IllegalArgumentException");
            } catch (final IllegalArgumentException e) { /* expected */
            }
            try {
                value.toBigInteger();
                fail(className + ": getOctetString to BigInteger should throw an IllegalArgumentException");
            } catch (final IllegalArgumentException e) { /* expected */
            }
        }
    }

