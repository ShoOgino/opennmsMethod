    @Test
    public void testSnmpProfileMapper() throws UnknownHostException {

        int timeout = 4000;
        long ttl = 6000;
        SnmpProfiles snmpProfiles = new SnmpProfiles();
        SnmpProfile snmpProfile = new SnmpProfile();
        snmpProfile = new SnmpProfile();
        snmpProfile.setLabel("profile1");
        snmpProfile.setVersion("v1");
        snmpProfile.setTimeout(timeout);
        snmpProfile.setTTL(ttl);
        snmpProfiles.addSnmpProfile(snmpProfile);
        snmpProfile = new SnmpProfile();
        snmpProfile.setLabel("profile2");
        snmpProfile.setVersion("v1");
        snmpProfile.setFilterExpression("IPADDR IPLIKE 192.0.*.*");
        snmpProfile.setTimeout(10000);
        snmpProfile.setTTL(ttl);
        snmpProfiles.addSnmpProfile(snmpProfile);
        snmpProfile = new SnmpProfile();
        snmpProfile.setLabel("profile3");
        snmpProfile.setVersion("v2c");
        snmpProfile.setTimeout(12000);
        snmpProfile.setTTL(ttl);
        snmpProfiles.addSnmpProfile(snmpProfile);
        snmpPeerFactory.getSnmpConfig().setSnmpProfiles(snmpProfiles);
        CompletableFuture<Optional<SnmpAgentConfig>> future = profileMapper.getAgentConfigFromProfiles(InetAddress.getByName("192.0.1.206"),
                null);
        try {
            Optional<SnmpAgentConfig> agentConfig = future.get();
            assertTrue(agentConfig.isPresent());
            assertEquals(ttl, agentConfig.get().getTTL().longValue());
            assertEquals(timeout, agentConfig.get().getTimeout());
            snmpPeerFactory.saveAgentConfigAsDefinition(agentConfig.get(), "Default", "test");
            List<Definition> definitions = snmpPeerFactory.getSnmpConfig().getDefinitions();
            Optional<Definition> definition = definitions.stream().filter(def -> def.getTimeout() == timeout).findFirst();
            assertTrue(definition.isPresent());
        } catch (InterruptedException | ExecutionException e) {
            fail();
        }
    }

