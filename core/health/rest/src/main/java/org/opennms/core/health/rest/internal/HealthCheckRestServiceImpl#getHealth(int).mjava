    @Override
    public Response getHealth(int timeoutInMs) {
        final HealthWrapper healthWrapper = getHealthInternally(timeoutInMs);
        final Health health = healthWrapper.health;

        // Create response object
        final JSONArray jsonResponseArray = new JSONArray();
        for (org.opennms.core.health.api.Response eachResponse : health.getResponses()) {
            final JSONObject eachJsonResponse = new JSONObject();
            eachJsonResponse.put("status", eachResponse.getStatus().name());
            eachJsonResponse.put("description", healthWrapper.descriptionMap.get(eachResponse));
            eachJsonResponse.put("message", eachResponse.getMessage());
            jsonResponseArray.put(eachJsonResponse);
        }
        final JSONObject jsonHealth = new JSONObject();
        jsonHealth.put("healthy", health.isSuccess());
        jsonHealth.put("errorMessage", health.getErrorMessage());
        jsonHealth.put("responses", jsonResponseArray);

        // Return response
        return Response.ok()
                .header("Health", health.isSuccess() ? SUCCESS_MESSAGE : ERROR_MESSAGE)
                .entity(jsonHealth.toString())
                .build();
    }

