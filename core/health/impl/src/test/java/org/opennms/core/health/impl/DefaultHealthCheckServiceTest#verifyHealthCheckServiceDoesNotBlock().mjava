    @Test
    public void verifyHealthCheckServiceDoesNotBlock() throws InvalidSyntaxException, ExecutionException, InterruptedException {
        final BlockingHealthCheck blockingHealthCheck = new BlockingHealthCheck();
        final SimpleHealthCheck successHealthCheck = new SimpleHealthCheck(() -> "Always green :)");
        successHealthCheck.markSucess();

        final DefaultHealthCheckService healthCheckService = new DefaultHealthCheckService(EasyMock.createNiceMock(BundleContext.class)) {
            @Override
            protected List<HealthCheck> getHealthChecks() {
                return Lists.newArrayList(blockingHealthCheck, successHealthCheck);
            }
        };

        final Context context = new Context();
        context.setTimeout(1000); // ms

        for (int i=0; i<2; i++) {
            final CompletableFuture<Health> future = healthCheckService
                    .performAsyncHealthCheck(context,
                            healthCheck -> LOG.info("Executing: {}", healthCheck.getDescription()),
                            response -> LOG.info("=> {} : {}", response.getStatus().name(), response.getMessage()));
            final Health health = future.get();
            final List<Response> timedOutResponsed = health.getResponses().stream().filter(r -> r.getStatus() == Status.Timeout).collect(Collectors.toList());
            Assert.assertThat(timedOutResponsed.size(), is(1));
        }
    }

