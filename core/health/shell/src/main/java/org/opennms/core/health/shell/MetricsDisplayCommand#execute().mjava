    @Override
    public Object execute() {
        final List<NamedMetricSet> metricSets = NamedMetricSet.getNamedMetricSetsInContext(bundleContext);
        if (metricSets.size() < 1) {
            System.out.println("(No metric sets are currently available.)");
            return null;
        }
        if (metricSetFilter != null) {
            metricSets.removeIf(m -> !m.getName().toLowerCase().contains(metricSetFilter.toLowerCase()));
        }
        if (metricSets.size() < 1) {
            System.out.printf("(No metric set names match the given filter '%s'.)\n", metricSetFilter);
            return null;
        }

        boolean first = true;
        for (NamedMetricSet namedMetricSet : metricSets) {
            // Add some extract spacing between the reports
            if (first) {
                first = false;
            } else {
                System.out.println("\n\n");
            }

            // Print a header
            System.out.printf("%s%s\n", namedMetricSet.getName(),
                    namedMetricSet.hasDescription() ? String.format(" (%s)",namedMetricSet.getDescription()) : "");
            // Add the metrics to a new registry and use the console reporter to display the results
            final MetricRegistry metricRegistry = namedMetricSet.toMetricRegistry();
            final ConsoleReporter consoleReporter = ConsoleReporter.forRegistry(metricRegistry)
                    .convertDurationsTo(TimeUnit.MILLISECONDS)
                    .convertRatesTo(TimeUnit.SECONDS)
                    .build();
            consoleReporter.report();
        }

        return null;
    }

