    public static Marshaller getMarshallerFor(final Object obj, final JAXBContext jaxbContext) {
        final Class<?> clazz = (Class<?>)(obj instanceof Class<?> ? obj : obj.getClass());

        Map<Class<?>, Marshaller> marshallers = m_marshallers.get();
        if (jaxbContext == null) {
            if (marshallers == null) {
                marshallers = new WeakHashMap<Class<?>, Marshaller>();
                m_marshallers.set(marshallers);
            }
            if (marshallers.containsKey(clazz)) {
                LOG.trace("found unmarshaller for {}", clazz);
                return marshallers.get(clazz);
            }
        }
        LOG.trace("creating unmarshaller for {}", clazz);

        try {
            final JAXBContext context;
            if (jaxbContext == null) {
                context = getContextFor(clazz);
            } else {
                context = jaxbContext;
            }
            final Marshaller marshaller = context.createMarshaller();
            marshaller.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            if (context.getClass().getName().startsWith("org.eclipse.persistence.jaxb")) {
                marshaller.setProperty(MarshallerProperties.NAMESPACE_PREFIX_MAPPER, new EmptyNamespacePrefixMapper());
                marshaller.setProperty(MarshallerProperties.JSON_MARSHAL_EMPTY_COLLECTIONS, true);
            }
            final Schema schema = getValidatorFor(clazz);
            marshaller.setSchema(schema);
            if (jaxbContext == null) marshallers.put(clazz, marshaller);

            return marshaller;
        } catch (final JAXBException e) {
            throw EXCEPTION_TRANSLATOR.translate("creating XML marshaller", e);
        }
    }

