    /**
     * <p>loadConfig</p>
     *
     * @param resource a {@link org.springframework.core.io.Resource} object.
     * @return a V object.
     */
    protected V loadConfig(final Resource resource) {
        long startTime = System.currentTimeMillis();

        LOG.debug("Loading {} configuration from {}", m_description, resource);

        V config = translateConfig(JaxbUtils.unmarshal(m_jaxbClass, resource));

        long endTime = System.currentTimeMillis();

        LOG.info("Loaded {} in {} ms", getDescription(), (endTime - startTime));

        // If this reload resulted in the contained object changing we will trigger the callbacks watching for this
        // change
        if (lastKnownEntityValue == null || !Objects.equals(lastKnownEntityValue, config)) {
            lastKnownEntityValue = config;
            synchronized (onReloadCausedChangeCallbacks) {
                if (!onReloadCausedChangeCallbacks.isEmpty()) {
                    LOG.debug("Calling onReloaded callbacks");
                    try {
                        onReloadCausedChangeCallbacks.forEach(c -> c.accept(config));
                    } catch (Exception e) {
                        LOG.warn("Encountered exception while calling onReloaded callbacks", e);
                    }
                }
            }
        }
        
        return config;
    }

