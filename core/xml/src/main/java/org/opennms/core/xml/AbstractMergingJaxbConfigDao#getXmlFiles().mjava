    private List<File> getXmlFiles() {
        final Path opennmsHome = Paths.get(ConfigFileConstants.getHome());
        final List<File> xmlFiles = new LinkedList<>();
        try (Stream<Path> stream = Files.walk(opennmsHome.resolve(m_includeFolder), 1)) {
            stream.map(Path::toFile)
                .filter(f -> f.isFile())
                .filter(f -> f.canRead())
                .filter(f -> f.getName().endsWith(".xml"))
                .sorted()
                .forEach(f -> xmlFiles.add(f));
        } catch (IOException e) {
            LOG.error("Failed to walk {} for {} ({})", m_includeFolder, m_entityClass, m_description);
        }
        LOG.debug("Found {} files in {}: {}", xmlFiles.size(), m_includeFolder, xmlFiles);

        if (m_rootFile != null) {
            // Prepend the root file, ensure that it is always first in the list
            xmlFiles.add(0, opennmsHome.resolve(m_rootFile).toFile()); 
        }
        return xmlFiles;
    }

