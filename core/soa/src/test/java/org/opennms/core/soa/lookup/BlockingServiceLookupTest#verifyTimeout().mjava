    // Verifies that after a certain time, we bail even if the service is not yet available
    @Test
    public void verifyTimeout() throws InterruptedException, ExecutionException, TimeoutException {
        final long lookupDelay = 250;
        final long gracePeriod = 2000;
        final long waitPeriod = 0;
        final ServiceRegistry serviceRegistry = new DefaultServiceRegistry();
        final ServiceLookup<Class<?>, String> serviceLookup = new ServiceLookupBuilder(new ServiceRegistryLookup(serviceRegistry))
                .blocking(gracePeriod, lookupDelay, waitPeriod)
                .build();

        final CompletableFuture<Date> future = new CompletableFuture();
        CompletableFuture.runAsync(() -> {
            final Date date = serviceLookup.lookup(Date.class, null);
            future.complete(date);
        });

        // Wait for the future to complete
        Date date = future.get(gracePeriod * 2, TimeUnit.MILLISECONDS);
        assertNull(date);
    }

