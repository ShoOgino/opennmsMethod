    @Override
    public Object execute() throws Exception {
        Properties kafkaConfig = Utils.getKafkaConfig(identity, configAdmin, KafkaSinkConstants.KAFKA_TOPIC_PREFIX);
        // Pre-check for bootstrap.servers.
        if (kafkaConfig.isEmpty() || (kafkaConfig.getProperty(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG) == null)) {
            System.out.println("Kafka not configured for Sink");
            return null;
        }
        if (timeout <= 0) {
            timeout = DEFAULT_TIMEOUT;
        }

        kafkaConfig.put(AdminClientConfig.REQUEST_TIMEOUT_MS_CONFIG, timeout);
        try {
            Set<String> topics = Utils.getTopics(kafkaConfig);
            if (!topics.isEmpty()) {
                String opennmsInstance = SystemInfoUtils.getInstanceId();
                Set<String> sinkTopics = topics.stream()
                        .filter(topic -> topic.contains(opennmsInstance))
                        .filter(topic -> topic.contains(KAFKA_TOPIC_PREFIX)).collect(Collectors.toSet());
                if (!sinkTopics.isEmpty()) {
                    System.out.println("\nSink topics:");
                    sinkTopics.forEach(System.out::println);
                    return null;
                }
            }
            System.out.println("No topics listed for Kafka Sink");
            return null;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

