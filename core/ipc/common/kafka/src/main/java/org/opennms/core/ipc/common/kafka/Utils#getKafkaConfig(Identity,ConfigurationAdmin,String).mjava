    public static Properties getKafkaConfig(Identity identity, ConfigurationAdmin configAdmin, String type) {
        if(identity.getType().equals(SystemType.OpenNMS.name())) {
            String sysPropPrefix = type.equals(KafkaSinkConstants.KAFKA_TOPIC_PREFIX) ?
                    KafkaSinkConstants.KAFKA_CONFIG_SYS_PROP_PREFIX : KafkaRpcConstants.KAFKA_RPC_CONFIG_SYS_PROP_PREFIX;
            OnmsKafkaConfigProvider kafkaConfigProvider = new OnmsKafkaConfigProvider(sysPropPrefix);
            return kafkaConfigProvider.getProperties();
        } else {
            String pid = null;
            if(identity.getType().equals(SystemType.Minion.name())) {
                pid = type.equals(KafkaSinkConstants.KAFKA_TOPIC_PREFIX) ?
                        KafkaSinkConstants.KAFKA_CONFIG_PID : KafkaRpcConstants.KAFKA_RPC_CONFIG_PID;
            } else {
                //For sentinel, connect with consumer pid.
                pid = type.equals(KafkaSinkConstants.KAFKA_TOPIC_PREFIX) ?
                        KafkaSinkConstants.KAFKA_CONFIG_CONSUMER_PID : KafkaRpcConstants.KAFKA_RPC_CONFIG_PID;
            }
            OsgiKafkaConfigProvider kafkaConfigProvider = new OsgiKafkaConfigProvider(pid, configAdmin);
            return kafkaConfigProvider.getProperties();
        }
    }

