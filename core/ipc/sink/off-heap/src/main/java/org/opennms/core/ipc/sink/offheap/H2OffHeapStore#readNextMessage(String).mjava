    @Override
    public AbstractMap.SimpleImmutableEntry<String, byte[]> readNextMessage(String moduleName)
            throws InterruptedException {
        BlockingQueue<String> queueOfKeys = queueMap.get(moduleName);
        if (queueOfKeys == null) {
            LOG.warn("No data was ever written for this module {}", moduleName);
            return null;
        }
        // Poll for an item to be available, max wait is 1 second.
        String uuid = queueOfKeys.poll(DEFAULT_WAIT_FOR_POLL, TimeUnit.MILLISECONDS);
        if (uuid == null) {
            return null;
        }
        MVMap<String, byte[]> mvMap = mvMapRegistry.get(moduleName);
        if (mvMap != null) {
            byte[] value = mvMap.get(uuid);
            mvMap.remove(uuid);
            // return an entry with key,value.
            return new AbstractMap.SimpleImmutableEntry<>(
                    uuid, value);
        }
        return null;
    }

