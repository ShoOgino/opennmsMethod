    /* (non-Javadoc)
     * @see org.opennms.core.ipc.sink.common.AbstractMessageDispatcherFactory#dispatch(org.opennms.core.ipc.sink.api.SinkModule, java.lang.Object, org.opennms.core.ipc.sink.api.Message)
     */
    @Override
    public <S extends Message, T extends Message> void dispatch(SinkModule<S, T> module, String topic, T message) {
        try (MDCCloseable mdc = Logging.withPrefixCloseable(MessageConsumerManager.LOG_PREFIX)) {
            LOG.trace("dispatch({}): sending message {}", topic, message);
            final String queueName = awsSqsManager.getQueueName(awsConfig, module);
            final String queueUrl = getQueueUrl(queueName);
            if (queueUrl == null) {
                LOG.error("Cannot obtain URL for queue {}. The message cannot be sent.", queueName);
            } else {
                try {
                    final String messageId = awsSqsManager.sendMessage(awsConfig, sqs, queueUrl, new String(module.marshal((T)message), StandardCharsets.UTF_8));
                    LOG.debug("SQS Message with ID {} has been successfully sent to {}", messageId, queueUrl);
                } catch (RuntimeException ex) {
                    LOG.error("Unexpected AWS SDK exception while sending a message", ex);
                }
            }
        }
    }

