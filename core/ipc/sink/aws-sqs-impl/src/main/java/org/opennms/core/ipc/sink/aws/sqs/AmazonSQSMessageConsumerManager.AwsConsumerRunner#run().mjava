        /* (non-Javadoc)
         * @see java.lang.Runnable#run()
         */
        @Override
        public void run() {
            Logging.putPrefix(MessageConsumerManager.LOG_PREFIX);
            while (!closed.get()) {
                // The SQS Queue is configured to use "Long Polling" through "ReceiveMessageWaitTimeSeconds".
                // That means, calling receiveMessage will block the thread execution for that amount of time if there are no messages on the queue.
                // This is recommended to reduce the traffic against AWS, which can be translated into undesired costs.
                List<com.amazonaws.services.sqs.model.Message> messages = null;
                try {
                    messages = sqs.receiveMessage(queueUrl).getMessages();
                } catch (RuntimeException e) {
                    LOG.error("Unexpected exception while receiving messages from " + queueUrl, e);
                }
                if (messages != null) {
                    for (com.amazonaws.services.sqs.model.Message m : messages) {
                        try {
                            LOG.debug("Received SQS message with ID {} from {}", m.getMessageId(), queueUrl);
                            final Message msg = module.unmarshal(m.getBody().getBytes(StandardCharsets.UTF_8));
                            dispatch(module, msg);
                            LOG.debug("Message with ID {} successfully dispatched.", m.getMessageId(), queueUrl);
                        } catch (RuntimeException e) {
                            final String msg = String.format("Unexpected exception while dispatching message with ID %s from %s", m.getMessageId(), queueUrl);
                            LOG.warn(msg, e);
                        } finally {
                            // This is mandatory to avoid re-process a message on a subsequent receive request.
                            LOG.debug("Deleting SQS message receipt handle {} from {}", m.getReceiptHandle(), queueUrl);
                            sqs.deleteMessage(queueUrl, m.getReceiptHandle());
                        }
                    }
                }
            }
        }

