    @Test
    public void testLargeBufferSinkMessage() throws Exception {
        EventsMockModule module = EventsMockModule.INSTANCE;
        List<Event> outputEvents = new ArrayList<Event>();
        Event event = buildEventWithRandomStrings();
        MessageConsumer<Event, Event> eventLogMessageConsumer = new MessageConsumer<Event, Event>() {
            @Override
            public SinkModule<Event, Event> getModule() {
                return module;
            }

            @Override
            public void handleMessage(Event event) {
                outputEvents.add(event);
            }
        };
        try {
            consumerManager.registerConsumer(eventLogMessageConsumer);
            final SyncDispatcher<Event> dispatcher = remoteMessageDispatcherFactory.createSyncDispatcher(EventsMockModule.INSTANCE);
            dispatcher.send(event);
            await().atMost(1, MINUTES).until(() -> outputEvents.size(), equalTo(1));
            Event outputEvent = outputEvents.get(0);
            assertThat(outputEvent.getUei(), is(TEST_UEI));
            assertThat(outputEvent.getNodeid(), is(NODE_ID));
        } finally {
            consumerManager.unregisterConsumer(eventLogMessageConsumer);
        }


    }

