    public long getLastOffset(KafkaConsumer consumer, String topic, int partition, long whichTime) {
        long lastOffset = 0;
        try {
            Set<TopicPartition> partitions = new HashSet<TopicPartition>();
            TopicPartition actualTopicPartition = new TopicPartition(topic, partition);
            partitions.add(actualTopicPartition);
            lastOffset = (long)consumer.endOffsets(partitions).get(actualTopicPartition);
        } catch (Exception e) {
            LOGGER.trace("Error while collecting the log Size for topic: {}:{} ", topic, partition, e);
            // Store first partitionNumber and track errors with that partition
            if (partitionNumber == INVALID) {
                partitionNumber = partition;
            }
            if (partitionNumber == partition) {
                resetBroker.getAndIncrement();
            }
        }
        return lastOffset;
    }

