    @Override
    public void process(Exchange exchange) {
        final byte[] messageBytes = exchange.getIn().getBody(byte[].class);
        // build span from message headers and retrieve custom tags into tracing info.
        Map<String, String> tracingInfo = new HashMap<>();
        Tracer.SpanBuilder spanBuilder = buildSpanFromHeaders(exchange.getIn(), tracingInfo);
        // Update metrics.
        messageSize.update(messageBytes.length);
        try (Scope scope = spanBuilder.startActive(true);
             Timer.Context context = dispatchTime.time()) {
            // Set tags for this span.
            scope.span().setTag(TracerConstants.TAG_MESSAGE_SIZE, messageBytes.length);
            if (exchange.getIn().getHeader(JMS_QUEUE_NAME_HEADER) instanceof String) {
                String topic = exchange.getIn().getHeader(JMS_QUEUE_NAME_HEADER, String.class);
                scope.span().setTag(TracerConstants.TAG_TOPIC, topic);
            }
            final Message message = module.unmarshal(messageBytes);
            consumerManager.dispatch(module, message);
        }
    }

