    @Override
    public <S extends Message, T extends Message> MessageProducer<S> getProducer(SinkModule<S, T> module) {
        final W metadata = getModuleMetadata(module);
        if (module.getAggregationPolicy() != null) {
            return new AggregatingMessageProducer<S,T>(module) {
                @Override
                public void dispatch(T message) {
                    AbstractMessageProducerFactory.this.dispatch(module, metadata, message);
                }
            };
        } else {
            // No aggregation strategy is set, dispatch directly to reduce overhead
            return new DirectMessageProducer<>(module, metadata);
        }
    }

