    protected AbstractMessageConsumerManager() {
        // By default, do not introduce any delay on startup
        CompletableFuture<Void> startupFuture = CompletableFuture.completedFuture(null);
        String initialSleepString = System.getProperty(SINK_INITIAL_SLEEP_TIME, "0");
        try {
            int initialSleep = Integer.parseInt(initialSleepString);
            if (initialSleep > 0) {
                startupFuture = CompletableFuture.runAsync(new Runnable() {
                    @Override
                    public void run() {
                        try {
                            Thread.sleep(initialSleep);
                        } catch (InterruptedException e) {
                            LOG.warn(e.getMessage(), e);
                        }
                    }
                }, startupExecutor);
            }
        } catch (NumberFormatException e) {
            LOG.warn("Invalid value for system property {}: {}", SINK_INITIAL_SLEEP_TIME, initialSleepString);
        }
        waitForStartup = startupFuture;
    }

