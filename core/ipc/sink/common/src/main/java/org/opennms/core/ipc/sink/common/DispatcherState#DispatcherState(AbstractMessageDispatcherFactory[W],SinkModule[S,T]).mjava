    public DispatcherState(AbstractMessageDispatcherFactory<W> dispatcherFactory, SinkModule<S, T> module) {
        this.module = module;
        metadata = dispatcherFactory.getModuleMetadata(module);
        metrics = dispatcherFactory.getMetrics();

        String metricName = MetricRegistry.name(module.getId(), "dispatch");

        Collection<Timer> existingTimers = metrics.getTimers(new MetricFilter() {
            @Override
            public boolean matches(String name, Metric metric) {
                return metricName.equals(name);
            }
        }).values();

        switch(existingTimers.size()) {
        case 0:
            dispatchTimer = metrics.timer(metricName);
            break;
        case 1:
            dispatchTimer = existingTimers.iterator().next();
            break;
        default:
            LOG.warn("Multiple timers registered with name {} somehow", metricName);
            dispatchTimer = existingTimers.iterator().next();
        }
    }

