    public AsyncDispatcherImpl(SinkModule<S, T> module, AsyncPolicy asyncPolicy, SyncDispatcher<S> syncDispatcher) {
        Objects.requireNonNull(module);
        Objects.requireNonNull(asyncPolicy);
        this.syncDispatcher = Objects.requireNonNull(syncDispatcher);

        queue = new LinkedBlockingQueue<Runnable>(asyncPolicy.getQueueSize());
        executor = new ThreadPoolExecutor(
                asyncPolicy.getNumThreads(),
                asyncPolicy.getNumThreads(),
                1000L,
                TimeUnit.MILLISECONDS,
                queue,
                new LogPreservingThreadFactory("OpenNMS.Sink.AsyncDispatcher." + module.getId(), Integer.MAX_VALUE),
                new RejectedExecutionHandler() {
                    @Override
                    public void rejectedExecution(Runnable r, ThreadPoolExecutor executor) {
                        rateLimittedLogger.warn("Task was rejected. Dropping message for {}.", module.getId());
                    }
                }
            );
    }

