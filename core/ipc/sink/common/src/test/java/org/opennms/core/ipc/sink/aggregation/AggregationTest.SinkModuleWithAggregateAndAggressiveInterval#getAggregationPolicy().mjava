        @Override
        public AggregationPolicy<UDPPacket, UDPPacketLog, UDPPacketLog> getAggregationPolicy() {
            return new AggregationPolicy<UDPPacket, UDPPacketLog, UDPPacketLog>() {
                @Override
                public int getCompletionSize() {
                    return 1;
                }

                @Override
                public int getCompletionIntervalMs() {
                    // Run the timer thread frequently
                    return 1;
                }

                @Override
                public Object key(UDPPacket message) {
                    // Key by the source address
                    return message.getSource();
                }

                @Override
                public UDPPacketLog aggregate(UDPPacketLog oldPacketLog, UDPPacket newPacket) {
                    if (oldPacketLog == null) {
                        return new UDPPacketLog(newPacket);
                    } else {
                        oldPacketLog.getPackets().add(newPacket);
                        return oldPacketLog;
                    }
                }

                @Override
                public UDPPacketLog build(UDPPacketLog accumulator) {
                    return accumulator;
                }
            };
        }

