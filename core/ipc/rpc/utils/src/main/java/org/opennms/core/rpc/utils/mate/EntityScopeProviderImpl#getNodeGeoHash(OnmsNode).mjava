    /**
     * Computes a geohash from the lat/lon associated with the node.
     *
     * This function is expected to be called in the context of a transaction.
     *
     * @param node node from which to derive the geohash
     * @return geohash
     */
    private Optional<String> getNodeGeoHash(final OnmsNode node) {
        double latitude = Double.NaN;
        double longitude = Double.NaN;

        // Safely retrieve the geo-location from the node's asset record
        final OnmsAssetRecord assetRecord = node.getAssetRecord();
        if (assetRecord == null) {
            return Optional.empty();
        }
        final OnmsGeolocation geolocation = assetRecord.getGeolocation();
        if (geolocation == null) {
            return Optional.empty();
        }

        // Safely retrieve the lat/lon value from the geo-location
        if (geolocation.getLatitude() != null) {
            latitude = geolocation.getLatitude();
        }
        if (geolocation.getLongitude() != null) {
            longitude = geolocation.getLongitude();
        }
        if (!Double.isFinite(latitude) || !Double.isFinite(longitude)) {
            return Optional.empty();
        }

        // We have a finite lat/lon, compute the geohash using maximum precision
        return Optional.of(GeoHash.withCharacterPrecision(latitude, longitude, 12).toBase32());
    }

