    public static String interpolate(final String raw, final Scope scope) {
        final StringBuffer stringBuffer = new StringBuffer();
        final Matcher outerMatcher = OUTER_PATTERN.matcher(raw);
        while (outerMatcher.find()) {
            final Matcher innerMatcher = INNER_PATTERN.matcher(outerMatcher.group(1));

            String result = "";
            while (innerMatcher.find()) {
                if (innerMatcher.group(1) != null) {
                    final String[] arr = innerMatcher.group(1).split(":", 2);
                    final ContextKey contextKey = new ContextKey(arr[0], arr[1]);

                    final Optional<String> replacement = scope.get(contextKey);
                    if (replacement.isPresent()) {
                        result = Matcher.quoteReplacement(replacement.get());
                        break;
                    }
                } else if (innerMatcher.group(2) != null) {
                    result = Matcher.quoteReplacement(innerMatcher.group(2));
                    break;
                }
            }

            outerMatcher.appendReplacement(stringBuffer, result);
        }

        outerMatcher.appendTail(stringBuffer);
        return stringBuffer.toString();
    }

