    @Override
    public Scope getScopeForNode(final Integer nodeId) {
        if (nodeId == null) {
            return EmptyScope.EMPTY;
        }

        final Scope metaDataScope = this.transactions.execute((tx) -> {
            final OnmsNode node = nodeDao.get(nodeId);
            if (node == null) {
                return EmptyScope.EMPTY;
            }

            return new FallbackScope(transform(node.getMetaData()),
                    new ObjectScope<>(node)
                            .map("node", "label", (n) -> Optional.ofNullable(n.getLabel()))
                            .map("node", "foreign-source", (n) -> Optional.ofNullable(n.getForeignSource()))
                            .map("node", "foreign-id", (n) -> Optional.ofNullable(n.getForeignId()))
                            .map("node", "netbios-domain", (n) -> Optional.ofNullable(n.getNetBiosDomain()))
                            .map("node", "netbios-name", (n) -> Optional.ofNullable(n.getNetBiosName()))
                            .map("node", "os", (n) -> Optional.ofNullable(n.getOperatingSystem()))
                            .map("node", "sys-name", (n) -> Optional.ofNullable(n.getSysName()))
                            .map("node", "sys-location", (n) -> Optional.ofNullable(n.getSysLocation()))
                            .map("node", "sys-contact", (n) -> Optional.ofNullable(n.getSysContact()))
                            .map("node", "sys-description", (n) -> Optional.ofNullable(n.getSysDescription()))
                            .map("node", "location", (n) -> Optional.ofNullable(n.getLocation().getLocationName()))
                            .map("node", "area", (n) -> Optional.ofNullable(n.getLocation().getMonitoringArea()))
            );
        });

        return metaDataScope;
    }

