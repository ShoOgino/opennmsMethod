    @Test
    public final void testNode() throws Exception {
        final Scope scope = this.provider.getScopeForNode(this.populator.getNode1().getId());

        assertThat(scope.get(new ContextKey("node", "label")), is(Optional.of("node1")));

        assertThat(scope.get(new ContextKey("node", "foreign-source")), is(Optional.of("imported:")));
        assertThat(scope.get(new ContextKey("node", "foreign-id")), is(Optional.of("1")));

        assertThat(scope.get(new ContextKey("node", "netbios-domain")), is(Optional.empty()));
        assertThat(scope.get(new ContextKey("node", "netbios-name")), is(Optional.empty()));

        assertThat(scope.get(new ContextKey("node", "os")), is(Optional.empty()));

        assertThat(scope.get(new ContextKey("node", "sys-name")), is(Optional.empty()));
        assertThat(scope.get(new ContextKey("node", "sys-location")), is(Optional.empty()));
        assertThat(scope.get(new ContextKey("node", "sys-contact")), is(Optional.empty()));
        assertThat(scope.get(new ContextKey("node", "sys-description")), is(Optional.empty()));

        assertThat(scope.get(new ContextKey("node", "location")), is(Optional.of("Default")));
        assertThat(scope.get(new ContextKey("node", "area")), is(Optional.of("Default")));
    }

