    @SuppressWarnings({ "rawtypes", "unchecked" })
    public void bind(RpcModule module) throws Exception {
        if (module != null) {
            final RpcModule<RpcRequest,RpcResponse> rpcModule = (RpcModule<RpcRequest,RpcResponse>)module;
            if (routeIdsByModule.containsKey(rpcModule)) {
                LOG.warn("RpcModule {} ({}) was already registered", rpcModule.getId(), rpcModule.hashCode());
            } else {
                final DynamicRpcRouteBuilder routeBuilder = new DynamicRpcRouteBuilder(context, identity, rpcModule);
                context.addRoutes(routeBuilder);
                routeIdsByModule.put(rpcModule, routeBuilder.getRouteId());

                LOG.info("Registered RpcModule {} ({}) on queue {}", rpcModule.getId(), rpcModule.hashCode(), routeBuilder.getQueueName());
            }
        }
    }

