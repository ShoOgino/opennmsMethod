    @Test(timeout = 30000)
    public void testSinkMessageGetsDeliveredAsynchronously() throws Exception {
        // Sending message on async module will block until it delivers.
        new Thread(() -> grpcClient.dispatch(asyncModule, null, new Heartbeat())).start();

        Meter meter = new Meter();
        server.registerConsumer(new HeartbeatConsumer(asyncModule, meter));

        Assert.assertEquals(0, meter.getCount());
        // Verify that async message gets delivered after server started.
        await().atMost(20, TimeUnit.SECONDS).pollDelay(3, TimeUnit.SECONDS).pollInterval(3, TimeUnit.SECONDS)
                .until(() -> {
                    startServer();
                    // Sending this message ensures that sink stream is initialized, since this is sync module, it shouldn't block
                    grpcClient.dispatch(new HeartbeatModule(), null, new Heartbeat());
                    return meter.getCount();
                }, Matchers.greaterThan(0L));
    }

