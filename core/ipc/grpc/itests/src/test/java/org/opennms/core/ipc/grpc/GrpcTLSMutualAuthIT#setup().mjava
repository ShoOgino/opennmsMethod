    @Before
    public void setup() throws Exception {

        String serverCertFilePath = this.getClass().getResource("/tls/server.crt").getPath();
        String serverKeyFilePath = this.getClass().getResource("/tls/server.pem").getPath();
        String trustCertFilePath = this.getClass().getResource("/tls/ca.crt").getPath();
        String clientCertFilePath = this.getClass().getResource("/tls/client.crt").getPath();
        String clientPrivateKeyFilePath = this.getClass().getResource("/tls/client.pem").getPath();

        Hashtable<String, Object> serverConfig = new Hashtable<>();
        int port = getAvailablePort(new AtomicInteger(GrpcServerConstants.DEFAULT_GRPC_PORT), 9090);
        serverConfig.put(GrpcServerConstants.GRPC_SERVER_PORT, String.valueOf(port));
        serverConfig.put(GrpcServerConstants.TLS_ENABLED, "true");
        serverConfig.put(GrpcServerConstants.SERVER_CERTIFICATE_FILE_PATH, serverCertFilePath);
        serverConfig.put(GrpcServerConstants.PRIVATE_KEY_FILE_PATH, serverKeyFilePath);
        serverConfig.put(GrpcServerConstants.CLIENT_CERTIFICATE_FILE_PATH, clientCertFilePath);

        Hashtable<String, Object> clientConfig = new Hashtable<>();
        clientConfig.put(GrpcClientConstants.GRPC_PORT, String.valueOf(port));
        clientConfig.put(GrpcClientConstants.GRPC_HOST, "localhost");
        clientConfig.put(GrpcClientConstants.TLS_ENABLED, "true");
        clientConfig.put(GrpcClientConstants.TRUST_CERTIFICATE_FILE_PATH, trustCertFilePath);
        clientConfig.put(GrpcClientConstants.CLIENT_CERTIFICATE_FILE_PATH, clientCertFilePath);
        clientConfig.put(GrpcClientConstants.CLIENT_PRIVATE_KEY_FILE_PATH, clientPrivateKeyFilePath);

        ConfigurationAdmin configAdmin = mock(ConfigurationAdmin.class, RETURNS_DEEP_STUBS);
        when(configAdmin.getConfiguration(GrpcServerConstants.GRPC_SERVER_PID).getProperties()).thenReturn(serverConfig);
        when(configAdmin.getConfiguration(GrpcClientConstants.GRPC_CLIENT_PID).getProperties()).thenReturn(clientConfig);

        MinionIdentity minionIdentity = new MockMinionIdentity(REMOTE_LOCATION_NAME);

        grpcClient = new MinionGrpcClient(minionIdentity, configAdmin);
        grpcClient.bind(echoRpcModule);
        server = new OpennmsGrpcServer();
        server.setConfigAdmin(configAdmin);
        echoClient = new MockEchoClient(server);
        server.start();
        grpcClient.start();
    }

