        @Override
        public StreamObserver<RpcResponseProto> rpcStreaming(
                StreamObserver<RpcRequestProto> responseObserver) {

            return new StreamObserver<RpcResponseProto>() {

                @Override
                public void onNext(RpcResponseProto rpcResponseProto) {
                    // Register client when message is metadata.
                    if (isHeaders(rpcResponseProto)) {
                        addRpcHandler(rpcResponseProto.getLocation(), rpcResponseProto.getSystemId(), responseObserver);
                    } else {
                        responseHandlerExecutor.execute(() -> handleResponse(rpcResponseProto));
                    }
                }

                @Override
                public void onError(Throwable throwable) {
                    LOG.error("Error in rpc streaming", throwable);
                }

                @Override
                public void onCompleted() {
                    LOG.info("Minion RPC handler closed");
                    removeRpcHandler(responseObserver);
                }
            };
        }

