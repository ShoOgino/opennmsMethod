        @Override
        public void run() {
            while (!closed.get()) {
                WatchKey key = null;
                try {
                    key = watcher.take();
                } catch (Exception e) {
                    LOG.info("Watcher is either interruped or closed", e);
                    break;
                }

                for (WatchEvent<?> event : key.pollEvents()) {
                    WatchEvent.Kind<?> kind = event.kind();
                    WatchEvent<Path> ev = cast(event);
                    Path dir = (Path) key.watchable();
                    Path updatedFile = dir.resolve(ev.context());
                    // Some editors create temporary buffers, watch for both create/modify
                    if (kind == StandardWatchEventKinds.ENTRY_MODIFY || kind == StandardWatchEventKinds.ENTRY_CREATE) {
                        if (updatedFile.toString().equals(fileName)) {
                            LOG.info(" file {} got updated, send callback", updatedFile.getFileName());
                            callback.reload();
                        }
                    }
                    if (!key.reset()) {
                        break;
                    }
                }
            }
        }

