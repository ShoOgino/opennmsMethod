    /**
     * This recursively substitutes occurrences ${property.name} in initialString with the value of
     * the property property.name taken from the supplied {@link Map} object. If
     * property.name is not defined in the map then the substitution is not done.
     *
     * @param initialString the string to perform the substitutions in
     * @return The string with appropriate substitutions made.
     * @param mapArray a {@link java.util.Map} object.
     */
    public static String substitute(String initialString, Map<String,String>... mapArray) {
        String workingString = initialString;
        for (Map<String,String> properties : mapArray) {
            if (properties != null)
                workingString = substitute(workingString, new MapBasedSymbolTable(properties), PLACEHOLDER_PREFIX, PLACEHOLDER_SUFFIX, new ArrayList<String>());
        }
        return workingString;
    }

