    public static Optional<InetAddress> getLocalLoopbackAddress() {
        try {
            final List<InetAddress> loopbackAddresses = new ArrayList<>();
            final Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces();
            while (ifaces.hasMoreElements()) {
                final NetworkInterface iface = ifaces.nextElement();
                if (iface.isLoopback() && iface.isUp() && !iface.isVirtual()) {
                    final Enumeration<InetAddress> addrs = iface.getInetAddresses();
                    while (addrs.hasMoreElements()) {
                        final InetAddress addr = addrs.nextElement();
                        if (!addr.isMulticastAddress() && (addr.isLinkLocalAddress() || addr.isLoopbackAddress() || addr.isAnyLocalAddress())) {
                            loopbackAddresses.add(addr);
                        }
                    }
                }
            }
            if (!loopbackAddresses.isEmpty()) {
                // prefer IPv4 loopback addresses to IPv6
                loopbackAddresses.sort(IFACE_COMPARATOR);
                return Optional.of(loopbackAddresses.get(0));
            }
        } catch (final Exception e) {
            LOG.warn("getLocalLoopbackAddress: an exception occurred while attempting to determine the local loopback address.",e);
        }
        return Optional.empty();
    }

