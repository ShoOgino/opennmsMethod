	@Test
	public void testProcessSyntaxForMacAddresses() {
		SnmpValueFactory valueFactory = SnmpUtils.getValueFactory();
		assertNotNull(valueFactory);
		byte [] macAddr = {001, 002, 003, 004, 005, 006};

		SnmpValue octetString = valueFactory.getOctetString(macAddr);

		Parm parm = SyntaxToEvent.processSyntax("testMacAddress",octetString);

		assertEquals("testMacAddress", parm.getParmName());
		assertEquals(EventConstants.XML_ENCODING_MAC_ADDRESS, parm.getValue().getEncoding());
		assertEquals("01:02:03:04:05:06", parm.getValue().getContent());

		macAddr = new byte[] { (byte) 0x80, (byte) 0x81, (byte) 0x8C, (byte) 0x8F, (byte) 0xFF, (byte) 0x05 };

		octetString = valueFactory.getOctetString(macAddr);

		parm = SyntaxToEvent.processSyntax("testMacAddress",octetString);

		assertEquals("testMacAddress", parm.getParmName());
		assertEquals(EventConstants.XML_ENCODING_MAC_ADDRESS, parm.getValue().getEncoding());
		assertEquals("80:81:8C:8F:FF:05", parm.getValue().getContent());

		macAddr = new byte[] { 0101, 0101, 0101, 0101, 0101, 0101 };

		octetString = valueFactory.getOctetString(macAddr);

		parm = SyntaxToEvent.processSyntax("otherDataType",octetString);

		assertEquals("otherDataType", parm.getParmName());
		assertEquals(EventConstants.XML_ENCODING_TEXT, parm.getValue().getEncoding());
		assertEquals("AAAAAA", parm.getValue().getContent());

		parm = SyntaxToEvent.processSyntax("testMacAddress",octetString);

		assertEquals("testMacAddress", parm.getParmName());
		assertEquals(EventConstants.XML_ENCODING_MAC_ADDRESS, parm.getValue().getEncoding());
		assertEquals("41:41:41:41:41:41", parm.getValue().getContent());
	}

