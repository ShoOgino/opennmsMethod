	@Test
    public void testTwoConnectedBridgeTopology() throws Exception {

        Integer nodeA  = 1111;
        Integer nodeB  = 2222;
        
        Integer portA1 = 1;
        Integer portA2 = 2;
        Integer portA3 = 3;
        Integer portA4 = 4;
        Integer portA5 = 5;
        Integer portAB = 16;
        Integer portBA = 24;
        Integer portB6 = 6;
        Integer portB7 = 7;
        Integer portB8 = 8;
        Integer portB9 = 9;

        String mac1 = "000daaaa0001"; // port A1 ---port BA
        String mac2 = "000daaaa0002"; // port A2 ---port BA
        String mac3 = "000daaaa0003"; // port A3 ---port BA
        String mac4 = "000daaaa0004"; // port A4 ---port BA
        String mac5 = "000daaaa0005"; // port A5 ---port BA
        String mac6 = "000daaaa0006"; // port AB ---port B6 
        String mac7 = "000daaaa0007"; // port AB ---port B7
        String mac8 = "000daaaa0008"; // port AB ---port B8
        String mac9 = "000daaaa0009"; // port AB ---port B9

        LinkableSnmpNode snmpnodeA = new LinkableSnmpNode(nodeA, null, null, null);
        LinkableNode linkablenodeA = new LinkableNode(snmpnodeA, null);

        linkablenodeA.addBridgeForwardingTableEntry(portA1, mac1);
        linkablenodeA.addBridgeForwardingTableEntry(portA2, mac2);
        linkablenodeA.addBridgeForwardingTableEntry(portA3, mac3);
        linkablenodeA.addBridgeForwardingTableEntry(portA4, mac4);
        linkablenodeA.addBridgeForwardingTableEntry(portA5, mac5);

        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac6);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac7);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac8);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac9);
        
        LinkableSnmpNode snmpnodeB = new LinkableSnmpNode(nodeB, null, null, null);
        LinkableNode linkablenodeB = new LinkableNode(snmpnodeB, null);

        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac1);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac2);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac3);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac4);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac5);

        linkablenodeB.addBridgeForwardingTableEntry(portB6, mac6);
        linkablenodeB.addBridgeForwardingTableEntry(portB7, mac7);
        linkablenodeB.addBridgeForwardingTableEntry(portB8, mac8);
        linkablenodeB.addBridgeForwardingTableEntry(portB9, mac9);

        BridgeTopology bridgeTopology = new BridgeTopology();
        
        bridgeTopology.addNodeToTopology(linkablenodeA);
        bridgeTopology.addNodeToTopology(linkablenodeB);

        printBridgeTopologyLinks(bridgeTopology.getTopology());

  
    }

