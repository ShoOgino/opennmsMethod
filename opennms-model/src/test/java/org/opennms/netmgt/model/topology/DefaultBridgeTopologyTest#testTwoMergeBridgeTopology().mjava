	@Test
    public void testTwoMergeBridgeTopology() throws Exception {

        Integer nodeA  = 1111;
        Integer nodeB  = 2222;
        
        Integer portA8 = 8;
        Integer portAB = 16;
        Integer portBA = 24;
        Integer portB6 = 6;

        String mac1 = "000daaaa0001"; // port AB ---port BA
        String mac2 = "000daaaa0002"; // port AB ---port BA
        String mac3 = "000daaaa0003"; // port AB ---port BA
        String mac4 = "000daaaa0004"; // port AB ---port BA
        String mac5 = "000daaaa0005"; // port AB ---port BA
        String mac6 = "000daaaa0006"; // port AB ---port B6
        String mac7 = "000daaaa0007"; // port AB ---port BA
        String mac8 = "000daaaa0008"; // port A8 ---port BA
        String mac9 = "000daaaa0009"; // port AB ---port BA

        LinkableSnmpNode snmpnodeA = new LinkableSnmpNode(nodeA, null, null, null);
        LinkableNode linkablenodeA = new LinkableNode(snmpnodeA, null);

        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac1);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac2);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac3);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac4);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac5);

        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac6);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac7);
        linkablenodeA.addBridgeForwardingTableEntry(portA8, mac8);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, mac9);
        
        LinkableSnmpNode snmpnodeB = new LinkableSnmpNode(nodeB, null, null, null);
        LinkableNode linkablenodeB = new LinkableNode(snmpnodeB, null);

        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac1);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac2);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac3);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac4);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac5);

        linkablenodeB.addBridgeForwardingTableEntry(portB6, mac6);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac7);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac8);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, mac9);

        BridgeTopology bridgeTopology = new BridgeTopology();
        
        bridgeTopology.addNodeToTopology(linkablenodeA);
        bridgeTopology.addNodeToTopology(linkablenodeB);

        printBridgeTopologyLinks(bridgeTopology.getTopology());

    }

