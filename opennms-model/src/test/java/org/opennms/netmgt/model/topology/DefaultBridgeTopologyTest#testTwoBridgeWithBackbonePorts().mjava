	@Test 
	public void testTwoBridgeWithBackbonePorts() {
		Integer nodeA = 1101;
        Integer nodeB = 1102;
        
        Integer portA1 = 1;
		Integer portAB = 12;
		Integer portBA = 21;
		Integer portB2 = 2 ;
		
        String macA11 = "000daa000a11"; // port A1 ---port BA 
        String macA12 = "000daa000a12"; // port A1 ---port BA 

        String macAB  = "000daa0000ab"; // port AB ---port BA 

        String macB21 = "000daa000b21"; // port AB ---port B2 
        String macB22 = "000daa000b22"; // port AB ---port B2
        
        LinkableSnmpNode snmpnodeA = new LinkableSnmpNode(nodeA, null, null, null);
        LinkableNode linkablenodeA = new LinkableNode(snmpnodeA, null);

        linkablenodeA.addBridgeForwardingTableEntry(portA1, macA11);
        linkablenodeA.addBridgeForwardingTableEntry(portA1, macA12);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, macAB);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, macB21);
        linkablenodeA.addBridgeForwardingTableEntry(portAB, macB22);

        LinkableSnmpNode snmpnodeB = new LinkableSnmpNode(nodeB, null, null, null);
        LinkableNode linkablenodeB = new LinkableNode(snmpnodeB, null);

        linkablenodeB.addBridgeForwardingTableEntry(portBA, macA11);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, macA12);
        linkablenodeB.addBridgeForwardingTableEntry(portBA, macAB);
        linkablenodeB.addBridgeForwardingTableEntry(portB2, macB21);
        linkablenodeB.addBridgeForwardingTableEntry(portB2, macB22);

        BridgeTopology bridgeTopology = new BridgeTopology();
        
        bridgeTopology.addNodeToTopology(linkablenodeA);
        bridgeTopology.addNodeToTopology(linkablenodeB);

        printBridgeTopologyLinks(bridgeTopology.getTopology());

	}

