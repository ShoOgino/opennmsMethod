	@Test
    public void testOneBridgeOnePortOneMac() throws Exception {

        Integer nodeA  = 10;

        LinkableSnmpNode snmpnodeA = new LinkableSnmpNode(nodeA, null, null, null);
        LinkableNode linkablenodeA = new LinkableNode(snmpnodeA, null);
        
        Integer portA1 = 1;
        Integer portA2 = 2;
        Integer portA3 = 3;
        Integer portA4 = 4;
        Integer portA5 = 5;

        String mac1 = "000daaaa0001"; // learned on port A1
        String mac2 = "000daaaa0002"; // learned on port A2 
        String mac3 = "000daaaa0003"; // learned on port A2 
        String mac4 = "000daaaa0004"; // learned on port A2 
        String mac5 = "000daaaa0005"; // learned on port A2 

        linkablenodeA.addBridgeForwardingTableEntry(portA1, mac1);
        linkablenodeA.addBridgeForwardingTableEntry(portA2, mac2);
        linkablenodeA.addBridgeForwardingTableEntry(portA3, mac3);
        linkablenodeA.addBridgeForwardingTableEntry(portA4, mac4);
        linkablenodeA.addBridgeForwardingTableEntry(portA5, mac5);

        BridgeTopology bridgeTopology = new BridgeTopology();
        
        bridgeTopology.addNodeToTopology(linkablenodeA);

        List<BridgeTopologyLink> links = bridgeTopology.getTopology();
        printBridgeTopologyLinks(links);
        assertEquals(5, links.size());
        for (BridgeTopologyLink link: links) {
        	assertEquals(null,link.getDesignatebridgePort());
        	BridgeTopologyPort port = link.getBridgeTopologyPort();
        	assertEquals(nodeA, port.getNodeid());
    		assertEquals(1, link.getMacs().size());
    		assertEquals(1, port.getMacs().size());
    		assertEquals(port.getMacs().iterator().next(),link.getMacs().iterator().next());
        	if (link.getBridgeTopologyPort().getBridgePort() == portA1) {
        		assertEquals(mac1, link.getMacs().iterator().next());
        	} else if (link.getBridgeTopologyPort().getBridgePort() == portA2) {
        		assertEquals(mac2, link.getMacs().iterator().next());
        	} else if (link.getBridgeTopologyPort().getBridgePort() == portA3) {
        		assertEquals(mac3, link.getMacs().iterator().next());
        	} else if (link.getBridgeTopologyPort().getBridgePort() == portA4) {
        		assertEquals(mac4, link.getMacs().iterator().next());
        	} else if (link.getBridgeTopologyPort().getBridgePort() == portA5) {
        		assertEquals(mac5, link.getMacs().iterator().next());
        	} else {
        		assertEquals(-1, 1);
        	}
        }
	}

