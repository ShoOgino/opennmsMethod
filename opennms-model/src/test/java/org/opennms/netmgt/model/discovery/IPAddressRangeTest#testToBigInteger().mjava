    public void testToBigInteger() {
        IPAddress startAtZero = new IPAddress("0.0.0.0");
        assertTrue(startAtZero.isPredecessorOf(one));
        assertEquals(0L, startAtZero.toBigInteger().longValue());
        startAtZero = startAtZero.incr();
        startAtZero = startAtZero.incr();
        startAtZero = startAtZero.incr();
        startAtZero = startAtZero.incr();
        assertEquals(4L, startAtZero.toBigInteger().longValue());
        startAtZero = startAtZero.decr();
        startAtZero = startAtZero.decr();
        assertEquals(2L, startAtZero.toBigInteger().longValue());
        assertTrue(startAtZero.isSuccessorOf(one));

        assertEquals(1L, one.toBigInteger().longValue());

        assertEquals((long)(Math.pow(2, 30) - 1.0), thirtyBitNumber.toBigInteger().longValue());

        assertEquals((long)(Math.pow(2, 31) - 1.0), thirtyOneBitNumber.toBigInteger().longValue());

        assertEquals((long)(Math.pow(2, 31)), thirtyTwoBit.toBigInteger().longValue());

        assertEquals((long)(Math.pow(2, 32) - 1.0), maxIPv4.toBigInteger().longValue());
        // assertEquals((long)(Math.pow(2, 16 * 8) - 1.0), maxIPv6.toBigInteger().longValue());
    }

