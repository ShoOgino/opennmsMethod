    //FIXME
    public void findBridgesTopo(Integer RBridgeId, List<BridgeMacLink> RBft, Integer XBridgeId, List<BridgeMacLink> XBFT) {
        BridgeTopologyHelper RX = new BridgeTopologyHelper(RBridgeId, XBridgeId, RBft, XBFT);
        Integer RXport = RX.getXYPort();
        Integer XRport = RX.getYXPort();
        SharedSegment topSegment = getSharedSegment(RBridgeId,RXport);
        if (topSegment == null) {
            topSegment = new SharedSegment(RBridgeId,RXport);
            // FIXME 
            //topSegment.assign the macaddress
            m_topology.add(topSegment);

            //FIXME
            //add the other segments for each port on each bridge;
            return;
        }
        
        for (Bridge Y: getBridgeOnSharedSegment(topSegment)) {
            BridgeTopologyHelper XY = new BridgeTopologyHelper(RBridgeId, XBridgeId, RBft, XBFT);
            Integer XYport = XY.getXYPort();
            Integer YXport = XY.getYXPort();
            Integer YRport = Y.getRootPort();
            // X is a leaf of Y
            if (XYport == XRport && YXport != YRport) {
                //FIXME
                //Remove Y from topSegment
                //FIXME we have to find a real BFT for Y bridgeId
                findBridgesTopo(Y.getId(), getEffectiveBFT(Y.getId()), XBridgeId, XBFT);
                return;
            }
            // Y is a leaf of X
            if (XYport != XRport && YXport == YRport) {
                //FIXME create a SharedSegment with root port
                SharedSegment leafSegment = new SharedSegment(XBridgeId, XYport);
                //leafSegment assign bridgemaclinks
                //topSegment remove bridgemaclinks from Y
                m_topology.add(leafSegment);
            }            
        }
        //FIXME
        //Se sono qui e' perche' non sono una foglia, ho fogliato
        // e mi devo aggiungere al top segment
        //topSegment.assign()
        
        
    }

