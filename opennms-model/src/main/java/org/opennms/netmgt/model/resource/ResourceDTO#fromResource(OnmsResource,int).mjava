    public static ResourceDTO fromResource(final OnmsResource resource, final int depth) {
        final ResourceDTO dto = new ResourceDTO();
        dto.setId(resource.getId().toString());
        dto.setLabel(resource.getLabel());
        dto.setName(resource.getName());
        dto.setLink(resource.getLink());
        dto.setTypeLabel(resource.getResourceType().getLabel());
        dto.setParentId(resource.getParent() == null ? null : resource.getParent().getId().toString());
        dto.setStringPropertyAttributes(resource.getStringPropertyAttributes());
        dto.setExternalValueAttributes(resource.getExternalValueAttributes());
        dto.setRrdGraphAttributes(resource.getRrdGraphAttributes());
        dto.setResource(resource);

        if (depth == 0) {
            dto.setChildren(null);
        } else {
            List<ResourceDTO> children = new LinkedList<>();
            for (final OnmsResource child : resource.getChildResources()) {
                children.add(ResourceDTO.fromResource(child, depth - 1));
            }
            dto.setChildren(new ResourceDTOCollection(children));
        }

        return dto;
    }

