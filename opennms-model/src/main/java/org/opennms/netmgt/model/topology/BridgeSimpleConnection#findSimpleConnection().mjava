    private void findSimpleConnection() throws BridgeTopologyException {

        if (LOG.isDebugEnabled()) {
            LOG.debug("\n first bridge -> \n{}\n second bridge -> \n{}",
                      m_xBridge.printTopology(),
                      m_yBridge.printTopology());
        }

        if (m_xBridge.getPorttomac().size() == 1) {
            m_xyPort=m_xBridge.getPorttomac().iterator().next().getPort();
            LOG.debug("only one port found: bridge:[{}] <- {} ", 
                      m_yBridge.getNodeId(),
                      m_xyPort.printTopology());
        }

        if (m_yBridge.getPorttomac().size() == 1) {
            m_yxPort=m_yBridge.getPorttomac().iterator().next().getPort();
            LOG.debug("only one port found: bridge:[{}] <- {} ", 
                      m_xBridge.getNodeId(),
                      m_yxPort.printTopology());
        }

        // there is a mac of Y found on X BFT
        if (m_xyPort == null) {
             try {
                m_xyPort = condition1(m_yBridge, m_xBridge);
            } catch (BridgeTopologyException e) {
                LOG.debug("bridge: [{}] -> [{}], {}",
                      m_xBridge.getNodeId(),
                      m_yBridge.getNodeId(),
                      e.getMessage());
            }
        }        

        // there is a mac of X found on Y BFT
        if (m_yxPort == null) {
            try {
               m_yxPort = condition1(m_xBridge, m_yBridge);
            } catch (BridgeTopologyException e) {
                LOG.debug("bridge: [{}] -> [{}], {}",
                      m_yBridge.getNodeId(),
                      m_xBridge.getNodeId(),
                      e.getMessage());
            }
        }        
        
        if (m_xyPort != null && m_yxPort != null) {
            return;
        }
        
        
        Set<String> commonlearnedmacs = new HashSet<String>(m_xBridge.getMactoport().keySet()); 
        commonlearnedmacs.retainAll(new HashSet<String>(m_yBridge.getMactoport().keySet()));
        if (LOG.isDebugEnabled()) {
            LOG.debug("bridge: [{}] <-> [{}] common (learned mac): {}",
                  m_yBridge.getNodeId(),
                  m_xBridge.getNodeId(),
                  commonlearnedmacs);
        }

        if (m_yxPort != null && m_xyPort == null) { 
            try {
                m_xyPort = condition2(commonlearnedmacs,
                                             m_yxPort,
                                             m_yBridge,
                                             m_xBridge);
            } catch (BridgeTopologyException e) {
                LOG.warn("bridge: [{}] -> [{}], {}",
                          m_xBridge.getNodeId(),
                          m_yBridge.getNodeId(),
                          e.getMessage());
                m_xyPort = conditionB(commonlearnedmacs, m_xBridge);
            }
            return;
        } 
        
        if (m_yxPort == null && m_xyPort != null) {
            try {
                m_yxPort = BridgeSimpleConnection.condition2(commonlearnedmacs,
                                             m_xyPort,
                                             m_xBridge,
                                             m_yBridge);
            } catch (BridgeTopologyException e) {
                LOG.warn("bridge: [{}] -> [{}], {}",
                          m_yBridge.getNodeId(),
                          m_xBridge.getNodeId(),
                          e.getMessage());
                m_yxPort = conditionB(commonlearnedmacs, m_yBridge);
            }
            return;
        } 
        
        List<BridgePort> ports = BridgeSimpleConnection.condition3(commonlearnedmacs,
               m_xBridge,
               m_yBridge);
        m_xyPort = ports.get(0);
        m_yxPort= ports.get(1);
    }

