    public void addNodeToTopology(LinkableNode bridgeNode) {
    	Integer nodeid = bridgeNode.getNodeId();
    	 
    	 for (final Entry<Integer,Set<String>> curEntry : bridgeNode.getBridgeForwardingTable().entrySet()) {
             LOG.info("addNodeToTopology: parsing node {}, port {}, macs {}",
                     nodeid, curEntry.getKey(),
                     curEntry.getValue());
             BridgeTopologyPort bridgetopologyport = new BridgeTopologyPort(
                     nodeid,
                     curEntry.getKey(),
                     curEntry.getValue());

             if (parsed(bridgetopologyport)) {
            	 LOG.info("addNodeToTopology: node {}, port {} has been previuosly parsed. Skipping.",nodeid, curEntry.getKey());
            	 continue;
             }

             BridgeTopologyLinkCandidate topologycandidate = new BridgeTopologyLinkCandidate(bridgetopologyport);
             for (String mac : curEntry.getValue()) {
                 if (bridgeAssociatedMacAddressMap.containsKey(mac)) {
                	 for (SwitchPort swPort : bridgeAssociatedMacAddressMap.get(mac)) {
                		 if (swPort.getNodeid().intValue() == bridgeNode.getNodeId())
                			 continue;
                		 LOG.info("addNodeToTopology: parsing node {}, port {}: mac {} found on bridge adding target: targetnodeid {}, targetifindex {}",
    	                     nodeid, curEntry.getKey(),
                             mac,swPort.getNodeid(),swPort.getIfindex());
                		 topologycandidate.addLinkedSwitchPort(swPort);
                		 topologycandidate.addTarget(swPort.getNodeid());
                	 }
                 }
             }
             bridgeTopologyPortCandidates.add(parseBFTEntry(topologycandidate));
    	 }
    	 mergeTopology();
    }

