    public void removeBridge(int bridgeId) {
        if (noMacsOnSegment()) {
            List<BridgeBridgeLink> curlist = new ArrayList<BridgeBridgeLink>();
            BridgeBridgeLink first = m_bridgeportsOnLink.iterator().next();
            if (first.getNode().getId().intValue() == bridgeId) {
                for (BridgeBridgeLink link: m_bridgeportsOnLink) {
                    if (link.getDesignatedNode().getId() == first.getDesignatedNode().getId())
                        continue;
                    link.setNode(first.getDesignatedNode());
                    link.setBridgePort(first.getDesignatedPort());
                    link.setBridgePortIfIndex(first.getDesignatedPortIfIndex());
                    link.setBridgePortIfName(first.getDesignatedPortIfName());
                    link.setVlan(first.getDesignatedVlan());
                    curlist.add(link);
                }
            } else {
                for (BridgeBridgeLink link: m_bridgeportsOnLink) {
                    if (link.getDesignatedNode().getId().intValue() == bridgeId )
                        continue;
                    curlist.add(link);
                }
            }
            m_bridgeportsOnLink=curlist;
            return;
        }
        List<BridgeMacLink> curlist = new ArrayList<BridgeMacLink>();
                
        for (BridgeMacLink link: m_bridgeportsOnSegment) {
            if (link.getNode().getId().intValue() == bridgeId ) {
               continue;
            }
            curlist.add(link);
        }
        m_bridgeportsOnSegment=curlist;
        
    }

