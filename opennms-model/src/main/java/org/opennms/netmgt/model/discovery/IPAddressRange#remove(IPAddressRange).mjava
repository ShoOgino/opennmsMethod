    public IPAddressRange[] remove(IPAddressRange range) {
        if (range.contains(this)) {
            return new IPAddressRange[0];
        } else if (!overlaps(range)) {
            return new IPAddressRange[] { this };
        } else {
            List<IPAddressRange> ranges = new ArrayList<IPAddressRange>(2);
            if (getBegin().isLessThan(range.getBegin())) {
                ranges.add(new IPAddressRange(getBegin(), range.getBegin().decr()));
            }
            if (range.getEnd().isLessThan(getEnd())) {
                ranges.add(new IPAddressRange(range.getEnd().incr(), getEnd()));
            }
            return ranges.toArray(new IPAddressRange[ranges.size()]);
            
        }
    }

