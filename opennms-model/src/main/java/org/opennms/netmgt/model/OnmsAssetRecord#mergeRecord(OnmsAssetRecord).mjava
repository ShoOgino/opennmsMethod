    /**
     * Used to merge the contents of one asset record to another.  If equals implementation
     * returns false, the merge is aborted.
     *
     * @param newRecord a {@link org.opennms.netmgt.model.OnmsAssetRecord} object.
     */
    public void mergeRecord(OnmsAssetRecord newRecord) {

        if (!this.equals(newRecord)) {
            return;
        }

        OnmsGeolocation toGeolocation = this.getGeolocation();
        if (toGeolocation == null) {
            toGeolocation = new OnmsGeolocation();
            this.setGeolocation(toGeolocation);
        }
        final OnmsGeolocation fromGeolocation = newRecord.getGeolocation();

        //this works because all asset properties are strings
        //if the model dependencies ever change to not include spring, this will break
        BeanWrapper currentBean = PropertyAccessorFactory.forBeanPropertyAccess(this);
        BeanWrapper newBean = PropertyAccessorFactory.forBeanPropertyAccess(newRecord);
        PropertyDescriptor[] pds = newBean.getPropertyDescriptors();

        for (PropertyDescriptor pd : pds) {
            String propertyName = pd.getName();

            if (propertyName.equals("class")) {
                continue;
            }

            // This should never fail since both of these objects are of the same type
            if (newBean.getPropertyValue(propertyName) != null) {
                currentBean.setPropertyValue(propertyName, newBean.getPropertyValue(propertyName));
            }
        }

        toGeolocation.mergeGeolocation(fromGeolocation);
        setGeolocation(toGeolocation);
    }

