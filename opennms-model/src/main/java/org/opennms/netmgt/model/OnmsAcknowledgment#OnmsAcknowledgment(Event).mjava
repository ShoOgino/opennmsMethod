    public OnmsAcknowledgment(final Event e) throws ParseException {
        this(DateFormat.getDateInstance(DateFormat.FULL).parse(e.getTime()), "admin");
        Collection<Parm> parms = e.getParms().getParmCollection();
        
        if (parms.size() <= 2) {
            throw new IllegalArgumentException("Event:"+e.getUei()+" has invalid paramenter list, requires ackType and refId.");
        }
        
        for (Parm parm : parms) {
            final String parmValue = parm.getValue().getContent();
            
            if (!"ackType".equals(parm.getParmName()) && !"refId".equals(parm.getParmName()) && !"user".equals(parm.getParmName()) ) {
                throw new IllegalArgumentException("Event parm: "+parm.getParmName()+", is an invalid paramter");
            } else {
            
                if ("ackType".equals(parm.getParmName())) {

                    if ("Alarm".equals(parmValue) || "Notification".equals(parmValue)) {
                        m_ackType = ("Alarm".equals(parmValue) ? AckType.Alarm : AckType.Notification);
                    } else {
                        throw new IllegalArgumentException("Event parm: "+parm.getParmName()+", has invalid value, requires: \"Alarm\" or \"Notification\"." );
                    }
                    
                } else if ("refId".equals(parm.getParmName())){
                    m_refId = Integer.valueOf(parm.getValue().getContent());
                } else {
                    m_ackUser = parm.getValue().getContent();
                }
            }                
        }
    }

