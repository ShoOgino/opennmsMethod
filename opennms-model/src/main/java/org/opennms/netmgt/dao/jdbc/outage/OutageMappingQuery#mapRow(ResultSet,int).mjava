    public Object mapRow(ResultSet rs, int rowNumber) throws SQLException {
        final Integer id = (Integer) rs.getObject("outageid");

        LazyOutage outage = (LazyOutage)Cache.obtain(OnmsOutage.class, id);
        outage.setLoaded(true);
        
        Integer nodeId = new Integer(rs.getInt("nodeID"));
        OnmsNode node = (OnmsNode)Cache.obtain(OnmsNode.class, nodeId);
        String ipAddr = rs.getString("ipAddr");
        IpInterfaceDao ifDao = new IpInterfaceDaoJdbc(DataSourceFactory.getInstance());
        OnmsIpInterface ipIf = ifDao.get(node, ipAddr);
        
        Integer serviceId = new Integer(rs.getInt("serviceID"));
        LazyMonitoredService svc = (LazyMonitoredService)Cache.obtain(OnmsMonitoredService.class, serviceId);
        outage.setMonitoredService(svc);

        IpInterfaceId key = new IpInterfaceId(ipIf.getNode().getId(), ipIf.getIpAddress(), ipIf.getIfIndex());
    	LazyIpInterface iface = (LazyIpInterface)Cache.obtain(OnmsIpInterface.class, key);
        outage.setIpInteface(iface);
    	
        Integer eventId = new Integer(rs.getInt("svcLostEventID"));
        OnmsEvent event = (OnmsEvent)Cache.obtain(OnmsEvent.class, eventId);
        outage.setEventBySvcLostEvent(event);
        
        eventId = new Integer(rs.getInt("svcRegainedEventID"));
        event = (OnmsEvent)Cache.obtain(OnmsEvent.class, eventId);        
        outage.setEventBySvcRegainedEvent(event);
        
        outage.setIfLostService(rs.getTimestamp("ifLostService"));
        outage.setIfRegainedService(rs.getTimestamp("ifRegainedService"));    	
        
        outage.setDirty(false);
        return outage;
    }

