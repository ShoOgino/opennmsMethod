    public Object mapRow(ResultSet rs, int rowNumber) throws SQLException {
        final Integer id = (Integer) rs.getObject("eventid");

        LazyEvent event = (LazyEvent)Cache.obtain(OnmsEvent.class, id);
        event.setLoaded(true);
        
        Integer nodeId = new Integer(rs.getInt("nodeID"));
        OnmsNode node = (OnmsNode)Cache.obtain(OnmsNode.class, nodeId);
        event.setNode(node);
        
        String dpName = rs.getString("eventDpName");
        OnmsDistPoller distPoller = (OnmsDistPoller)Cache.obtain(OnmsDistPoller.class, dpName);
        event.setDistPoller(distPoller);

        
        Integer alarmId = new Integer(rs.getInt("alarmId"));
        OnmsAlarm alarm = (OnmsAlarm)Cache.obtain(OnmsAlarm.class, alarmId);
        event.setAlarm(alarm);
        
        Integer serviceId = new Integer(rs.getInt("serviceId"));
        OnmsMonitoredService service = (OnmsMonitoredService)Cache.obtain(OnmsMonitoredService.class, serviceId);
        event.setService(service);

        event.setEventUei(rs.getString("eventUei"));
        event.setEventTime(rs.getDate("eventTime"));
        event.setEventHost(rs.getString("eventHost"));
        event.setEventSource(rs.getString("eventSource"));
        event.setIpAddr(rs.getString("ipAddr"));
        event.setEventSnmpHost(rs.getString("eventSnmphost"));
        event.setEventSnmp(rs.getString("eventSnmp"));
        event.setEventParms(rs.getString("eventParms"));
        event.setEventCreateTime(rs.getDate("eventCreateTime"));
        event.setEventDescr(rs.getString("eventDescr"));
        event.setEventLogGroup(rs.getString("eventLoggroup"));
        event.setEventLogMsg(rs.getString("eventLogmsg"));
        event.setEventSeverity(new Integer(rs.getInt("eventSeverity")));
        event.setEventPathOutage(rs.getString("eventPathOutage"));
        event.setEventCorrelation(rs.getString("eventCorrelation"));
        event.setEventSuppressedCount(new Integer(rs.getInt("eventSuppressedCount")));
        event.setEventOperInstruct(rs.getString("eventOperInstruct"));
        event.setEventAutoAction(rs.getString("eventAutoAction"));
        event.setEventOperAction(rs.getString("eventOperAction"));
        event.setEventOperActionMenuText(rs.getString("eventOperActionMenuText"));
        event.setEventNotification(rs.getString("eventNotification"));
        event.setEventTTicket(rs.getString("eventTticket"));
        event.setEventTTicketState(new Integer(rs.getInt("eventTticketState")));
        event.setEventForward(rs.getString("eventForward"));
        event.setEventMouseOverText(rs.getString("eventMouseOverText"));
        event.setEventLog(rs.getString("eventLog"));
        event.setEventDisplay(rs.getString("eventDisplay"));
        event.setEventAckUser(rs.getString("eventAckUser"));
        event.setEventAckTime(rs.getDate("eventAckTime"));
        
        event.setDirty(false);
        return event;
    }

