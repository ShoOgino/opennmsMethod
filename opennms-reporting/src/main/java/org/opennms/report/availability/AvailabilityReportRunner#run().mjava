    public void run() {

        ReportRenderer renderer;
        AvailabilityCalculator calculator;

        if (m_monthFormat == null || m_monthFormat.equals("")
                || m_monthFormat.equals("classic")) {
            calculator = m_classicCalculator;
        } else {
            calculator = m_calendarCalculator;
        }

        calculator.setCalendar(new GregorianCalendar());
        calculator.setCategoryName(m_categoryName);
        calculator.setLogoURL(m_logo);
        calculator.setPeriodEndDate(m_periodEndDate);
        
        if (m_format == null || m_format.equals(SVG_FORMAT)) {
            log.debug("report will be rendered as PDF with embedded SVG");
            renderer = m_svgReportRenderer;
            calculator.setReportFormat(SVG_FORMAT);
        } else if (m_format.equals(PDF_FORMAT)) {
            log.debug("report will be rendered as PDF");
            renderer = m_pdfReportRenderer;
            calculator.setReportFormat(PDF_FORMAT);
        } else {
            log.debug("report will be rendered as html");
            renderer = m_htmlReportRenderer;
            // renderer.setOutputFileName(categoryName + "-adhoc.html");
            calculator.setReportFormat(HTML_FORMAT);
        }

        try {
            log.debug("Starting Availability Report Calculations");
            calculator.calculate();
            calculator.writeLocateableXML("xml");
            String outputFile = calculator.getOutputFileName();
            log.debug("Written Availability Report as XML to " + outputFile);
            renderer.setInputFileName(outputFile);
            log.debug("rendering XML " + outputFile + " as "
                    + renderer.getOutputFileName());
            renderer.render();
            ReportMailer mailer = new ReportMailer(
                                                   m_email,
                                                   renderer.getBaseDir()
                                                           + renderer.getOutputFileName(), "OpenNMS Availability Report");
            mailer.send();
        } catch (AvailabilityCalculationException ce) {
            log.fatal("Unable to calculate report data ", ce);
        } catch (ReportRenderException re) {
            log.fatal("Unable to render report ", re);
        } catch (IOException ioe) {
            log.fatal("Unable to render report ", ioe);
        }

    }

