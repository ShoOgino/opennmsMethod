	public void render() throws ReportRenderException {
		
		ThreadCategory.setPrefix(LOG4J_CATEGORY);
        Category log = ThreadCategory.getInstance(PDFReportRenderer.class);
		Logger avalonLogger = new Log4JLogger(log);
		
		try {
            if (log.isInfoEnabled())
                log.info("XSL File " + xsltResource.getDescription());
            
            Reader xsl = new FileReader(xsltResource.getFile());
            
            if (log.isInfoEnabled())
                log.info("input File " + inputFileName);
            
            inputReportStore.setFileName(inputFileName);
            
            Reader xml = new FileReader(inputReportStore.newFile());
            
 			if (log.isInfoEnabled())
                log.info("ouput File " + outputFileName);
			
			outputReportStore.setFileName(outputFileName);
			                                  
            FileOutputStream pdfOutputStream = new FileOutputStream(outputReportStore.newFile());
            
            Logger nullLogger = new NullLogger();
			MessageHandler.setScreenLogger(nullLogger);
            MessageHandler.setOutputMethod(MessageHandler.NONE);
            
            Driver driver = new Driver();
            driver.setLogger(avalonLogger);
            driver.setOutputStream(pdfOutputStream);
            driver.setRenderer(Driver.RENDER_PDF);
            TransformerFactory tfact = TransformerFactory.newInstance();
            Transformer transformer = tfact.newTransformer(new StreamSource(xsl));
            transformer.transform(new StreamSource(xml), new SAXResult(driver.getContentHandler()));
            pdfOutputStream.close();

        }  catch (IOException ioe) {
			log.fatal("IOException ", ioe);
			throw new ReportRenderException(ioe);
		} catch (TransformerConfigurationException tce) {
			log.fatal("transformerConfigurationException ", tce);
			throw new ReportRenderException(tce);
		} catch (TransformerException te) {
			log.fatal("TransformerException ", te);
			throw new ReportRenderException(te);
		}
 	}

