	public void render() throws ReportRenderException {
		
		ThreadCategory.setPrefix(LOG4J_CATEGORY);
        Category log = ThreadCategory.getInstance(PDFReportRenderer.class);
		Logger avalonLogger = new Log4JLogger(log);
		
		try {
            if (log.isInfoEnabled())
                log.info("XSL File " + xsltResource.getDescription());
            
            Reader xsl = new FileReader(xsltResource.getFile());
            
            if (log.isInfoEnabled())
                log.info("input File : " + inputResource.getDescription());
            
			Reader xml = new FileReader(inputResource.getFile());

			if (log.isInfoEnabled())
	                log.info("fot File : " + fopResource.getDescription());
			
			FileWriter fotWriter = new FileWriter(fopResource.getFile());
			           
            if (log.isInfoEnabled())
                log.info("output File : " + outputResource.getDescription());
                           
            FileOutputStream pdfOutputStream = new FileOutputStream(outputResource.getFile());
                      
            TransformerFactory tfact = TransformerFactory.newInstance();
            Transformer processor = tfact.newTransformer(new StreamSource(xsl));
            processor.transform(new StreamSource(xml), new StreamResult(fotWriter));

            xml = null;
            
			Logger nullLogger = new NullLogger();
			MessageHandler.setScreenLogger(nullLogger);
            MessageHandler.setOutputMethod(MessageHandler.NONE);

            fotWriter.close();
            
            Reader fotReader = new FileReader(fopResource.getFile());
            InputSource fotDS = new InputSource(fotReader);

            org.apache.fop.apps.Driver fopDriver = new org.apache.fop.apps.Driver(fotDS, pdfOutputStream);
			fopDriver.setLogger(avalonLogger);
			fopDriver.setRenderer(org.apache.fop.apps.Driver.RENDER_PDF);
            fopDriver.run();
                                  
            fopResource.getFile().delete();
                                    
        }  catch (IOException ioe) {
			log.fatal("IOException ", ioe);
			throw new ReportRenderException(ioe);
		} catch (TransformerConfigurationException tce) {
			log.fatal("ransformerConfigurationException ", tce);
			throw new ReportRenderException(tce);
		} catch (TransformerException te) {
			log.fatal("TransformerException ", te);
			throw new ReportRenderException(te);
		} catch (FOPException fope) {
			log.fatal("FOP Exception ", fope);
			throw new ReportRenderException(fope);
			
		}
 	}

