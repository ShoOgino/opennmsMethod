	public void calculate() throws AvailabilityCalculationException {
		
		m_report.setLogo(logoURL);
		ViewInfo viewInfo = new ViewInfo();
		m_report.setViewInfo(viewInfo);
		org.opennms.report.availability.Categories categories = new org.opennms.report.availability.Categories();
		m_report.setCategories(categories);
		try {

			Calendar today = new GregorianCalendar();
			int day = Integer.parseInt(startDate);
			int year = Integer.parseInt(startYear);
			String month = months[Integer.parseInt(startMonth)];
			int hour = today.get(Calendar.HOUR);
			int minute = today.get(Calendar.MINUTE);
			int second = today.get(Calendar.SECOND);
			Created created = new Created();
			created.setDay(day);
			created.setHour(hour);
			created.setMin(minute);
			created.setMonth(month);
			created.setSec(second);
			created.setYear(year);
			created.setContent(today.getTime().getTime());
			m_report.setCreated(created);
			if (log.isDebugEnabled()){
				log.debug("Populating datastructures and calculating availabilty");
				log.debug("category:     " + categoryName);
				log.debug("monthFormat:  " + monthFormat);
				log.debug("reportFormat: " + reportFormat);
			}
			AvailabilityData availData = new AvailabilityData(categoryName,
					m_report, reportFormat, monthFormat,
					calendar, startMonth, startDate, startYear);


	
		} catch (MarshalException me) {
			log.fatal("MarshalException ", me);
			throw new AvailabilityCalculationException(me);
		} catch (ValidationException ve) {
			log.fatal("Validation Exception ", ve);
			throw new AvailabilityCalculationException(ve);
		} catch (IOException ioe) {
			log.fatal("Validation Exception ", ioe);
			throw new AvailabilityCalculationException(ioe);
		} catch (Exception e) {
			log.fatal("Exception ", e);
			throw new AvailabilityCalculationException(e);
		}

	}

