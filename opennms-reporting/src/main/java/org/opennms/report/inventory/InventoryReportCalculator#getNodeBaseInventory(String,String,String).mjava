    /**
     * <p>getNodeBaseInventory</p>
     *
     * @param node a {@link java.lang.String} object.
     * @param group a {@link java.lang.String} object.
     * @param version a {@link java.lang.String} object.
     * @return a {@link org.opennms.report.inventory.NodeBaseInventory} object.
     */
    public NodeBaseInventory getNodeBaseInventory(String node, String group, String version) {
        // get the latest version from the given date        
        
        LOG.debug("getNodeBaseInventory {} {} {}", node, group, version);
        NodeBaseInventory nbi = new NodeBaseInventory();

        
        RancidNode rn;
        try {
            rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, node);
        } catch (RancidApiException e) {
            LOG.debug("getNodeBaseInventory: inventory not found. Skipping");
            return nbi;
        }
        
        InventoryNode in = (InventoryNode)rn.getNodeVersions().get(version);
                
        nbi.setDevicename(node);
        nbi.setGroupname(group);
        nbi.setVersion(version);
        nbi.setStatus(in.getParent().getState());
        nbi.setCreationdate(in.getCreationDate());
        nbi.setSwconfigurationurl(in.getSoftwareImageUrl());
        nbi.setConfigurationurl(in.getConfigurationUrl());
        
        try {
            nbi.setIe( RWSClientApi.getRWSRancidNodeInventoryElement2(m_cp, rn, version));
        } catch (RancidApiException e) {
            LOG.debug("getNodeBaseInventory: inventory not found for version: {}. Skipping", version);
        }
        
        return nbi;

    }

