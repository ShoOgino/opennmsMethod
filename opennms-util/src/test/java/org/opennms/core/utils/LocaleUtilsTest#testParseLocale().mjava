    @Test
    public void testParseLocale() {
        assertEquals(
            new Locale(Locale.ENGLISH.getLanguage(), Locale.US.getCountry()), 
            LocaleUtils.parseLocale("en-us")
        );
        assertEquals(
            new Locale(Locale.ENGLISH.getLanguage(), Locale.US.getCountry()), 
            LocaleUtils.parseLocale("EN-us")
        );
        assertEquals(
            new Locale(Locale.ENGLISH.getLanguage(), Locale.US.getCountry()), 
            LocaleUtils.parseLocale("en-US")
        );
        assertEquals(
            new Locale(Locale.ENGLISH.getLanguage(), Locale.US.getCountry()), 
            LocaleUtils.parseLocale("EN-US")
        );
        

        // Test underscore
        assertEquals(
            new Locale(Locale.ENGLISH.getLanguage(), Locale.US.getCountry()), 
            LocaleUtils.parseLocale("en_us")
        );
        // This is a strange example... should we throw an exception on cases like this?
        assertEquals(
            new Locale(Locale.ENGLISH.getLanguage(), Locale.US.getCountry()), 
            LocaleUtils.parseLocale("en  -  US_")
        );

        // Variant test
        assertEquals(
            new Locale(Locale.FRENCH.getLanguage(), Locale.CANADA.getCountry(), "Quebec"), 
            LocaleUtils.parseLocale("fr_ca_Quebec")
        );

        // Make sure that the language-only locale doesn't match the full locale
        assertFalse(
            new Locale(Locale.ENGLISH.getLanguage()).equals( 
                LocaleUtils.parseLocale("en_us")
            )
        );
        assertFalse(
            new Locale(Locale.GERMAN.getLanguage(), Locale.US.getCountry()).equals( 
                LocaleUtils.parseLocale("en_us")
            )
        );
    }

