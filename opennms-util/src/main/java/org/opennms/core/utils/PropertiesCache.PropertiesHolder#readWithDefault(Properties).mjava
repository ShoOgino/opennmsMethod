        private void readWithDefault(Properties deflt) throws IOException {
            // this is
            if (deflt == null && !m_file.canRead()) {
                // nothing to load so m_properties remains null no writing necessary
                // just return to avoid getting the write lock
                return;
            }
            
            // release the read lock since we need the write lock to update the properties object
            r.unlock();
            w.lock();
            try {
                // check again to make sure that while we were waiting for the lock
                // someone else didn't get it and load things up already
                if (m_properties == null) {
                    m_properties = read();
                    if (m_properties == null) {
                        m_properties = deflt;
                    }
                }
            } finally {
                // use this ordering so we are sure it is allowed and prevents anyone from getting
                // another write lock before we finish
                r.lock();
                w.unlock();
            }
        }

