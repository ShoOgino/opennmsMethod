        /**
         * <p>
         * The run method preforms the actual work for the fiber. It loops
         * infinitely until the shutdown flag is set, during which time it
         * processes queue elements. Each element in the queue should be a
         * instance of {@link java.lang.Runnable Runnable}. After each instance
         * is recieved its <code>run</code> method is invoked.
         * </p>
         * 
         * <p>
         * After the object's <code>run</code> method completes it is passed
         * to any interested callers via the listener list in the encapsulated
         * class.
         * </p>
         * 
         */
        public void run() {
            ThreadCategory.setPrefix(m_log4jPrefix);
            m_status = RUNNING;
            while (!m_shutdown) {
                Runnable runnable = null;
                try {
                    runnable = m_delegateQ.remove(500);
                    if (runnable == null) {
                        continue;
                    }
                } catch (InterruptedException e) {
                    m_status = STOP_PENDING;
                    break; // exit, log?
                } catch (FifoQueueException e) {
                    m_status = STOP_PENDING;
                    break; // exit, log?
                }

                try {
                    if (runnable != null) {
                        runnable.run();

                        // If successful, invoke callback to process message
                        RunnableCompletionListener[] list = null;
                        synchronized (m_completedListeners) {
                            list = m_completedListeners.toArray(new RunnableCompletionListener[m_completedListeners.size()]);
                        }
                        for (RunnableCompletionListener listener : list) {
                            listener.onRunnableCompletion(runnable);
                        }
                    }
                } catch (Throwable t) {
                    log().debug("run: an unexpected error occured during fiber run, calling error liseners");

                    /*
                     * call a listener to handle errors?
                     * or should it be logged
                     */
                    RunnableErrorListener[] list = null;
                    synchronized (m_errorListeners) {
                        list = m_errorListeners.toArray(new RunnableErrorListener[m_errorListeners.size()]);
                    }
                    if (list.length == 0) {
                        log().error("No error listeners defined for unexpected error: " + t, t);
                    }
                    for (RunnableErrorListener listener : list) {
                        listener.onRunnableError(runnable, t);
                    }
                }
            }

            m_status = STOPPED;
        }

