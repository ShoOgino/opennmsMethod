    /**
     * Constructs a new Virtual Macine Task Fiber. The task has a name and is
     * passed all the information to invoke the class' main method. When the
     * class is loaded it is allocated a new class loader used to locate all of
     * it's resources.
     *
     * @param taskName
     *            The name of the task
     * @param entryClassName
     *            The name of the entry class.
     * @param entryArguments
     *            The String array passed to main.
     * @param searchPaths
     *            The URL's used to locate resources and classes.
     * @throws java.lang.ClassNotFoundException
     *             Thrown if the entry class is not found.
     * @throws java.lang.NoSuchMethodException
     *             Thrown if the <code>main</code> is not found on the entry
     *             class.
     * @see java.net.URLClassLoader
     */
    public VMTaskFiber(String taskName, String entryClassName, String[] entryArguments, URL[] searchPaths) throws ClassNotFoundException, NoSuchMethodException

    {
        m_taskName = taskName;
        m_mainArgs = Arrays.copyOf(entryArguments, entryArguments.length);

        m_thrGroup = new ThreadGroup(THREADGROUP_NAME_PREFIX + m_taskName);
        m_thrGroup.setDaemon(false);

        m_classLoader = new URLClassLoader(Arrays.copyOf(searchPaths, searchPaths.length));

        Class<?> m_entryClass = m_classLoader.loadClass(entryClassName);
        m_entryMethod = findMain(m_entryClass);
        if (m_entryMethod == null)
            throw new NoSuchMethodException("main() method not found for class " + entryClassName);

        m_fiberStatus = START_PENDING;
    }

