    private void configureArgs(String[] argv) {
        Options opts = new Options();
        opts.addOption("d", "dir", true, "Directory where Spectrum custom events are located");
        opts.addOption("t", "model-type-asset-field", true, "Name of asset field containing equivalent of Spectrum model type.  Defaults to 'manufacturer'.");
        opts.addOption("u", "base-uei", true, "Base value for UEI of generated OpenNMS events.  Defaults to 'uei.opennms.org/import/Spectrum'.");
        opts.addOption("f", "output-file", true, "File to which OpenNMS events will be written.  Defaults to standard output.");
        opts.addOption("k", "key", true, "Middle part of reduction- and clear-key, after UEI and before discriminators.  Defaults to '%dpname%:%nodeid%:%interface%'.");
        
        CommandLineParser parser = new GnuParser();
        try {
            CommandLine cmd = parser.parse(opts, argv);
            if (cmd.hasOption('d')) {
                m_customEventsDir = new FileSystemResource(cmd.getOptionValue('d'));
            }
            
            if (cmd.hasOption('t')) {
                m_modelTypeAssetField = cmd.getOptionValue('t');
            } else {
                m_modelTypeAssetField = "manufacturer";
            }
            
            if (cmd.hasOption('u')) {
                m_baseUei = cmd.getOptionValue('u');
            } else {
                m_baseUei = "uei.opennms.org/import/Spectrum";
            }
            
            if (cmd.hasOption('f')) {
                m_outputWriter = new PrintWriter(new FileSystemResource(cmd.getOptionValue('f')).getFile());
            } else {
                m_outputWriter = new PrintWriter(System.out);
            }
            
            if (cmd.hasOption('k')) {
                m_reductionKeyBody = cmd.getOptionValue('k');
            } else {
                m_reductionKeyBody = "%dpname%:%nodeid%:%interface%";
            }
        } catch (ParseException pe) {
            printHelp("Failed to parse command line options");
            System.exit(1);
        } catch (FileNotFoundException fnfe) {
            printHelp("Custom events input directory does not seem to exist");
        }
    }

