	public static void generateGraphs(String serviceName, String inputFile, String outFile) throws IOException {
		JmxDatacollectionConfig inputConfig = JAXB.unmarshal(new File(inputFile), JmxDatacollectionConfig.class);
		
		for (JmxCollection jmxCollection : inputConfig.getJmxCollection()) {
			logger.debug("jmxCollection: '{}'", jmxCollection.getName());
			Mbeans mbeans = jmxCollection.getMbeans();
			int i = 0;
			for (Mbean mBean : mbeans.getMbean()) {
				logger.debug("\t" + "mBean: '{}'", mBean.getObjectname());
				String reportName = "jsr160" + "." + serviceName  + "." + "combo" + i;
				graphList = graphList + reportName + ", \\" + "\n";
				i++;
				graphBodies = graphBodies + "\n" + generateGraphCombo(jmxCollection, mBean, reportName);
				for (Attrib attrib :mBean.getAttrib()) {
					logger.debug("\t\t" + "attrib: '{}'", attrib.getAlias());
					graphList = graphList + "jsr160" + "." + serviceName + "."  + StringUtils.substring(attrib.getAlias(), 0 ,19) + ", \\" + "\n";
					graphBodies = graphBodies + "\n" + generateGraph(jmxCollection, mBean, attrib);
				}
			}
		}
		graphList = StringUtils.substringBeforeLast(graphList, ", \\\n") + "\n";
		output = graphList + "\n" + graphBodies;
		output = StringUtils.substringBeforeLast(output, " \\" + "\n") + "\n";
		FileUtils.writeStringToFile(new File(outFile), output, "UTF-8");
	}

