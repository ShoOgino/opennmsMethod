	public void run() {
        Category log = getLog();
		input = "";

		try {
			// Get input from the client
			BufferedReader in = new BufferedReader(new InputStreamReader(server
					.getInputStream()));

			readingFromClient: while ((line = in.readLine()) != null) {
				input = input + "\n" + line;
				log.debug("Client wrote: " + line + " from "
						+ server.getInetAddress());

				if (status == STARTING_SESSION_STATUS) {
					if (line.equalsIgnoreCase(START_AUTHENTICATION_REQUEST)) {
						if (sharedAuthAsciiString != null) {
							// authorization required
							streamToClient.println(AUTH_REQUIRED_ACK);
							log.debug("Starting authentication, sending "
									+ AUTH_REQUIRED_ACK + " to the client");
							status = AUTHENTICATING_STATUS;
						} else {
							// authorization not required
							streamToClient.println(AUTH_NOT_REQUIRED_ACK);
							log.debug("Starting authentication, sending "
									+ AUTH_NOT_REQUIRED_ACK + " to the client");
							status = AUTHENTICATED_STATUS;
						}
						continue readingFromClient;
					} else {
						// security reset (a malicious user may use DOS attack
						// before authentication)
						log.warn("Wrong client request");
						break readingFromClient;
					}
				}

				if (status == AUTHENTICATING_STATUS) {
					if (sharedAuthAsciiString != null) {
						// authentication required (security check)
						if (line.equals(sharedAuthAsciiString)) {
							status = AUTHENTICATED_STATUS;
							log.debug("Authentication success!");
							streamToClient.println(AUTHENTICATION_SUCCESS);
							continue readingFromClient;
						} else {
							streamToClient.println(RESET_SIGNAL);
							log
									.warn("Authentication failure! Resetting session.");
							break readingFromClient;
						}
					}
				}

				if (status == AUTHENTICATED_STATUS || status == DATAFLOW_STATUS) {
					if (line.equalsIgnoreCase(LIST_CURRENT_ALARM_REQUEST)) {
				        log.debug("Fetching Events from Database");
					    getEventsByCriteria();
						status = DATAFLOW_STATUS;
						synchronized (streamToClient) {
							 streamToClient.println(ACTIVE_ALARM_BEGIN);
	                         StringWriter sw = getOutput();
  		                     if (sw != null) {
   		                        log.info("String Writer:" + sw.getBuffer().toString()); 
		                        streamToClient.print(sw.toString());
		                     } else {
		                        log.error("String Writer is null");
//			                      break readingFromClient;
		                     }
                             streamToClient.println(ACTIVE_ALARM_END);
                             continue readingFromClient;
							
						}
					} else {
						if (line.equalsIgnoreCase(STOP_ALARM_REQUEST)) {
							log.debug("Closing session due client request.");
							break readingFromClient;
						} else {
							log.warn("Wrong client request");
							continue readingFromClient;
						}
					}
				}
			}

			log.debug("Overall message from " + server.getInetAddress()
					+ " is:" + input);
			log.debug("\nClosing session with " + server.getInetAddress()
					+ "...\n\n");
			server.close();
		} catch (IOException ioe) {
			log.warn("IOException on socket listen: " + ioe, ioe);
		}
	}

