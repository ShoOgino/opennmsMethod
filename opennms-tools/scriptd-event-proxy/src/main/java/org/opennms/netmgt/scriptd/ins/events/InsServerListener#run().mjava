	/**
	 * listens for incoming connection on defined port (default is 8154)
	 */
	public void run() {
        ThreadCategory.setPrefix("OpenNMS.InsProxy");
		log=ThreadCategory.getInstance(this.getClass());
		if(criteriaRestriction ==null)
			throw new IllegalStateException("The property criteriaRestriction cannot be null!");
		log.info("InsServerListener started: listening on port "+listeningPort);
		try {
			listener = new ServerSocket(listeningPort);
			Socket server;

			while (true) {
				// when accepts an incoming connection, create an InsSession for
				// alarms exchange
				server = listener.accept();
				InsSession session = new InsSession(server);
				//only if the sharedASCIIString is valorized, requires authentication
				if(sharedAuthAsciiString!=null)
					session.setSharedASCIIString(sharedAuthAsciiString);
				session.setCriteriaRestriction(criteriaRestriction);
				session.start();
				activeSessions.add(session);
			}
		} catch (IOException ioe) {
			log.info("Socket closed." );
		}
	}

