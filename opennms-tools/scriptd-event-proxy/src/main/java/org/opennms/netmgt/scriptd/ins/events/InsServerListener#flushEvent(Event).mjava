	/**
	 * Flushes the event in input to all active sessions with clients
	 * @param event
	 */
	public void flushEvent(Event event){
	      Category log = getLog();
	      log.debug("Flushing "+event.getUei());
          int nodeid = (int) event.getNodeid();

          if (event.getIfIndex() > 0 ) {
              event.setIfAlias(getIfAlias(nodeid,event.getIfIndex()));
          } else if (!event.getInterface().equals("0.0.0.0")) {
              OnmsSnmpInterface iface = getIfAlias(nodeid,event.getInterface()); 
              if (iface != null ) {
                  event.setIfIndex(iface.getIfIndex());
                  event.setIfAlias(iface.getIfAlias());
              } else {
                  event.setIfIndex(-1);
                  event.setIfAlias("-1");
              }
          } else {
              event.setIfIndex(-1);
              event.setIfAlias("-1");
          }
	         
		synchronized (activeSessions){
			cleanActiveSessions();
			Iterator<InsSession> it = activeSessions.iterator();
			while(it.hasNext()){			
				InsSession insSession = it.next();
				PrintStream ps = insSession.getStreamToClient();
				synchronized (ps) {
					if(ps!=null){
						try {
							event.marshal(new PrintWriter(ps));
						} catch (Exception e) {
							log.error("Error while sending current event to client"+e);
						}
					}	
				}
				
			}
		}
	}

