    /**
     * Main method starting the program. Initializing rrdtool binary, amount of threads
     * and parsing the command line arguments. After
     *
     * @param args Arguments from command line
     * @throws ParseException
     */
    public static void main(String[] args) throws ParseException {

        // Init defaults
        String rrdTool = DEFAULT_RRDTOOL;
        int threadCount = DEFAULT_THREADS;

        // current directory
        String path = "./";

        final Options options = new Options();

        // Init options for rrdtool binary and the amount of threads to use
        options.addOption(CMD_OPTION.RRDTOOL.option(), true, "set rrdtool to use for converting XML to RRD, default: '" + DEFAULT_RRDTOOL + "'");
        options.addOption(CMD_OPTION.THREADS.option(), true, "set number of threads to use, default: " + DEFAULT_THREADS);

        final CommandLineParser parser = new PosixParser();
        final CommandLine cmd = parser.parse(options, args);

        @SuppressWarnings("unchecked") List<String> arguments = (List<String>) cmd.getArgList();

        // No arguments given
        if (arguments.size() < 1) {
            usage(options, cmd);
            System.exit(1);
        }

        // Modified rrdtool binary path
        if (cmd.hasOption(CMD_OPTION.RRDTOOL.option())) {
            rrdTool = cmd.getOptionValue(CMD_OPTION.RRDTOOL.option());
        }

        // Modified amount of threads
        if (cmd.hasOption(CMD_OPTION.THREADS.option())) {
            try {
                threadCount = Integer.valueOf(cmd.getOptionValue(CMD_OPTION.THREADS.option()));
            } catch (NumberFormatException numberFormatException) {
                usage(options, cmd);
                System.exit(1);
            }
        }

        path = arguments.remove(0);

        /*
         * Initialize the JRobin to RRDtool converter for a given directory with JRB files
         * to convert, rrdtool binary path and the amount of threads.
         */
        JrbToRrdConverter jrbToRrdConverter = new JrbToRrdConverter(path, rrdTool, threadCount);

        // Run conversion starts also a monitoring thread to calculate how many JRB/s are converted
        jrbToRrdConverter.runConversion();
    }

