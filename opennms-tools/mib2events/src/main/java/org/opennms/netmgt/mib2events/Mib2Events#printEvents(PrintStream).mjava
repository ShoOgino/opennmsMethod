    private void printEvents(PrintStream out) {
        if (m_loader == null) {
            throw new IllegalStateException("convert() must be called first");
        }

        for (Mib mib : m_loader.getAllMibs()) {
            if (!mib.isLoaded()) {
                continue;
            }

            Events events = convertMibToEvents(mib, m_ueiBase);

            if (events.getEventCount() < 1) {
                System.err.println("No trap definitions found in this MIB (" + mib.getName() + "), exiting");
                System.exit(0);
            }

            try {
                // FIXME We should just spit out a valid events inclusion file, but for now we match mib2opennms
                //StringWriter writer = new StringWriter();
                //
                //events.marshal(writer);
                //
                //String noNameSpace = writer.toString().replaceAll(" xmlns=\"[^\"]*\"", "");
                //prettyPrintXML(new ByteArrayInputStream(noNameSpace.getBytes()), out);

                for (Event event : events.getEventCollection()) {
                    StringWriter writer = new StringWriter();

                    event.marshal(writer);

                    String noNameSpace = writer.toString().replaceAll(" xmlns=\"[^\"]*\"", "");

                    ByteArrayOutputStream formattedXml = new ByteArrayOutputStream();
                    prettyPrintXML(new ByteArrayInputStream(noNameSpace.getBytes()), formattedXml);
                    String noXmlProcessingInstruction = formattedXml.toString().replaceAll("(?m)<\\?xml version=\"1.0\" encoding=\"UTF-8\"\\?>\n", "");
                    String singleQuotesLogMsgDest = noXmlProcessingInstruction.replaceAll("dest=\"logndisplay\"", "dest='logndisplay'");
                    out.print(singleQuotesLogMsgDest);
                }
            } catch (MarshalException e) {
                System.err.println("Fatal: caught MarshalException:" + e);
            } catch (ValidationException e) {
                System.err.println("Fatal: caught ValidationException:" + e);
            } catch (Exception e) {
                System.err.println("Fatal: Unhandled exception: " + e);
            }
        }
    }

