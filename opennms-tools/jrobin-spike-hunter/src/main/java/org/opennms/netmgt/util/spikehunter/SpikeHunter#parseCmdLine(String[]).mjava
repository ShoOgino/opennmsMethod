	public static void parseCmdLine(String[] argv) throws Exception {
		m_options.addOption("h", "help", false, "This help text");
		m_options.addOption("f", "file", true, "JRobin disk file on which to operate");
		m_options.addOption("d", "ds-name", true, "Data source names on which to operate, comma-separated. If unspecified, operate on all DSes.");
		m_options.addOption("a", "analysis-strategy", true, "Data analysis strategy. Defaults to percentile.");
		m_options.addOption("o", "operands", true, "Operands (numeric, comma-separated) for the selected analysis strategy. Defaults to 95,5.");
		m_options.addOption("r", "replacement-strategy", true, "Strategy for replacing spike samples, one of nan|previous|next, defaults to nan");
		m_options.addOption("n", "dry-run", false, "Just report spikes, do not make any changes to the JRobin disk file.");
		m_options.addOption("p", "dump-contents", false, "Just dump the DSes and RRAs in the JRobin disk file.");
		m_options.addOption("q", "quiet", false, "Do not print any informational output");
		m_options.addOption("v", "verbose", false, "Print plenty of informational output");
		
		CommandLineParser parser = new PosixParser();
        m_commandLine = parser.parse(m_options, argv);
        if (m_commandLine.hasOption("h")) {
        	usage(m_options, m_commandLine);
        	System.exit(0);
        }
        
        Map<String,Integer> analysisStrategies = new HashMap<String,Integer>();
        analysisStrategies.put("percentile", ANALYSIS_STRATEGIES.PERCENTILE_STRATEGY.ordinal());
        
        Map<String,Integer> replacementStrategies = new HashMap<String,Integer>();
        replacementStrategies.put("nan", REPLACEMENT_STRATEGIES.NAN_STRATEGY.ordinal());
        replacementStrategies.put("previous", REPLACEMENT_STRATEGIES.PREVIOUS_STRATEGY.ordinal());
        replacementStrategies.put("next", REPLACEMENT_STRATEGIES.NEXT_STRATEGY.ordinal());
        
        m_rrdFileName = m_commandLine.getOptionValue("f");
        m_dsNames = m_commandLine.getOptionValue("d", null);
        
        m_operands = new ArrayList<Double>();
        for (String operandStr : m_commandLine.getOptionValue("o", "95,5").split(",")) {
        	m_operands.add(Double.parseDouble(operandStr));
        }
        
        m_analysisStrategy = analysisStrategies.get(m_commandLine.getOptionValue("l", "percentile").toLowerCase());
        m_replacementStrategy = replacementStrategies.get(m_commandLine.getOptionValue("r", "nan").toLowerCase());
        
        m_dryRun = m_commandLine.hasOption("n");
        m_dumpContents = m_commandLine.hasOption("p");
        m_quiet = m_commandLine.hasOption("q");
        m_verbose = m_commandLine.hasOption("v");
	}

