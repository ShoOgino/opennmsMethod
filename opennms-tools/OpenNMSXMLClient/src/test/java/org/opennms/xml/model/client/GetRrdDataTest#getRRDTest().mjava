// 
// 
	@Test
	public void getRRDTest(){

		ClientPropertiesLoader clientProps = new ClientPropertiesLoader();
		clientProps.setPropertiesFilename("onmsxmlclient.properties");
		String opennmsUrl= clientProps.getOpennmsUrl();
		String password = clientProps.getPassword();
		String username = clientProps.getUsername();
		String foreign_source = clientProps.getForeign_source();// "imported:TestForeignSource1";
		
		BasicHttpMethods basicHttpMethods= new BasicHttpMethods();
		String result = "";
		
		Long currentepochseconds=new java.util.Date().getTime()/1000;
		
		String endTime = Long.toString(currentepochseconds); // today in seconds since epoch
		String startTime=Long.toString(currentepochseconds- 24*60*60); // one day ago in seconds since epoch
		
		String nodeFilter="ipaddr+iplike+*.*.*.*";
		String attributeSieve=".*";
		//attributeSieve="(icmp|ifOutOctets)"; // how to set up filter for values
		
		String requestParameters="filterRule="+nodeFilter+"&startTime="+startTime+"&endTime="+endTime+"&attributeSieve="+attributeSieve;
		
		try {
		   result = basicHttpMethods.sendGetRequest(opennmsUrl+"/opennms/summary/results.htm", requestParameters, username, password);
	    } catch (Throwable e) {
	    	e.printStackTrace();
	    	fail("exception caught in basicHttpMethods: "+e);
	    }
		System.out.println("Returned from Test:'"+this.getClass().getName()+"' :"+result.replace("<", "\n<"));

	}

