    /**
     * @param operator
     * @param operand
     * @param retVal
     * @param value
     * @return
     */
    protected Boolean checkStringCriteria(final String operator, String operand, String value) {
        Boolean retVal = null;
        String effectiveOperand, effectiveValue;

        effectiveValue = value;
        if (value == null) {
            effectiveValue = "";
        } else if (value.startsWith(".")) {
            effectiveValue = value.substring(1);
        }

        // Bug 2178 -- if this is a regex match, a leading "." in the operand
        // should not be stripped
        effectiveOperand = operand;
        if (operand.startsWith(".") && !MATCHES.equals(operator)) {
            effectiveOperand = operand.substring(1);
        }

        if (EQUALS.equals(operator)) {
            retVal = Boolean.valueOf(effectiveOperand.equals(effectiveValue));
        } else if (NOT_EQUAL.equals(operator)) {
            retVal = Boolean.valueOf(!effectiveOperand.equals(effectiveValue));
        } else if (MATCHES.equals(operator)) {
            retVal = Boolean.valueOf(Pattern.compile(effectiveOperand).matcher(effectiveValue).find());
        }

        return retVal;
    }

