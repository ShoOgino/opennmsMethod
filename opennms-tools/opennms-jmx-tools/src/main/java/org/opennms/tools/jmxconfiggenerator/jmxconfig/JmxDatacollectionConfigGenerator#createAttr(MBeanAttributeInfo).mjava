    private static Attrib createAttr(MBeanAttributeInfo jmxMBeanAttributeInfo) {
        Attrib xmlJmxAttribute = xmlObjectFactory.createAttrib();

        xmlJmxAttribute.setType("gauge");
        
        logger.debug("alias untuched: '{}'", jmxMBeanAttributeInfo.getName());
        logger.debug("alias dicttrim: '{}'", NameTools.trimByDictionary(jmxMBeanAttributeInfo.getName()));
        xmlJmxAttribute.setName(NameTools.trimByDictionary(jmxMBeanAttributeInfo.getName()));

        if (!aliasMap.containsKey(jmxMBeanAttributeInfo.getName())) {
            xmlJmxAttribute.setAlias(0 + jmxMBeanAttributeInfo.getName());
            aliasMap.put(jmxMBeanAttributeInfo.getName(), 0);
        } else {
            aliasMap.put(jmxMBeanAttributeInfo.getName(), aliasMap.get(jmxMBeanAttributeInfo.getName()) + 1);
            xmlJmxAttribute.setAlias(aliasMap.get(jmxMBeanAttributeInfo.getName()).toString() + jmxMBeanAttributeInfo.getName());
        }

        //find alias crashes caused by cuting down alias length to 19 chars
        if (aliasList.contains(NameTools.trimByCamelCase(xmlJmxAttribute.getAlias(), 19))) {
            logger.error("ALIAS CRASH AT :" + xmlJmxAttribute.getAlias() + "\t as: " + NameTools.trimByCamelCase(xmlJmxAttribute.getAlias(), 19));
            xmlJmxAttribute.setAlias(xmlJmxAttribute.getAlias() + "_NAME_CRASH_AS_19_CHAR_VALUE");
        } else {
            aliasList.add(NameTools.trimByCamelCase(xmlJmxAttribute.getAlias(), 19));
            xmlJmxAttribute.setAlias(NameTools.trimByCamelCase(xmlJmxAttribute.getAlias(), 19));
        }

        return xmlJmxAttribute;
    }

