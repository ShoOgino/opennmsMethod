    public MBeanServerConnection createMBeanServerConnection(String hostName, String port, String username, String password, Boolean ssl, Boolean jmxmp) {
        JMXConnector jmxConnector;
        JMXServiceURL jmxServiceURL;
        MBeanServerConnection jmxServerConnection = null;

        try {
            jmxServiceURL = new JMXServiceURL("service:jmx:rmi:///jndi/rmi://" + hostName + ":" + port + "/jmxrmi");
            if (username != null && password != null) {
                jmxConnector = JMXConnectorFactory.newJMXConnector(jmxServiceURL, null);
                HashMap<String, String[]> env = new HashMap<String, String[]>();
                String[] credentials = new String[]{username, password};
                env.put("jmx.remote.credentials", credentials);
                jmxConnector.connect(env);
            } else {
                jmxConnector = JMXConnectorFactory.connect(jmxServiceURL);
                jmxConnector.connect();
            }
            logger.debug("jmxServerConnection: '{}'", jmxServerConnection);

            jmxServerConnection = jmxConnector.getMBeanServerConnection();

            logger.debug("count: " + jmxServerConnection.getMBeanCount());
        } catch (MalformedURLException e) {
            logger.error("MalformedURLException '{}'", e.getMessage());
            e.printStackTrace();
        } catch (IOException e) {
            logger.error("IOException '{}'", e.getMessage());
            e.printStackTrace();
        }

        return jmxServerConnection;
    }

