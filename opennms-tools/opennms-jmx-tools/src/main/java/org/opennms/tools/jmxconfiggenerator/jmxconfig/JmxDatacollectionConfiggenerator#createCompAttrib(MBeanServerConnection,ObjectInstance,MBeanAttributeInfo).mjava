    private CompAttrib createCompAttrib(MBeanServerConnection jmxServerConnection, ObjectInstance jmxObjectInstance, MBeanAttributeInfo jmxMBeanAttributeInfo) {
        Boolean contentAdded = false;

        CompAttrib xmlCompAttrib = xmlObjectFactory.createCompAttrib();
        xmlCompAttrib.setName(jmxMBeanAttributeInfo.getName());
        xmlCompAttrib.setType("Composite");
        xmlCompAttrib.setAlias(jmxMBeanAttributeInfo.getName());

        CompositeData compositeData;
        try {
            logger.debug("Try to get composite data");
            compositeData = (CompositeData) jmxServerConnection.getAttribute(jmxObjectInstance.getObjectName(), jmxMBeanAttributeInfo.getName());			
			if (compositeData == null) logger.warn("compositeData is null. jmxObjectInstance.getObjectName: '{}', jmxMBeanAttributeInfo.getName: '{}'");
			if (compositeData != null) {
				logger.debug("compositeData.getCompositeType: '{}'", compositeData.getCompositeType());
				Set<String> keys = compositeData.getCompositeType().keySet();
				for (String key : keys) {
					Object compositeEntry = compositeData.get(key);
					if (numbers.contains(compositeEntry.getClass().getName())) {
						contentAdded = true;
						CompMember xmlCompMember = xmlObjectFactory.createCompMember();
						xmlCompMember.setName(key);

						logger.debug("composite member pure alias: '{}'", jmxMBeanAttributeInfo.getName() + StringUtils.capitalize(key));
						String alias = NameTools.trimByDictionary(jmxMBeanAttributeInfo.getName() + StringUtils.capitalize(key));
						alias = createAndRegisterUniceAlias(alias);
						xmlCompMember.setAlias(alias);
						logger.debug("composite member trimmed alias: '{}'", alias);

						xmlCompMember.setType("gauge");
						xmlCompAttrib.getCompMember().add(xmlCompMember);

					} else {
						logger.debug("composite member key '{}' object's class '{}' was not a number.", key, compositeEntry.getClass().getName());
					}
				}
			}
        } catch (Exception e) {
            logger.error("killed in action: '{}'", e.getMessage());
        }

        if (contentAdded) {
            logger.debug("xmlCompAttrib returned by createCompAttrib it's '{}'", xmlCompAttrib);
            return xmlCompAttrib;
        }
        return null;
    }

