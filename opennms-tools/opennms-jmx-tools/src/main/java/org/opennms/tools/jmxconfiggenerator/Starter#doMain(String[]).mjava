	public void doMain(String[] args) {

		CmdLineParser parser = new CmdLineParser(this);

		parser.setUsageWidth(80);

		try {
			parser.parseArgument(args);
			if (jmx && graph) {
				throw new CmdLineException(parser, "jmx and graph is set. Just use on at a time.");
			}
			if (!jmx && !graph) {
				throw new CmdLineException(parser, "set jmx or graph.");
			}
			if (jmx && hostName != null && port != null) {
				JmxDatacollectionConfigGenerator.generateJmxConfig(serviceName, hostName, port, !skipDefaultVM, runCompositeData);
				return;
			}
			if (graph && inputFile != null && outFile != null) {
				SnmpGraphConfigGenerator.generateGraphs(serviceName, inputFile, outFile);
				return;
			}
			throw new CmdLineException(parser, "no valid call found.");
		} catch (Exception e) {
			System.err.println(e.getMessage());
			System.err.println("JmxSaugBlaser [options...] arguments...");
			parser.printUsage(System.err);
			System.err.println();
			// System.err.println("  Example: java -jar JmxSaugBlaser" +
			// parser.printExample(ALL));
			System.err.println("Use a call linke:");
			System.err.println("  Example generation of jmx-datacollection.xml: java -jar JmxSaugBlaser.jar -jmx -host localhost -port 7199 [-service cassandra] [-runCompositeData] [-skipDefaultVM]");
			System.err.println("  Example generation of  snmp-graph.properties: java -jar JmxSaugBlaser.jar -graph -input test.xml -out test.properies [-service cassandra]");
			return;
		}
	}

