    @Test
    public void testRrdDatabase() throws Exception {
        createMockVariationRrds(null);
        RrdDb rrd = new RrdDb(m_variation);
        TimeSeriesDataSource rrdDatabase = new RrdDatabase(rrd);
        final int largestArchiveStep = 86400;

        final long end = getMidnightInSeconds(m_baseTime);
        final long start = (end - SECONDS_PER_YEAR + largestArchiveStep);
                                                  // ^^^^^^^^^^^^^^^^^^ accounts for the extra step added to each RRA in setUp()

        assertEquals(end, rrdDatabase.getEndTime());
        assertEquals(start, rrdDatabase.getStartTime());
        assertEquals(105120, rrdDatabase.getRows());

        assertEquals(0.981666666666667D, rrdDatabase.getDataAt(start).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.981666666666667D, rrdDatabase.getDataAt(start + 300).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.601111111111111D, rrdDatabase.getDataAt(start + (300 * 87276)).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(1.301111111111111D, rrdDatabase.getDataAt(start + (300 * 101088)).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.58D, rrdDatabase.getDataAt(end).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);

        List<RrdEntry> entries = rrdDatabase.getData(300);

        RrdEntry lastEntry = null;
        for (int i = 0; i < entries.size(); i++) {
            final RrdEntry entry = entries.get(i);
            if (lastEntry != null) {
                assertEquals(entry.getTimestamp(), lastEntry.getTimestamp() + 300);
            }
            lastEntry = entry;
        }

        assertEquals(0.981666666666667D, entries.get(0).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.981666666666667D, entries.get(87275).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.601111111111111D, entries.get(87276).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(1.301111111111111D, entries.get(101088).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.583333333333333D, entries.get(101089).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
    }

