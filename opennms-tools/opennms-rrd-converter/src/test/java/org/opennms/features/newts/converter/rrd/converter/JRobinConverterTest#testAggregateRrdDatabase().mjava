    @Test
    public void testAggregateRrdDatabase() throws Exception {
        createMockSineRrds(null);
        RrdDb source = new RrdDb(m_sineSourceA);
        RrdDb full = new RrdDb(m_sineFull);
  
        RrdDatabase sourceDatabase = new RrdDatabase(source);
        RrdDatabase fullDatabase = new RrdDatabase(full);
        List<RrdDatabase> datasources = new ArrayList<RrdDatabase>();
        datasources.add(sourceDatabase);
        datasources.add(fullDatabase);

        TimeSeriesDataSource aggregate = new AggregateTimeSeriesDataSource(datasources);
        assertEquals(300, aggregate.getNativeStep());
        assertEquals(1264006800, aggregate.getStartTime());
        assertEquals(1298046000, aggregate.getEndTime());
        assertEquals(113464, aggregate.getRows());

        assertEquals(Double.NaN, aggregate.getDataAt(1264006800).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.049168976942D, aggregate.getDataAt(1293210000).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.071266671798D, aggregate.getDataAt(1294181400).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.050000000000D, aggregate.getDataAt(1295626800).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.024241692151D, aggregate.getDataAt(1295629200).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.023515134858D, aggregate.getDataAt(1296836700).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
        assertEquals(0.023333333333D, aggregate.getDataAt(1298046000).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);

        List<RrdEntry> entries = aggregate.getData(150);
        assertEquals(entries.get(entries.size() - 1).getValue("a"), aggregate.getDataAt(aggregate.getEndTime() + 299).getValue("a"), ACCEPTABLE_DOUBLE_DELTA);
    }

