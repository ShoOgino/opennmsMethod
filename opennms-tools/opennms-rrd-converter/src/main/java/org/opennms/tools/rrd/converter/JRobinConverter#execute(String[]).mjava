    public void execute(final String[] args) throws ParseException, ConverterException, RrdException {
        if (args.length == 0) {
            System.err.println(new Date() + ": no directory specified!");
            System.exit(1);
        }

        final Options options = new Options();
        options.addOption("h", "help", false, "This help.");
        options.addOption("f", "factory", true, "The JRobin factory to use.");
        options.addOption("l", "log", true, "The log level to use. (Default: INFO)");
        options.addOption("t", "threads", true, "Number of threads to start.");

        final CommandLineParser parser = new GnuParser();
        final CommandLine cmd = parser.parse(options, args);

        LogUtils.setLevel(Level.valueOf(cmd.getOptionValue("l", "INFO")));
        RrdBackendFactory.setDefaultFactory(cmd.getOptionValue("f", "MNIO"));

        final Set<File> rrds = Collections.synchronizedSet(new HashSet<File>());

        if (cmd.hasOption("h")) {
            new HelpFormatter().printHelp("jrobin-converter", options);
            System.exit(1);
        }
        if (cmd.getArgList().size() == 0) {
            LogUtils.infof(this, "No files or directories specified!  Exiting.");
            System.exit(0);
        }
        for (final Object arg : cmd.getArgList()) {
            final File f = new File((String)arg);
            if (f.exists()) {
                if (f.isDirectory()) {
                    rrds.addAll(findGroupRrds(f));
                } else {
                    rrds.add(f);
                }
            }
        }

        int threads = 5;
        if (cmd.hasOption("t")) {
            try {
                Integer t = Integer.valueOf(cmd.getOptionValue("t"));
                threads = t;
            } catch (final NumberFormatException e) {
                LogUtils.warnf(JRobinConverter.class, e, "failed to format -t %s to a number", cmd.getOptionValue("t"));
            }
        }

        if (rrds.size() == 0) {
            System.err.println(new Date() + ": error, no storeByGroup RRDs found!");
            System.exit(1);
        }
        
        try {
            final ExecutorService executor = Executors.newFixedThreadPool(threads);
            JRobinConsolidationRunnable.setTotal(rrds.size());
            int count = 1;
            for (final File rrdFile : rrds) {
                executor.execute(new JRobinConsolidationRunnable(rrdFile, count++, this));
                try {
                    Thread.sleep(10);
                } catch (final InterruptedException e) {
                    Thread.currentThread().interrupt();
                }
            }
            executor.shutdown();
        } catch (final Exception e) {
            System.err.println(new Date() + ": error while converting RRDs");
            e.printStackTrace();
        }
    }

