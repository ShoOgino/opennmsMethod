    private static void updateAssetTable(List<Address> addresses) throws ClassNotFoundException, SQLException {
    	
    	String sql = "" +
    			"SELECT a.id AS \"id\", " +
    			"       a.nodeid AS \"nodeid\", " +
    			"       a.address1 AS \"address1\", " +
    			"       a.city AS \"city\", " +
    			"       a.state AS \"state\", " +
    			"       a.zip AS \"zip\", " +
    			"       a.country AS \"country\", " +
    			"       a.department AS \"department\", " +
    			"       a.division AS \"division\", " +
    			"       a.region AS \"region\" " +
    			"  FROM assets a " +
    			"  JOIN node n on n.nodeid = a.nodeid " +
    			" WHERE n.foreignsource = ?";
    	
    	Connection con = createConnection();
    	con.setAutoCommit(false);
    	PreparedStatement ps = con.prepareStatement(sql, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
    	
    	for (Address address : addresses) {
			String foreignSource = "Store" + StringUtils.leftPad(address.getForeignSource(), 4, '0');
			ps.setString(1, foreignSource);
			
			ResultSet rs = ps.executeQuery();
			
			rs.last();
			int rows = rs.getRow();
			if (rows < 1) {
				rs.close();
				System.out.println("No results found for foreignsource: "+foreignSource+"; continuing to next foreignsource...");
				continue;
			}
			
			rs.beforeFirst();
			
			while (rs.next()) {
				System.out.println("Updating node: "+rs.getInt("nodeid"));
				rs.updateString("address1", address.getAddress());
				rs.updateString("city", address.getCity());
				rs.updateString("state", address.getState());
				rs.updateString("zip", address.getZip());
				rs.updateString("country", address.getCountry());
				rs.updateString("department", address.getDepartment());
				rs.updateString("division", address.getDivision());
				rs.updateString("region", address.getRegion());
				rs.updateRow();
			}
			rs.close();
		}
    	
    	ps.close();
    	try {
			con.commit();
		} catch (SQLException e) {
			e.printStackTrace();
			con.rollback();
		}
    	con.close();
	}

