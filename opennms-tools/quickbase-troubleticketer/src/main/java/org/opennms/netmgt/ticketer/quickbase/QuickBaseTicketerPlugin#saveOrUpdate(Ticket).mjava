    public void saveOrUpdate(Ticket ticket) {

	    try {
	        
	       Properties props = getProperties();
	       
	       QuickBaseClient qdb = createClient(getUserName(props), getPassword(props), getUrl(props));
	       
           String dbId = qdb.findDbByName(getApplicationName(props));
	       
           HashMap<String, String> record = new HashMap<String, String>();
           
           record.put(getSummaryField(props), ticket.getSummary());
           record.put(getDetailsField(props), ticket.getDetails());
           record.put(getStateField(props), getQuickBaseStateValue(ticket.getState(), props));
           
	       if (ticket.getId() == null) {
	           addAdditionCreationFields(record, props);
	           String recordId = qdb.addRecord(dbId, record);
	           ticket.setId(recordId);
	       } else {
	           Ticket oldTicket = get(ticket.getId());
	           if (ticket.getModificationTimestamp().equals(oldTicket.getModificationTimestamp())) {
	               qdb.editRecord(dbId, record, ticket.getId());	               
	           } else {
	               throw new OptimisticLockingFailureException("Ticket has been updated while this ticket was in memory! Reload and try again!");
	           }

	       }
	       
	    } catch (Exception e) {
            throw new DataRetrievalFailureException("Failed to commit QuickBase transaction: "+e.getMessage(), e);
	    }
	        
	}

