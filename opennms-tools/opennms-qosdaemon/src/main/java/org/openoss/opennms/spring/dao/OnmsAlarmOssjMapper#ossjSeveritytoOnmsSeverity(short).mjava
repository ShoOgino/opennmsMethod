	/**
	 * convenience method to map OSS/J to OpenNMS severities
	 * A switch statement converts the OSS/J severity qualifier
	 * over to one compatible with OpenNMS
	 * From OpenNMS code;
	 * public static final int INDETERMINATE_SEVERITY = 1;
	 * public static final int CLEARED_SEVERITY = 2;
	 * public static final int NORMAL_SEVERITY = 3;
	 * public static final int WARNING_SEVERITY = 4;
	 * public static final int MINOR_SEVERITY = 5;
	 * public static final int MAJOR_SEVERITY = 6;
	 * public static final int CRITICAL_SEVERITY = 7;
	 *
	 * NOTE  org.opennms.web.alarm.Alarm.NORMAL_SEVERITY has no equivilent in OSS/J X733
	 *
	 * @param ossjseverity the severity value according to ossj / X733
	 * @return the severity value according to opennms
	 * @throws java.lang.IllegalArgumentException if any.
	 */
	public static OnmsSeverity ossjSeveritytoOnmsSeverity(short ossjseverity) throws IllegalArgumentException{

		OnmsSeverity onmsseverity;

		switch(ossjseverity)
		{
		case javax.oss.fm.monitor.PerceivedSeverity.INDETERMINATE:
			onmsseverity = OnmsSeverity.INDETERMINATE;
			break;
		case javax.oss.fm.monitor.PerceivedSeverity.CLEARED:
			onmsseverity = OnmsSeverity.CLEARED;
			break;
		case javax.oss.fm.monitor.PerceivedSeverity.WARNING:
			onmsseverity = OnmsSeverity.WARNING;
			break;
		case javax.oss.fm.monitor.PerceivedSeverity.MINOR:
			onmsseverity = OnmsSeverity.MINOR;
			break;
		case javax.oss.fm.monitor.PerceivedSeverity.MAJOR:
			onmsseverity = OnmsSeverity.MAJOR;
			break;
		case javax.oss.fm.monitor.PerceivedSeverity.CRITICAL:
			onmsseverity = OnmsSeverity.CRITICAL;
			break;
		default: throw new IllegalArgumentException("invalid OSS/J severity value:"+ossjseverity);
		}
		return onmsseverity;
	}

