	// This will return a single instance of this call (creating one if none exist)
	// call it using StartProperties appParams = StartProperties.getInstance();
	/**
	 * <p>Getter for the field <code>instance</code>.</p>
	 *
	 * @return a {@link org.openoss.opennms.spring.qosd.PropertiesLoader} object.
	 * @throws java.io.FileNotFoundException if any.
	 * @throws java.io.IOException if any.
	 */
	public static PropertiesLoader getInstance() throws FileNotFoundException, IOException
	{
		if (instance == null) // test if an instance exists, if so then return it
		{
			// Create an instance in a synchronized block to avoid access by multiple threads
			// (avoids inefficiency of declaring method body synchronized)
			synchronized(org.openoss.opennms.spring.qosd.PropertiesLoader.class)
			{
				// check once again to ensure first check didn't let two threads through at the same time
				if (instance == null)
					instance = new PropertiesLoader(); // create the new instance
			}
		}
		return instance; // return the single StartProperties object
	}

