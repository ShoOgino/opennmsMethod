	// This will return a single instance of this call (creating one if none exist)
	/**
	 * <p>Getter for the field <code>instance</code>.</p>
	 *
	 * @return a {@link org.openoss.opennms.spring.dao.OssDao} object.
	 */
	public static OssDao getInstance() {
		if (instance == null) // test if an instance exists, if so then return it
		{
			// Create an instance in a synchronized block to avoid access by multiple threads
			// (avoids inefficiency of declaring method body synchronized)
			synchronized(OssDaoOpenNMSImplSingleton.class)
			{
				// check once again to ensure first check didn't let two threads through at the same time
				if (instance == null)
					instance = new OssDaoOpenNMSImpl(); // create the new instance
				instance.setAlarmDao(alarmDao);
				instance.setAssetRecordDao(assetRecordDao);
				instance.setDataSource(dataSource);
				instance.setNodeDao(nodeDao);
				// Seth 2010-05-04: This field was being set on the singleton factory,
				// but not the constructed instances; keeping it that way for now
				// instance.setTransTemplate(transTemplate);
			}
		}
		return instance; // return the single OssDaoOpenNMSImpl object
	}

