    public void execute(String[] args, int threadid) throws Exception {

        double millisPerUpdate = ((double) UPDATE_TIME * 1000) / ((double) (MAX_UPDATES));
	System.out.println("Will perform one update every " +millisPerUpdate + "ms");
        while (moreUpdates()) {
//		System.out.println(threadid+":More updates to do");
            int fileNum = nextFileNum();
            Object rrd = rrdOpenFile(getFileName(fileNum));

            for (int i = 0; i < UPDATES_PER_OPEN; i++) {
                Date now = new Date();
                long elapsedTime = now.getTime() - updateStart.getTime();
//		System.out.println(threadid+":It's been "+elapsedTime+"ms since we started, and we've updated "+updateCount +" so far");
                long expectedTime = (long) (millisPerUpdate * (double) updateCount);
//		System.out.println(threadid+":And I want it to be "+expectedTime);
                if (expectedTime > elapsedTime) {
                    try {
//			System.out.println(threadid+":Sleeping for "+(expectedTime-elapsedTime));
                        Thread.sleep(expectedTime - elapsedTime);
                    } catch (InterruptedException e) {
                    }
                }

                String line = getNextLine(fileNum);
                try {
                    rrdUpdateFile(rrd, line);
                    countUpdate();
                } catch (Throwable e) {
                    print(threadid+":RRD ERROR: " + line + " : " + e.getMessage());
                }
            }
            rrdCloseFile(rrd);
        }

    }

