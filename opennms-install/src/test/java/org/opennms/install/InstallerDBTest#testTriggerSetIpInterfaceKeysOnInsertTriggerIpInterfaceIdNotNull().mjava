    public void testTriggerSetIpInterfaceKeysOnInsertTriggerIpInterfaceIdNotNull() throws Exception {
        if (!isDBTestEnabled()) {
            return;
        }

        m_installer.createSequences();
        m_installer.updatePlPgsql();
        m_installer.addStoredProcedures();

        m_installer.createTables();

        executeSQL("INSERT INTO node (nodeId, nodeCreateTime) VALUES ( 1, now() )");
        executeSQL("INSERT INTO ipInterface (nodeId, ipAddr, ifIndex) VALUES ( 1, '1.2.3.4', null )");
        executeSQL("INSERT INTO service (serviceID, serviceName) VALUES ( 1, 'COFFEE-READY' )");

        Statement st = m_installer.m_dbconnection.createStatement();
        ResultSet rs = st.executeQuery("SELECT id from ipInterface");
        assertTrue("could not advance to read first results row from ipInterface",
                   rs.next());
        int ipInterfaceId = rs.getInt(1);

        executeSQL("INSERT INTO ifServices (ipInterfaceId, serviceID) VALUES ( "
                   + ipInterfaceId + ", 1)");

        st = m_installer.m_dbconnection.createStatement();
        rs = st.executeQuery("SELECT id, ipInterfaceID from ifServices");
        assertTrue("could not advance to read first row in ResultSet",
                   rs.next());
        rs.getInt(1);
        assertFalse("ifServices.id should be non-null", rs.wasNull());
        // Don't care about the id
        //assertEquals("ifServices.id", 2, rs.getInt(1));
        assertEquals("ifServices.ipInterfaceId", ipInterfaceId, rs.getInt(2));
        assertFalse("ResultSet contains more than one row", rs.next());
    }

