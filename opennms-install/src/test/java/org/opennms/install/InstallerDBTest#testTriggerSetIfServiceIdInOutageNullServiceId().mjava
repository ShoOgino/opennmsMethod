    public void testTriggerSetIfServiceIdInOutageNullServiceId() throws Exception {
        if (!isDBTestEnabled()) {
            return;
        }

        m_installer.createSequences();
        m_installer.createTables();

        m_installer.updatePlPgsql();
        
        m_installer.addStoredProcedures();
        
        executeSQL("INSERT INTO node (nodeId, nodeCreateTime) VALUES ( 1, now() )");
        executeSQL("INSERT INTO ipInterface (nodeId, ipAddr, ifIndex) VALUES ( 1, '1.2.3.4', null )");
        executeSQL("INSERT INTO service (serviceID, serviceName) VALUES ( 1, 'COFFEE-READY' )");
        executeSQL("INSERT INTO ifServices (nodeID, ipAddr, ifIndex, serviceID) VALUES ( 1, '1.2.3.4', null, 1)");
        
        ThrowableAnticipator ta = new ThrowableAnticipator();
        ta.anticipate(new AssertionFailedError("Could not execute statement: 'INSERT INTO outages (outageId, nodeId, ipAddr, ifLostService, serviceID ) VALUES ( nextval('outageNxtId'), 1, '1.2.3.4', now(), null )': ERROR: Outages Trigger Exception: No service found for... nodeid: 1  ipaddr: 1.2.3.4  serviceid: <NULL>"));
        try {
            executeSQL("INSERT INTO outages (outageId, nodeId, ipAddr, ifLostService, serviceID ) "
                       + "VALUES ( nextval('outageNxtId'), 1, '1.2.3.4', now(), null )");
        } catch (Throwable t) {
            ta.throwableReceived(t);
        }
        
        ta.verifyAnticipated();

        /*
        Statement st = m_installer.m_dbconnection.createStatement();
        ResultSet rs = st.executeQuery("SELECT outageId, ifServiceId from outages");
        assertTrue("could not advance to read first row in ResultSet", rs.next());
        assertEquals("expected outages outageId", 1, rs.getInt(1));
        assertEquals("expected outages ifServiceId", 1, rs.getInt(2));
        assertFalse("ResultSet contains more than one row", rs.next());
        */
    }

