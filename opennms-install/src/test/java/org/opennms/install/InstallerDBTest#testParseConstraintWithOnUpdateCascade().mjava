    public void testParseConstraintWithOnUpdateCascade() throws Exception {
        // Make sure that every table, column, and key ID has at least one
        // upper case character
        final String createSQL =
            "create table a (\n"
                + "    a1           integer,\n"
                + "    constraint pk_a primary key (a1)\n"
                + ");\n"
                + "create table b (\n"
                + "    b1           integer,\n"
                + "    constraint fk_a foreign key (b1) references a (a1) "
                        + "on update cascade\n"
                + ");\n";

        m_installer.readTables(new StringReader(createSQL));
        Table a = m_installer.getTableFromSQL("a");
        Table b = m_installer.getTableFromSQL("b");

        /*
        List<Column> columns = table.getColumns();
        assertNotNull("column list is not null", columns);
        assertEquals("column count", 3, columns.size());
        assertEquals("column zero toString()", "mapid integer(4) NOT NULL",
                     columns.get(0).toString());
        assertEquals("column one toString()",
                     "elementid integer(4) NOT NULL",
                     columns.get(1).toString());
        assertEquals("column two toString()",
                     "somethingelse character varying(80)",
                     columns.get(2).toString());

        List<Constraint> foo = table.getConstraints();

        assertNotNull("constraint list is not null", foo);
        assertEquals("constraint count is one", 1, foo.size());
        Constraint f = foo.get(0);
        assertNotNull("constraint zero is not null", f);
        assertEquals("constraint getTable()", "element", f.getTable());
        assertEquals("constraint zero toString()",
                     "constraint pk_element primary key (mapid, elementid)",
                     f.toString());
        */
    }

