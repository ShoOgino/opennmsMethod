    private void parse(String constraintSQL) throws Exception {
        Matcher m;

        m = Pattern.compile("(?i)constraint (\\S+) "
        		+ "primary key \\((.*)\\)").matcher(constraintSQL);
        if (m.matches()) {
            setName(m.group(1));
            setType(PRIMARY_KEY);
            String[] columns = m.group(2).split("\\s*,\\s*");
            setColumns(Arrays.asList(columns));
            return;
        }

        m = Pattern.compile("(?i)constraint (\\S+)\\s+"
			    + "foreign key\\s+\\(([^\\(\\)]+)\\)\\s+"
			    + "references\\s+(\\S+)"
			    + "(?:\\s+\\(([^\\(\\)]+)\\))?"
			    + "(\\s+on\\s+delete\\s+cascade)?").matcher(constraintSQL);
        if (!m.matches()) {
            throw new Exception("Cannot parse constraint: " + constraintSQL);
        }
        	
        setName(m.group(1));
        setType(FOREIGN_KEY);
        String[] columns = m.group(2).split("\\s*,\\s*");
        setColumns(Arrays.asList(columns));
        setForeignTable(m.group(3));
        String[] foreignColumns;
        if (m.group(4) == null) {
            foreignColumns = m.group(2).split("\\s*,\\s*");
        } else {
            foreignColumns = m.group(4).split("\\s*,\\s*");
        }
        setForeignColumns(Arrays.asList(foreignColumns));
        if (m.group(5) == null) {
        	setForeignDelType("a");
        } else {
        	setForeignDelType("c");
        }
    }

