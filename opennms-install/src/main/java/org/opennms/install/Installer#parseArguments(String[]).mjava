    public void parseArguments(String[] argv) throws Exception {
        LinkedList<String> args = new LinkedList<String>();

        for (int i = 0; i < argv.length; i++) {
            StringBuffer b = new StringBuffer(argv[i]);
            boolean is_arg = false;

            while (b.length() > 0 && b.charAt(0) == '-') {
                is_arg = true;
                b.deleteCharAt(0);
            }

            if (is_arg) {
                while (b.length() > 0) {
                    char c = b.charAt(0);
                    b.deleteCharAt(0);

                    switch (c) {
                    case 'h':
                        printHelp();
                        break;

                    case 'c':
                        m_installerDb.setForce(true);
                        break;

                    case 'C':
                        i++;
                        m_fix_constraint = true;
                        m_fix_constraint_name = getNextArg(argv, i, 'C');
                        break;

                    case 'd':
                        m_update_database = true;
                        break;

                    case 'D':
                        i++;
                    	m_pg_url = getNextArg(argv, i, 'D');
                    	break;
                    	
                    case 'i':
                        m_do_inserts = true;
                        break;

                    case 'n':
                        m_skip_constraints = true;

                    case 'N':
                        m_installerDb.setIgnoreNotNull(true);
                        break;

                    case 'p':
                        i++;
                        m_pg_pass = getNextArg(argv, i, 'p');
                        break;

                    case 'R':
                        m_installerDb.setNoRevert(true);
                        break;

                    case 's':
                        m_update_iplike = true;
                        break;

                    case 'T':
                        i++;
                        m_tomcat_conf = getNextArg(argv, i, 'T');
                        break;

                    case 'u':
                        i++;
                        m_pg_user = getNextArg(argv, i, 'u');
                        m_installerDb.setPostgresAdminUser(m_pg_user);
                        break;

                    case 'U':
                        m_update_unicode = true;
                        break;

                    case 'w':
                        i++;
                        m_webappdir = getNextArg(argv, i, 'w');
                        break;

                    case 'x':
                        m_installerDb.setDebug(true);
                        break;

                    case 'X':
                        m_fix_constraint_remove_rows = true;
                        break;

                    case 'y':
                        m_install_webapp = true;
                        break;

                    default:
                        throw new Exception("unknown option '" + c + "'"
                                + ", use '-h' option for usage");
                    }
                }
            } else {
                args.add(argv[i]);
            }
        }

        if (args.size() != 0) {
            throw new Exception("too many command-line arguments specified");
        }
    }

