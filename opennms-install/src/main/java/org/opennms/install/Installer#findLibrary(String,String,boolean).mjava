    public String findLibrary(String libname, String path, boolean isRequired) throws Exception {
    	String fullname = System.mapLibraryName(libname);

    	String defaultPath = System.getProperty("java.library.path");
    	if (defaultPath != null) {
    		if (path != null) {
    			path += File.pathSeparator + defaultPath;
    		} else {
    			path = defaultPath;
    		}
    	}
    	
    	if (path != null) {
    		String[] paths = path.split(File.pathSeparator);
    		m_out.println("- searching for " + libname + ":");
    		for (int i = 0; i < paths.length; i++) {
    		    File entry = new File(paths[i]);
    		    
                if (entry.isFile()) {
                    // if they specified a file, try the parent directory instead
                    paths[i] = entry.getParent();
                }

   			    String fullpath = paths[i] + File.separator + fullname;
   			    if (loadLibrary(fullpath)) {
   			        return fullpath;
   			    }
    		}
    	}
    	
        m_out.println("Failed to load the " + libname + " library.");

        if (isRequired) {
            m_out.println("It is required at runtime.  By default, we search the java library path:");
            for (String pathEntry : System.getProperty("java.library.path").split(File.pathSeparator)) {
                m_out.println("  " + pathEntry);
            }
            m_out.println("\nFor more information, see http://www.opennms.org/index.php/" + libname + "\n");
            throw new Exception("A fatal error occurred, exiting installer.");
        } else {
            m_out.println("This error is not fatal, since " + libname + " is only required for optional features.");
            m_out.println("For more information, see http://www.opennms.org/index.php/" + libname + "\n");
        }

        return null;
    }

