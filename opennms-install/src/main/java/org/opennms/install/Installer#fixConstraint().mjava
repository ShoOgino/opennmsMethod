    public void fixConstraint() throws Exception {
        List<Constraint> constraints = getForeignKeyConstraints();
        Constraint constraint = null;

        m_out.print("- fixing rows that violate constraint "
                + m_fix_constraint_name + "... ");

        for (Constraint c : constraints) {
            if (m_fix_constraint_name.equals(c.getName())) {
                constraint = c;
                break;
            }
        }

        if (constraint == null) {
            throw new Exception("Did not find constraint "
                    + m_fix_constraint_name + " in the database.");
        }

        String table = constraint.getTable();
        String column = constraint.getColumns().get(0);
        String ftable = constraint.getForeignTable();
        String fcolumn = constraint.getForeignColumns().get(0);

        if (!tableExists(table)) {
            throw new Exception("Constraint " + m_fix_constraint_name
                    + " is on table " + table + ", but table does "
                    + "not exist (so fixing this constraint does "
                    + "nothing).");
        }

        if (!tableColumnExists(table, column)) {
            throw new Exception("Constraint " + m_fix_constraint_name
                    + " is on column " + column + " of table " + table
                    + ", but column does "
                    + "not exist (so fixing this constraint does "
                    + "nothing).");
        }

        String where = getForeignConstraintWhere(table, column, ftable,
                                                 fcolumn);

        String query;
        String change_text;

        if (m_fix_constraint_remove_rows) {
            query = "DELETE FROM " + table + " " + where;
            change_text = "DELETED";
        } else {
            query = "UPDATE " + table + " SET " + column + " = NULL " + where;
            change_text = "UPDATED";
        }

        Statement st = m_dbconnection.createStatement();
        int num = st.executeUpdate(query);

        m_out.println(change_text + " " + num + (num == 1 ? " ROW" : " ROWS"));
    }

