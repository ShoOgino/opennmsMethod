    /** {@inheritDoc} 
     * @throws ReportDeliveryException */
    @Override
    public void deliverReport(Report report, String fileName) throws ReportDeliveryException {
        try {

            JavaSendMailer sm = null;
            String mailer = report.getMailer();
            LOG.debug("deliverReport with mailer={}", mailer);
            if (mailer != null && mailer.length() > 0) {
                sm = new JavaSendMailer(m_JavamailConfigDao.getSendMailConfig(mailer));
            } else {
                sm = new JavaSendMailer(m_JavamailConfigDao.getDefaultSendmailConfig());
            }
            MimeMessageHelper helper = new MimeMessageHelper(sm.getMessage().getMimeMessage(),true);
                
            helper.setTo(report.getRecipient());
            helper.setSubject("OpenNMS Report: " + report.getReportName());
            helper.setText("OpenNMS Report: "); // FIXME: sm.send() will override this.
                
            helper.addAttachment(fileName, new File(fileName));
                
            sm.setMessage(new MimeMailMessage(helper));
            sm.send();

        } catch (JavaMailerException e) {
            LOG.error("Problem with JavaMailer {}", e.getMessage(), e);
            throw new ReportDeliveryException("Caught JavaMailerException: " + e.getMessage());
        } catch (MessagingException e) {
            LOG.error("Problem with Messaging {}", e.getMessage(), e);
            throw new ReportDeliveryException("Caught MessagingException: " + e.getMessage());
        } catch (Throwable e) {
            LOG.error("Unexpected exception: {}",e.getMessage(), e);
            throw new ReportDeliveryException("Caught unexpected " + e.getClass().getName() + ": " + e.getMessage());
        }
        
    }

