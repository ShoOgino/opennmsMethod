    public void rebuildReportSchedule() {
        
        LogUtils.infof(this,"rebuildReportSchedule: obtaining lock...");


        synchronized (m_lock) {
            LogUtils.debugf(this,"rebuildReportSchedule: lock acquired. reloading configuration...");

            try {
                m_configDao.reloadConfiguration();

                LogUtils.debugf(this,"rebuildReportSchedule: removing current report jobs from schedule...");
                removeCurrentJobsFromSchedule();

                LogUtils.debugf(this,"rebuildReportSchedule: recreating report schedule based on configuration...");
                buildReportSchedule();
                
                printCurrentSchedule();

            } catch (DataAccessResourceFailureException e) {
                LogUtils.errorf(this, e, "rebuildReportSchedule: %s", e.getMessage());
                throw new IllegalStateException(e);

            } 

        }

        LogUtils.infof(this,"rebuildReportSchedule: schedule rebuilt and lock released.");
   
    }

