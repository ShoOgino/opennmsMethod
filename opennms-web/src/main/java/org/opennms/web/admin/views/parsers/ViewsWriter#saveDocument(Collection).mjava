    /**
     * This method saves a list of views to the specified file
     * 
     * @exception XMLWriteException
     */
    protected void saveDocument(Collection views) throws XMLWriteException {
        Element root = m_document.createElement("viewinfo");
        m_document.appendChild(root);

        // write the header
        XMLHeader header = new XMLHeader(getVersion(), m_document);
        root.appendChild(header.getHeaderElement());

        if (views.size() > 0) {
            Element viewsElement = addEmptyElement(root, "views");

            Object viewsArray[] = views.toArray();
            for (int i = 0; i < viewsArray.length; i++) {
                View curView = (View) viewsArray[i];

                Element curViewElement = addEmptyElement(viewsElement, "view");

                addDataElement(curViewElement, "name", curView.getViewName());

                if (curView.getViewTitle() != null && !curView.getViewTitle().equals("")) {
                    addDataElement(curViewElement, "title", curView.getViewTitle());
                }

                if (curView.getViewComments() != null && !curView.getViewComments().equals("")) {
                    addDataElement(curViewElement, "comment", curView.getViewComments());
                }

                Element commonElement = addEmptyElement(curViewElement, "common");
                addCDataElement(commonElement, "rule", curView.getCommon());

                List categoryList = curView.getCategories();

                // if no categories don't save them
                if (categoryList.size() > 0) {
                    Element categoryElement = addEmptyElement(curViewElement, "categories");

                    for (int j = 0; j < categoryList.size(); j++) {
                        Category curCategory = (Category) categoryList.get(j);

                        Element curCategoryElement = addEmptyElement(categoryElement, "category");

                        addCDataElement(curCategoryElement, "label", curCategory.getLabel());

                        if (curCategory.getComments() != null && !curCategory.getComments().trim().equals("")) {
                            addCDataElement(curCategoryElement, "categoryComment", curCategory.getComments());
                        }

                        addDataElement(curCategoryElement, "normal", curCategory.getNormal());
                        addDataElement(curCategoryElement, "warning", curCategory.getWarning());

                        // write out any services for the category
                        List services = curCategory.getServices();
                        for (int m = 0; m < services.size(); m++) {
                            addDataElement(curCategoryElement, "service", (String) services.get(m));
                        }

                        addCDataElement(curCategoryElement, "rule", curCategory.getRule());
                    }
                }

                // write out the members
                List userMembers = curView.getUserMembers();
                List groupMembers = curView.getGroupMembers();

                if (userMembers.size() > 0 || groupMembers.size() > 0) {
                    Element membershipElement = addEmptyElement(curViewElement, "membership");

                    for (int k = 0; k < userMembers.size(); k++) {
                        Element userMemberElement = addDataElement(membershipElement, "member", (String) userMembers.get(k));
                        userMemberElement.setAttribute("type", "user");
                    }

                    for (int l = 0; l < groupMembers.size(); l++) {
                        Element groupMemberElement = addDataElement(membershipElement, "member", (String) groupMembers.get(l));
                        groupMemberElement.setAttribute("type", "group");
                    }
                }
            }
        }

        serializeToFile();
    }

