    private List<ColumnTracker> getTrackers(int max) {
        List<ColumnTracker> trackers = new ArrayList<ColumnTracker>(max);
        List<ColumnTracker> trackerList = new ArrayList<ColumnTracker>(m_columnTrackers);

        Collections.sort(trackerList, new Comparator<ColumnTracker>() {
            public int compare(ColumnTracker o1, ColumnTracker o2) {
                return new CompareToBuilder()
                    .append(o1.getCurrentRow(), o2.getCurrentRow())
                    .append(o1.getBase(), o2.getBase())
                    .toComparison();
            }
        });

        for (int i = 0; i < trackerList.size(); i++) {
            if (trackers.size() >= max) {
                return trackers;
            }
            ColumnTracker ct = trackerList.get(i);
            if (!ct.isFinished()) {
                trackers.add(ct);
            }
        }

        return trackers;
    }

