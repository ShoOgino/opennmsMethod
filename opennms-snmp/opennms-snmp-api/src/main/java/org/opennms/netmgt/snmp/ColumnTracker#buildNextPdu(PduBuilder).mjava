    public ResponseProcessor buildNextPdu(PduBuilder pduBuilder) {
        if (pduBuilder.getMaxVarsPerPdu() < 1)
            throw new IllegalArgumentException("maxVarsPerPdu < 1");
        
        pduBuilder.addOid(m_last);
        pduBuilder.setNonRepeaters(0);
        // TODO: fix spelling
        pduBuilder.setMaxRepetitions(getMaxRepititions());
        
        ResponseProcessor rp = new ResponseProcessor() {

            public void processResponse(SnmpObjId responseObjId, SnmpValue val) {
                if (val.isEndOfMib())
                    receivedEndOfMib();

                m_last = responseObjId;
                if (m_base.isPrefixOf(responseObjId) && !m_base.equals(responseObjId)) {
                    SnmpInstId inst = responseObjId.getInstance(m_base);
                    if (inst != null)
                        storeResult(m_base, inst, val);
                }
            }

            public boolean processErrors(int errorStatus, int errorIndex) {
                if (errorStatus == NO_ERR) {
                    return false;
                } else if (errorStatus == TOO_BIG_ERR) {
                    throw new IllegalArgumentException("Unable to handle tooBigError for oid request "+m_last);
                } else if (errorStatus == GEN_ERR) {
                    reportGenErr("Received genErr reqeusting oid "+m_last+". Marking column is finished.");
                    errorOccurred();
                    return true;
                } else if (errorStatus == NO_SUCH_NAME_ERR) {
                    reportNoSuchNameErr("Received noSuchName reqeusting oid "+m_last+". Marking column is finished.");
                    errorOccurred();
                    return true;
                } else {
                    throw new IllegalArgumentException("Unexpected error processing oid "+m_last+". Aborting!");
                }
            }
        };
        
        return rp;
    }

