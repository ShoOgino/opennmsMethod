    /*
     * move row tracking to SnmpTableResult
     * propagate maxRepetitions to children/columns
     * 
     * handle full table
     * handle missing cell
     * handle missing column
     * handle timeout
     * handle errors
     * 
     * work inside an aggregate tracker
     * 
     * ensure 'processedRows' are 'freed'
     * 
     * ensure rows are processed as soon as possible
     * 
     * handle rows with 'non-int' instances
     * 
     * properly handle maxVarsPerPdu correctly
     */
    @Test
    public void testTableTrackerWithFullTable() throws Exception {
        TestRowCallback rc = new TestRowCallback();
        TableTracker tt = new TableTracker(rc, m_ifIndex, m_ifDescr, m_ifSpeed);

        walk(tt, 3, 10);

        ResultTable results = rc.getResults();
        assertTrue("tracker must be finished", tt.isFinished());
        assertEquals("number of rows added must match test data", 6, results.getRowsAdded());
        assertEquals("number of rows must match test data", 6, results.getRowCount());
        assertEquals("number of columns must match test data", 3, results.getColumnCount());
        assertEquals("ifIndex.5 must be 5", 5, results.getResult(m_ifIndex, "5").toInt());
        assertEquals("ifName.2 must be gif0", "gif0", results.getResult(m_ifDescr, "2").toString());
        assertEquals("ifSpeed.3 must be 0", 0, results.getResult(m_ifSpeed, "3").toLong());
        assertEquals("ifSpeed.4 must be 10000000", 10000000, results.getResult(m_ifSpeed, "4").toLong());

    }

