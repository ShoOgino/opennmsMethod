	public void decodeBER(BERInputStream inputStream) throws java.io.IOException {
		BER.MutableByte type = new BER.MutableByte();
		byte[] value = BER.decodeString(inputStream, type);
		if (type.getValue() != BER.IPADDRESS) {
			throw new IOException("Wrong type encountered when decoding Counter: "+
					type.getValue());
		}
		if (value.length != 4) {
			if ( (value.length == 8) && Boolean.getBoolean("org.opennms.snmp.workarounds.allow64BitIpAddress") ) {
	            byte[] tempValue = { 0,0,0,0 };
	            for (int i = 0; i < 4; i++) {
	            	tempValue[i] = value[i];
	            }
	            value = tempValue;
	            if (log().isDebugEnabled()) {
	            	log().debug("Working around misencoded IpAddress (8 bytes, truncating to 4); likely dealing with a buggy Net-SNMP agent");
	            }
			} else {
				throw new IOException("IpAddress encoding error, wrong length: " +
						value.length);
			}
		}

		this.setInetAddress(InetAddress.getByAddress(value));
	}

