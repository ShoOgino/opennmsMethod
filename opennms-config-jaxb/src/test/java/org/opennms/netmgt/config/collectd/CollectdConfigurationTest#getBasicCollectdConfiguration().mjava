    private static CollectdConfiguration getBasicCollectdConfiguration() {
        final CollectdConfiguration config = new CollectdConfiguration();

        config.setThreads(50);

        final Package p = new Package();
        p.setName("example1");

        p.setFilter(new Filter("IPADDR != '0.0.0.0'"));
        p.addIncludeRange(new IncludeRange("1.1.1.1", "254.254.254.254"));

        final Service snmp = new Service();
        snmp.setName("SNMP");
        snmp.setInterval(30000l);
        snmp.setUserDefined("false");
        snmp.setStatus("on");
        snmp.addParameter(new Parameter("collection", "default"));
        snmp.addParameter(new Parameter("thresholding-enabled", "true"));
        p.addService(snmp);
        
        final Service jvm = new Service();
        jvm.setName("OpenNMS-JVM");
        jvm.setInterval(30000l);
        jvm.setUserDefined("false");
        jvm.setStatus("on");
        jvm.addParameter("port", "18980");
        jvm.addParameter("retry", "2");
        jvm.addParameter("timeout", "3000");
        jvm.addParameter("protocol", "rmi");
        jvm.addParameter("urlPath", "/jmxrmi");
        jvm.addParameter("rrd-base-name", "java");
        jvm.addParameter("ds-name", "opennms-jvm");
        jvm.addParameter("friendly-name", "opennms-jvm");
        jvm.addParameter("collection", "jsr160");
        jvm.addParameter("thresholding-enabled", "true");
        p.addService(jvm);

        config.addPackage(p);

        config.addCollector("SNMP", "org.opennms.netmgt.collectd.SnmpCollector");
        config.addCollector("OpenNMS-JVM", "org.opennms.netmgt.collectd.Jsr160Collector");

        return config;
    }

