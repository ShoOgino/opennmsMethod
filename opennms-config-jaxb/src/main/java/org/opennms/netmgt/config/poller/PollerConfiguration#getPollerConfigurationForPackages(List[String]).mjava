    public PollerConfiguration getPollerConfigurationForPackages(final List<String> pollingPackageNames) {
        if (pollingPackageNames == null || pollingPackageNames.size() < 1) return null;
        
        final Set<String> seenMonitors = new HashSet<String>();
        final PollerConfiguration newConfig = new PollerConfiguration();
        newConfig.setThreads(getThreads());
        newConfig.setNextOutageId(getNextOutageId());
        newConfig.setServiceUnresponsiveEnabled(getServiceUnresponsiveEnabled());
        newConfig.setXmlrpc(getXmlrpc());
        newConfig.setPathOutageEnabled(getPathOutageEnabled());
        newConfig.setNodeOutage(getNodeOutage());
        
        // Add all requested polling packages to the config
        boolean foundPackage = false;
        for (String pollingPackageName : pollingPackageNames) {
            final Package pkg = getPackage(pollingPackageName);
            if (pkg != null) {
                newConfig.addPackage(pkg);
                foundPackage = true;
                for (final Service service : pkg.getServices()) {
                    seenMonitors.add(service.getName());
                }
            }
        }
        // If the list of polling packages doesn't match anything, then return null
        if (!foundPackage) return null;
        
        for (final Monitor monitor : getMonitors()) {
            if (seenMonitors.contains(monitor.getService())) {
                newConfig.addMonitor(monitor);
            }
        }
        return newConfig;
    }

