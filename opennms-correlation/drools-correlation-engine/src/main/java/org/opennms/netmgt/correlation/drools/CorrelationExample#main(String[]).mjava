    /**
     * <p>
     * main</p>
     *
     * @param args an array of {@link java.lang.String} objects.
     * @throws java.lang.Exception if any.
     */
    public static void main(final String[] args) throws Exception {

        KieServices kieServices = KieServices.Factory.get();
        KieFileSystem kieFileSystem = kieServices.newKieFileSystem();
        
        File ruleFile = new File(CorrelationExample.class.getResource("CorrelationExample.drl").getFile());
        kieFileSystem.write(ResourceFactory.newFileResource(ruleFile));
       
        KieBuilder kieBuilder = kieServices.newKieBuilder(kieFileSystem).buildAll();

        if (kieBuilder.getResults().hasMessages(Message.Level.ERROR)) {
            List<Message> errors = kieBuilder.getResults().getMessages(Message.Level.ERROR);
            StringBuilder sb = new StringBuilder("Errors:");
            for (Message msg : errors) {
                sb.append("\n");
                sb.append(prettyBuildMessage(msg));
            }
            throw new Exception(sb.toString());
        }

        KieContainer kieContainer = kieServices.newKieContainer(kieServices.getRepository().getDefaultReleaseId());
        final KieSession kieSession = kieContainer.newKieSession();
        
        final WorkingMemoryFileLogger logger = new WorkingMemoryFileLogger((WorkingMemory) kieSession);
        logger.setFileName("log/correlation");

        final InputStream in = CorrelationExample.class.getResourceAsStream("simulation");
        try {
            final Simulation simulation = new Simulation();
            System.out.println("Loading Simulation");
            simulation.load(in);
            System.out.println("Executing Simulation");
            simulation.simulate(kieSession);

        } finally {
            if (in != null) {
                in.close();
            }
        }

        logger.writeToDisk();
    }

