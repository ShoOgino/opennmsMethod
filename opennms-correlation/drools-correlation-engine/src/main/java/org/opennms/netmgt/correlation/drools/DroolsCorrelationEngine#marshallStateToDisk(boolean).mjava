    private synchronized  void marshallStateToDisk(boolean serialize) {
        if (m_kieSession == null) {
            return;
        }
        final File stateFile = getPathToState().toFile();
        LOG.debug("Saving state for engine {} in {} ...", m_name, stateFile);
        final KieMarshallers kMarshallers = KieServices.Factory.get().getMarshallers();
        final ObjectMarshallingStrategy oms = serialize ?
                kMarshallers.newSerializeMarshallingStrategy() : kMarshallers.newIdentityMarshallingStrategy();
        final Marshaller marshaller = kMarshallers.newMarshaller( m_kieBase, new ObjectMarshallingStrategy[]{ oms } );
        try (FileOutputStream fos = new FileOutputStream(stateFile)) {
            m_kieSession.halt();
            marshaller.marshall( fos, m_kieSession );
            m_kieSession.dispose();
            m_kieSession.destroy();
            m_kieSession = null;
            LOG.info("Sucessfully save state for engine {} in {}.", m_name, stateFile);
        } catch (IOException e) {
            LOG.error("Failed to save state for engine {} in {}.", m_name, stateFile, e);
        }
    }

