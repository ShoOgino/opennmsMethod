    @Test
    public void persistedDroolsFactsAccessibleInNewSession() throws Exception {
        String factClass = "org.opennms.netmgt.correlation.drools.PersistedTestFact";
        DroolsCorrelationEngine engine = findEngineByName("persistStateTest");
        assertThat(engine, notNullValue());
        engine.initialize();
        // Make sure working memory is clean
        engine.getKieSession().getFactHandles().forEach(fh -> engine.getKieSession().delete(fh));

        // Insert a test fact to be persisted
        engine.correlate(createFactPersistenceTestEvent("insertPersistenceTestFact", "PersistStateIT-42"));
        assertEquals(inventoryWorkingMemory(engine), 1, engine.getKieSessionObjects().stream().filter(fh ->
                fh.getClass().getCanonicalName().equals(factClass)).count());
        assertThat(inventoryWorkingMemory(engine), engine.getKieSessionObjects(), hasSize(1));

        // Re-initialize and verify
        engine.reloadConfig(true);
        assertThat(inventoryWorkingMemory(engine), engine.getKieSessionObjects(), hasSize(1));

        // Insert another test fact to ensure the query finds facts from before and after reload
        engine.correlate(createFactPersistenceTestEvent("insertPersistenceTestFact", "PersistStateIT-42"));

        // Activate the query-and-delete rule
        engine.correlate(createFactPersistenceTestEvent("deletePersistenceTestFact", "PersistStateIT-42"));
        assertEquals("There should be no objects in working memory\n" + inventoryWorkingMemory(engine), 0,
            engine.getKieSessionObjects().size());
    }

