    @Test
    public void testWideSpreadLocationMonitorOutage() throws Exception {

        resetAnticipated();

        DroolsCorrelationEngine engine = findEngineByName("locationMonitorRules");

        anticipateWideSpreadOutageEvent();

        // received outage events for all monitors
        engine.correlate(createPerspectiveNodeLostServiceEvent(1, "192.168.1.1", "HTTP", 7));
        engine.correlate(createPerspectiveNodeLostServiceEvent(1, "192.168.1.1", "HTTP", 8));
        engine.correlate(createPerspectiveNodeLostServiceEvent(1, "192.168.1.1", "HTTP", 9));

        // expect memory to contain only the single 'affliction' for this service
        // and the flap tracker for each monitor
        m_anticipatedMemorySize = 4;

        verify(engine);

        anticipateWideSpreadOutageResolvedEvent();

        // received outage events for all monitors
        engine.correlate(createPerspectiveNodeRegainedServiceEvent(1, "192.168.1.1", "HTTP", 7));
        engine.correlate(createPerspectiveNodeRegainedServiceEvent(1, "192.168.1.1", "HTTP", 9));
        engine.correlate(createPerspectiveNodeRegainedServiceEvent(1, "192.168.1.1", "HTTP", 8));

        // expect the flap tracker to remain
        m_anticipatedMemorySize = 6;

        verify(engine);

        // need to time the flap trackers out
        Thread.sleep(1100);

        m_anticipatedMemorySize = 0;

        verify(engine);

    }

